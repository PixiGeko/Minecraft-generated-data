{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "23w33a",
        "currentLabel": "23w35a",
        "values": [
          {
            "key": "World version",
            "previous": "3570",
            "current": "3571"
          },
          {
            "key": "Protocol version",
            "previous": "1073741970",
            "current": "1073741971"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "23w33a",
        "currentLabel": "23w35a",
        "values": [
          {
            "key": "com.github.oshi:oshi-core",
            "previous": "6.2.2",
            "current": "6.4.5"
          },
          {
            "key": "com.google.code.gson:gson",
            "previous": "2.10",
            "current": "2.10.1"
          },
          {
            "key": "com.google.guava:guava",
            "previous": "31.1-jre",
            "current": "32.1.2-jre"
          },
          {
            "key": "com.ibm.icu:icu4j",
            "previous": "71.1",
            "current": "73.2"
          },
          {
            "key": "commons-codec:commons-codec",
            "previous": "1.15",
            "current": "1.16.0"
          },
          {
            "key": "commons-io:commons-io",
            "previous": "2.11.0",
            "current": "2.13.0"
          },
          {
            "key": "io.netty:netty-buffer",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-codec",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-common",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-handler",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-resolver",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-transport-classes-epoll",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-transport-native-epoll (linux-aarch_64)",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-transport-native-epoll (linux-x86_64)",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-transport-native-unix-common",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "io.netty:netty-transport",
            "previous": "4.1.82.Final",
            "current": "4.1.97.Final"
          },
          {
            "key": "it.unimi.dsi:fastutil",
            "previous": "8.5.9",
            "current": "8.5.12"
          },
          {
            "key": "net.java.dev.jna:jna-platform",
            "previous": "5.12.1",
            "current": "5.13.0"
          },
          {
            "key": "net.java.dev.jna:jna",
            "previous": "5.12.1",
            "current": "5.13.0"
          },
          {
            "key": "org.apache.commons:commons-compress",
            "previous": "1.21",
            "current": "1.22"
          },
          {
            "key": "org.apache.commons:commons-lang3",
            "previous": "3.12.0",
            "current": "3.13.0"
          },
          {
            "key": "org.apache.httpcomponents:httpcore",
            "previous": "4.4.15",
            "current": "4.4.16"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-linux)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-macos)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-macos-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-windows)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-windows-arm64)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.lwjgl:lwjgl (natives-windows-x86)",
            "previous": "3.3.1",
            "current": "3.3.2"
          },
          {
            "key": "org.slf4j:slf4j-api",
            "previous": "2.0.1",
            "current": "2.0.7"
          }
        ]
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "connect.reconfiguring: Reconfiguring...",
            "mco.selectServer.create.subtitle: Select what world to put on your new realm"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "commands.random.error.range_too_large",
            "previous": "Range of random value must be at most 2147483646",
            "current": "The range of the random value must be at most 2147483646"
          },
          {
            "key": "commands.random.error.range_too_small",
            "previous": "Range of random value must be at least 2",
            "current": "The range of the random value must be at least 2"
          },
          {
            "key": "gui.abuseReport.type.chat",
            "previous": "Chat messages",
            "current": "Chat Messages"
          },
          {
            "key": "gui.abuseReport.type.name",
            "previous": "Player name",
            "current": "Player Name"
          },
          {
            "key": "gui.abuseReport.type.skin",
            "previous": "Player skin",
            "current": "Player Skin"
          },
          {
            "key": "mco.selectServer.loading",
            "previous": "Loading Realm list",
            "current": "Loading Realms List"
          },
          {
            "key": "options.accessibility.narrator_hotkey.tooltip",
            "previous": "Allows the narrator to be toggled on and off with 'Ctrl+B'",
            "current": "Allows the Narrator to be toggled on and off with 'Ctrl+B'"
          },
          {
            "key": "pack.dropRejected.message",
            "previous": "Following entries were not valid packs and were not copied:\n\n %s",
            "current": "The following entries were not valid packs and were not copied:\n\n %s"
          },
          {
            "key": "selectWorld.loading_list",
            "previous": "Loading world list",
            "current": "Loading World List"
          },
          {
            "key": "symlink_warning.title.pack",
            "previous": "Added pack(s) contain symbolic links",
            "current": "Added pack(s) contain(s) symbolic links"
          },
          {
            "key": "symlink_warning.title.world",
            "previous": "World folder contains symbolic links",
            "current": "The world folder contains symbolic links"
          }
        ]
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.minecraft.advancements.AdvancementList$Listener",
            "XXX.minecraft.advancements.AdvancementProgress$Serializer",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.SlimePredicate",
            "XXX.advancements.critereon.StartRidingTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$ValueMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.UsingItemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandBuildContext$2",
            "XXX.minecraft.commands.CommandBuildContext$3",
            "XXX.minecraft.commands.CommandBuildContext$MissingTagAccessPolicy",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$CommandMacro",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$1",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$Provider$2",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$2",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistryCodecs$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents$1",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.dispenser.AbstractProjectileDispenseBehavior",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$17",
            "XXX.core.dispenser.DispenseItemBehavior$19",
            "XXX.core.dispenser.DispenseItemBehavior$20",
            "XXX.core.dispenser.DispenseItemBehavior$22",
            "XXX.core.dispenser.DispenseItemBehavior$24",
            "XXX.core.dispenser.DispenseItemBehavior$26",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.DustParticleOptionsBase",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SculkChargeParticleOptions$1",
            "XXX.core.particles.ShriekParticleOption$1",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.core.particles.VibrationParticleOption$1",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.CraftingRecipeBuilder",
            "XXX.data.recipes.CraftingRecipeBuilder$CraftingResult",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SmithingTransformRecipeBuilder$Result",
            "XXX.data.recipes.SmithingTrimRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.recipes.packs.BundleRecipeProvider",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.tags.VanillaBlockTagsProvider",
            "XXX.data.tags.WorldPresetTagsProvider",
            "XXX.data.worldgen.AncientCityStructurePieces",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.DimensionTypes",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureSets",
            "XXX.data.worldgen.SurfaceRuleData",
            "XXX.data.worldgen.TerrainProvider",
            "XXX.data.worldgen.VillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientPongPacketListener",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.FriendlyByteBuf$Reader",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketFlowValidator",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatType$BoundNetwork",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents$1",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$2$1",
            "XXX.network.protocol.BundlerInfo$Provider",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.common.ClientCommonPacketListener",
            "XXX.protocol.common.ClientboundDisconnectPacket",
            "XXX.protocol.common.ClientboundPingPacket",
            "XXX.protocol.common.ClientboundUpdateTagsPacket",
            "XXX.protocol.common.ServerboundCustomPayloadPacket",
            "XXX.protocol.common.ServerboundPongPacket",
            "XXX.protocol.common.ServerboundResourcePackPacket$Action",
            "XXX.common.custom.BeeDebugPayload$BeeInfo",
            "XXX.common.custom.BrainDebugPayload$BrainDump",
            "XXX.common.custom.CustomPacketPayload",
            "XXX.common.custom.GameEventDebugPayload",
            "XXX.common.custom.GameTestAddMarkerDebugPayload",
            "XXX.common.custom.GoalDebugPayload",
            "XXX.common.custom.HiveDebugPayload",
            "XXX.common.custom.NeighborUpdatesDebugPayload",
            "XXX.common.custom.PoiAddedDebugPayload",
            "XXX.common.custom.PoiTicketCountDebugPayload",
            "XXX.common.custom.StructuresDebugPayload",
            "XXX.common.custom.VillageSectionsDebugPayload",
            "XXX.common.custom.package-info",
            "XXX.protocol.configuration.ClientConfigurationPacketListener",
            "XXX.protocol.configuration.ClientboundRegistryDataPacket",
            "XXX.protocol.configuration.ServerConfigurationPacketListener",
            "XXX.protocol.configuration.package-info",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundBundlePacket",
            "XXX.protocol.game.ClientboundChunkBatchFinishedPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket",
            "XXX.protocol.game.ClientboundClearTitlesPacket",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeResolver",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket$Action",
            "XXX.protocol.game.ClientboundDeleteChatPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundGameEventPacket$Type",
            "XXX.protocol.game.ClientboundHurtAnimationPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEndPacket",
            "XXX.protocol.game.ClientboundPlayerCombatKillPacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStartConfigurationPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.CommonPlayerSpawnInfo",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundConfigurationAcknowledgedPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundInteractPacket$Handler",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAtLocationAction",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntent",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryAnswerPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.login.custom.CustomQueryAnswerPayload",
            "XXX.login.custom.DiscardedQueryAnswerPayload",
            "XXX.login.custom.package-info",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$1",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.SynchedEntityData$DataValue",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.HolderSetCodec",
            "XXX.minecraft.resources.RegistryDataLoader$1",
            "XXX.minecraft.resources.RegistryDataLoader$RegistryData",
            "XXX.minecraft.resources.RegistryFixedCodec",
            "XXX.minecraft.resources.RegistryOps$1",
            "XXX.minecraft.resources.RegistryOps$RegistryInfo",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerInfo",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.chase.ChaseClient$TeleportTarget",
            "XXX.server.chase.ChaseServer$PlayerPosition",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ChaseCommand",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$CommandFunction",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugCommand$Tracer",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillBiomeCommand",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.JfrCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PerfCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ResetChunksCommand",
            "XXX.server.commands.RideCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpawnArmorTrimsCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WardenSpawnTrackerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties$WorldDimensionData",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkLevel$1",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.ChunkTrackingView$1",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FullChunkStatus",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$ChunkAndHolder",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel$EntityCallbacks",
            "XXX.server.level.ServerPlayer$1",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenRegion",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.ConfigurationTask",
            "XXX.server.network.FilteredText",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.PlayerChunkSender",
            "XXX.server.network.ServerConfigurationPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.TextFilter$1",
            "XXX.server.network.TextFilterClient$IgnoreStrategy",
            "XXX.server.network.TextFilterClient$MessageEncoder",
            "XXX.server.network.TextFilterClient$RequestFailedException",
            "XXX.network.config.ServerResourcePackConfigurationTask",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.CompositePackResources",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.FilePackResources$SharedZipFileAccess",
            "XXX.server.packs.OverlayMetadataSection$OverlayEntry",
            "XXX.server.packs.PackResources$ResourceOutput",
            "XXX.server.packs.PathPackResources",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.linkfs.DummyFileAttributes",
            "XXX.packs.linkfs.LinkFSPath",
            "XXX.packs.linkfs.LinkFSPath$2",
            "XXX.packs.linkfs.LinkFSProvider",
            "XXX.packs.linkfs.LinkFSProvider$2",
            "XXX.packs.linkfs.LinkFileSystem$Builder",
            "XXX.packs.linkfs.PathContents",
            "XXX.packs.linkfs.PathContents$2",
            "XXX.packs.linkfs.PathContents$FileContents",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.packs.metadata.MetadataSectionType$1",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.BuiltInPackSource$1",
            "XXX.packs.repository.FolderRepositorySource$FolderPackDetector",
            "XXX.packs.repository.Pack$Info",
            "XXX.packs.repository.Pack$ResourcesSupplier",
            "XXX.packs.repository.PackDetector",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.FallbackResourceManager$EntryStack",
            "XXX.packs.resources.FallbackResourceManager$PackEntry",
            "XXX.packs.resources.IoSupplier",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.ResourceMetadata$1",
            "XXX.packs.resources.ResourceMetadata$Builder",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BiomeTags",
            "XXX.minecraft.tags.CatVariantTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.InstrumentTags",
            "XXX.minecraft.tags.PaintingVariantTags",
            "XXX.minecraft.tags.StructureTags",
            "XXX.minecraft.tags.TagEntry",
            "XXX.minecraft.tags.TagFile",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagLoader$EntryWithSource",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.TagNetworkSerialization",
            "XXX.minecraft.tags.TagNetworkSerialization$TagOutput",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.AbortableIterationConsumer$Continuation",
            "XXX.minecraft.util.ArrayListDeque$DescendingIterator",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$1",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$RecursiveCodec",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.DecoratedPotFieldRenameFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityBrushableBlockFieldsRenameFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityGoatMissingStateFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.FeatureFlagRemoveFix",
            "XXX.datafix.fixes.FilteredSignsFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRemoveBlockEntityTagFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NamespacedTypeRenameFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAccessibilityOnboardFix",
            "XXX.datafix.fixes.OptionsAmbientOcclusionFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.PoiTypeRenameFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemapChunkStatusFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsCounterFix$StatType",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.StructureSettingsFlattenFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix$Conversion",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VariantRenameFix",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WeaponSmithChestLootTableFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V3076",
            "XXX.datafix.schemas.V3081",
            "XXX.datafix.schemas.V3083",
            "XXX.datafix.schemas.V3203",
            "XXX.datafix.schemas.V3325",
            "XXX.datafix.schemas.V3327",
            "XXX.datafix.schemas.V3438",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.RandomSequence",
            "XXX.minecraft.world.RandomSequences$DirtyMarkingRandomSource",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageEffects",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.DamageSources",
            "XXX.world.damagesource.DamageTypes",
            "XXX.world.damagesource.FallLocation",
            "XXX.world.effect.AbsorptionMobEffect",
            "XXX.world.effect.BadOmenMobEffect",
            "XXX.world.effect.HungerMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectInstance$FactorData",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.RegenerationMobEffect",
            "XXX.world.effect.WitherMobEffect",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AnimationState",
            "XXX.world.entity.Attackable",
            "XXX.world.entity.Display$1",
            "XXX.world.entity.Display$BlockDisplay",
            "XXX.world.entity.Display$ColorInterpolator",
            "XXX.world.entity.Display$GenericInterpolator",
            "XXX.world.entity.Display$ItemDisplay",
            "XXX.world.entity.Display$ItemDisplay$ItemRenderState",
            "XXX.world.entity.Display$LinearIntInterpolator",
            "XXX.world.entity.Display$RenderState",
            "XXX.world.entity.Display$TextDisplay$Align",
            "XXX.world.entity.Display$TextDisplay$CachedLine",
            "XXX.world.entity.Display$TextDisplay$TextRenderState",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.TraceableEntity",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.CatVariant",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.FrogVariant",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Parrot$Variant",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Rabbit$Variant",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.TropicalFish$Variant",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.entity.animal.Wolf$WolfPanicGoal",
            "XXX.animal.allay.Allay$JukeboxListener",
            "XXX.animal.allay.AllayAi",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.camel.Camel$CamelBodyRotationControl",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.Level$ExplosionInteraction",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SignalGetter",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldDataConfiguration",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeResolver",
            "XXX.level.biome.BiomeSources",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$1",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$3",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.Climate$DistanceMetric",
            "XXX.level.biome.Climate$ParameterList",
            "XXX.level.biome.Climate$RTree",
            "XXX.level.biome.Climate$RTree$Node",
            "XXX.level.biome.Climate$Sampler",
            "XXX.level.biome.Climate$SpawnFinder$Result",
            "XXX.level.biome.FeatureSorter",
            "XXX.level.biome.FeatureSorter$StepFeatureData",
            "XXX.level.biome.MobSpawnSettings",
            "XXX.level.biome.MobSpawnSettings$MobSpawnCost",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$2",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterLists",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractCauldronBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AmethystBlock",
            "XXX.level.block.AmethystClusterBlock$1",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BigDripleafBlock",
            "XXX.level.block.BigDripleafStemBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.Blocks",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BuddingAmethystBlock",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CalibratedSculkSensorBlock",
            "XXX.level.block.CandleBlock",
            "XXX.level.block.CarpetBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.CaveVinesBlock",
            "XXX.level.block.CeilingHangingSignBlock",
            "XXX.level.block.ChainBlock$1",
            "XXX.level.block.CherryLeavesBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChiseledBookShelfBlock$1",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DecoratedPotBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.EquipableCarvedPumpkinBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlassBlock",
            "XXX.level.block.GlowLichenBlock",
            "XXX.level.block.GravelBlock",
            "XXX.level.block.GrindstoneBlock$1",
            "XXX.level.block.GrowingPlantBodyBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.InfestedRotatedPillarBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.LanternBlock",
            "XXX.level.block.LayeredCauldronBlock",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LightningRodBlock",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.MangrovePropaguleBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MudBlock",
            "XXX.level.block.MultifaceSpreader",
            "XXX.level.block.MultifaceSpreader$SpreadConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPredicate",
            "XXX.level.block.MultifaceSpreader$SpreadType$1",
            "XXX.level.block.MultifaceSpreader$SpreadType$3",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.PiglinWallSkullBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PitcherCropBlock$PosAndState",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PointedDripstoneBlock$FluidInfo",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SculkBehaviour$1",
            "XXX.level.block.SculkCatalystBlock",
            "XXX.level.block.SculkShriekerBlock",
            "XXX.level.block.SculkSpreader$ChargeCursor",
            "XXX.level.block.SculkVeinBlock$SculkVeinSpreaderConfig",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnifferEggBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.SupportType$1",
            "XXX.level.block.SupportType$3",
            "XXX.level.block.SuspiciousEffectHolder$EffectEntry",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrassBlock",
            "XXX.level.block.TintedGlassBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVinesBlock",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallHangingSignBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeatheringCopper$WeatherState",
            "XXX.level.block.WeatheringCopperSlabBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlantBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BannerPatterns",
            "XXX.block.entity.BarrelBlockEntity$1",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BellBlockEntity$ResonationEndAction",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.ChestBlockEntity$1",
            "XXX.block.entity.ChiseledBookShelfBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.ContainerOpenersCounter",
            "XXX.block.entity.DecoratedPotBlockEntity",
            "XXX.block.entity.DecoratedPotPatterns",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.SculkCatalystBlockEntity",
            "XXX.block.entity.SculkSensorBlockEntity",
            "XXX.block.entity.SculkShriekerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SignText",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.MangroveTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.BlockBehaviour",
            "XXX.block.state.BlockBehaviour$BlockStateBase",
            "XXX.block.state.BlockBehaviour$OffsetFunction",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.StateHolder$1",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.DripstoneThickness",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.SculkSensorPhase",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.Tilt",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.CarvingMask$Mask",
            "XXX.level.chunk.ChunkAccess$TicksToSave",
            "XXX.level.chunk.ChunkGeneratorStructureState",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$1",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LevelChunk$RebindableTickingBlockEntityWrapper",
            "XXX.level.chunk.LevelChunkSection$1BlockCounter",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.MissingPaletteEntryException",
            "XXX.level.chunk.Palette$Factory",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.PalettedContainer$Strategy",
            "XXX.level.chunk.PalettedContainer$Strategy$2",
            "XXX.level.chunk.PalettedContainerRO$PackedData",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.StructureAccess",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkScanAccess",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.BuiltinDimensionTypes",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.LevelStem",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.EndDragonFight$Data",
            "XXX.level.dimension.package-info",
            "XXX.level.entity.ChunkStatusUpdateListener",
            "XXX.level.entity.EntityInLevelCallback",
            "XXX.level.entity.EntityLookup",
            "XXX.level.entity.EntitySection",
            "XXX.level.entity.EntityTickList",
            "XXX.level.entity.EntityTypeTest$1",
            "XXX.level.entity.LevelEntityGetter",
            "XXX.level.entity.PersistentEntitySectionManager",
            "XXX.level.entity.PersistentEntitySectionManager$ChunkLoadStatus",
            "XXX.level.entity.TransientEntitySectionManager$Callback",
            "XXX.level.entity.package-info",
            "XXX.level.gameevent.BlockPositionSource$Type",
            "XXX.level.gameevent.EntityPositionSource",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry",
            "XXX.level.gameevent.GameEvent",
            "XXX.level.gameevent.GameEvent$ListenerInfo",
            "XXX.level.gameevent.GameEventListener",
            "XXX.level.gameevent.GameEventListener$Holder",
            "XXX.level.gameevent.GameEventListenerRegistry$1",
            "XXX.level.gameevent.PositionSource",
            "XXX.level.gameevent.package-info",
            "XXX.gameevent.vibrations.VibrationSelector",
            "XXX.gameevent.vibrations.VibrationSystem$Data",
            "XXX.gameevent.vibrations.VibrationSystem$Ticker",
            "XXX.gameevent.vibrations.package-info",
            "XXX.level.levelgen.Aquifer$1",
            "XXX.level.levelgen.Aquifer$FluidStatus",
            "XXX.level.levelgen.Beardifier",
            "XXX.level.levelgen.Beardifier$Rigid",
            "XXX.level.levelgen.BelowZeroRetrogen$1",
            "XXX.level.levelgen.Column",
            "XXX.level.levelgen.Column$Range",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.DensityFunction",
            "XXX.level.levelgen.DensityFunction$FunctionContext",
            "XXX.level.levelgen.DensityFunction$SimpleFunction",
            "XXX.level.levelgen.DensityFunction$Visitor",
            "XXX.level.levelgen.DensityFunctions$1",
            "XXX.level.levelgen.DensityFunctions$BeardifierMarker",
            "XXX.level.levelgen.DensityFunctions$BlendAlpha",
            "XXX.level.levelgen.DensityFunctions$BlendOffset",
            "XXX.level.levelgen.DensityFunctions$Constant",
            "XXX.level.levelgen.DensityFunctions$HolderHolder",
            "XXX.level.levelgen.DensityFunctions$Mapped$Type",
            "XXX.level.levelgen.DensityFunctions$Marker$Type",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd",
            "XXX.level.levelgen.DensityFunctions$Noise",
            "XXX.level.levelgen.DensityFunctions$RangeChoice",
            "XXX.level.levelgen.DensityFunctions$ShiftA",
            "XXX.level.levelgen.DensityFunctions$ShiftNoise",
            "XXX.level.levelgen.DensityFunctions$Spline",
            "XXX.level.levelgen.DensityFunctions$Spline$Point",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler",
            "XXX.level.levelgen.DensityFunctions$YClampedGradient",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.GeodeCrackSettings",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.LegacyRandomSource$LegacyPositionalRandomFactory",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$1",
            "XXX.level.levelgen.NoiseChunk$BlendAlpha",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$CacheAllInCell",
            "XXX.level.levelgen.NoiseChunk$FlatCache",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseRouter",
            "XXX.level.levelgen.NoiseRouterData$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.OreVeinifier$VeinType",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomState",
            "XXX.level.levelgen.RandomState$1NoiseWiringHelper",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.ThreadSafeLegacyRandomSource",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldDimensions$1Entry",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldOptions",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.Blender$BlendingOutput",
            "XXX.levelgen.blending.Blender$DistanceGetter",
            "XXX.levelgen.blending.BlendingData$BiomeConsumer",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.AllOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicate",
            "XXX.levelgen.blockpredicates.CombiningPredicate",
            "XXX.levelgen.blockpredicates.InsideWorldBoundsPredicate",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.blockpredicates.TrueBlockPredicate",
            "XXX.levelgen.blockpredicates.package-info",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.carver.WorldCarver$CarveSkipChecker",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BasaltColumnsFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DripstoneClusterFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FeatureCountTracker",
            "XXX.levelgen.feature.FeatureCountTracker$FeatureData",
            "XXX.levelgen.feature.FeaturePlaceContext",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GeodeFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungusFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.LakeFeature$Configuration",
            "XXX.levelgen.feature.LargeDripstoneFeature$LargeDripstone",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.ScatteredOreFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.TreeFeature$1",
            "XXX.levelgen.feature.UnderwaterMagmaFeature",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterloggedVegetationPatchFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.BlockColumnConfiguration$Layer",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.CountConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.GeodeConfiguration",
            "XXX.feature.configurations.LargeDripstoneConfiguration",
            "XXX.feature.configurations.MultifaceGrowthConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration$TargetBlockState",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.RootSystemConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.TwistingVinesConfig",
            "XXX.feature.configurations.VegetationPatchConfiguration",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.CherryFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.rootplacers.AboveRootPlacement",
            "XXX.feature.rootplacers.MangroveRootPlacer",
            "XXX.feature.rootplacers.RootPlacerType",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.DualNoiseProvider",
            "XXX.feature.stateproviders.NoiseProvider",
            "XXX.feature.stateproviders.RandomizedIntStateProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.treedecorators.AttachedToLeavesDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.feature.trunkplacers.CherryTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer",
            "XXX.feature.trunkplacers.ForkingTrunkPlacer",
            "XXX.feature.trunkplacers.MegaJungleTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacer",
            "XXX.feature.trunkplacers.UpwardsBranchingTrunkPlacer",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.TrapezoidHeight",
            "XXX.levelgen.heightproviders.VeryBiasedToBottomHeight",
            "XXX.levelgen.heightproviders.package-info",
            "XXX.levelgen.material.WorldGenMaterialRule",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.BlockPredicateFilter",
            "XXX.levelgen.placement.CaveSurface",
            "XXX.levelgen.placement.CountPlacement",
            "XXX.levelgen.placement.HeightRangePlacement",
            "XXX.levelgen.placement.InSquarePlacement",
            "XXX.levelgen.placement.NoiseThresholdCountPlacement",
            "XXX.levelgen.placement.PlacementContext",
            "XXX.levelgen.placement.PlacementModifier",
            "XXX.levelgen.placement.RandomOffsetPlacement",
            "XXX.levelgen.placement.RepeatingPlacement",
            "XXX.levelgen.placement.SurfaceWaterDepthFilter",
            "XXX.levelgen.presets.WorldPreset",
            "XXX.levelgen.presets.WorldPresets$Bootstrap",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuiltinStructureSets",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.PostPlacementProcessor",
            "XXX.levelgen.structure.SinglePieceStructure",
            "XXX.levelgen.structure.Structure",
            "XXX.levelgen.structure.Structure$GenerationStub",
            "XXX.levelgen.structure.StructureCheck",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructurePieceAccessor",
            "XXX.levelgen.structure.StructureSet$StructureSelectionEntry",
            "XXX.levelgen.structure.StructureSpawnOverride$BoundingBoxType",
            "XXX.levelgen.structure.StructureType",
            "XXX.levelgen.structure.TerrainAdjustment",
            "XXX.structure.pieces.PieceGenerator",
            "XXX.structure.pieces.PieceGeneratorSupplier",
            "XXX.structure.pieces.PiecesContainer",
            "XXX.structure.pieces.StructurePieceType",
            "XXX.structure.pieces.StructurePieceType$StructureTemplateType",
            "XXX.structure.pieces.package-info",
            "XXX.structure.placement.RandomSpreadStructurePlacement",
            "XXX.structure.placement.RandomSpreadType$1",
            "XXX.structure.placement.StructurePlacement$ExclusionZone",
            "XXX.structure.placement.StructurePlacement$FrequencyReductionMethod",
            "XXX.structure.placement.package-info",
            "XXX.structure.pools.FeaturePoolElement",
            "XXX.structure.pools.JigsawPlacement",
            "XXX.structure.pools.JigsawPlacement$Placer",
            "XXX.structure.pools.ListPoolElement",
            "XXX.structure.pools.StructurePoolElement",
            "XXX.structure.pools.StructureTemplatePool",
            "XXX.structure.pools.package-info",
            "XXX.structure.structures.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.structure.structures.DesertPyramidPiece",
            "XXX.structure.structures.EndCityPieces",
            "XXX.structure.structures.EndCityPieces$2",
            "XXX.structure.structures.EndCityPieces$4",
            "XXX.structure.structures.EndCityPieces$SectionGenerator",
            "XXX.structure.structures.IglooPieces",
            "XXX.structure.structures.IglooStructure",
            "XXX.structure.structures.JigsawStructure$1",
            "XXX.structure.structures.JungleTemplePiece$MossStoneSelector",
            "XXX.structure.structures.MineshaftPieces",
            "XXX.structure.structures.MineshaftPieces$MineShaftCorridor",
            "XXX.structure.structures.MineshaftPieces$MineShaftPiece",
            "XXX.structure.structures.MineshaftPieces$MineShaftStairs",
            "XXX.structure.structures.MineshaftStructure$Type",
            "XXX.structure.structures.NetherFortressPieces$1",
            "XXX.structure.structures.NetherFortressPieces$BridgeEndFiller",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorStairsPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleEntrance",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorRightTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$MonsterThrone",
            "XXX.structure.structures.NetherFortressPieces$PieceWeight",
            "XXX.structure.structures.NetherFortressPieces$StairsRoom",
            "XXX.structure.structures.NetherFortressStructure",
            "XXX.structure.structures.NetherFossilPieces$NetherFossilPiece",
            "XXX.structure.structures.OceanMonumentPieces",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.structure.structures.OceanMonumentStructure",
            "XXX.structure.structures.OceanRuinPieces$1",
            "XXX.structure.structures.OceanRuinStructure",
            "XXX.structure.structures.RuinedPortalPiece",
            "XXX.structure.structures.RuinedPortalPiece$VerticalPlacement",
            "XXX.structure.structures.RuinedPortalStructure$Setup",
            "XXX.structure.structures.ShipwreckPieces$ShipwreckPiece",
            "XXX.structure.structures.StrongholdPieces",
            "XXX.structure.structures.StrongholdPieces$2",
            "XXX.structure.structures.StrongholdPieces$ChestCorridor",
            "XXX.structure.structures.StrongholdPieces$FiveCrossing",
            "XXX.structure.structures.StrongholdPieces$Library",
            "XXX.structure.structures.StrongholdPieces$PortalRoom",
            "XXX.structure.structures.StrongholdPieces$RightTurn",
            "XXX.structure.structures.StrongholdPieces$SmoothStoneSelector",
            "XXX.structure.structures.StrongholdPieces$StartPiece",
            "XXX.structure.structures.StrongholdPieces$StraightStairsDown",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.structure.structures.StrongholdStructure",
            "XXX.structure.structures.SwampHutStructure",
            "XXX.structure.structures.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionGrid",
            "XXX.structure.structures.WoodlandMansionPieces$PlacementData",
            "XXX.structure.structures.WoodlandMansionPieces$SimpleGrid",
            "XXX.structure.structures.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.structures.package-info",
            "XXX.structure.templatesystem.AxisAlignedLinearPosTest",
            "XXX.structure.templatesystem.BlockAgeProcessor",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.LavaSubmergedBlockProcessor",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.PosRuleTest",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.StructureTemplateManager$InputStreamOpener",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.rule.blockentity.AppendLoot",
            "XXX.rule.blockentity.Clear",
            "XXX.rule.blockentity.RuleBlockEntityModifier",
            "XXX.rule.blockentity.package-info",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.NormalNoise",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$SectionState",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.LeveledPriorityQueue$1",
            "XXX.level.lighting.LightEngine$QueueEntry",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.MapColor$Brightness",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.Path$DebugData",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.package-info",
            "XXX.level.portal.PortalInfo",
            "XXX.level.portal.package-info",
            "XXX.level.redstone.CollectingNeighborUpdater$FullNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$NeighborUpdates",
            "XXX.level.redstone.CollectingNeighborUpdater$SimpleNeighborUpdate",
            "XXX.level.redstone.NeighborUpdater",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData$Factory",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DataVersion",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelResource",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelStorageSource$LevelDirectory",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$1",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.LevelSummary$SymlinkLevelSummary",
            "XXX.level.storage.PlayerDataStorage",
            "XXX.level.storage.PrimaryLevelData$SpecialWorldProperty",
            "XXX.level.storage.WorldData",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.IntRange$IntChecker",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootDataManager",
            "XXX.storage.loot.LootDataResolver",
            "XXX.storage.loot.LootDataType$Validator",
            "XXX.storage.loot.LootParams$Builder",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaType",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetBannerPatternFunction",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetEnchantmentsFunction$Builder",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetPotionFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AllOfCondition$Builder",
            "XXX.loot.predicates.AnyOfCondition$Builder",
            "XXX.loot.predicates.CompositeLootItemCondition",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemConditionType",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.package-info",
            "XXX.providers.nbt.ContextNbtProvider$1",
            "XXX.providers.nbt.ContextNbtProvider$Getter",
            "XXX.providers.nbt.NbtProvider",
            "XXX.providers.nbt.StorageNbtProvider",
            "XXX.providers.number.BinomialDistributionGenerator",
            "XXX.providers.number.LootNumberProviderType",
            "XXX.providers.number.NumberProviders",
            "XXX.providers.number.UniformGenerator",
            "XXX.providers.score.ContextScoreboardNameProvider",
            "XXX.providers.score.LootScoreProviderType",
            "XXX.providers.score.ScoreboardNameProviders",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.package-info",
            "XXX.level.validation.DirectoryValidator",
            "XXX.level.validation.ForbiddenSymlinkInfo",
            "XXX.level.validation.PathAllowList$ConfigEntry",
            "XXX.level.validation.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.DisplaySlot$1",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info",
            "XXX.world.ticks.BlackholeTickAccess$1",
            "XXX.world.ticks.ContainerSingleItem",
            "XXX.world.ticks.LevelTickAccess",
            "XXX.world.ticks.LevelTicks$PosAndContainerConsumer",
            "XXX.world.ticks.SavedTick",
            "XXX.world.ticks.ScheduledTick",
            "XXX.world.ticks.SerializableTickContainer",
            "XXX.world.ticks.TickContainerAccess",
            "XXX.world.ticks.WorldGenTickAccess"
          ],
          "removed": [
            "XXX.minecraft.advancements.AdvancementNode",
            "XXX.minecraft.advancements.AdvancementRequirements",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementTree",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.advancements.critereon.SimpleCriterionTrigger$SimpleInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StartRidingTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TagPredicate",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsingItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandBuildContext$2$1",
            "XXX.minecraft.commands.CommandBuildContext$Configurable",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandFunction$MacroEntry",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$1$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$TagResult",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Delegate",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$CompositeOwner",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$NetworkedRegistryData",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$16",
            "XXX.core.dispenser.DispenseItemBehavior$18",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$21",
            "XXX.core.dispenser.DispenseItemBehavior$23",
            "XXX.core.dispenser.DispenseItemBehavior$25",
            "XXX.core.dispenser.DispenseItemBehavior$27",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustColorTransitionOptions$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SculkChargeParticleOptions",
            "XXX.core.particles.ShriekParticleOption",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$1",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$BookSlotModelCacheKey",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ItemModelGenerators$TrimModelData",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplate$JsonFactory",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.CraftingRecipeBuilder$1",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.CatVariantTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.VanillaItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.AncientCityStructurePools",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.BootstapContext",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.NoiseData",
            "XXX.data.worldgen.PlainVillagePools",
            "XXX.data.worldgen.ProcessorLists",
            "XXX.data.worldgen.SnowyVillagePools",
            "XXX.data.worldgen.Structures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.data.worldgen.TrailRuinsStructurePools",
            "XXX.worldgen.biome.BiomeData",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.gametest.framework.AfterBatch",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestHelper$3",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.ConnectionProtocol$CodecData",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.FriendlyByteBuf$1",
            "XXX.minecraft.network.FriendlyByteBuf$Writer",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$1",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ItemStackInfo",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.LiteralContents",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$2",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.common.ClientboundCustomPayloadPacket",
            "XXX.protocol.common.ClientboundKeepAlivePacket",
            "XXX.protocol.common.ClientboundResourcePackPacket",
            "XXX.protocol.common.ServerCommonPacketListener",
            "XXX.protocol.common.ServerboundKeepAlivePacket",
            "XXX.protocol.common.ServerboundResourcePackPacket",
            "XXX.common.custom.BeeDebugPayload",
            "XXX.common.custom.BrainDebugPayload",
            "XXX.common.custom.BrandPayload",
            "XXX.common.custom.DiscardedPayload",
            "XXX.common.custom.GameEventListenerDebugPayload",
            "XXX.common.custom.GameTestClearMarkersDebugPayload",
            "XXX.common.custom.GoalDebugPayload$DebugGoal",
            "XXX.common.custom.HiveDebugPayload$HiveInfo",
            "XXX.common.custom.PathfindingDebugPayload",
            "XXX.common.custom.PoiRemovedDebugPayload",
            "XXX.common.custom.RaidsDebugPayload",
            "XXX.common.custom.StructuresDebugPayload$PieceInfo",
            "XXX.common.custom.WorldGenAttemptDebugPayload",
            "XXX.protocol.common.package-info",
            "XXX.protocol.configuration.ClientboundFinishConfigurationPacket",
            "XXX.protocol.configuration.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.configuration.ServerboundFinishConfigurationPacket",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBatchStartPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$ArgumentNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$LiteralNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeStub",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket",
            "XXX.protocol.game.ClientboundDamageEventPacket",
            "XXX.protocol.game.ClientboundDisguisedChatPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundInitializeBorderPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
            "XXX.protocol.game.ClientboundLevelChunkWithLightPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacketData",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerChatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEnterPacket",
            "XXX.protocol.game.ClientboundPlayerInfoRemovePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerPingPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundChunkBatchReceivedPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$1",
            "XXX.protocol.game.ServerboundInteractPacket$ActionType",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAction",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMovePlayerPacket$StatusOnly",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ClientIntent$1",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.ServerboundLoginAcknowledgedPacket",
            "XXX.login.custom.CustomQueryPayload",
            "XXX.login.custom.DiscardedQueryPayload",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.FileToIdConverter",
            "XXX.minecraft.resources.RegistryDataLoader",
            "XXX.minecraft.resources.RegistryDataLoader$Loader",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryOps",
            "XXX.minecraft.resources.RegistryOps$2",
            "XXX.minecraft.resources.RegistryOps$RegistryInfoLookup",
            "XXX.minecraft.resources.ResourceKey$InternKey",
            "XXX.minecraft.resources.ResourceLocation$Dummy",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$Data",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer",
            "XXX.minecraft.server.ServerFunctionManager$TraceCallbacks",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.chase.ChaseClient",
            "XXX.server.chase.ChaseServer",
            "XXX.server.chase.package-info",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.CloneCommands$DimensionAndPosition",
            "XXX.server.commands.DamageCommand",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugConfigCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.FunctionCommand$FunctionResult",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PlaceCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RandomCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.ReturnCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.DataCommands$StringProcessor",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkLevel",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ChunkTrackingView",
            "XXX.server.level.ChunkTrackingView$Positioned",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ServerPlayer$2",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.TickingTracker",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.ConfigurationTask$Type",
            "XXX.server.network.LegacyProtocolUtils",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerCommonPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.TextFilter",
            "XXX.server.network.TextFilterClient",
            "XXX.server.network.TextFilterClient$JoinOrLeaveEncoder",
            "XXX.server.network.TextFilterClient$PlayerContext",
            "XXX.network.config.JoinWorldTask",
            "XXX.network.config.package-info",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.BuiltInMetadata",
            "XXX.server.packs.FeatureFlagsMetadataSection",
            "XXX.server.packs.FilePackResources$FileResourcesSupplier",
            "XXX.server.packs.OverlayMetadataSection",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.PathPackResources$PathResourcesSupplier",
            "XXX.server.packs.VanillaPackResourcesBuilder",
            "XXX.packs.linkfs.LinkFSFileStore",
            "XXX.packs.linkfs.LinkFSPath$1",
            "XXX.packs.linkfs.LinkFSPath$3",
            "XXX.packs.linkfs.LinkFSProvider$1",
            "XXX.packs.linkfs.LinkFileSystem",
            "XXX.packs.linkfs.LinkFileSystem$DirectoryEntry",
            "XXX.packs.linkfs.PathContents$1",
            "XXX.packs.linkfs.PathContents$DirectoryContents",
            "XXX.packs.linkfs.package-info",
            "XXX.packs.metadata.MetadataSectionType",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.BuiltInPackSource",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.PackSource$1",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.CloseableResourceManager",
            "XXX.packs.resources.FallbackResourceManager$1ResourceWithSourceAndIndex",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.FallbackResourceManager$ResourceWithSource",
            "XXX.packs.resources.MultiPackResourceManager",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceFilterSection",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceMetadata",
            "XXX.packs.resources.ResourceMetadata$2",
            "XXX.packs.resources.ResourceMetadata$Builder$1",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BannerPatternTags",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.DamageTypeTags",
            "XXX.minecraft.tags.FlatLevelGeneratorPresetTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.PoiTypeTags",
            "XXX.minecraft.tags.TagBuilder",
            "XXX.minecraft.tags.TagEntry$Lookup",
            "XXX.minecraft.tags.TagKey",
            "XXX.minecraft.tags.TagLoader$1",
            "XXX.minecraft.tags.TagLoader$SortingEntry",
            "XXX.minecraft.tags.TagManager$LoadResult",
            "XXX.minecraft.tags.TagNetworkSerialization$NetworkPayload",
            "XXX.minecraft.tags.WorldPresetTags",
            "XXX.minecraft.util.AbortableIterationConsumer",
            "XXX.minecraft.util.ArrayListDeque",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$EitherCodec",
            "XXX.minecraft.util.ExtraCodecs$StrictOptionalFieldCodec",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.CriteriaRenameFix",
            "XXX.datafix.fixes.DropInvalidSignDataFix",
            "XXX.datafix.fixes.EffectDurationFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingFieldsRenameFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityVariantFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FilteredBooksFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GoatHornIdFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobEffectIdFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsProgrammerArtFix",
            "XXX.datafix.fixes.OverreachingTickFix",
            "XXX.datafix.fixes.PoiTypeRemoveFix",
            "XXX.datafix.fixes.RandomSequenceSettingsFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.ScoreboardDisplaySlotFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V3078",
            "XXX.datafix.schemas.V3082",
            "XXX.datafix.schemas.V3202",
            "XXX.datafix.schemas.V3204",
            "XXX.datafix.schemas.V3326",
            "XXX.datafix.schemas.V3328",
            "XXX.datafix.schemas.V3448",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.RandomSequences",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.DamageScaling",
            "XXX.world.damagesource.DamageSource$1",
            "XXX.world.damagesource.DamageType",
            "XXX.world.damagesource.DeathMessageType",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttributeModifierTemplate",
            "XXX.world.effect.HealOrHarmMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffect$MobEffectAttributeModifierTemplate",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.PoisonMobEffect",
            "XXX.world.effect.SaturationMobEffect",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Display",
            "XXX.world.entity.Display$BillboardConstraints",
            "XXX.world.entity.Display$BlockDisplay$BlockRenderState",
            "XXX.world.entity.Display$FloatInterpolator",
            "XXX.world.entity.Display$IntInterpolator",
            "XXX.world.entity.Display$ItemDisplay$1",
            "XXX.world.entity.Display$LinearFloatInterpolator",
            "XXX.world.entity.Display$PosRotInterpolationTarget",
            "XXX.world.entity.Display$TextDisplay",
            "XXX.world.entity.Display$TextDisplay$CachedInfo",
            "XXX.world.entity.Display$TextDisplay$LineSplitter",
            "XXX.world.entity.Display$TransformationInterpolator",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.RelativeMovement",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.VariantHolder",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$Base",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.allay.Allay",
            "XXX.animal.allay.Allay$VibrationUser",
            "XXX.animal.allay.package-info",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.camel.Camel",
            "XXX.animal.camel.Camel$CamelLookControl",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.ShapedRecipe$Serializer$RawShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer$Factory",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.SwiftSneakEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.Level$2",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureManager",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeGenerationSettings$PlainBuilder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$2",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.Climate",
            "XXX.level.biome.Climate$Parameter",
            "XXX.level.biome.Climate$ParameterPoint",
            "XXX.level.biome.Climate$RTree$Leaf",
            "XXX.level.biome.Climate$RTree$SubTree",
            "XXX.level.biome.Climate$SpawnFinder",
            "XXX.level.biome.Climate$TargetPoint",
            "XXX.level.biome.FeatureSorter$1FeatureData",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.MobSpawnSettings$Builder",
            "XXX.level.biome.MobSpawnSettings$SpawnerData",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider",
            "XXX.level.biome.OverworldBiomeBuilder",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractCandleBlock",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractGlassBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AmethystClusterBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.AzaleaBlock",
            "XXX.level.block.BambooStalkBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BaseRailBlock$1",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BedBlock$1",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.BigDripleafStemBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$BlockStatePairKey",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BrushableBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.BushBlock",
            "XXX.level.block.ButtonBlock$1",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CandleCakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.CaveVines",
            "XXX.level.block.CaveVinesPlantBlock",
            "XXX.level.block.ChainBlock",
            "XXX.level.block.ChangeOverTimeBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChiseledBookShelfBlock",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.CryingObsidianBlock",
            "XXX.level.block.DeadBushBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DirtPathBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropExperienceBlock",
            "XXX.level.block.EnchantmentTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.Fallable",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrogspawnBlock",
            "XXX.level.block.FungusBlock",
            "XXX.level.block.GameMasterBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.GrowingPlantBlock",
            "XXX.level.block.GrowingPlantHeadBlock",
            "XXX.level.block.HangingRootsBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LavaCauldronBlock",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LightBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MangroveLeavesBlock",
            "XXX.level.block.MangroveRootsBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MossBlock",
            "XXX.level.block.MultifaceBlock",
            "XXX.level.block.MultifaceSpreader$DefaultSpreaderConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPos",
            "XXX.level.block.MultifaceSpreader$SpreadType",
            "XXX.level.block.MultifaceSpreader$SpreadType$2",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PinkPetalsBlock",
            "XXX.level.block.PitcherCropBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PowderSnowCauldronBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkBehaviour",
            "XXX.level.block.SculkBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SculkSpreader",
            "XXX.level.block.SculkVeinBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SporeBlossomBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SuspiciousEffectHolder",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TorchflowerCropBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlantBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallHangingSignBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WeatheringCopper",
            "XXX.level.block.WeatheringCopperFullBlock",
            "XXX.level.block.WeatheringCopperStairBlock",
            "XXX.level.block.WeepingVinesBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityTicker",
            "XXX.block.entity.BlockEntityType$BlockEntitySupplier",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.BrushableBlockEntity",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.ChestLidController",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DecoratedPotBlockEntity$Decorations",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity$1",
            "XXX.block.entity.HangingSignBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.SculkCatalystBlockEntity$CatalystListener",
            "XXX.block.entity.SculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.SculkShriekerBlockEntity$VibrationUser",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickingBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.AzaleaTreeGrower",
            "XXX.block.grower.CherryTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$OffsetType",
            "XXX.block.state.BlockBehaviour$StateArgumentPredicate",
            "XXX.block.state.BlockState",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockSetType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ChestType$1",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.NoteBlockInstrument$Type",
            "XXX.state.properties.Property",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.RotationSegment",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BlockColumn",
            "XXX.level.chunk.CarvingMask",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGenerators",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunk$BoundTickingBlockEntity",
            "XXX.level.chunk.LevelChunk$PostLoadProcessor",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LightChunk",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$Configuration",
            "XXX.level.chunk.PalettedContainer$Data",
            "XXX.level.chunk.PalettedContainer$Strategy$1",
            "XXX.level.chunk.PalettedContainerRO",
            "XXX.level.chunk.PalettedContainerRO$Unpacker",
            "XXX.level.chunk.SingleValuePalette",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.EntityStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionDefaults",
            "XXX.level.dimension.DimensionType$MonsterSettings",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.entity.ChunkEntities",
            "XXX.level.entity.EntityAccess",
            "XXX.level.entity.EntityInLevelCallback$1",
            "XXX.level.entity.EntityPersistentStorage",
            "XXX.level.entity.EntitySectionStorage",
            "XXX.level.entity.EntityTypeTest",
            "XXX.level.entity.LevelCallback",
            "XXX.level.entity.LevelEntityGetterAdapter",
            "XXX.level.entity.PersistentEntitySectionManager$Callback",
            "XXX.level.entity.TransientEntitySectionManager",
            "XXX.level.entity.Visibility",
            "XXX.level.gameevent.BlockPositionSource",
            "XXX.level.gameevent.DynamicGameEventListener",
            "XXX.level.gameevent.EntityPositionSource$Type",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry$OnEmptyAction",
            "XXX.level.gameevent.GameEvent$Context",
            "XXX.level.gameevent.GameEventDispatcher",
            "XXX.level.gameevent.GameEventListener$DeliveryMode",
            "XXX.level.gameevent.GameEventListenerRegistry",
            "XXX.level.gameevent.GameEventListenerRegistry$ListenerVisitor",
            "XXX.level.gameevent.PositionSourceType",
            "XXX.gameevent.vibrations.VibrationInfo",
            "XXX.gameevent.vibrations.VibrationSystem",
            "XXX.gameevent.vibrations.VibrationSystem$Listener",
            "XXX.gameevent.vibrations.VibrationSystem$User",
            "XXX.level.levelgen.Aquifer",
            "XXX.level.levelgen.Aquifer$FluidPicker",
            "XXX.level.levelgen.Aquifer$NoiseBasedAquifer",
            "XXX.level.levelgen.Beardifier$1",
            "XXX.level.levelgen.BelowZeroRetrogen",
            "XXX.level.levelgen.BitRandomSource",
            "XXX.level.levelgen.Column$Line",
            "XXX.level.levelgen.Column$Ray",
            "XXX.level.levelgen.Density",
            "XXX.level.levelgen.DensityFunction$ContextProvider",
            "XXX.level.levelgen.DensityFunction$NoiseHolder",
            "XXX.level.levelgen.DensityFunction$SinglePointContext",
            "XXX.level.levelgen.DensityFunctions",
            "XXX.level.levelgen.DensityFunctions$Ap2",
            "XXX.level.levelgen.DensityFunctions$BeardifierOrMarker",
            "XXX.level.levelgen.DensityFunctions$BlendDensity",
            "XXX.level.levelgen.DensityFunctions$Clamp",
            "XXX.level.levelgen.DensityFunctions$EndIslandDensityFunction",
            "XXX.level.levelgen.DensityFunctions$Mapped",
            "XXX.level.levelgen.DensityFunctions$Marker",
            "XXX.level.levelgen.DensityFunctions$MarkerOrMarked",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd$Type",
            "XXX.level.levelgen.DensityFunctions$PureTransformer",
            "XXX.level.levelgen.DensityFunctions$Shift",
            "XXX.level.levelgen.DensityFunctions$ShiftB",
            "XXX.level.levelgen.DensityFunctions$ShiftedNoise",
            "XXX.level.levelgen.DensityFunctions$Spline$Coordinate",
            "XXX.level.levelgen.DensityFunctions$TransformerWithContext",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction$Type",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler$RarityValueMapper",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.GeodeBlockSettings",
            "XXX.level.levelgen.GeodeLayerSettings",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.LegacyRandomSource",
            "XXX.level.levelgen.MarsagliaPolarGaussian",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$2",
            "XXX.level.levelgen.NoiseChunk$BlendOffset",
            "XXX.level.levelgen.NoiseChunk$Cache2D",
            "XXX.level.levelgen.NoiseChunk$CacheOnce",
            "XXX.level.levelgen.NoiseChunk$NoiseChunkDensityFunction",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseRouterData",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.OreVeinifier",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomState$1",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldDimensions",
            "XXX.level.levelgen.WorldDimensions$Complete",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$CellValueGetter",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.package-info",
            "XXX.levelgen.blockpredicates.AnyOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicateType",
            "XXX.levelgen.blockpredicates.HasSturdyFacePredicate",
            "XXX.levelgen.blockpredicates.MatchingBlockTagPredicate",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.blockpredicates.StateTestingPredicate",
            "XXX.levelgen.blockpredicates.WouldSurvivePredicate",
            "XXX.levelgen.carver.CanyonCarverConfiguration",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockColumnFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DiskFeature",
            "XXX.levelgen.feature.DripstoneUtils",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FeatureCountTracker$1",
            "XXX.levelgen.feature.FeatureCountTracker$LevelData",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.FossilFeatureConfiguration",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeFungusConfiguration",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature$WindOffsetter",
            "XXX.levelgen.feature.MultifaceGrowthFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.PointedDripstoneFeature",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RootSystemFeature",
            "XXX.levelgen.feature.SculkPatchFeature",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.TwistingVinesFeature",
            "XXX.levelgen.feature.VegetationPatchFeature",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.feature.configurations.BlockColumnConfiguration",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.ColumnFeatureConfiguration",
            "XXX.feature.configurations.DeltaFeatureConfiguration",
            "XXX.feature.configurations.DripstoneClusterConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.NetherForestVegetationConfig",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.PointedDripstoneConfiguration",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.SculkPatchConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.configurations.UnderwaterMagmaConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageSetter",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.rootplacers.MangroveRootPlacement",
            "XXX.feature.rootplacers.RootPlacer",
            "XXX.feature.rootplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.NoiseBasedStateProvider",
            "XXX.feature.stateproviders.NoiseThresholdProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider$Rule",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecorator$Context",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.feature.trunkplacers.BendingTrunkPlacer",
            "XXX.feature.trunkplacers.DarkOakTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer$FoliageCoords",
            "XXX.feature.trunkplacers.GiantTrunkPlacer",
            "XXX.feature.trunkplacers.StraightTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacerType",
            "XXX.feature.trunkplacers.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorPreset",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets$Bootstrap",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.heightproviders.WeightedListHeight",
            "XXX.levelgen.material.MaterialRuleList",
            "XXX.levelgen.material.package-info",
            "XXX.levelgen.placement.BiomeFilter",
            "XXX.levelgen.placement.CarvingMaskPlacement",
            "XXX.levelgen.placement.CountOnEveryLayerPlacement",
            "XXX.levelgen.placement.EnvironmentScanPlacement",
            "XXX.levelgen.placement.HeightmapPlacement",
            "XXX.levelgen.placement.NoiseBasedCountPlacement",
            "XXX.levelgen.placement.PlacedFeature",
            "XXX.levelgen.placement.PlacementFilter",
            "XXX.levelgen.placement.PlacementModifierType",
            "XXX.levelgen.placement.RarityFilter",
            "XXX.levelgen.placement.SurfaceRelativeThresholdFilter",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.presets.WorldPresets",
            "XXX.levelgen.presets.package-info",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuiltinStructures",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.SinglePieceStructure$PieceConstructor",
            "XXX.levelgen.structure.Structure$GenerationContext",
            "XXX.levelgen.structure.Structure$StructureSettings",
            "XXX.levelgen.structure.StructureCheckResult",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureSet",
            "XXX.levelgen.structure.StructureSpawnOverride",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.pieces.PieceGenerator$Context",
            "XXX.structure.pieces.PieceGeneratorSupplier$Context",
            "XXX.structure.pieces.StructurePieceSerializationContext",
            "XXX.structure.pieces.StructurePieceType$ContextlessType",
            "XXX.structure.pieces.StructurePiecesBuilder",
            "XXX.structure.placement.ConcentricRingsStructurePlacement",
            "XXX.structure.placement.RandomSpreadType",
            "XXX.structure.placement.StructurePlacement",
            "XXX.structure.placement.StructurePlacement$FrequencyReducer",
            "XXX.structure.placement.StructurePlacementType",
            "XXX.structure.pools.EmptyPoolElement",
            "XXX.structure.pools.JigsawJunction",
            "XXX.structure.pools.JigsawPlacement$PieceState",
            "XXX.structure.pools.LegacySinglePoolElement",
            "XXX.structure.pools.SinglePoolElement",
            "XXX.structure.pools.StructurePoolElementType",
            "XXX.structure.pools.StructureTemplatePool$Projection",
            "XXX.structure.structures.BuriedTreasurePieces",
            "XXX.structure.structures.BuriedTreasureStructure",
            "XXX.structure.structures.DesertPyramidStructure",
            "XXX.structure.structures.EndCityPieces$1",
            "XXX.structure.structures.EndCityPieces$3",
            "XXX.structure.structures.EndCityPieces$EndCityPiece",
            "XXX.structure.structures.EndCityStructure",
            "XXX.structure.structures.IglooPieces$IglooPiece",
            "XXX.structure.structures.JigsawStructure",
            "XXX.structure.structures.JungleTemplePiece",
            "XXX.structure.structures.JungleTempleStructure",
            "XXX.structure.structures.MineshaftPieces$1",
            "XXX.structure.structures.MineshaftPieces$MineShaftCrossing",
            "XXX.structure.structures.MineshaftPieces$MineShaftRoom",
            "XXX.structure.structures.MineshaftStructure",
            "XXX.structure.structures.NetherFortressPieces",
            "XXX.structure.structures.NetherFortressPieces$BridgeCrossing",
            "XXX.structure.structures.NetherFortressPieces$BridgeStraight",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorTBalconyPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorCrossingPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleStalkRoom",
            "XXX.structure.structures.NetherFortressPieces$NetherBridgePiece",
            "XXX.structure.structures.NetherFortressPieces$RoomCrossing",
            "XXX.structure.structures.NetherFortressPieces$StartPiece",
            "XXX.structure.structures.NetherFossilPieces",
            "XXX.structure.structures.NetherFossilStructure",
            "XXX.structure.structures.OceanMonumentPieces$1",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentBuilding",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$RoomDefinition",
            "XXX.structure.structures.OceanRuinPieces",
            "XXX.structure.structures.OceanRuinPieces$OceanRuinPiece",
            "XXX.structure.structures.OceanRuinStructure$Type",
            "XXX.structure.structures.RuinedPortalPiece$Properties",
            "XXX.structure.structures.RuinedPortalStructure",
            "XXX.structure.structures.ShipwreckPieces",
            "XXX.structure.structures.ShipwreckStructure",
            "XXX.structure.structures.StrongholdPieces$1",
            "XXX.structure.structures.StrongholdPieces$3",
            "XXX.structure.structures.StrongholdPieces$FillerCorridor",
            "XXX.structure.structures.StrongholdPieces$LeftTurn",
            "XXX.structure.structures.StrongholdPieces$PieceWeight",
            "XXX.structure.structures.StrongholdPieces$PrisonHall",
            "XXX.structure.structures.StrongholdPieces$RoomCrossing",
            "XXX.structure.structures.StrongholdPieces$StairsDown",
            "XXX.structure.structures.StrongholdPieces$Straight",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece",
            "XXX.structure.structures.StrongholdPieces$Turn",
            "XXX.structure.structures.SwampHutPiece",
            "XXX.structure.structures.WoodlandMansionPieces",
            "XXX.structure.structures.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.structure.structures.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionStructure",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlackstoneReplaceProcessor",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.CappedProcessor",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.LinearPosTest",
            "XXX.structure.templatesystem.PosAlwaysTrueTest",
            "XXX.structure.templatesystem.PosRuleTestType",
            "XXX.structure.templatesystem.ProtectedBlockProcessor",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorList",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$Palette",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.StructureTemplateManager",
            "XXX.structure.templatesystem.StructureTemplateManager$Source",
            "XXX.structure.templatesystem.package-info",
            "XXX.rule.blockentity.AppendStatic",
            "XXX.rule.blockentity.Passthrough",
            "XXX.rule.blockentity.RuleBlockEntityModifierType",
            "XXX.levelgen.synth.BlendedNoise",
            "XXX.levelgen.synth.NoiseUtils",
            "XXX.levelgen.synth.NormalNoise$NoiseParameters",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.ChunkSkyLightSources",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LayerLightSectionStorage$SectionType",
            "XXX.level.lighting.LeveledPriorityQueue",
            "XXX.level.lighting.LightEngine",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightEngine$1",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.FogType",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.MapColor",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.level.pathfinder.AmphibiousNodeEvaluator",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.portal.PortalForcer",
            "XXX.level.portal.PortalShape",
            "XXX.level.redstone.CollectingNeighborUpdater",
            "XXX.level.redstone.CollectingNeighborUpdater$MultiNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$ShapeUpdate",
            "XXX.level.redstone.InstantNeighborUpdater",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.MapItemSavedData$MapPatch",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$LevelCandidates",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$2",
            "XXX.level.storage.LevelSummary$BackupStatus",
            "XXX.level.storage.LevelVersion",
            "XXX.level.storage.PrimaryLevelData",
            "XXX.level.storage.ServerLevelData",
            "XXX.level.storage.WritableLevelData",
            "XXX.storage.loot.IntRange",
            "XXX.storage.loot.IntRange$IntLimiter",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$VisitedEntry",
            "XXX.storage.loot.LootDataId",
            "XXX.storage.loot.LootDataManager$1",
            "XXX.storage.loot.LootDataType",
            "XXX.storage.loot.LootParams",
            "XXX.storage.loot.LootParams$DynamicDrop",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryType",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Path",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FunctionReference",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunctionType",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.SequenceFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetBannerPatternFunction$Builder",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetEnchantmentsFunction",
            "XXX.loot.functions.SetInstrumentFunction",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$EffectEntry",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AllOfCondition",
            "XXX.loot.predicates.AnyOfCondition",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.CompositeLootItemCondition$Builder",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.ValueCheckCondition",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.providers.nbt.ContextNbtProvider",
            "XXX.providers.nbt.ContextNbtProvider$2",
            "XXX.providers.nbt.LootNbtProviderType",
            "XXX.providers.nbt.NbtProviders",
            "XXX.providers.nbt.package-info",
            "XXX.providers.number.ConstantValue",
            "XXX.providers.number.NumberProvider",
            "XXX.providers.number.ScoreboardValue",
            "XXX.providers.number.package-info",
            "XXX.providers.score.FixedScoreboardNameProvider",
            "XXX.providers.score.ScoreboardNameProvider",
            "XXX.providers.score.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.level.validation.ContentValidationException",
            "XXX.level.validation.DirectoryValidator$1",
            "XXX.level.validation.PathAllowList",
            "XXX.level.validation.PathAllowList$EntryType",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.world.scores.DisplaySlot",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info",
            "XXX.world.ticks.BlackholeTickAccess",
            "XXX.world.ticks.BlackholeTickAccess$2",
            "XXX.world.ticks.LevelChunkTicks",
            "XXX.world.ticks.LevelTicks",
            "XXX.world.ticks.ProtoChunkTicks",
            "XXX.world.ticks.SavedTick$1",
            "XXX.world.ticks.ScheduledTick$1",
            "XXX.world.ticks.TickAccess",
            "XXX.world.ticks.TickPriority",
            "XXX.world.ticks.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.minecraft.advancements.Advancement$Builder \u001b[2;32m+8M\u001b[0m \u001b[2;31m-17M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-6P\u001b[0m",
          "XXX.minecraft.advancements.TreeNodePosition \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.BeeNestDestroyedTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.BlockPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.BredAnimalsTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.BrewedPotionTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ChangeDimensionTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ChanneledLightningTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ConstructBeaconTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ConsumeItemTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.DamagePredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.DamageSourcePredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.DistanceTrigger$TriggerInstance \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EnterBlockTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.EntityEquipmentPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EntityFlagsPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EntityHurtPlayerTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.EntityPredicate \u001b[2;32m+2M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.FishingRodHookedTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.FluidPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ImpossibleTrigger \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.InventoryChangeTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ItemDurabilityTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ItemPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ItemUsedOnLocationTrigger \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.KilledByCrossbowTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.KilledTrigger \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.LevitationTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.LightPredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.LightningStrikeTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.LocationPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.LootTableTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.PickedUpItemTrigger$TriggerInstance \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.advancements.critereon.PlayerInteractTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.advancements.critereon.PlayerTrigger$TriggerInstance \u001b[2;32m+9M\u001b[0m \u001b[2;31m-8M\u001b[0m",
          "XXX.advancements.critereon.RecipeCraftedTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.data.recipes.RecipeProvider \u001b[2;32m+64M\u001b[0m \u001b[2;31m-66M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.player.Player \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.player.StackedContents \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.inventory.AbstractFurnaceMenu \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.inventory.ResultContainer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.world.inventory.SmithingMenu \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.item.crafting.AbstractCookingRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.item.crafting.BannerDuplicateRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.item.crafting.BookCloningRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.item.crafting.RecipeSerializer \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.item.crafting.ShapedRecipe \u001b[2;32m+3M\u001b[0m \u001b[2;31m-10M\u001b[0m | \u001b[2;31m-1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.Advancement$Builder",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,DisplayInfo,AdvancementRewards,Map,String[][],boolean)",
            "void <init>(boolean)",
            "Advancement$Builder parent(Advancement)",
            "Advancement$Builder addCriterion(String,CriterionTriggerInstance)",
            "Advancement$Builder requirements(RequirementsStrategy)",
            "Advancement$Builder requirements(String[][])",
            "boolean canBuild(Function)",
            "Advancement build(ResourceLocation)",
            "Advancement save(Consumer,String)",
            "JsonObject serializeToJson()",
            "void serializeToNetwork(FriendlyByteBuf)",
            "String toString()",
            "Advancement$Builder fromJson(JsonObject,DeserializationContext)",
            "Advancement$Builder fromNetwork(FriendlyByteBuf)",
            "Map getCriteria()",
            "void lambda$serializeToNetwork$1(FriendlyByteBuf,DisplayInfo)",
            "Advancement lambda$build$0(ResourceLocation)"
          ],
          "removed": [
            "void <init>()",
            "Advancement$Builder parent(AdvancementHolder)",
            "Advancement$Builder requirements(AdvancementRequirements$Strategy)",
            "Advancement$Builder requirements(AdvancementRequirements)",
            "Advancement$Builder sendsTelemetryEvent()",
            "AdvancementHolder build(ResourceLocation)",
            "AdvancementHolder save(Consumer,String)",
            "AdvancementRequirements lambda$build$0(Map)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.TreeNodePosition",
        "differences": {
          "added": [
            "void <init>(Advancement,TreeNodePosition,TreeNodePosition,int,int)",
            "TreeNodePosition addChild(Advancement,TreeNodePosition)",
            "void run(Advancement)"
          ],
          "removed": [
            "void <init>(AdvancementNode,TreeNodePosition,TreeNodePosition,int,int)",
            "TreeNodePosition addChild(AdvancementNode,TreeNodePosition)",
            "void run(AdvancementNode)",
            "void lambda$finalizePosition$0(DisplayInfo)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BeeNestDestroyedTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BlockPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BredAnimalsTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BrewedPotionTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ChangeDimensionTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ChanneledLightningTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ConstructBeaconTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ConsumeItemTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
        "differences": {
          "added": [
            "CuredZombieVillagerTrigger$TriggerInstance curedZombieVillager()"
          ],
          "removed": [
            "Criterion curedZombieVillager()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DamagePredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "DamagePredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DamageSourcePredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "DamageSourcePredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DistanceTrigger$TriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional,Optional,Optional)",
            "DistanceTrigger$TriggerInstance fallFromHeight(EntityPredicate$Builder,DistancePredicate,LocationPredicate$Builder)",
            "DistanceTrigger$TriggerInstance rideEntityInLava(EntityPredicate$Builder,DistancePredicate)",
            "DistanceTrigger$TriggerInstance travelledThroughNether(DistancePredicate)"
          ],
          "removed": [
            "void <init>(Optional,Optional,Optional)",
            "Criterion fallFromHeight(EntityPredicate$Builder,DistancePredicate,LocationPredicate$Builder)",
            "Criterion rideEntityInLava(EntityPredicate$Builder,DistancePredicate)",
            "Criterion travelledThroughNether(DistancePredicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
        "differences": {
          "added": [
            "EffectsChangedTrigger$TriggerInstance hasEffects(MobEffectsPredicate$Builder)",
            "EffectsChangedTrigger$TriggerInstance gotEffectsFrom(Optional)"
          ],
          "removed": [
            "Criterion hasEffects(MobEffectsPredicate$Builder)",
            "Criterion gotEffectsFrom(EntityPredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
        "differences": {
          "added": [
            "EnchantedItemTrigger$TriggerInstance enchantedItem()"
          ],
          "removed": [
            "Criterion enchantedItem()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EnterBlockTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityEquipmentPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,Optional,Optional,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityFlagsPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,Optional,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityHurtPlayerTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional,Optional)",
            "Optional wrap(EntityPredicate$Builder)",
            "boolean lambda$matches$3(ServerLevel,Vec3,Entity)",
            "Stream lambda$wrap$2(EntityPredicate$Builder)"
          ],
          "removed": [
            "ContextAwarePredicate wrap(EntityPredicate$Builder)",
            "boolean lambda$matches$2(ServerLevel,Vec3,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FilledBucketTrigger$TriggerInstance",
        "differences": {
          "added": [
            "FilledBucketTrigger$TriggerInstance filledBucket(Optional)"
          ],
          "removed": [
            "Criterion filledBucket(ItemPredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FishingRodHookedTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FluidPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ImpossibleTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "void <clinit>()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.InventoryChangeTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemDurabilityTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate",
        "differences": {
          "added": [
            "Optional of(Optional,Optional,MinMaxBounds$Ints,MinMaxBounds$Ints,List,List,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemUsedOnLocationTrigger",
        "differences": {
          "added": [
            "void <init>(ResourceLocation)",
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ],
          "removed": [
            "void <init>()",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.KilledByCrossbowTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.KilledTrigger",
        "differences": {
          "added": [
            "void <init>(ResourceLocation)",
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ],
          "removed": [
            "void <init>()",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LevitationTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LightPredicate",
        "differences": {
          "added": [
            "Optional of(MinMaxBounds$Ints)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LightningStrikeTrigger$TriggerInstance",
        "differences": {
          "added": [
            "LightningStrikeTrigger$TriggerInstance lighthingStrike(Optional,Optional)"
          ],
          "removed": [
            "Criterion lightningStrike(Optional,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LocationPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "LocationPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LootTableTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PickedUpItemTrigger$TriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional,Optional,Optional)",
            "PickedUpItemTrigger$TriggerInstance thrownItemPickedUpByEntity(ContextAwarePredicate,Optional,Optional)",
            "PickedUpItemTrigger$TriggerInstance thrownItemPickedUpByPlayer(Optional,Optional,Optional)"
          ],
          "removed": [
            "void <init>(Optional,Optional,Optional)",
            "Criterion thrownItemPickedUpByEntity(ContextAwarePredicate,Optional,Optional)",
            "Criterion thrownItemPickedUpByPlayer(Optional,Optional,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
        "differences": {
          "added": [
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntity()",
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntityWithDamage(Optional)",
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntityWithDamage(DamagePredicate$Builder)",
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntity(Optional)",
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntity(Optional,Optional)",
            "PlayerHurtEntityTrigger$TriggerInstance playerHurtEntity(DamagePredicate$Builder,Optional)"
          ],
          "removed": [
            "Criterion playerHurtEntity()",
            "Criterion playerHurtEntityWithDamage(Optional)",
            "Criterion playerHurtEntityWithDamage(DamagePredicate$Builder)",
            "Criterion playerHurtEntity(Optional)",
            "Criterion playerHurtEntity(Optional,Optional)",
            "Criterion playerHurtEntity(DamagePredicate$Builder,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerInteractTrigger$TriggerInstance",
        "differences": {
          "added": [
            "PlayerInteractTrigger$TriggerInstance itemUsedOnEntity(Optional,ItemPredicate$Builder,Optional)",
            "PlayerInteractTrigger$TriggerInstance itemUsedOnEntity(ItemPredicate$Builder,Optional)"
          ],
          "removed": [
            "Criterion itemUsedOnEntity(Optional,ItemPredicate$Builder,Optional)",
            "Criterion itemUsedOnEntity(ItemPredicate$Builder,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerTrigger$TriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional)",
            "PlayerTrigger$TriggerInstance located(LocationPredicate$Builder)",
            "PlayerTrigger$TriggerInstance located(Optional)",
            "PlayerTrigger$TriggerInstance sleptInBed()",
            "PlayerTrigger$TriggerInstance raidWon()",
            "PlayerTrigger$TriggerInstance avoidVibration()",
            "PlayerTrigger$TriggerInstance tick()",
            "PlayerTrigger$TriggerInstance walkOnBlockWithEquipment(Block,Item)"
          ],
          "removed": [
            "void <init>(Optional)",
            "Criterion located(LocationPredicate$Builder)",
            "Criterion located(EntityPredicate$Builder)",
            "Criterion located(Optional)",
            "Criterion sleptInBed()",
            "Criterion raidWon()",
            "Criterion avoidVibration()",
            "Criterion tick()",
            "Criterion walkOnBlockWithEquipment(Block,Item)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.RecipeCraftedTrigger$TriggerInstance",
        "differences": {
          "added": [
            "RecipeCraftedTrigger$TriggerInstance craftedItem(ResourceLocation,List)",
            "RecipeCraftedTrigger$TriggerInstance craftedItem(ResourceLocation)",
            "Stream lambda$craftedItem$0(ItemPredicate$Builder)"
          ],
          "removed": [
            "Criterion craftedItem(ResourceLocation,List)",
            "Criterion craftedItem(ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
        "differences": {
          "added": [
            "boolean matches(Recipe)"
          ],
          "removed": [
            "boolean matches(RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ShotCrossbowTrigger$TriggerInstance shotCrossbow(Optional)",
            "ShotCrossbowTrigger$TriggerInstance shotCrossbow(ItemLike)"
          ],
          "removed": [
            "Criterion shotCrossbow(Optional)",
            "Criterion shotCrossbow(ItemLike)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.RecipeProvider",
        "differences": {
          "added": [
            "CompletableFuture buildAdvancement(CachedOutput,ResourceLocation,Advancement$Builder)",
            "void generateForEnabledBlockFamilies(Consumer,FeatureFlagSet)",
            "void oneToOneConversionRecipe(Consumer,ItemLike,ItemLike,String)",
            "void oneToOneConversionRecipe(Consumer,ItemLike,ItemLike,String,int)",
            "void oreSmelting(Consumer,List,RecipeCategory,ItemLike,float,int,String)",
            "void oreBlasting(Consumer,List,RecipeCategory,ItemLike,float,int,String)",
            "void oreCooking(Consumer,RecipeSerializer,List,RecipeCategory,ItemLike,float,int,String,String)",
            "void netheriteSmithing(Consumer,Item,RecipeCategory,Item)",
            "void trimSmithing(Consumer,Item,ResourceLocation)",
            "void twoByTwoPacker(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void threeByThreePacker(Consumer,RecipeCategory,ItemLike,ItemLike,String)",
            "void threeByThreePacker(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void planksFromLog(Consumer,ItemLike,TagKey,int)",
            "void planksFromLogs(Consumer,ItemLike,TagKey,int)",
            "void woodFromLogs(Consumer,ItemLike,ItemLike)",
            "void woodenBoat(Consumer,ItemLike,ItemLike)",
            "void chestBoat(Consumer,ItemLike,ItemLike)",
            "void pressurePlate(Consumer,ItemLike,ItemLike)",
            "void slab(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void hangingSign(Consumer,ItemLike,ItemLike)",
            "void colorBlockWithDye(Consumer,List,List,String)",
            "void carpet(Consumer,ItemLike,ItemLike)",
            "void bedFromPlanksAndWool(Consumer,ItemLike,ItemLike)",
            "void banner(Consumer,ItemLike,ItemLike)",
            "void stainedGlassFromGlassAndDye(Consumer,ItemLike,ItemLike)",
            "void stainedGlassPaneFromStainedGlass(Consumer,ItemLike,ItemLike)",
            "void stainedGlassPaneFromGlassPaneAndDye(Consumer,ItemLike,ItemLike)",
            "void coloredTerracottaFromTerracottaAndDye(Consumer,ItemLike,ItemLike)",
            "void concretePowder(Consumer,ItemLike,ItemLike)",
            "void candle(Consumer,ItemLike,ItemLike)",
            "void wall(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void polished(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void cut(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void chiseled(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void mosaicBuilder(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void stonecutterResultFromBase(Consumer,RecipeCategory,ItemLike,ItemLike)",
            "void stonecutterResultFromBase(Consumer,RecipeCategory,ItemLike,ItemLike,int)",
            "void smeltingResultFromBase(Consumer,ItemLike,ItemLike)",
            "void nineBlockStorageRecipes(Consumer,RecipeCategory,ItemLike,RecipeCategory,ItemLike)",
            "void nineBlockStorageRecipesWithCustomPacking(Consumer,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String)",
            "void nineBlockStorageRecipesRecipesWithCustomUnpacking(Consumer,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String)",
            "void nineBlockStorageRecipes(Consumer,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String,String,String)",
            "void copySmithingTemplate(Consumer,ItemLike,TagKey)",
            "void copySmithingTemplate(Consumer,ItemLike,ItemLike)",
            "void cookRecipes(Consumer,String,RecipeSerializer,int)",
            "void simpleCookingRecipe(Consumer,String,RecipeSerializer,int,ItemLike,ItemLike,float)",
            "void waxRecipes(Consumer)",
            "void generateRecipes(Consumer,BlockFamily)",
            "EnterBlockTrigger$TriggerInstance insideOf(Block)",
            "InventoryChangeTrigger$TriggerInstance has(MinMaxBounds$Ints,ItemLike)",
            "InventoryChangeTrigger$TriggerInstance has(ItemLike)",
            "InventoryChangeTrigger$TriggerInstance has(TagKey)",
            "InventoryChangeTrigger$TriggerInstance inventoryTrigger(ItemPredicate$Builder[])",
            "InventoryChangeTrigger$TriggerInstance inventoryTrigger(ItemPredicate[])",
            "ItemPredicate[] lambda$inventoryTrigger$25(int)",
            "Stream lambda$inventoryTrigger$24(ItemPredicate$Builder)",
            "RecipeBuilder lambda$static$23(ItemLike,ItemLike)",
            "void lambda$generateRecipes$8(BlockFamily,Consumer,BlockFamily$Variant,Block)",
            "String lambda$generateRecipes$7(ItemLike)",
            "void lambda$generateRecipes$6(RecipeBuilder,BlockFamily$Variant,String)",
            "void lambda$waxRecipes$5(Consumer,Block,Block)",
            "boolean lambda$colorBlockWithDye$4(Item,Item)",
            "void lambda$generateForEnabledBlockFamilies$3(Consumer,BlockFamily)",
            "boolean lambda$generateForEnabledBlockFamilies$2(FeatureFlagSet,BlockFamily)",
            "CompletableFuture[] lambda$run$1(int)",
            "void lambda$run$0(Set,List,CachedOutput,FinishedRecipe)"
          ],
          "removed": [
            "CompletableFuture buildAdvancement(CachedOutput,AdvancementHolder)",
            "void generateForEnabledBlockFamilies(RecipeOutput,FeatureFlagSet)",
            "void oneToOneConversionRecipe(RecipeOutput,ItemLike,ItemLike,String)",
            "void oneToOneConversionRecipe(RecipeOutput,ItemLike,ItemLike,String,int)",
            "void oreSmelting(RecipeOutput,List,RecipeCategory,ItemLike,float,int,String)",
            "void oreBlasting(RecipeOutput,List,RecipeCategory,ItemLike,float,int,String)",
            "void oreCooking(RecipeOutput,RecipeSerializer,List,RecipeCategory,ItemLike,float,int,String,String)",
            "void netheriteSmithing(RecipeOutput,Item,RecipeCategory,Item)",
            "void trimSmithing(RecipeOutput,Item,ResourceLocation)",
            "void twoByTwoPacker(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void threeByThreePacker(RecipeOutput,RecipeCategory,ItemLike,ItemLike,String)",
            "void threeByThreePacker(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void planksFromLog(RecipeOutput,ItemLike,TagKey,int)",
            "void planksFromLogs(RecipeOutput,ItemLike,TagKey,int)",
            "void woodFromLogs(RecipeOutput,ItemLike,ItemLike)",
            "void woodenBoat(RecipeOutput,ItemLike,ItemLike)",
            "void chestBoat(RecipeOutput,ItemLike,ItemLike)",
            "void pressurePlate(RecipeOutput,ItemLike,ItemLike)",
            "void slab(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void hangingSign(RecipeOutput,ItemLike,ItemLike)",
            "void colorBlockWithDye(RecipeOutput,List,List,String)",
            "void carpet(RecipeOutput,ItemLike,ItemLike)",
            "void bedFromPlanksAndWool(RecipeOutput,ItemLike,ItemLike)",
            "void banner(RecipeOutput,ItemLike,ItemLike)",
            "void stainedGlassFromGlassAndDye(RecipeOutput,ItemLike,ItemLike)",
            "void stainedGlassPaneFromStainedGlass(RecipeOutput,ItemLike,ItemLike)",
            "void stainedGlassPaneFromGlassPaneAndDye(RecipeOutput,ItemLike,ItemLike)",
            "void coloredTerracottaFromTerracottaAndDye(RecipeOutput,ItemLike,ItemLike)",
            "void concretePowder(RecipeOutput,ItemLike,ItemLike)",
            "void candle(RecipeOutput,ItemLike,ItemLike)",
            "void wall(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void polished(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void cut(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void chiseled(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void mosaicBuilder(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void stonecutterResultFromBase(RecipeOutput,RecipeCategory,ItemLike,ItemLike)",
            "void stonecutterResultFromBase(RecipeOutput,RecipeCategory,ItemLike,ItemLike,int)",
            "void smeltingResultFromBase(RecipeOutput,ItemLike,ItemLike)",
            "void nineBlockStorageRecipes(RecipeOutput,RecipeCategory,ItemLike,RecipeCategory,ItemLike)",
            "void nineBlockStorageRecipesWithCustomPacking(RecipeOutput,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String)",
            "void nineBlockStorageRecipesRecipesWithCustomUnpacking(RecipeOutput,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String)",
            "void nineBlockStorageRecipes(RecipeOutput,RecipeCategory,ItemLike,RecipeCategory,ItemLike,String,String,String,String)",
            "void copySmithingTemplate(RecipeOutput,ItemLike,TagKey)",
            "void copySmithingTemplate(RecipeOutput,ItemLike,ItemLike)",
            "void cookRecipes(RecipeOutput,String,RecipeSerializer,int)",
            "void simpleCookingRecipe(RecipeOutput,String,RecipeSerializer,int,ItemLike,ItemLike,float)",
            "void waxRecipes(RecipeOutput)",
            "void generateRecipes(RecipeOutput,BlockFamily)",
            "Criterion insideOf(Block)",
            "Criterion has(MinMaxBounds$Ints,ItemLike)",
            "Criterion has(ItemLike)",
            "Criterion has(TagKey)",
            "Criterion inventoryTrigger(ItemPredicate$Builder[])",
            "Criterion inventoryTrigger(ItemPredicate[])",
            "ItemPredicate[] lambda$inventoryTrigger$23(int)",
            "RecipeBuilder lambda$static$8(ItemLike,ItemLike)",
            "void lambda$generateRecipes$7(BlockFamily,RecipeOutput,BlockFamily$Variant,Block)",
            "String lambda$generateRecipes$6(ItemLike)",
            "void lambda$generateRecipes$5(RecipeBuilder,BlockFamily$Variant,String)",
            "void lambda$waxRecipes$4(RecipeOutput,Block,Block)",
            "boolean lambda$colorBlockWithDye$3(Item,Item)",
            "void lambda$generateForEnabledBlockFamilies$2(RecipeOutput,BlockFamily)",
            "boolean lambda$generateForEnabledBlockFamilies$1(FeatureFlagSet,BlockFamily)",
            "CompletableFuture[] lambda$run$0(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.Player",
        "differences": {
          "added": [
            "void triggerRecipeCrafted(Recipe,List)"
          ],
          "removed": [
            "void triggerRecipeCrafted(RecipeHolder,List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.StackedContents",
        "differences": {
          "added": [
            "int getBiggestCraftableStack(Recipe,IntList)",
            "int getBiggestCraftableStack(Recipe,int,IntList)"
          ],
          "removed": [
            "int getBiggestCraftableStack(RecipeHolder,IntList)",
            "int getBiggestCraftableStack(RecipeHolder,int,IntList)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.AbstractFurnaceMenu",
        "differences": {
          "added": [
            "boolean recipeMatches(Recipe)"
          ],
          "removed": [
            "boolean recipeMatches(RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.ResultContainer",
        "differences": {
          "added": [
            "void setRecipeUsed(Recipe)",
            "Recipe getRecipeUsed()"
          ],
          "removed": [
            "void setRecipeUsed(RecipeHolder)",
            "RecipeHolder getRecipeUsed()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.SmithingMenu",
        "differences": {
          "added": [
            "IntStream lambda$findSlotToQuickMoveTo$7(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$4(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$2(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$0(ItemStack,SmithingRecipe)"
          ],
          "removed": [
            "IntStream lambda$findSlotToQuickMoveTo$7(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$4(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$2(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$0(ItemStack,RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.AbstractCookingRecipe",
        "differences": {
          "added": [
            "void <init>(RecipeType,ResourceLocation,String,CookingBookCategory,Ingredient,ItemStack,float,int)",
            "ResourceLocation getId()"
          ],
          "removed": [
            "void <init>(RecipeType,String,CookingBookCategory,Ingredient,ItemStack,float,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.BannerDuplicateRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,CraftingBookCategory)"
          ],
          "removed": [
            "void <init>(CraftingBookCategory)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.BookCloningRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,CraftingBookCategory)"
          ],
          "removed": [
            "void <init>(CraftingBookCategory)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.ShapedRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,String,CraftingBookCategory,int,int,NonNullList,ItemStack,boolean)",
            "void <init>(ResourceLocation,String,CraftingBookCategory,int,int,NonNullList,ItemStack)",
            "ResourceLocation getId()",
            "NonNullList dissolvePattern(String[],Map,int,int)",
            "String[] shrink(String[])",
            "String[] patternFromJson(JsonArray)",
            "Map keyFromJson(JsonObject)",
            "ItemStack itemStackFromJson(JsonObject)",
            "Item itemFromJson(JsonObject)",
            "JsonSyntaxException lambda$itemFromJson$2(String)"
          ],
          "removed": [
            "void <init>(String,CraftingBookCategory,int,int,NonNullList,ItemStack,boolean)",
            "void <init>(String,CraftingBookCategory,int,int,NonNullList,ItemStack)",
            "String[] shrink(List)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.realmsclient.gui.ErrorCallback",
            "XXX.realmsclient.gui.RealmsNewsManager",
            "XXX.realmsclient.gui.RealmsWorldSlotButton",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$State",
            "XXX.realmsclient.gui.package-info",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.gui.screens.RealmsBackupScreen",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsInviteScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen$Type",
            "XXX.minecraft.advancements.AdvancementList",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.minecraft.advancements.RequirementsStrategy",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StartRidingTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TagPredicate",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsingItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.client.AttackIndicatorStatus",
            "XXX.minecraft.client.Camera$NearPlane",
            "XXX.minecraft.client.ClientBrandRetriever",
            "XXX.minecraft.client.ClientRecipeBook$1",
            "XXX.minecraft.client.CommandHistory",
            "XXX.minecraft.client.DebugQueryHandler",
            "XXX.minecraft.client.GameNarrator$NarratorInitException",
            "XXX.minecraft.client.GraphicsStatus$1",
            "XXX.minecraft.client.GuiMessage$Line",
            "XXX.minecraft.client.GuiMessageTag$Icon",
            "XXX.minecraft.client.InputType",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$ChatStatus",
            "XXX.minecraft.client.Minecraft$ChatStatus$2",
            "XXX.minecraft.client.Minecraft$ChatStatus$4",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.OptionInstance",
            "XXX.minecraft.client.OptionInstance$CaptionBasedToString",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet",
            "XXX.minecraft.client.OptionInstance$Enum",
            "XXX.minecraft.client.OptionInstance$IntRangeBase",
            "XXX.minecraft.client.OptionInstance$LazyEnum",
            "XXX.minecraft.client.OptionInstance$SliderableOrCyclableValueSet",
            "XXX.minecraft.client.OptionInstance$TooltipSupplier",
            "XXX.minecraft.client.OptionInstance$UnitDouble$1",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.Options$4",
            "XXX.minecraft.client.ParticleStatus",
            "XXX.minecraft.client.PeriodicNotificationManager$Notification",
            "XXX.minecraft.client.PrioritizeChunkUpdates",
            "XXX.minecraft.client.RecipeBookCategories",
            "XXX.minecraft.client.ResourceLoadStateTracker",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadReason",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.StringSplitter$1",
            "XXX.minecraft.client.StringSplitter$LineBreakFinder",
            "XXX.minecraft.client.StringSplitter$LinePosConsumer",
            "XXX.minecraft.client.StringSplitter$WidthProvider",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.minecraft.client.User$Type",
            "XXX.client.animation.AnimationChannel$Interpolation",
            "XXX.client.animation.AnimationChannel$Target",
            "XXX.client.animation.AnimationDefinition",
            "XXX.client.animation.Keyframe",
            "XXX.animation.definitions.CamelAnimation",
            "XXX.animation.definitions.SnifferAnimation",
            "XXX.animation.definitions.package-info",
            "XXX.color.block.BlockColor",
            "XXX.color.block.BlockTintCache",
            "XXX.color.block.BlockTintCache$LatestCacheInfo",
            "XXX.color.item.ItemColor",
            "XXX.color.item.package-info",
            "XXX.client.gui.ComponentPath$Leaf",
            "XXX.client.gui.Font",
            "XXX.client.gui.Font$StringRenderOutput",
            "XXX.client.gui.Gui$HeartType",
            "XXX.client.gui.GuiGraphics$ScissorStack",
            "XXX.client.gui.MapRenderer",
            "XXX.gui.components.AbstractButton",
            "XXX.gui.components.AbstractScrollWidget",
            "XXX.gui.components.AbstractSelectionList$1",
            "XXX.gui.components.AbstractSelectionList$TrackedList",
            "XXX.gui.components.AbstractStringWidget",
            "XXX.gui.components.BossHealthOverlay",
            "XXX.gui.components.Button",
            "XXX.gui.components.Button$CreateNarration",
            "XXX.gui.components.ChatComponent",
            "XXX.gui.components.Checkbox",
            "XXX.gui.components.CommandSuggestions$SuggestionsList",
            "XXX.gui.components.ComponentRenderUtils",
            "XXX.gui.components.ContainerObjectSelectionList$1",
            "XXX.gui.components.CycleButton",
            "XXX.gui.components.CycleButton$OnValueChange",
            "XXX.gui.components.CycleButton$ValueListSupplier$1",
            "XXX.gui.components.DebugScreenOverlay",
            "XXX.gui.components.DebugScreenOverlay$AllocationRateCalculator",
            "XXX.gui.components.FittingMultiLineTextWidget",
            "XXX.gui.components.ImageButton",
            "XXX.gui.components.ImageWidget$Sprite",
            "XXX.gui.components.LerpingBossEvent",
            "XXX.gui.components.LockIconButton",
            "XXX.gui.components.LogoRenderer",
            "XXX.gui.components.MultiLineLabel",
            "XXX.gui.components.MultiLineLabel$2",
            "XXX.gui.components.MultiLineTextWidget",
            "XXX.gui.components.MultilineTextField",
            "XXX.gui.components.MultilineTextField$StringView",
            "XXX.gui.components.ObjectSelectionList$Entry",
            "XXX.gui.components.OptionsList$Entry",
            "XXX.gui.components.PlayerFaceRenderer",
            "XXX.gui.components.PlayerSkinWidget$Model",
            "XXX.gui.components.PlayerTabOverlay$HealthState",
            "XXX.gui.components.SplashRenderer",
            "XXX.gui.components.SpriteIconButton$Builder",
            "XXX.gui.components.SpriteIconButton$TextAndIcon",
            "XXX.gui.components.StringWidget",
            "XXX.gui.components.SubtitleOverlay$Subtitle",
            "XXX.gui.components.TabOrderedElement",
            "XXX.gui.components.Whence",
            "XXX.components.debugchart.AbstractDebugChart",
            "XXX.components.debugchart.FpsDebugChart",
            "XXX.components.debugchart.TpsDebugChart",
            "XXX.components.events.ContainerEventHandler",
            "XXX.components.events.package-info",
            "XXX.components.spectator.SpectatorGui",
            "XXX.components.tabs.GridLayoutTab",
            "XXX.components.tabs.TabManager",
            "XXX.components.tabs.TabNavigationBar$Builder",
            "XXX.components.toasts.AdvancementToast",
            "XXX.components.toasts.SystemToast",
            "XXX.components.toasts.Toast",
            "XXX.components.toasts.ToastComponent",
            "XXX.components.toasts.TutorialToast",
            "XXX.components.toasts.package-info",
            "XXX.gui.font.CodepointMap",
            "XXX.gui.font.FontManager",
            "XXX.gui.font.FontManager$BuilderResult",
            "XXX.gui.font.FontManager$Preparation",
            "XXX.gui.font.FontSet",
            "XXX.gui.font.FontTexture",
            "XXX.gui.font.GlyphRenderTypes",
            "XXX.gui.font.TextFieldHelper",
            "XXX.gui.font.TextFieldHelper$CursorStep",
            "XXX.font.glyphs.BakedGlyph$Effect",
            "XXX.font.glyphs.SpecialGlyphs",
            "XXX.font.glyphs.SpecialGlyphs$PixelProvider",
            "XXX.gui.font.package-info",
            "XXX.font.providers.BitmapProvider$Definition",
            "XXX.font.providers.BitmapProvider$Glyph$1",
            "XXX.font.providers.GlyphProviderDefinition$Loader",
            "XXX.font.providers.GlyphProviderType",
            "XXX.font.providers.TrueTypeGlyphProviderDefinition",
            "XXX.font.providers.UnihexProvider",
            "XXX.font.providers.UnihexProvider$Definition",
            "XXX.font.providers.UnihexProvider$Glyph",
            "XXX.font.providers.UnihexProvider$IntContents",
            "XXX.font.providers.UnihexProvider$OverrideRange",
            "XXX.font.providers.UnihexProvider$ShortContents",
            "XXX.gui.layouts.AbstractLayout",
            "XXX.gui.layouts.CommonLayouts",
            "XXX.gui.layouts.EqualSpacingLayout$1",
            "XXX.gui.layouts.EqualSpacingLayout$Orientation",
            "XXX.gui.layouts.FrameLayout$ChildContainer",
            "XXX.gui.layouts.GridLayout$CellInhabitant",
            "XXX.gui.layouts.HeaderAndFooterLayout",
            "XXX.gui.layouts.LayoutElement",
            "XXX.gui.layouts.LayoutSettings$LayoutSettingsImpl",
            "XXX.gui.layouts.LinearLayout$1",
            "XXX.gui.layouts.SpacerElement",
            "XXX.gui.narration.NarratableEntry",
            "XXX.gui.narration.NarratedElementType",
            "XXX.gui.narration.NarrationSupplier",
            "XXX.gui.narration.ScreenNarrationCollector",
            "XXX.gui.narration.ScreenNarrationCollector$EntryKey",
            "XXX.gui.narration.ScreenNarrationCollector$Output",
            "XXX.gui.navigation.CommonInputs",
            "XXX.gui.navigation.FocusNavigationEvent$ArrowNavigation",
            "XXX.gui.navigation.FocusNavigationEvent$TabNavigation",
            "XXX.gui.navigation.ScreenAxis$1",
            "XXX.gui.navigation.ScreenDirection$1",
            "XXX.gui.navigation.ScreenPosition$1",
            "XXX.gui.navigation.ScreenRectangle$1",
            "XXX.client.gui.package-info",
            "XXX.gui.screens.AccessibilityOptionsScreen",
            "XXX.gui.screens.BackupConfirmScreen",
            "XXX.gui.screens.BanNoticeScreens",
            "XXX.gui.screens.ChatScreen",
            "XXX.gui.screens.ConfirmLinkScreen",
            "XXX.gui.screens.ConnectScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList",
            "XXX.gui.screens.CreditsAndAttributionScreen",
            "XXX.gui.screens.DeathScreen",
            "XXX.gui.screens.DemoIntroScreen",
            "XXX.gui.screens.DisconnectedScreen",
            "XXX.gui.screens.ErrorScreen",
            "XXX.gui.screens.GenericDirtMessageScreen",
            "XXX.gui.screens.InBedChatScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList",
            "XXX.gui.screens.LevelLoadingScreen",
            "XXX.gui.screens.LoadingOverlay",
            "XXX.gui.screens.MenuScreens",
            "XXX.gui.screens.MouseSettingsScreen",
            "XXX.gui.screens.OnlineOptionsScreen",
            "XXX.gui.screens.OptionsSubScreen",
            "XXX.gui.screens.Overlay",
            "XXX.gui.screens.PopupScreen",
            "XXX.gui.screens.PresetFlatWorldScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList$Entry",
            "XXX.gui.screens.ReceivingLevelScreen",
            "XXX.gui.screens.Screen$DeferredTooltipRendering",
            "XXX.gui.screens.ShareToLanScreen",
            "XXX.gui.screens.SkinCustomizationScreen",
            "XXX.gui.screens.TitleScreen",
            "XXX.gui.screens.VideoSettingsScreen",
            "XXX.gui.screens.WinScreen$CreditsReader",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRowComparator",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList$MobRow",
            "XXX.screens.achievement.package-info",
            "XXX.screens.advancements.AdvancementTabType",
            "XXX.screens.advancements.AdvancementTabType$Sprites",
            "XXX.screens.advancements.AdvancementWidgetType",
            "XXX.screens.advancements.AdvancementsScreen",
            "XXX.screens.controls.ControlsScreen",
            "XXX.screens.controls.KeyBindsList$CategoryEntry",
            "XXX.screens.controls.KeyBindsList$Entry",
            "XXX.screens.controls.KeyBindsScreen",
            "XXX.screens.debug.GameModeSwitcherScreen",
            "XXX.screens.debug.GameModeSwitcherScreen$GameModeIcon",
            "XXX.screens.debug.package-info",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$1",
            "XXX.screens.inventory.AbstractFurnaceScreen",
            "XXX.screens.inventory.AnvilScreen",
            "XXX.screens.inventory.BeaconScreen$1",
            "XXX.screens.inventory.BeaconScreen$BeaconCancelButton",
            "XXX.screens.inventory.BeaconScreen$BeaconPowerButton",
            "XXX.screens.inventory.BeaconScreen$BeaconSpriteScreenButton",
            "XXX.screens.inventory.BlastFurnaceScreen",
            "XXX.screens.inventory.BookEditScreen$DisplayCache",
            "XXX.screens.inventory.BookEditScreen$Pos2i",
            "XXX.screens.inventory.BookViewScreen$1",
            "XXX.screens.inventory.BookViewScreen$WritableBookAccess",
            "XXX.screens.inventory.BrewingStandScreen",
            "XXX.screens.inventory.CommandBlockEditScreen",
            "XXX.screens.inventory.ContainerScreen",
            "XXX.screens.inventory.CreativeInventoryListener",
            "XXX.screens.inventory.CreativeModeInventoryScreen$CustomCreativeSlot",
            "XXX.screens.inventory.CreativeModeInventoryScreen$SlotWrapper",
            "XXX.screens.inventory.DispenserScreen",
            "XXX.screens.inventory.EnchantmentNames",
            "XXX.screens.inventory.FurnaceScreen",
            "XXX.screens.inventory.HangingSignEditScreen",
            "XXX.screens.inventory.HorseInventoryScreen",
            "XXX.screens.inventory.ItemCombinerScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen$1",
            "XXX.screens.inventory.LecternScreen$1",
            "XXX.screens.inventory.MenuAccess",
            "XXX.screens.inventory.MerchantScreen$TradeOfferButton",
            "XXX.screens.inventory.PageButton",
            "XXX.screens.inventory.SignEditScreen",
            "XXX.screens.inventory.SmokerScreen",
            "XXX.screens.inventory.StructureBlockEditScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$2",
            "XXX.inventory.tooltip.BelowOrAboveWidgetTooltipPositioner",
            "XXX.inventory.tooltip.ClientBundleTooltip$Texture",
            "XXX.inventory.tooltip.ClientTooltipComponent",
            "XXX.inventory.tooltip.DefaultTooltipPositioner",
            "XXX.inventory.tooltip.TooltipRenderUtil",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.SafetyScreen",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.packs.PackSelectionModel",
            "XXX.screens.packs.PackSelectionModel$EntryBase",
            "XXX.screens.packs.PackSelectionModel$UnselectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen$1",
            "XXX.screens.packs.TransferableSelectionList",
            "XXX.screens.packs.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.screens.reporting.AbstractReportScreen$DiscardReportWarningScreen",
            "XXX.screens.reporting.ChatSelectionLogFiller",
            "XXX.screens.reporting.ChatSelectionScreen",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$DividerEntry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$Heading",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry",
            "XXX.screens.reporting.NameReportScreen",
            "XXX.screens.reporting.ReportReasonSelectionScreen",
            "XXX.screens.reporting.ReportReasonSelectionScreen$ReasonSelectionList$Entry",
            "XXX.screens.reporting.package-info",
            "XXX.screens.social.PlayerEntry$1",
            "XXX.screens.social.PlayerEntry$3",
            "XXX.screens.social.SocialInteractionsPlayerList",
            "XXX.screens.social.SocialInteractionsScreen$1",
            "XXX.screens.social.SocialInteractionsScreen$Page",
            "XXX.screens.telemetry.TelemetryEventWidget",
            "XXX.screens.telemetry.TelemetryEventWidget$ContentBuilder",
            "XXX.screens.telemetry.package-info",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry",
            "XXX.screens.worldselection.CreateWorldScreen$DataPackReloadCookie",
            "XXX.screens.worldselection.CreateWorldScreen$MoreTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab$1",
            "XXX.screens.worldselection.EditGameRulesScreen",
            "XXX.screens.worldselection.EditGameRulesScreen$CategoryRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$EntryFactory",
            "XXX.screens.worldselection.EditGameRulesScreen$IntegerRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleList",
            "XXX.screens.worldselection.EditWorldScreen",
            "XXX.screens.worldselection.OptimizeWorldScreen",
            "XXX.screens.worldselection.SelectWorldScreen",
            "XXX.screens.worldselection.SwitchGrid$Builder",
            "XXX.screens.worldselection.SwitchGrid$LabeledSwitch",
            "XXX.screens.worldselection.WorldCreationContext",
            "XXX.screens.worldselection.WorldCreationContext$OptionsModifier",
            "XXX.screens.worldselection.WorldCreationUiState$SelectedGameMode",
            "XXX.screens.worldselection.WorldOpenFlows",
            "XXX.screens.worldselection.WorldSelectionList",
            "XXX.screens.worldselection.WorldSelectionList$LoadingHeader",
            "XXX.screens.worldselection.package-info",
            "XXX.gui.spectator.RootSpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenu$1",
            "XXX.gui.spectator.SpectatorMenu$ScrollMenuItem",
            "XXX.gui.spectator.SpectatorMenuItem",
            "XXX.spectator.categories.SpectatorPage",
            "XXX.spectator.categories.TeleportToTeamMenuCategory",
            "XXX.spectator.categories.package-info",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.Main$3",
            "XXX.client.main.package-info",
            "XXX.client.model.AgeableHierarchicalModel",
            "XXX.client.model.AllayModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChestRaftModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColorableAgeableListModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.FrogModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.model.HierarchicalModel",
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.PandaModel",
            "XXX.client.model.ParrotModel$1",
            "XXX.client.model.PhantomModel",
            "XXX.client.model.PiglinHeadModel",
            "XXX.client.model.PlayerModel",
            "XXX.client.model.PufferfishBigModel",
            "XXX.client.model.PufferfishSmallModel",
            "XXX.client.model.RabbitModel",
            "XXX.client.model.RavagerModel",
            "XXX.client.model.SheepFurModel",
            "XXX.client.model.ShieldModel",
            "XXX.client.model.ShulkerModel",
            "XXX.client.model.SkeletonModel",
            "XXX.client.model.SkullModelBase",
            "XXX.client.model.SnifferModel",
            "XXX.client.model.SpiderModel",
            "XXX.client.model.StriderModel",
            "XXX.client.model.TridentModel",
            "XXX.client.model.TropicalFishModelB",
            "XXX.client.model.VexModel",
            "XXX.client.model.VillagerModel",
            "XXX.client.model.WaterPatchModel",
            "XXX.client.model.WitherBossModel",
            "XXX.client.model.ZombieModel",
            "XXX.model.dragon.DragonHeadModel",
            "XXX.model.geom.EntityModelSet",
            "XXX.model.geom.ModelLayerLocation",
            "XXX.model.geom.ModelPart",
            "XXX.model.geom.ModelPart$Polygon",
            "XXX.model.geom.ModelPart$Visitor",
            "XXX.model.geom.PartPose",
            "XXX.geom.builders.CubeDeformation",
            "XXX.geom.builders.LayerDefinition",
            "XXX.geom.builders.MeshDefinition",
            "XXX.geom.builders.UVPair",
            "XXX.model.geom.package-info",
            "XXX.client.multiplayer.AccountProfileKeyPairManager",
            "XXX.client.multiplayer.ClientAdvancements",
            "XXX.client.multiplayer.ClientChunkCache",
            "XXX.client.multiplayer.ClientCommonPacketListenerImpl",
            "XXX.client.multiplayer.ClientConfigurationPacketListenerImpl",
            "XXX.client.multiplayer.ClientLevel",
            "XXX.client.multiplayer.ClientLevel$ClientLevelData",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientRegistryLayer",
            "XXX.client.multiplayer.ClientSuggestionProvider$1",
            "XXX.client.multiplayer.LegacyServerPinger",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ProfileKeyPairManager$1",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.multiplayer.chat.ChatListener",
            "XXX.multiplayer.chat.ChatLog",
            "XXX.multiplayer.chat.ChatTrustLevel$1",
            "XXX.multiplayer.chat.LoggedChatEvent$Type",
            "XXX.multiplayer.chat.LoggedChatMessage$Player",
            "XXX.multiplayer.chat.package-info",
            "XXX.chat.report.AbuseReportSender$1",
            "XXX.chat.report.AbuseReportSender$Services",
            "XXX.chat.report.ChatReport",
            "XXX.chat.report.ChatReportContextBuilder",
            "XXX.chat.report.ChatReportContextBuilder$Handler",
            "XXX.chat.report.NameReport$Builder",
            "XXX.chat.report.Report$Builder",
            "XXX.chat.report.Report$Result",
            "XXX.chat.report.ReportEnvironment$Server",
            "XXX.chat.report.ReportEnvironment$Server$ThirdParty",
            "XXX.chat.report.ReportType",
            "XXX.chat.report.SkinReport",
            "XXX.chat.report.package-info",
            "XXX.multiplayer.prediction.BlockStatePredictionHandler",
            "XXX.multiplayer.prediction.PredictiveAction",
            "XXX.multiplayer.resolver.AddressCheck",
            "XXX.multiplayer.resolver.ResolvedServerAddress",
            "XXX.multiplayer.resolver.ServerAddress",
            "XXX.multiplayer.resolver.ServerNameResolver",
            "XXX.multiplayer.resolver.package-info",
            "XXX.client.particle.AshParticle",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.BaseAshSmokeParticle",
            "XXX.client.particle.BlockMarker$Provider",
            "XXX.client.particle.BreakingItemParticle$Provider",
            "XXX.client.particle.BreakingItemParticle$SnowballProvider",
            "XXX.client.particle.BubbleColumnUpParticle$Provider",
            "XXX.client.particle.BubbleParticle$Provider",
            "XXX.client.particle.BubblePopParticle$Provider",
            "XXX.client.particle.CampfireSmokeParticle$CosyProvider",
            "XXX.client.particle.CherryParticle",
            "XXX.client.particle.CritParticle$DamageIndicatorProvider",
            "XXX.client.particle.CritParticle$Provider",
            "XXX.client.particle.DragonBreathParticle$Provider",
            "XXX.client.particle.DripParticle$CoolingDripHangParticle",
            "XXX.client.particle.DripParticle$DripLandParticle",
            "XXX.client.particle.DripParticle$FallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyFallAndLandParticle",
            "XXX.client.particle.DustColorTransitionParticle$Provider",
            "XXX.client.particle.DustParticle$Provider",
            "XXX.client.particle.EnchantmentTableParticle",
            "XXX.client.particle.EnchantmentTableParticle$Provider",
            "XXX.client.particle.EndRodParticle$Provider",
            "XXX.client.particle.ExplodeParticle$Provider",
            "XXX.client.particle.FallingDustParticle$Provider",
            "XXX.client.particle.FireworkParticles$1",
            "XXX.client.particle.FireworkParticles$OverlayParticle",
            "XXX.client.particle.FireworkParticles$SparkProvider",
            "XXX.client.particle.FlameParticle",
            "XXX.client.particle.FlameParticle$SmallFlameProvider",
            "XXX.client.particle.GlowParticle$ElectricSparkProvider",
            "XXX.client.particle.GlowParticle$ScrapeProvider",
            "XXX.client.particle.GlowParticle$WaxOnProvider",
            "XXX.client.particle.HeartParticle$AngryVillagerProvider",
            "XXX.client.particle.HugeExplosionParticle",
            "XXX.client.particle.HugeExplosionSeedParticle",
            "XXX.client.particle.ItemPickupParticle",
            "XXX.client.particle.LargeSmokeParticle$Provider",
            "XXX.client.particle.LavaParticle$Provider",
            "XXX.client.particle.MobAppearanceParticle$Provider",
            "XXX.client.particle.NoteParticle",
            "XXX.client.particle.Particle",
            "XXX.client.particle.ParticleEngine",
            "XXX.client.particle.ParticleEngine$MutableSpriteSet",
            "XXX.client.particle.ParticleProvider",
            "XXX.client.particle.ParticleRenderType",
            "XXX.client.particle.ParticleRenderType$2",
            "XXX.client.particle.ParticleRenderType$4",
            "XXX.client.particle.ParticleRenderType$6",
            "XXX.client.particle.PlayerCloudParticle$Provider",
            "XXX.client.particle.PortalParticle",
            "XXX.client.particle.ReversePortalParticle",
            "XXX.client.particle.RisingParticle",
            "XXX.client.particle.SculkChargeParticle$Provider",
            "XXX.client.particle.SculkChargePopParticle$Provider",
            "XXX.client.particle.ShriekParticle$Provider",
            "XXX.client.particle.SingleQuadParticle",
            "XXX.client.particle.SmokeParticle$Provider",
            "XXX.client.particle.SnowflakeParticle$Provider",
            "XXX.client.particle.SonicBoomParticle$Provider",
            "XXX.client.particle.SoulParticle$EmissiveProvider",
            "XXX.client.particle.SpellParticle",
            "XXX.client.particle.SpellParticle$InstantProvider",
            "XXX.client.particle.SpellParticle$Provider",
            "XXX.client.particle.SpitParticle",
            "XXX.client.particle.SplashParticle",
            "XXX.client.particle.SpriteSet",
            "XXX.client.particle.SquidInkParticle$GlowInkProvider",
            "XXX.client.particle.SuspendedParticle",
            "XXX.client.particle.SuspendedParticle$SporeBlossomAirProvider",
            "XXX.client.particle.SuspendedParticle$UnderwaterProvider",
            "XXX.client.particle.SuspendedTownParticle",
            "XXX.client.particle.SuspendedTownParticle$DolphinSpeedProvider",
            "XXX.client.particle.SuspendedTownParticle$HappyVillagerProvider",
            "XXX.client.particle.TerrainParticle",
            "XXX.client.particle.TextureSheetParticle",
            "XXX.client.particle.TotemParticle$Provider",
            "XXX.client.particle.VibrationSignalParticle",
            "XXX.client.particle.WakeParticle",
            "XXX.client.particle.WaterCurrentDownParticle",
            "XXX.client.particle.WaterDropParticle",
            "XXX.client.particle.WhiteAshParticle",
            "XXX.client.particle.package-info",
            "XXX.client.player.Input",
            "XXX.client.player.LocalPlayer",
            "XXX.player.inventory.Hotbar",
            "XXX.client.player.package-info",
            "XXX.client.profiling.package-info",
            "XXX.client.quickplay.QuickPlayLog",
            "XXX.client.quickplay.QuickPlayLog$QuickPlayEntry",
            "XXX.client.quickplay.QuickPlayLog$Type",
            "XXX.client.renderer.BiomeColors",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.DimensionSpecialEffects$EndEffects",
            "XXX.client.renderer.DimensionSpecialEffects$OverworldEffects",
            "XXX.client.renderer.EffectInstance",
            "XXX.client.renderer.FaceInfo$Constants",
            "XXX.client.renderer.FogRenderer",
            "XXX.client.renderer.FogRenderer$DarknessFogFunction",
            "XXX.client.renderer.FogRenderer$FogMode",
            "XXX.client.renderer.GameRenderer",
            "XXX.client.renderer.GameRenderer$ResourceCache",
            "XXX.client.renderer.GpuWarnlistManager$Preparations",
            "XXX.client.renderer.ItemInHandRenderer",
            "XXX.client.renderer.ItemInHandRenderer$HandRenderSelection",
            "XXX.client.renderer.LevelRenderer",
            "XXX.client.renderer.LightTexture",
            "XXX.client.renderer.MultiBufferSource$BufferSource",
            "XXX.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
            "XXX.client.renderer.PostChain",
            "XXX.client.renderer.Rect2i",
            "XXX.client.renderer.RenderStateShard",
            "XXX.client.renderer.RenderStateShard$ColorLogicStateShard",
            "XXX.client.renderer.RenderStateShard$DepthTestStateShard",
            "XXX.client.renderer.RenderStateShard$LayeringStateShard",
            "XXX.client.renderer.RenderStateShard$LineStateShard",
            "XXX.client.renderer.RenderStateShard$MultiTextureStateShard$Builder",
            "XXX.client.renderer.RenderStateShard$OutputStateShard",
            "XXX.client.renderer.RenderStateShard$ShaderStateShard",
            "XXX.client.renderer.RenderStateShard$TexturingStateShard",
            "XXX.client.renderer.RenderStateShard$WriteMaskStateShard",
            "XXX.client.renderer.RenderType$CompositeRenderType",
            "XXX.client.renderer.RenderType$CompositeState$CompositeStateBuilder",
            "XXX.client.renderer.RunningTrimmedMean",
            "XXX.client.renderer.SectionBufferBuilderPack",
            "XXX.client.renderer.SectionOcclusionGraph$GraphEvents",
            "XXX.client.renderer.SectionOcclusionGraph$GraphStorage",
            "XXX.client.renderer.SectionOcclusionGraph$SectionToNodeMap",
            "XXX.client.renderer.ShaderInstance$1",
            "XXX.client.renderer.Sheets$1",
            "XXX.client.renderer.ViewArea",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.BlockRenderDispatcher$1",
            "XXX.renderer.block.LiquidBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionFace",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$1",
            "XXX.block.model.BlockElementFace",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockFaceUV$Deserializer",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModel$LoopException",
            "XXX.block.model.BlockModelDefinition$Context",
            "XXX.block.model.BlockModelDefinition$MissingVariantException",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$1",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemOverride$Deserializer",
            "XXX.block.model.ItemOverrides",
            "XXX.block.model.ItemOverrides$PropertyMatcher",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.MultiVariant",
            "XXX.block.model.Variant",
            "XXX.model.multipart.AndCondition",
            "XXX.model.multipart.KeyValueCondition",
            "XXX.model.multipart.MultiPart$Deserializer",
            "XXX.model.multipart.Selector",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.blockentity.BeaconRenderer",
            "XXX.renderer.blockentity.BellRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderer",
            "XXX.renderer.blockentity.BlockEntityRendererProvider$Context",
            "XXX.renderer.blockentity.BrightnessCombiner",
            "XXX.renderer.blockentity.BrushableBlockRenderer$1",
            "XXX.renderer.blockentity.ChestRenderer",
            "XXX.renderer.blockentity.DecoratedPotRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer",
            "XXX.renderer.blockentity.LecternRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer",
            "XXX.renderer.blockentity.SignRenderer$SignModel",
            "XXX.renderer.blockentity.SpawnerRenderer",
            "XXX.renderer.blockentity.StructureBlockRenderer$1",
            "XXX.renderer.blockentity.TheEndPortalRenderer",
            "XXX.renderer.chunk.RenderChunk",
            "XXX.renderer.chunk.RenderRegionCache",
            "XXX.renderer.chunk.SectionRenderDispatcher",
            "XXX.renderer.chunk.SectionRenderDispatcher$CompiledSection$1",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$CompileTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$RebuildTask$CompileResults",
            "XXX.renderer.chunk.SectionRenderDispatcher$SectionTaskResult",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$HiveDebugInfo",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedGameEvent",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.LightSectionDebugRenderer$1",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AllayRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.CamelRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.DisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$BlockDisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$TextDisplayRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EntityRendererProvider",
            "XXX.renderer.entity.EntityRenderers",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GlowSquidRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.ParrotRenderer$1",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RabbitRenderer$1",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnifferRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TropicalFishRenderer$1",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WardenRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZoglinRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HorseMarkingLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WardenEmissiveLayer$AlphaFunction",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.renderer.item.CompassItemPropertyFunction",
            "XXX.renderer.item.CompassItemPropertyFunction$CompassWobble",
            "XXX.renderer.item.ItemProperties$1",
            "XXX.renderer.item.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.SpriteContents",
            "XXX.renderer.texture.SpriteContents$FrameInfo",
            "XXX.renderer.texture.SpriteContents$Ticker",
            "XXX.renderer.texture.SpriteLoader$Preparations",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureManager",
            "XXX.texture.atlas.SpriteResourceLoader",
            "XXX.texture.atlas.SpriteSource$Output",
            "XXX.texture.atlas.SpriteSourceList",
            "XXX.texture.atlas.SpriteSourceType",
            "XXX.texture.atlas.package-info",
            "XXX.atlas.sources.LazyLoadedImage",
            "XXX.atlas.sources.PalettedPermutations$PalettedSpriteSupplier",
            "XXX.atlas.sources.SourceFilter",
            "XXX.atlas.sources.Unstitcher$Region",
            "XXX.atlas.sources.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.DownloadedPackSource",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.PlayerSkin$Model",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SkinManager$CacheKey",
            "XXX.client.resources.SkinManager$TextureInfo",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.FormattedBidiReorder",
            "XXX.resources.language.LanguageInfo",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSection$FrameOutput",
            "XXX.metadata.animation.FrameSize",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.gui.GuiSpriteScaling",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice$Border",
            "XXX.metadata.gui.GuiSpriteScaling$Tile",
            "XXX.metadata.gui.package-info",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.AtlasSet$AtlasEntry",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBaker",
            "XXX.resources.model.ModelBakery$BakedCacheKey",
            "XXX.resources.model.ModelBakery$LoadedJson",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelManager$ReloadState",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.package-info",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.FullTextSearchTree",
            "XXX.client.searchtree.IntersectionIterator",
            "XXX.client.searchtree.PlainTextSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$2",
            "XXX.client.searchtree.SearchRegistry$Key",
            "XXX.client.searchtree.SearchRegistry$TreeEntry",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.telemetry.ClientTelemetryManager",
            "XXX.client.telemetry.TelemetryEventLog",
            "XXX.client.telemetry.TelemetryEventSender",
            "XXX.client.telemetry.TelemetryEventType$Builder",
            "XXX.client.telemetry.TelemetryProperty",
            "XXX.client.telemetry.TelemetryProperty$GameMode",
            "XXX.client.telemetry.TelemetryPropertyMap",
            "XXX.client.telemetry.TelemetryPropertyMap$Builder",
            "XXX.telemetry.events.AggregatedTelemetryEvent",
            "XXX.telemetry.events.GameLoadTimesEvent$Measurement",
            "XXX.telemetry.events.WorldLoadEvent",
            "XXX.telemetry.events.WorldLoadTimesEvent",
            "XXX.telemetry.events.package-info",
            "XXX.client.tutorial.BundleTutorial",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.Tutorial$TimedToast",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandBuildContext$2$1",
            "XXX.minecraft.commands.CommandBuildContext$Configurable",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandFunction$MacroEntry",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$1$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$TagResult",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Delegate",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$CompositeOwner",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$NetworkedRegistryData",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$16",
            "XXX.core.dispenser.DispenseItemBehavior$18",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$21",
            "XXX.core.dispenser.DispenseItemBehavior$23",
            "XXX.core.dispenser.DispenseItemBehavior$25",
            "XXX.core.dispenser.DispenseItemBehavior$27",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustColorTransitionOptions$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SculkChargeParticleOptions",
            "XXX.core.particles.ShriekParticleOption",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$1",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$BookSlotModelCacheKey",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ItemModelGenerators$TrimModelData",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplate$JsonFactory",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.CraftingRecipeBuilder$1",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.CatVariantTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.VanillaItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.AncientCityStructurePools",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.BootstapContext",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.NoiseData",
            "XXX.data.worldgen.PlainVillagePools",
            "XXX.data.worldgen.ProcessorLists",
            "XXX.data.worldgen.SnowyVillagePools",
            "XXX.data.worldgen.Structures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.data.worldgen.TrailRuinsStructurePools",
            "XXX.worldgen.biome.BiomeData",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.gametest.framework.AfterBatch",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestHelper$3",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.ConnectionProtocol$CodecData",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.FriendlyByteBuf$1",
            "XXX.minecraft.network.FriendlyByteBuf$Writer",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$1",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ItemStackInfo",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.LiteralContents",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$2",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.common.ClientboundCustomPayloadPacket",
            "XXX.protocol.common.ClientboundKeepAlivePacket",
            "XXX.protocol.common.ClientboundResourcePackPacket",
            "XXX.protocol.common.ServerCommonPacketListener",
            "XXX.protocol.common.ServerboundKeepAlivePacket",
            "XXX.protocol.common.ServerboundResourcePackPacket",
            "XXX.common.custom.BeeDebugPayload",
            "XXX.common.custom.BrainDebugPayload",
            "XXX.common.custom.BrandPayload",
            "XXX.common.custom.DiscardedPayload",
            "XXX.common.custom.GameEventListenerDebugPayload",
            "XXX.common.custom.GameTestClearMarkersDebugPayload",
            "XXX.common.custom.GoalDebugPayload$DebugGoal",
            "XXX.common.custom.HiveDebugPayload$HiveInfo",
            "XXX.common.custom.PathfindingDebugPayload",
            "XXX.common.custom.PoiRemovedDebugPayload",
            "XXX.common.custom.RaidsDebugPayload",
            "XXX.common.custom.StructuresDebugPayload$PieceInfo",
            "XXX.common.custom.WorldGenAttemptDebugPayload",
            "XXX.protocol.common.package-info",
            "XXX.protocol.configuration.ClientboundFinishConfigurationPacket",
            "XXX.protocol.configuration.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.configuration.ServerboundFinishConfigurationPacket",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBatchStartPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$ArgumentNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$LiteralNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeStub",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket",
            "XXX.protocol.game.ClientboundDamageEventPacket",
            "XXX.protocol.game.ClientboundDisguisedChatPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundInitializeBorderPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
            "XXX.protocol.game.ClientboundLevelChunkWithLightPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacketData",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerChatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEnterPacket",
            "XXX.protocol.game.ClientboundPlayerInfoRemovePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerPingPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundChunkBatchReceivedPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$1",
            "XXX.protocol.game.ServerboundInteractPacket$ActionType",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAction",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMovePlayerPacket$StatusOnly",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ClientIntent$1",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.ServerboundLoginAcknowledgedPacket",
            "XXX.login.custom.CustomQueryPayload",
            "XXX.login.custom.DiscardedQueryPayload",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.HolderSetCodec",
            "XXX.minecraft.resources.RegistryDataLoader$1",
            "XXX.minecraft.resources.RegistryDataLoader$RegistryData",
            "XXX.minecraft.resources.RegistryFixedCodec",
            "XXX.minecraft.resources.RegistryOps$1",
            "XXX.minecraft.resources.RegistryOps$RegistryInfo",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerInfo",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.chase.ChaseClient$TeleportTarget",
            "XXX.server.chase.ChaseServer$PlayerPosition",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ChaseCommand",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$CommandFunction",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugCommand$Tracer",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillBiomeCommand",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.JfrCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PerfCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ResetChunksCommand",
            "XXX.server.commands.RideCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpawnArmorTrimsCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WardenSpawnTrackerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties$WorldDimensionData",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkLevel$1",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.ChunkTrackingView$1",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FullChunkStatus",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$ChunkAndHolder",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel$EntityCallbacks",
            "XXX.server.level.ServerPlayer$1",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenRegion",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.ConfigurationTask",
            "XXX.server.network.FilteredText",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.PlayerChunkSender",
            "XXX.server.network.ServerConfigurationPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.TextFilter$1",
            "XXX.server.network.TextFilterClient$IgnoreStrategy",
            "XXX.server.network.TextFilterClient$MessageEncoder",
            "XXX.server.network.TextFilterClient$RequestFailedException",
            "XXX.network.config.ServerResourcePackConfigurationTask",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.CompositePackResources",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.FilePackResources$SharedZipFileAccess",
            "XXX.server.packs.OverlayMetadataSection$OverlayEntry",
            "XXX.server.packs.PackResources$ResourceOutput",
            "XXX.server.packs.PathPackResources",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.linkfs.DummyFileAttributes",
            "XXX.packs.linkfs.LinkFSPath",
            "XXX.packs.linkfs.LinkFSPath$2",
            "XXX.packs.linkfs.LinkFSProvider",
            "XXX.packs.linkfs.LinkFSProvider$2",
            "XXX.packs.linkfs.LinkFileSystem$Builder",
            "XXX.packs.linkfs.PathContents",
            "XXX.packs.linkfs.PathContents$2",
            "XXX.packs.linkfs.PathContents$FileContents",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.packs.metadata.MetadataSectionType$1",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.BuiltInPackSource$1",
            "XXX.packs.repository.FolderRepositorySource$FolderPackDetector",
            "XXX.packs.repository.Pack$Info",
            "XXX.packs.repository.Pack$ResourcesSupplier",
            "XXX.packs.repository.PackDetector",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.FallbackResourceManager$EntryStack",
            "XXX.packs.resources.FallbackResourceManager$PackEntry",
            "XXX.packs.resources.IoSupplier",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.ResourceMetadata$1",
            "XXX.packs.resources.ResourceMetadata$Builder",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BiomeTags",
            "XXX.minecraft.tags.CatVariantTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.InstrumentTags",
            "XXX.minecraft.tags.PaintingVariantTags",
            "XXX.minecraft.tags.StructureTags",
            "XXX.minecraft.tags.TagEntry",
            "XXX.minecraft.tags.TagFile",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagLoader$EntryWithSource",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.TagNetworkSerialization",
            "XXX.minecraft.tags.TagNetworkSerialization$TagOutput",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.AbortableIterationConsumer$Continuation",
            "XXX.minecraft.util.ArrayListDeque$DescendingIterator",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$1",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$RecursiveCodec",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.DecoratedPotFieldRenameFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityBrushableBlockFieldsRenameFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityGoatMissingStateFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.FeatureFlagRemoveFix",
            "XXX.datafix.fixes.FilteredSignsFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRemoveBlockEntityTagFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NamespacedTypeRenameFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAccessibilityOnboardFix",
            "XXX.datafix.fixes.OptionsAmbientOcclusionFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.PoiTypeRenameFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemapChunkStatusFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsCounterFix$StatType",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.StructureSettingsFlattenFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix$Conversion",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VariantRenameFix",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WeaponSmithChestLootTableFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V3076",
            "XXX.datafix.schemas.V3081",
            "XXX.datafix.schemas.V3083",
            "XXX.datafix.schemas.V3203",
            "XXX.datafix.schemas.V3325",
            "XXX.datafix.schemas.V3327",
            "XXX.datafix.schemas.V3438",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.RandomSequence",
            "XXX.minecraft.world.RandomSequences$DirtyMarkingRandomSource",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageEffects",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.DamageSources",
            "XXX.world.damagesource.DamageTypes",
            "XXX.world.damagesource.FallLocation",
            "XXX.world.effect.AbsorptionMobEffect",
            "XXX.world.effect.BadOmenMobEffect",
            "XXX.world.effect.HungerMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectInstance$FactorData",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.RegenerationMobEffect",
            "XXX.world.effect.WitherMobEffect",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AnimationState",
            "XXX.world.entity.Attackable",
            "XXX.world.entity.Display$1",
            "XXX.world.entity.Display$BlockDisplay",
            "XXX.world.entity.Display$ColorInterpolator",
            "XXX.world.entity.Display$GenericInterpolator",
            "XXX.world.entity.Display$ItemDisplay",
            "XXX.world.entity.Display$ItemDisplay$ItemRenderState",
            "XXX.world.entity.Display$LinearIntInterpolator",
            "XXX.world.entity.Display$RenderState",
            "XXX.world.entity.Display$TextDisplay$Align",
            "XXX.world.entity.Display$TextDisplay$CachedLine",
            "XXX.world.entity.Display$TextDisplay$TextRenderState",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.TraceableEntity",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.CatVariant",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.FrogVariant",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Parrot$Variant",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Rabbit$Variant",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.TropicalFish$Variant",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.entity.animal.Wolf$WolfPanicGoal",
            "XXX.animal.allay.Allay$JukeboxListener",
            "XXX.animal.allay.AllayAi",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.camel.Camel$CamelBodyRotationControl",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.Level$ExplosionInteraction",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SignalGetter",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldDataConfiguration",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeResolver",
            "XXX.level.biome.BiomeSources",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$1",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$3",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.Climate$DistanceMetric",
            "XXX.level.biome.Climate$ParameterList",
            "XXX.level.biome.Climate$RTree",
            "XXX.level.biome.Climate$RTree$Node",
            "XXX.level.biome.Climate$Sampler",
            "XXX.level.biome.Climate$SpawnFinder$Result",
            "XXX.level.biome.FeatureSorter",
            "XXX.level.biome.FeatureSorter$StepFeatureData",
            "XXX.level.biome.MobSpawnSettings",
            "XXX.level.biome.MobSpawnSettings$MobSpawnCost",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$2",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterLists",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractCauldronBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AmethystBlock",
            "XXX.level.block.AmethystClusterBlock$1",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BigDripleafBlock",
            "XXX.level.block.BigDripleafStemBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.Blocks",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BuddingAmethystBlock",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CalibratedSculkSensorBlock",
            "XXX.level.block.CandleBlock",
            "XXX.level.block.CarpetBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.CaveVinesBlock",
            "XXX.level.block.CeilingHangingSignBlock",
            "XXX.level.block.ChainBlock$1",
            "XXX.level.block.CherryLeavesBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChiseledBookShelfBlock$1",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DecoratedPotBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.EquipableCarvedPumpkinBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlassBlock",
            "XXX.level.block.GlowLichenBlock",
            "XXX.level.block.GravelBlock",
            "XXX.level.block.GrindstoneBlock$1",
            "XXX.level.block.GrowingPlantBodyBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.InfestedRotatedPillarBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.LanternBlock",
            "XXX.level.block.LayeredCauldronBlock",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LightningRodBlock",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.MangrovePropaguleBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MudBlock",
            "XXX.level.block.MultifaceSpreader",
            "XXX.level.block.MultifaceSpreader$SpreadConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPredicate",
            "XXX.level.block.MultifaceSpreader$SpreadType$1",
            "XXX.level.block.MultifaceSpreader$SpreadType$3",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.PiglinWallSkullBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PitcherCropBlock$PosAndState",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PointedDripstoneBlock$FluidInfo",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SculkBehaviour$1",
            "XXX.level.block.SculkCatalystBlock",
            "XXX.level.block.SculkShriekerBlock",
            "XXX.level.block.SculkSpreader$ChargeCursor",
            "XXX.level.block.SculkVeinBlock$SculkVeinSpreaderConfig",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnifferEggBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.SupportType$1",
            "XXX.level.block.SupportType$3",
            "XXX.level.block.SuspiciousEffectHolder$EffectEntry",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrassBlock",
            "XXX.level.block.TintedGlassBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVinesBlock",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallHangingSignBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeatheringCopper$WeatherState",
            "XXX.level.block.WeatheringCopperSlabBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlantBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BannerPatterns",
            "XXX.block.entity.BarrelBlockEntity$1",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BellBlockEntity$ResonationEndAction",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.ChestBlockEntity$1",
            "XXX.block.entity.ChiseledBookShelfBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.ContainerOpenersCounter",
            "XXX.block.entity.DecoratedPotBlockEntity",
            "XXX.block.entity.DecoratedPotPatterns",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.SculkCatalystBlockEntity",
            "XXX.block.entity.SculkSensorBlockEntity",
            "XXX.block.entity.SculkShriekerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SignText",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.MangroveTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.BlockBehaviour",
            "XXX.block.state.BlockBehaviour$BlockStateBase",
            "XXX.block.state.BlockBehaviour$OffsetFunction",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.StateHolder$1",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.DripstoneThickness",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.SculkSensorPhase",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.Tilt",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.CarvingMask$Mask",
            "XXX.level.chunk.ChunkAccess$TicksToSave",
            "XXX.level.chunk.ChunkGeneratorStructureState",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$1",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LevelChunk$RebindableTickingBlockEntityWrapper",
            "XXX.level.chunk.LevelChunkSection$1BlockCounter",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.MissingPaletteEntryException",
            "XXX.level.chunk.Palette$Factory",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.PalettedContainer$Strategy",
            "XXX.level.chunk.PalettedContainer$Strategy$2",
            "XXX.level.chunk.PalettedContainerRO$PackedData",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.StructureAccess",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkScanAccess",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.BuiltinDimensionTypes",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.LevelStem",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.EndDragonFight$Data",
            "XXX.level.dimension.package-info",
            "XXX.level.entity.ChunkStatusUpdateListener",
            "XXX.level.entity.EntityInLevelCallback",
            "XXX.level.entity.EntityLookup",
            "XXX.level.entity.EntitySection",
            "XXX.level.entity.EntityTickList",
            "XXX.level.entity.EntityTypeTest$1",
            "XXX.level.entity.LevelEntityGetter",
            "XXX.level.entity.PersistentEntitySectionManager",
            "XXX.level.entity.PersistentEntitySectionManager$ChunkLoadStatus",
            "XXX.level.entity.TransientEntitySectionManager$Callback",
            "XXX.level.entity.package-info",
            "XXX.level.gameevent.BlockPositionSource$Type",
            "XXX.level.gameevent.EntityPositionSource",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry",
            "XXX.level.gameevent.GameEvent",
            "XXX.level.gameevent.GameEvent$ListenerInfo",
            "XXX.level.gameevent.GameEventListener",
            "XXX.level.gameevent.GameEventListener$Holder",
            "XXX.level.gameevent.GameEventListenerRegistry$1",
            "XXX.level.gameevent.PositionSource",
            "XXX.level.gameevent.package-info",
            "XXX.gameevent.vibrations.VibrationSelector",
            "XXX.gameevent.vibrations.VibrationSystem$Data",
            "XXX.gameevent.vibrations.VibrationSystem$Ticker",
            "XXX.gameevent.vibrations.package-info",
            "XXX.level.levelgen.Aquifer$1",
            "XXX.level.levelgen.Aquifer$FluidStatus",
            "XXX.level.levelgen.Beardifier",
            "XXX.level.levelgen.Beardifier$Rigid",
            "XXX.level.levelgen.BelowZeroRetrogen$1",
            "XXX.level.levelgen.Column",
            "XXX.level.levelgen.Column$Range",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.DensityFunction",
            "XXX.level.levelgen.DensityFunction$FunctionContext",
            "XXX.level.levelgen.DensityFunction$SimpleFunction",
            "XXX.level.levelgen.DensityFunction$Visitor",
            "XXX.level.levelgen.DensityFunctions$1",
            "XXX.level.levelgen.DensityFunctions$BeardifierMarker",
            "XXX.level.levelgen.DensityFunctions$BlendAlpha",
            "XXX.level.levelgen.DensityFunctions$BlendOffset",
            "XXX.level.levelgen.DensityFunctions$Constant",
            "XXX.level.levelgen.DensityFunctions$HolderHolder",
            "XXX.level.levelgen.DensityFunctions$Mapped$Type",
            "XXX.level.levelgen.DensityFunctions$Marker$Type",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd",
            "XXX.level.levelgen.DensityFunctions$Noise",
            "XXX.level.levelgen.DensityFunctions$RangeChoice",
            "XXX.level.levelgen.DensityFunctions$ShiftA",
            "XXX.level.levelgen.DensityFunctions$ShiftNoise",
            "XXX.level.levelgen.DensityFunctions$Spline",
            "XXX.level.levelgen.DensityFunctions$Spline$Point",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler",
            "XXX.level.levelgen.DensityFunctions$YClampedGradient",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.GeodeCrackSettings",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.LegacyRandomSource$LegacyPositionalRandomFactory",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$1",
            "XXX.level.levelgen.NoiseChunk$BlendAlpha",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$CacheAllInCell",
            "XXX.level.levelgen.NoiseChunk$FlatCache",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseRouter",
            "XXX.level.levelgen.NoiseRouterData$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.OreVeinifier$VeinType",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomState",
            "XXX.level.levelgen.RandomState$1NoiseWiringHelper",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.ThreadSafeLegacyRandomSource",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldDimensions$1Entry",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldOptions",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.Blender$BlendingOutput",
            "XXX.levelgen.blending.Blender$DistanceGetter",
            "XXX.levelgen.blending.BlendingData$BiomeConsumer",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.AllOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicate",
            "XXX.levelgen.blockpredicates.CombiningPredicate",
            "XXX.levelgen.blockpredicates.InsideWorldBoundsPredicate",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.blockpredicates.TrueBlockPredicate",
            "XXX.levelgen.blockpredicates.package-info",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.carver.WorldCarver$CarveSkipChecker",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BasaltColumnsFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DripstoneClusterFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FeatureCountTracker",
            "XXX.levelgen.feature.FeatureCountTracker$FeatureData",
            "XXX.levelgen.feature.FeaturePlaceContext",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GeodeFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungusFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.LakeFeature$Configuration",
            "XXX.levelgen.feature.LargeDripstoneFeature$LargeDripstone",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.ScatteredOreFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.TreeFeature$1",
            "XXX.levelgen.feature.UnderwaterMagmaFeature",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterloggedVegetationPatchFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.BlockColumnConfiguration$Layer",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.CountConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.GeodeConfiguration",
            "XXX.feature.configurations.LargeDripstoneConfiguration",
            "XXX.feature.configurations.MultifaceGrowthConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration$TargetBlockState",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.RootSystemConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.TwistingVinesConfig",
            "XXX.feature.configurations.VegetationPatchConfiguration",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.CherryFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.rootplacers.AboveRootPlacement",
            "XXX.feature.rootplacers.MangroveRootPlacer",
            "XXX.feature.rootplacers.RootPlacerType",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.DualNoiseProvider",
            "XXX.feature.stateproviders.NoiseProvider",
            "XXX.feature.stateproviders.RandomizedIntStateProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.treedecorators.AttachedToLeavesDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.feature.trunkplacers.CherryTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer",
            "XXX.feature.trunkplacers.ForkingTrunkPlacer",
            "XXX.feature.trunkplacers.MegaJungleTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacer",
            "XXX.feature.trunkplacers.UpwardsBranchingTrunkPlacer",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.TrapezoidHeight",
            "XXX.levelgen.heightproviders.VeryBiasedToBottomHeight",
            "XXX.levelgen.heightproviders.package-info",
            "XXX.levelgen.material.WorldGenMaterialRule",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.BlockPredicateFilter",
            "XXX.levelgen.placement.CaveSurface",
            "XXX.levelgen.placement.CountPlacement",
            "XXX.levelgen.placement.HeightRangePlacement",
            "XXX.levelgen.placement.InSquarePlacement",
            "XXX.levelgen.placement.NoiseThresholdCountPlacement",
            "XXX.levelgen.placement.PlacementContext",
            "XXX.levelgen.placement.PlacementModifier",
            "XXX.levelgen.placement.RandomOffsetPlacement",
            "XXX.levelgen.placement.RepeatingPlacement",
            "XXX.levelgen.placement.SurfaceWaterDepthFilter",
            "XXX.levelgen.presets.WorldPreset",
            "XXX.levelgen.presets.WorldPresets$Bootstrap",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuiltinStructureSets",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.PostPlacementProcessor",
            "XXX.levelgen.structure.SinglePieceStructure",
            "XXX.levelgen.structure.Structure",
            "XXX.levelgen.structure.Structure$GenerationStub",
            "XXX.levelgen.structure.StructureCheck",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructurePieceAccessor",
            "XXX.levelgen.structure.StructureSet$StructureSelectionEntry",
            "XXX.levelgen.structure.StructureSpawnOverride$BoundingBoxType",
            "XXX.levelgen.structure.StructureType",
            "XXX.levelgen.structure.TerrainAdjustment",
            "XXX.structure.pieces.PieceGenerator",
            "XXX.structure.pieces.PieceGeneratorSupplier",
            "XXX.structure.pieces.PiecesContainer",
            "XXX.structure.pieces.StructurePieceType",
            "XXX.structure.pieces.StructurePieceType$StructureTemplateType",
            "XXX.structure.pieces.package-info",
            "XXX.structure.placement.RandomSpreadStructurePlacement",
            "XXX.structure.placement.RandomSpreadType$1",
            "XXX.structure.placement.StructurePlacement$ExclusionZone",
            "XXX.structure.placement.StructurePlacement$FrequencyReductionMethod",
            "XXX.structure.placement.package-info",
            "XXX.structure.pools.FeaturePoolElement",
            "XXX.structure.pools.JigsawPlacement",
            "XXX.structure.pools.JigsawPlacement$Placer",
            "XXX.structure.pools.ListPoolElement",
            "XXX.structure.pools.StructurePoolElement",
            "XXX.structure.pools.StructureTemplatePool",
            "XXX.structure.pools.package-info",
            "XXX.structure.structures.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.structure.structures.DesertPyramidPiece",
            "XXX.structure.structures.EndCityPieces",
            "XXX.structure.structures.EndCityPieces$2",
            "XXX.structure.structures.EndCityPieces$4",
            "XXX.structure.structures.EndCityPieces$SectionGenerator",
            "XXX.structure.structures.IglooPieces",
            "XXX.structure.structures.IglooStructure",
            "XXX.structure.structures.JigsawStructure$1",
            "XXX.structure.structures.JungleTemplePiece$MossStoneSelector",
            "XXX.structure.structures.MineshaftPieces",
            "XXX.structure.structures.MineshaftPieces$MineShaftCorridor",
            "XXX.structure.structures.MineshaftPieces$MineShaftPiece",
            "XXX.structure.structures.MineshaftPieces$MineShaftStairs",
            "XXX.structure.structures.MineshaftStructure$Type",
            "XXX.structure.structures.NetherFortressPieces$1",
            "XXX.structure.structures.NetherFortressPieces$BridgeEndFiller",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorStairsPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleEntrance",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorRightTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$MonsterThrone",
            "XXX.structure.structures.NetherFortressPieces$PieceWeight",
            "XXX.structure.structures.NetherFortressPieces$StairsRoom",
            "XXX.structure.structures.NetherFortressStructure",
            "XXX.structure.structures.NetherFossilPieces$NetherFossilPiece",
            "XXX.structure.structures.OceanMonumentPieces",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.structure.structures.OceanMonumentStructure",
            "XXX.structure.structures.OceanRuinPieces$1",
            "XXX.structure.structures.OceanRuinStructure",
            "XXX.structure.structures.RuinedPortalPiece",
            "XXX.structure.structures.RuinedPortalPiece$VerticalPlacement",
            "XXX.structure.structures.RuinedPortalStructure$Setup",
            "XXX.structure.structures.ShipwreckPieces$ShipwreckPiece",
            "XXX.structure.structures.StrongholdPieces",
            "XXX.structure.structures.StrongholdPieces$2",
            "XXX.structure.structures.StrongholdPieces$ChestCorridor",
            "XXX.structure.structures.StrongholdPieces$FiveCrossing",
            "XXX.structure.structures.StrongholdPieces$Library",
            "XXX.structure.structures.StrongholdPieces$PortalRoom",
            "XXX.structure.structures.StrongholdPieces$RightTurn",
            "XXX.structure.structures.StrongholdPieces$SmoothStoneSelector",
            "XXX.structure.structures.StrongholdPieces$StartPiece",
            "XXX.structure.structures.StrongholdPieces$StraightStairsDown",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.structure.structures.StrongholdStructure",
            "XXX.structure.structures.SwampHutStructure",
            "XXX.structure.structures.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionGrid",
            "XXX.structure.structures.WoodlandMansionPieces$PlacementData",
            "XXX.structure.structures.WoodlandMansionPieces$SimpleGrid",
            "XXX.structure.structures.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.structures.package-info",
            "XXX.structure.templatesystem.AxisAlignedLinearPosTest",
            "XXX.structure.templatesystem.BlockAgeProcessor",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.LavaSubmergedBlockProcessor",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.PosRuleTest",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.StructureTemplateManager$InputStreamOpener",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.rule.blockentity.AppendLoot",
            "XXX.rule.blockentity.Clear",
            "XXX.rule.blockentity.RuleBlockEntityModifier",
            "XXX.rule.blockentity.package-info",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.NormalNoise",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$SectionState",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.LeveledPriorityQueue$1",
            "XXX.level.lighting.LightEngine$QueueEntry",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.MapColor$Brightness",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.Path$DebugData",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.package-info",
            "XXX.level.portal.PortalInfo",
            "XXX.level.portal.package-info",
            "XXX.level.redstone.CollectingNeighborUpdater$FullNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$NeighborUpdates",
            "XXX.level.redstone.CollectingNeighborUpdater$SimpleNeighborUpdate",
            "XXX.level.redstone.NeighborUpdater",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData$Factory",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DataVersion",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelResource",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelStorageSource$LevelDirectory",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$1",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.LevelSummary$SymlinkLevelSummary",
            "XXX.level.storage.PlayerDataStorage",
            "XXX.level.storage.PrimaryLevelData$SpecialWorldProperty",
            "XXX.level.storage.WorldData",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.IntRange$IntChecker",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootDataManager",
            "XXX.storage.loot.LootDataResolver",
            "XXX.storage.loot.LootDataType$Validator",
            "XXX.storage.loot.LootParams$Builder",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaType",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetBannerPatternFunction",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetEnchantmentsFunction$Builder",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetPotionFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AllOfCondition$Builder",
            "XXX.loot.predicates.AnyOfCondition$Builder",
            "XXX.loot.predicates.CompositeLootItemCondition",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemConditionType",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.package-info",
            "XXX.providers.nbt.ContextNbtProvider$1",
            "XXX.providers.nbt.ContextNbtProvider$Getter",
            "XXX.providers.nbt.NbtProvider",
            "XXX.providers.nbt.StorageNbtProvider",
            "XXX.providers.number.BinomialDistributionGenerator",
            "XXX.providers.number.LootNumberProviderType",
            "XXX.providers.number.NumberProviders",
            "XXX.providers.number.UniformGenerator",
            "XXX.providers.score.ContextScoreboardNameProvider",
            "XXX.providers.score.LootScoreProviderType",
            "XXX.providers.score.ScoreboardNameProviders",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.package-info",
            "XXX.level.validation.DirectoryValidator",
            "XXX.level.validation.ForbiddenSymlinkInfo",
            "XXX.level.validation.PathAllowList$ConfigEntry",
            "XXX.level.validation.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.DisplaySlot$1",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info",
            "XXX.world.ticks.BlackholeTickAccess$1",
            "XXX.world.ticks.ContainerSingleItem",
            "XXX.world.ticks.LevelTickAccess",
            "XXX.world.ticks.LevelTicks$PosAndContainerConsumer",
            "XXX.world.ticks.SavedTick",
            "XXX.world.ticks.ScheduledTick",
            "XXX.world.ticks.SerializableTickContainer",
            "XXX.world.ticks.TickContainerAccess",
            "XXX.world.ticks.WorldGenTickAccess"
          ],
          "removed": [
            "XXX.realmsclient.gui.RealmsDataFetcher",
            "XXX.realmsclient.gui.RealmsServerList",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Action",
            "XXX.realmsclient.gui.RowButton",
            "XXX.gui.screens.RealmsBackupInfoScreen",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoListEntry",
            "XXX.gui.screens.RealmsBackupScreen$1",
            "XXX.gui.screens.RealmsBackupScreen$Entry",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen$1",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsGenericErrorScreen$ErrorMessage",
            "XXX.gui.screens.RealmsLongConfirmationScreen",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.minecraft.advancements.AdvancementHolder",
            "XXX.minecraft.advancements.AdvancementRequirements$Strategy",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.AdvancementTree$Listener",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.SlimePredicate",
            "XXX.advancements.critereon.StartRidingTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$ValueMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.UsingItemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.client.Camera",
            "XXX.minecraft.client.CameraType",
            "XXX.minecraft.client.ClientRecipeBook",
            "XXX.minecraft.client.CloudStatus",
            "XXX.minecraft.client.ComponentCollector",
            "XXX.minecraft.client.GameNarrator",
            "XXX.minecraft.client.GraphicsStatus",
            "XXX.minecraft.client.GuiMessage",
            "XXX.minecraft.client.GuiMessageTag",
            "XXX.minecraft.client.HotbarManager",
            "XXX.minecraft.client.KeyMapping",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.Minecraft$ChatStatus$1",
            "XXX.minecraft.client.Minecraft$ChatStatus$3",
            "XXX.minecraft.client.Minecraft$GameLoadCookie",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.OptionInstance$AltEnum",
            "XXX.minecraft.client.OptionInstance$ClampingLazyMaxIntRange",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter",
            "XXX.minecraft.client.OptionInstance$IntRange",
            "XXX.minecraft.client.OptionInstance$IntRangeBase$1",
            "XXX.minecraft.client.OptionInstance$OptionInstanceSliderButton",
            "XXX.minecraft.client.OptionInstance$SliderableValueSet",
            "XXX.minecraft.client.OptionInstance$UnitDouble",
            "XXX.minecraft.client.OptionInstance$ValueSet",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.Options$3",
            "XXX.minecraft.client.Options$FieldAccess",
            "XXX.minecraft.client.PeriodicNotificationManager",
            "XXX.minecraft.client.PeriodicNotificationManager$NotificationTask",
            "XXX.minecraft.client.Realms32BitWarningStatus",
            "XXX.minecraft.client.RecipeBookCategories$1",
            "XXX.minecraft.client.ResourceLoadStateTracker$RecoveryInfo",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadState",
            "XXX.minecraft.client.StringSplitter",
            "XXX.minecraft.client.StringSplitter$FlatComponents",
            "XXX.minecraft.client.StringSplitter$LineComponent",
            "XXX.minecraft.client.StringSplitter$WidthLimitedCharSink",
            "XXX.minecraft.client.Timer",
            "XXX.minecraft.client.User",
            "XXX.client.animation.AnimationChannel",
            "XXX.client.animation.AnimationChannel$Interpolations",
            "XXX.client.animation.AnimationChannel$Targets",
            "XXX.client.animation.AnimationDefinition$Builder",
            "XXX.client.animation.KeyframeAnimations",
            "XXX.animation.definitions.FrogAnimation",
            "XXX.animation.definitions.WardenAnimation",
            "XXX.client.animation.package-info",
            "XXX.color.block.BlockColors",
            "XXX.color.block.BlockTintCache$CacheData",
            "XXX.color.block.package-info",
            "XXX.color.item.ItemColors",
            "XXX.client.gui.ComponentPath",
            "XXX.client.gui.ComponentPath$Path",
            "XXX.client.gui.Font$DisplayMode",
            "XXX.client.gui.Gui",
            "XXX.client.gui.GuiGraphics",
            "XXX.client.gui.GuiSpriteManager",
            "XXX.client.gui.MapRenderer$MapInstance",
            "XXX.gui.components.AbstractOptionSliderButton",
            "XXX.gui.components.AbstractSelectionList",
            "XXX.gui.components.AbstractSelectionList$Entry",
            "XXX.gui.components.AbstractSliderButton",
            "XXX.gui.components.AbstractWidget",
            "XXX.gui.components.BossHealthOverlay$1",
            "XXX.gui.components.Button$Builder",
            "XXX.gui.components.Button$OnPress",
            "XXX.gui.components.ChatComponent$DelayedMessageDeletion",
            "XXX.gui.components.CommandSuggestions",
            "XXX.gui.components.CommonButtons",
            "XXX.gui.components.ContainerObjectSelectionList",
            "XXX.gui.components.ContainerObjectSelectionList$Entry",
            "XXX.gui.components.CycleButton$Builder",
            "XXX.gui.components.CycleButton$ValueListSupplier",
            "XXX.gui.components.CycleButton$ValueListSupplier$2",
            "XXX.gui.components.DebugScreenOverlay$1",
            "XXX.gui.components.EditBox",
            "XXX.gui.components.FocusableTextWidget",
            "XXX.gui.components.ImageWidget",
            "XXX.gui.components.ImageWidget$Texture",
            "XXX.gui.components.LoadingDotsWidget",
            "XXX.gui.components.LockIconButton$Icon",
            "XXX.gui.components.MultiLineEditBox",
            "XXX.gui.components.MultiLineLabel$1",
            "XXX.gui.components.MultiLineLabel$TextWithWidth",
            "XXX.gui.components.MultiLineTextWidget$CacheKey",
            "XXX.gui.components.MultilineTextField$1",
            "XXX.gui.components.ObjectSelectionList",
            "XXX.gui.components.OptionsList",
            "XXX.gui.components.PlainTextButton",
            "XXX.gui.components.PlayerSkinWidget",
            "XXX.gui.components.PlayerTabOverlay",
            "XXX.gui.components.Renderable",
            "XXX.gui.components.SpriteIconButton",
            "XXX.gui.components.SpriteIconButton$CenteredIcon",
            "XXX.gui.components.StateSwitchingButton",
            "XXX.gui.components.SubtitleOverlay",
            "XXX.gui.components.TabButton",
            "XXX.gui.components.Tooltip",
            "XXX.gui.components.WidgetSprites",
            "XXX.components.debugchart.BandwidthDebugChart",
            "XXX.components.debugchart.PingDebugChart",
            "XXX.components.events.AbstractContainerEventHandler",
            "XXX.components.events.GuiEventListener",
            "XXX.gui.components.package-info",
            "XXX.components.spectator.package-info",
            "XXX.components.tabs.Tab",
            "XXX.components.tabs.TabNavigationBar",
            "XXX.components.tabs.package-info",
            "XXX.components.toasts.RecipeToast",
            "XXX.components.toasts.SystemToast$SystemToastIds",
            "XXX.components.toasts.Toast$Visibility",
            "XXX.components.toasts.ToastComponent$ToastInstance",
            "XXX.components.toasts.TutorialToast$Icons",
            "XXX.gui.font.AllMissingGlyphProvider",
            "XXX.gui.font.CodepointMap$Output",
            "XXX.gui.font.FontManager$BuilderId",
            "XXX.gui.font.FontManager$FontDefinitionFile",
            "XXX.gui.font.FontManager$UnresolvedBuilderBundle",
            "XXX.gui.font.FontSet$GlyphInfoFilter",
            "XXX.gui.font.FontTexture$Node",
            "XXX.gui.font.GlyphRenderTypes$1",
            "XXX.gui.font.TextFieldHelper$1",
            "XXX.font.glyphs.BakedGlyph",
            "XXX.font.glyphs.EmptyGlyph",
            "XXX.font.glyphs.SpecialGlyphs$1",
            "XXX.font.glyphs.package-info",
            "XXX.font.providers.BitmapProvider",
            "XXX.font.providers.BitmapProvider$Glyph",
            "XXX.font.providers.GlyphProviderDefinition",
            "XXX.font.providers.GlyphProviderDefinition$Reference",
            "XXX.font.providers.ProviderReferenceDefinition",
            "XXX.font.providers.TrueTypeGlyphProviderDefinition$Shift",
            "XXX.font.providers.UnihexProvider$ByteContents",
            "XXX.font.providers.UnihexProvider$Dimensions",
            "XXX.font.providers.UnihexProvider$Glyph$1",
            "XXX.font.providers.UnihexProvider$LineData",
            "XXX.font.providers.UnihexProvider$ReaderOutput",
            "XXX.font.providers.package-info",
            "XXX.gui.layouts.AbstractLayout$AbstractChildWrapper",
            "XXX.gui.layouts.EqualSpacingLayout",
            "XXX.gui.layouts.EqualSpacingLayout$ChildContainer",
            "XXX.gui.layouts.FrameLayout",
            "XXX.gui.layouts.GridLayout",
            "XXX.gui.layouts.GridLayout$RowHelper",
            "XXX.gui.layouts.Layout",
            "XXX.gui.layouts.LayoutSettings",
            "XXX.gui.layouts.LinearLayout",
            "XXX.gui.layouts.LinearLayout$Orientation",
            "XXX.gui.layouts.package-info",
            "XXX.gui.narration.NarratableEntry$NarrationPriority",
            "XXX.gui.narration.NarrationElementOutput",
            "XXX.gui.narration.NarrationThunk",
            "XXX.gui.narration.ScreenNarrationCollector$1",
            "XXX.gui.narration.ScreenNarrationCollector$NarrationEntry",
            "XXX.gui.narration.package-info",
            "XXX.gui.navigation.FocusNavigationEvent",
            "XXX.gui.navigation.FocusNavigationEvent$InitialFocus",
            "XXX.gui.navigation.ScreenAxis",
            "XXX.gui.navigation.ScreenDirection",
            "XXX.gui.navigation.ScreenPosition",
            "XXX.gui.navigation.ScreenRectangle",
            "XXX.gui.navigation.package-info",
            "XXX.gui.screens.AccessibilityOnboardingScreen",
            "XXX.gui.screens.AlertScreen",
            "XXX.gui.screens.BackupConfirmScreen$Listener",
            "XXX.gui.screens.ChatOptionsScreen",
            "XXX.gui.screens.ChatScreen$1",
            "XXX.gui.screens.ConfirmScreen",
            "XXX.gui.screens.ConnectScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList",
            "XXX.gui.screens.CreateFlatWorldScreen",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList$Entry",
            "XXX.gui.screens.DatapackLoadFailureScreen",
            "XXX.gui.screens.DeathScreen$TitleConfirmScreen",
            "XXX.gui.screens.DirectJoinServerScreen",
            "XXX.gui.screens.EditServerScreen",
            "XXX.gui.screens.FaviconTexture",
            "XXX.gui.screens.GenericWaitingScreen",
            "XXX.gui.screens.LanguageSelectScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList$Entry",
            "XXX.gui.screens.LoadingDotsText",
            "XXX.gui.screens.LoadingOverlay$LogoTexture",
            "XXX.gui.screens.MenuScreens$ScreenConstructor",
            "XXX.gui.screens.NoticeWithLinkScreen",
            "XXX.gui.screens.OptionsScreen",
            "XXX.gui.screens.OutOfMemoryScreen",
            "XXX.gui.screens.PauseScreen",
            "XXX.gui.screens.PopupScreen$ButtonOption",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList",
            "XXX.gui.screens.ProgressScreen",
            "XXX.gui.screens.Screen",
            "XXX.gui.screens.Screen$NarratableSearchResult",
            "XXX.gui.screens.SimpleOptionsSubScreen",
            "XXX.gui.screens.SoundOptionsScreen",
            "XXX.gui.screens.TitleScreen$WarningLabel",
            "XXX.gui.screens.WinScreen",
            "XXX.screens.achievement.StatsScreen",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList$Entry",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRow",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList",
            "XXX.screens.achievement.StatsUpdateListener",
            "XXX.screens.advancements.AdvancementTab",
            "XXX.screens.advancements.AdvancementTabType$1",
            "XXX.screens.advancements.AdvancementWidget",
            "XXX.screens.advancements.AdvancementWidgetType$1",
            "XXX.screens.advancements.package-info",
            "XXX.screens.controls.KeyBindsList",
            "XXX.screens.controls.KeyBindsList$CategoryEntry$1",
            "XXX.screens.controls.KeyBindsList$KeyEntry",
            "XXX.screens.controls.package-info",
            "XXX.screens.debug.GameModeSwitcherScreen$1",
            "XXX.screens.debug.GameModeSwitcherScreen$GameModeSlot",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen",
            "XXX.screens.inventory.AbstractContainerScreen",
            "XXX.screens.inventory.AbstractSignEditScreen",
            "XXX.screens.inventory.BeaconScreen",
            "XXX.screens.inventory.BeaconScreen$BeaconButton",
            "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton",
            "XXX.screens.inventory.BeaconScreen$BeaconScreenButton",
            "XXX.screens.inventory.BeaconScreen$BeaconUpgradePowerButton",
            "XXX.screens.inventory.BookEditScreen",
            "XXX.screens.inventory.BookEditScreen$LineInfo",
            "XXX.screens.inventory.BookViewScreen",
            "XXX.screens.inventory.BookViewScreen$BookAccess",
            "XXX.screens.inventory.BookViewScreen$WrittenBookAccess",
            "XXX.screens.inventory.CartographyTableScreen",
            "XXX.screens.inventory.CommandBlockEditScreen$1",
            "XXX.screens.inventory.CraftingScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen$ItemPickerMenu",
            "XXX.screens.inventory.CyclingSlotBackground",
            "XXX.screens.inventory.EffectRenderingInventoryScreen",
            "XXX.screens.inventory.EnchantmentScreen",
            "XXX.screens.inventory.GrindstoneScreen",
            "XXX.screens.inventory.HopperScreen",
            "XXX.screens.inventory.InventoryScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen",
            "XXX.screens.inventory.LecternScreen",
            "XXX.screens.inventory.LoomScreen",
            "XXX.screens.inventory.MerchantScreen",
            "XXX.screens.inventory.MinecartCommandBlockEditScreen",
            "XXX.screens.inventory.ShulkerBoxScreen",
            "XXX.screens.inventory.SmithingScreen",
            "XXX.screens.inventory.StonecutterScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$1",
            "XXX.screens.inventory.package-info",
            "XXX.inventory.tooltip.ClientBundleTooltip",
            "XXX.inventory.tooltip.ClientTextTooltip",
            "XXX.inventory.tooltip.ClientTooltipPositioner",
            "XXX.inventory.tooltip.MenuTooltipPositioner",
            "XXX.inventory.tooltip.package-info",
            "XXX.screens.multiplayer.Realms32bitWarningScreen",
            "XXX.screens.multiplayer.ServerReconfigScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.WarningScreen",
            "XXX.gui.screens.package-info",
            "XXX.screens.packs.PackSelectionModel$Entry",
            "XXX.screens.packs.PackSelectionModel$SelectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen",
            "XXX.screens.packs.PackSelectionScreen$Watcher",
            "XXX.screens.packs.TransferableSelectionList$PackEntry",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.reporting.AbstractReportScreen",
            "XXX.screens.reporting.ChatReportScreen",
            "XXX.screens.reporting.ChatSelectionLogFiller$Output",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$Entry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageEntry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$PaddingEntry",
            "XXX.screens.reporting.ReportPlayerScreen",
            "XXX.screens.reporting.ReportReasonSelectionScreen$ReasonSelectionList",
            "XXX.screens.reporting.SkinReportScreen",
            "XXX.screens.social.PlayerEntry",
            "XXX.screens.social.PlayerEntry$2",
            "XXX.screens.social.PlayerSocialManager",
            "XXX.screens.social.SocialInteractionsScreen",
            "XXX.screens.social.SocialInteractionsScreen$2",
            "XXX.screens.social.package-info",
            "XXX.screens.telemetry.TelemetryEventWidget$Content",
            "XXX.screens.telemetry.TelemetryInfoScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList",
            "XXX.screens.worldselection.CreateWorldScreen",
            "XXX.screens.worldselection.CreateWorldScreen$GameTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab$2",
            "XXX.screens.worldselection.EditGameRulesScreen$BooleanRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$CategoryRuleEntry$1",
            "XXX.screens.worldselection.EditGameRulesScreen$GameRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleList$1",
            "XXX.screens.worldselection.ExperimentsScreen",
            "XXX.screens.worldselection.PresetEditor",
            "XXX.screens.worldselection.SwitchGrid",
            "XXX.screens.worldselection.SwitchGrid$InfoUnderneathSettings",
            "XXX.screens.worldselection.SwitchGrid$SwitchBuilder",
            "XXX.screens.worldselection.WorldCreationContext$DimensionsUpdater",
            "XXX.screens.worldselection.WorldCreationUiState",
            "XXX.screens.worldselection.WorldCreationUiState$WorldTypeEntry",
            "XXX.screens.worldselection.WorldOpenFlows$1Data",
            "XXX.screens.worldselection.WorldSelectionList$Entry",
            "XXX.screens.worldselection.WorldSelectionList$WorldListEntry",
            "XXX.gui.spectator.PlayerMenuItem",
            "XXX.gui.spectator.SpectatorMenu",
            "XXX.gui.spectator.SpectatorMenu$CloseSpectatorItem",
            "XXX.gui.spectator.SpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenuListener",
            "XXX.spectator.categories.TeleportToPlayerMenuCategory",
            "XXX.spectator.categories.TeleportToTeamMenuCategory$TeamSelectionItem",
            "XXX.gui.spectator.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$QuickPlayData",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.SilentInitException",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.AxolotlModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BoatModel",
            "XXX.client.model.CamelModel",
            "XXX.client.model.ChestBoatModel",
            "XXX.client.model.ChestedHorseModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColorableHierarchicalModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GoatModel",
            "XXX.client.model.HeadedModel",
            "XXX.client.model.HoglinModel",
            "XXX.client.model.HumanoidArmorModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.OcelotModel",
            "XXX.client.model.ParrotModel",
            "XXX.client.model.ParrotModel$State",
            "XXX.client.model.PigModel",
            "XXX.client.model.PiglinModel",
            "XXX.client.model.PolarBearModel",
            "XXX.client.model.PufferfishMidModel",
            "XXX.client.model.QuadrupedModel",
            "XXX.client.model.RaftModel",
            "XXX.client.model.SalmonModel",
            "XXX.client.model.SheepModel",
            "XXX.client.model.ShulkerBulletModel",
            "XXX.client.model.SilverfishModel",
            "XXX.client.model.SkullModel",
            "XXX.client.model.SlimeModel",
            "XXX.client.model.SnowGolemModel",
            "XXX.client.model.SquidModel",
            "XXX.client.model.TadpoleModel",
            "XXX.client.model.TropicalFishModelA",
            "XXX.client.model.TurtleModel",
            "XXX.client.model.VillagerHeadModel",
            "XXX.client.model.WardenModel",
            "XXX.client.model.WitchModel",
            "XXX.client.model.WolfModel",
            "XXX.client.model.ZombieVillagerModel",
            "XXX.model.dragon.package-info",
            "XXX.model.geom.LayerDefinitions",
            "XXX.model.geom.ModelLayers",
            "XXX.model.geom.ModelPart$Cube",
            "XXX.model.geom.ModelPart$Vertex",
            "XXX.model.geom.PartNames",
            "XXX.geom.builders.CubeDefinition",
            "XXX.geom.builders.CubeListBuilder",
            "XXX.geom.builders.MaterialDefinition",
            "XXX.geom.builders.PartDefinition",
            "XXX.geom.builders.package-info",
            "XXX.client.model.package-info",
            "XXX.client.multiplayer.ChunkBatchSizeCalculator",
            "XXX.client.multiplayer.ClientAdvancements$Listener",
            "XXX.client.multiplayer.ClientChunkCache$Storage",
            "XXX.client.multiplayer.ClientCommonPacketListenerImpl$DeferredPacket",
            "XXX.client.multiplayer.ClientHandshakePacketListenerImpl",
            "XXX.client.multiplayer.ClientLevel$1",
            "XXX.client.multiplayer.ClientLevel$EntityCallbacks",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.CommonListenerCookie",
            "XXX.client.multiplayer.LegacyServerPinger$Output",
            "XXX.client.multiplayer.PingDebugMonitor",
            "XXX.client.multiplayer.ProfileKeyPairManager",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerData$Type",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.multiplayer.chat.ChatListener$Message",
            "XXX.multiplayer.chat.ChatTrustLevel",
            "XXX.multiplayer.chat.LoggedChatEvent",
            "XXX.multiplayer.chat.LoggedChatMessage",
            "XXX.multiplayer.chat.LoggedChatMessage$System",
            "XXX.chat.report.AbuseReportSender",
            "XXX.chat.report.AbuseReportSender$SendException",
            "XXX.chat.report.BanReason",
            "XXX.chat.report.ChatReport$Builder",
            "XXX.chat.report.ChatReportContextBuilder$Collector",
            "XXX.chat.report.NameReport",
            "XXX.chat.report.Report",
            "XXX.chat.report.Report$CannotBuildReason",
            "XXX.chat.report.ReportEnvironment",
            "XXX.chat.report.ReportEnvironment$Server$Realm",
            "XXX.chat.report.ReportReason",
            "XXX.chat.report.ReportingContext",
            "XXX.chat.report.SkinReport$Builder",
            "XXX.client.multiplayer.package-info",
            "XXX.multiplayer.prediction.BlockStatePredictionHandler$ServerVerifiedState",
            "XXX.multiplayer.prediction.package-info",
            "XXX.multiplayer.resolver.AddressCheck$1",
            "XXX.multiplayer.resolver.ResolvedServerAddress$1",
            "XXX.multiplayer.resolver.ServerAddressResolver",
            "XXX.multiplayer.resolver.ServerRedirectHandler",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AshParticle$Provider",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BlockMarker",
            "XXX.client.particle.BreakingItemParticle",
            "XXX.client.particle.BreakingItemParticle$SlimeProvider",
            "XXX.client.particle.BubbleColumnUpParticle",
            "XXX.client.particle.BubbleParticle",
            "XXX.client.particle.BubblePopParticle",
            "XXX.client.particle.CampfireSmokeParticle",
            "XXX.client.particle.CampfireSmokeParticle$SignalProvider",
            "XXX.client.particle.CritParticle",
            "XXX.client.particle.CritParticle$MagicProvider",
            "XXX.client.particle.DragonBreathParticle",
            "XXX.client.particle.DripParticle",
            "XXX.client.particle.DripParticle$DripHangParticle",
            "XXX.client.particle.DripParticle$DripstoneFallAndLandParticle",
            "XXX.client.particle.DripParticle$FallingParticle",
            "XXX.client.particle.DustColorTransitionParticle",
            "XXX.client.particle.DustParticle",
            "XXX.client.particle.DustParticleBase",
            "XXX.client.particle.EnchantmentTableParticle$NautilusProvider",
            "XXX.client.particle.EndRodParticle",
            "XXX.client.particle.ExplodeParticle",
            "XXX.client.particle.FallingDustParticle",
            "XXX.client.particle.FireworkParticles",
            "XXX.client.particle.FireworkParticles$FlashProvider",
            "XXX.client.particle.FireworkParticles$SparkParticle",
            "XXX.client.particle.FireworkParticles$Starter",
            "XXX.client.particle.FlameParticle$Provider",
            "XXX.client.particle.GlowParticle",
            "XXX.client.particle.GlowParticle$GlowSquidProvider",
            "XXX.client.particle.GlowParticle$WaxOffProvider",
            "XXX.client.particle.HeartParticle",
            "XXX.client.particle.HeartParticle$Provider",
            "XXX.client.particle.HugeExplosionParticle$Provider",
            "XXX.client.particle.HugeExplosionSeedParticle$Provider",
            "XXX.client.particle.LargeSmokeParticle",
            "XXX.client.particle.LavaParticle",
            "XXX.client.particle.MobAppearanceParticle",
            "XXX.client.particle.NoRenderParticle",
            "XXX.client.particle.NoteParticle$Provider",
            "XXX.client.particle.ParticleDescription",
            "XXX.client.particle.ParticleEngine$1ParticleDefinition",
            "XXX.client.particle.ParticleEngine$SpriteParticleRegistration",
            "XXX.client.particle.ParticleProvider$Sprite",
            "XXX.client.particle.ParticleRenderType$1",
            "XXX.client.particle.ParticleRenderType$3",
            "XXX.client.particle.ParticleRenderType$5",
            "XXX.client.particle.PlayerCloudParticle",
            "XXX.client.particle.PlayerCloudParticle$SneezeProvider",
            "XXX.client.particle.PortalParticle$Provider",
            "XXX.client.particle.ReversePortalParticle$ReversePortalProvider",
            "XXX.client.particle.SculkChargeParticle",
            "XXX.client.particle.SculkChargePopParticle",
            "XXX.client.particle.ShriekParticle",
            "XXX.client.particle.SimpleAnimatedParticle",
            "XXX.client.particle.SmokeParticle",
            "XXX.client.particle.SnowflakeParticle",
            "XXX.client.particle.SonicBoomParticle",
            "XXX.client.particle.SoulParticle",
            "XXX.client.particle.SoulParticle$Provider",
            "XXX.client.particle.SpellParticle$AmbientMobProvider",
            "XXX.client.particle.SpellParticle$MobProvider",
            "XXX.client.particle.SpellParticle$WitchProvider",
            "XXX.client.particle.SpitParticle$Provider",
            "XXX.client.particle.SplashParticle$Provider",
            "XXX.client.particle.SquidInkParticle",
            "XXX.client.particle.SquidInkParticle$Provider",
            "XXX.client.particle.SuspendedParticle$CrimsonSporeProvider",
            "XXX.client.particle.SuspendedParticle$SporeBlossomAirProvider$1",
            "XXX.client.particle.SuspendedParticle$WarpedSporeProvider",
            "XXX.client.particle.SuspendedTownParticle$ComposterFillProvider",
            "XXX.client.particle.SuspendedTownParticle$EggCrackProvider",
            "XXX.client.particle.SuspendedTownParticle$Provider",
            "XXX.client.particle.TerrainParticle$Provider",
            "XXX.client.particle.TotemParticle",
            "XXX.client.particle.TrackingEmitter",
            "XXX.client.particle.VibrationSignalParticle$Provider",
            "XXX.client.particle.WakeParticle$Provider",
            "XXX.client.particle.WaterCurrentDownParticle$Provider",
            "XXX.client.particle.WaterDropParticle$Provider",
            "XXX.client.particle.WhiteAshParticle$Provider",
            "XXX.client.player.AbstractClientPlayer",
            "XXX.client.player.KeyboardInput",
            "XXX.client.player.RemotePlayer",
            "XXX.player.inventory.package-info",
            "XXX.client.profiling.ClientMetricsSamplersProvider",
            "XXX.client.quickplay.QuickPlay",
            "XXX.client.quickplay.QuickPlayLog$1",
            "XXX.client.quickplay.QuickPlayLog$QuickPlayWorld",
            "XXX.client.quickplay.package-info",
            "XXX.client.renderer.BlockEntityWithoutLevelRenderer",
            "XXX.client.renderer.DimensionSpecialEffects",
            "XXX.client.renderer.DimensionSpecialEffects$NetherEffects",
            "XXX.client.renderer.DimensionSpecialEffects$SkyType",
            "XXX.client.renderer.FaceInfo",
            "XXX.client.renderer.FaceInfo$VertexInfo",
            "XXX.client.renderer.FogRenderer$BlindnessFogFunction",
            "XXX.client.renderer.FogRenderer$FogData",
            "XXX.client.renderer.FogRenderer$MobEffectFogFunction",
            "XXX.client.renderer.GameRenderer$1",
            "XXX.client.renderer.GpuWarnlistManager",
            "XXX.client.renderer.ItemBlockRenderTypes",
            "XXX.client.renderer.ItemInHandRenderer$1",
            "XXX.client.renderer.ItemModelShaper",
            "XXX.client.renderer.LevelRenderer$TransparencyShaderException",
            "XXX.client.renderer.MultiBufferSource",
            "XXX.client.renderer.OutlineBufferSource",
            "XXX.client.renderer.PanoramaRenderer",
            "XXX.client.renderer.PostPass",
            "XXX.client.renderer.RenderBuffers",
            "XXX.client.renderer.RenderStateShard$BooleanStateShard",
            "XXX.client.renderer.RenderStateShard$CullStateShard",
            "XXX.client.renderer.RenderStateShard$EmptyTextureStateShard",
            "XXX.client.renderer.RenderStateShard$LightmapStateShard",
            "XXX.client.renderer.RenderStateShard$MultiTextureStateShard",
            "XXX.client.renderer.RenderStateShard$OffsetTexturingStateShard",
            "XXX.client.renderer.RenderStateShard$OverlayStateShard",
            "XXX.client.renderer.RenderStateShard$TextureStateShard",
            "XXX.client.renderer.RenderStateShard$TransparencyStateShard",
            "XXX.client.renderer.RenderType",
            "XXX.client.renderer.RenderType$CompositeState",
            "XXX.client.renderer.RenderType$OutlineProperty",
            "XXX.client.renderer.ScreenEffectRenderer",
            "XXX.client.renderer.SectionOcclusionGraph",
            "XXX.client.renderer.SectionOcclusionGraph$GraphState",
            "XXX.client.renderer.SectionOcclusionGraph$Node",
            "XXX.client.renderer.ShaderInstance",
            "XXX.client.renderer.Sheets",
            "XXX.client.renderer.SpriteCoordinateExpander",
            "XXX.client.renderer.VirtualScreen",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElement$Deserializer",
            "XXX.block.model.BlockElementFace$Deserializer",
            "XXX.block.model.BlockFaceUV",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModel$GuiLight",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockModelDefinition$Deserializer",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemOverride",
            "XXX.block.model.ItemOverride$Predicate",
            "XXX.block.model.ItemOverrides$BakedOverride",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.MultiVariant$Deserializer",
            "XXX.block.model.Variant$Deserializer",
            "XXX.model.multipart.Condition",
            "XXX.model.multipart.MultiPart",
            "XXX.model.multipart.OrCondition",
            "XXX.model.multipart.Selector$Deserializer",
            "XXX.block.model.package-info",
            "XXX.renderer.blockentity.BannerRenderer",
            "XXX.renderer.blockentity.BedRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderDispatcher",
            "XXX.renderer.blockentity.BlockEntityRendererProvider",
            "XXX.renderer.blockentity.BlockEntityRenderers",
            "XXX.renderer.blockentity.BrushableBlockRenderer",
            "XXX.renderer.blockentity.CampfireRenderer",
            "XXX.renderer.blockentity.ConduitRenderer",
            "XXX.renderer.blockentity.EnchantTableRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$HangingSignModel",
            "XXX.renderer.blockentity.PistonHeadRenderer",
            "XXX.renderer.blockentity.SignRenderer",
            "XXX.renderer.blockentity.SkullBlockRenderer",
            "XXX.renderer.blockentity.StructureBlockRenderer",
            "XXX.renderer.blockentity.TheEndGatewayRenderer",
            "XXX.renderer.blockentity.package-info",
            "XXX.renderer.chunk.RenderChunkRegion",
            "XXX.renderer.chunk.RenderRegionCache$ChunkInfo",
            "XXX.renderer.chunk.SectionRenderDispatcher$CompiledSection",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$RebuildTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$ResortTransparencyTask",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedListener",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$EntityGoalInfo",
            "XXX.renderer.debug.HeightMapRenderer$1",
            "XXX.renderer.debug.LightSectionDebugRenderer",
            "XXX.renderer.debug.LightSectionDebugRenderer$SectionData",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.SupportBlockRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.AxolotlRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChestedHorseRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DisplayRenderer$1",
            "XXX.renderer.entity.DisplayRenderer$ItemDisplayRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EnderDragonRenderer$DragonModel",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EntityRendererProvider$Context",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.FrogRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.GoatRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaRenderer$1",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.NoopRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.TadpoleRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.SaddleLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.TropicalFishPatternLayer$1",
            "XXX.entity.layers.WardenEmissiveLayer",
            "XXX.entity.layers.WardenEmissiveLayer$DrawSelector",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.renderer.item.ClampedItemPropertyFunction",
            "XXX.renderer.item.CompassItemPropertyFunction$CompassTarget",
            "XXX.renderer.item.ItemProperties",
            "XXX.renderer.item.ItemPropertyFunction",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.Dumpable",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.SpriteContents$AnimatedTexture",
            "XXX.renderer.texture.SpriteContents$InterpolationData",
            "XXX.renderer.texture.SpriteLoader",
            "XXX.renderer.texture.SpriteTicker",
            "XXX.renderer.texture.Stitcher$Entry",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Ticker",
            "XXX.renderer.texture.Tickable",
            "XXX.texture.atlas.SpriteSource",
            "XXX.texture.atlas.SpriteSource$SpriteSupplier",
            "XXX.texture.atlas.SpriteSourceList$1",
            "XXX.texture.atlas.SpriteSources",
            "XXX.atlas.sources.DirectoryLister",
            "XXX.atlas.sources.PalettedPermutations",
            "XXX.atlas.sources.SingleFile",
            "XXX.atlas.sources.Unstitcher",
            "XXX.atlas.sources.Unstitcher$RegionInstance",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.IndexedAssetSource",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PlayerSkin",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$2",
            "XXX.client.resources.SkinManager$TextureCache",
            "XXX.client.resources.SplashManager",
            "XXX.resources.language.ClientLanguage",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.gui.GuiMetadataSection",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice",
            "XXX.metadata.gui.GuiSpriteScaling$Stretch",
            "XXX.metadata.gui.GuiSpriteScaling$Type",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.AtlasSet",
            "XXX.resources.model.AtlasSet$StitchResult",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelBakery$ModelBakerImpl",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.client.resources.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.SnifferSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.IdSearchTree",
            "XXX.client.searchtree.MergingUniqueIterator",
            "XXX.client.searchtree.RefreshableSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$1",
            "XXX.client.searchtree.SearchRegistry",
            "XXX.client.searchtree.SearchRegistry$TreeBuilderSupplier",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngine$DeviceCheckState",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.telemetry.TelemetryEventInstance",
            "XXX.client.telemetry.TelemetryEventLogger",
            "XXX.client.telemetry.TelemetryEventType",
            "XXX.client.telemetry.TelemetryLogManager",
            "XXX.client.telemetry.TelemetryProperty$Exporter",
            "XXX.client.telemetry.TelemetryProperty$ServerType",
            "XXX.client.telemetry.TelemetryPropertyMap$1",
            "XXX.client.telemetry.WorldSessionTelemetryManager",
            "XXX.telemetry.events.GameLoadTimesEvent",
            "XXX.telemetry.events.PerformanceMetricsEvent",
            "XXX.telemetry.events.WorldLoadEvent$1",
            "XXX.telemetry.events.WorldUnloadEvent",
            "XXX.client.telemetry.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandBuildContext$2",
            "XXX.minecraft.commands.CommandBuildContext$3",
            "XXX.minecraft.commands.CommandBuildContext$MissingTagAccessPolicy",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$CommandMacro",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$1",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$Provider$2",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$2",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistryCodecs$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents$1",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.dispenser.AbstractProjectileDispenseBehavior",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$17",
            "XXX.core.dispenser.DispenseItemBehavior$19",
            "XXX.core.dispenser.DispenseItemBehavior$20",
            "XXX.core.dispenser.DispenseItemBehavior$22",
            "XXX.core.dispenser.DispenseItemBehavior$24",
            "XXX.core.dispenser.DispenseItemBehavior$26",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.DustParticleOptionsBase",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SculkChargeParticleOptions$1",
            "XXX.core.particles.ShriekParticleOption$1",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.core.particles.VibrationParticleOption$1",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.CraftingRecipeBuilder",
            "XXX.data.recipes.CraftingRecipeBuilder$CraftingResult",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$1",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SmithingTransformRecipeBuilder$Result",
            "XXX.data.recipes.SmithingTrimRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.recipes.packs.BundleRecipeProvider",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.tags.VanillaBlockTagsProvider",
            "XXX.data.tags.WorldPresetTagsProvider",
            "XXX.data.worldgen.AncientCityStructurePieces",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.DimensionTypes",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureSets",
            "XXX.data.worldgen.SurfaceRuleData",
            "XXX.data.worldgen.TerrainProvider",
            "XXX.data.worldgen.VillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientPongPacketListener",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.FriendlyByteBuf$Reader",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketFlowValidator",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatType$BoundNetwork",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents$1",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$2$1",
            "XXX.network.protocol.BundlerInfo$Provider",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.common.ClientCommonPacketListener",
            "XXX.protocol.common.ClientboundDisconnectPacket",
            "XXX.protocol.common.ClientboundPingPacket",
            "XXX.protocol.common.ClientboundUpdateTagsPacket",
            "XXX.protocol.common.ServerboundCustomPayloadPacket",
            "XXX.protocol.common.ServerboundPongPacket",
            "XXX.protocol.common.ServerboundResourcePackPacket$Action",
            "XXX.common.custom.BeeDebugPayload$BeeInfo",
            "XXX.common.custom.BrainDebugPayload$BrainDump",
            "XXX.common.custom.CustomPacketPayload",
            "XXX.common.custom.GameEventDebugPayload",
            "XXX.common.custom.GameTestAddMarkerDebugPayload",
            "XXX.common.custom.GoalDebugPayload",
            "XXX.common.custom.HiveDebugPayload",
            "XXX.common.custom.NeighborUpdatesDebugPayload",
            "XXX.common.custom.PoiAddedDebugPayload",
            "XXX.common.custom.PoiTicketCountDebugPayload",
            "XXX.common.custom.StructuresDebugPayload",
            "XXX.common.custom.VillageSectionsDebugPayload",
            "XXX.common.custom.package-info",
            "XXX.protocol.configuration.ClientConfigurationPacketListener",
            "XXX.protocol.configuration.ClientboundRegistryDataPacket",
            "XXX.protocol.configuration.ServerConfigurationPacketListener",
            "XXX.protocol.configuration.package-info",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundBundlePacket",
            "XXX.protocol.game.ClientboundChunkBatchFinishedPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket",
            "XXX.protocol.game.ClientboundClearTitlesPacket",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeResolver",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket$Action",
            "XXX.protocol.game.ClientboundDeleteChatPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundGameEventPacket$Type",
            "XXX.protocol.game.ClientboundHurtAnimationPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEndPacket",
            "XXX.protocol.game.ClientboundPlayerCombatKillPacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStartConfigurationPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.CommonPlayerSpawnInfo",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundConfigurationAcknowledgedPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundInteractPacket$Handler",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAtLocationAction",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntent",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryAnswerPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.login.custom.CustomQueryAnswerPayload",
            "XXX.login.custom.DiscardedQueryAnswerPayload",
            "XXX.login.custom.package-info",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$1",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.SynchedEntityData$DataValue",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.FileToIdConverter",
            "XXX.minecraft.resources.RegistryDataLoader",
            "XXX.minecraft.resources.RegistryDataLoader$Loader",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryOps",
            "XXX.minecraft.resources.RegistryOps$2",
            "XXX.minecraft.resources.RegistryOps$RegistryInfoLookup",
            "XXX.minecraft.resources.ResourceKey$InternKey",
            "XXX.minecraft.resources.ResourceLocation$Dummy",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$Data",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer",
            "XXX.minecraft.server.ServerFunctionManager$TraceCallbacks",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.chase.ChaseClient",
            "XXX.server.chase.ChaseServer",
            "XXX.server.chase.package-info",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.CloneCommands$DimensionAndPosition",
            "XXX.server.commands.DamageCommand",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugConfigCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.FunctionCommand$FunctionResult",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PlaceCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RandomCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.ReturnCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.DataCommands$StringProcessor",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkLevel",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ChunkTrackingView",
            "XXX.server.level.ChunkTrackingView$Positioned",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ServerPlayer$2",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.TickingTracker",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.ConfigurationTask$Type",
            "XXX.server.network.LegacyProtocolUtils",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerCommonPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.TextFilter",
            "XXX.server.network.TextFilterClient",
            "XXX.server.network.TextFilterClient$JoinOrLeaveEncoder",
            "XXX.server.network.TextFilterClient$PlayerContext",
            "XXX.network.config.JoinWorldTask",
            "XXX.network.config.package-info",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.BuiltInMetadata",
            "XXX.server.packs.FeatureFlagsMetadataSection",
            "XXX.server.packs.FilePackResources$FileResourcesSupplier",
            "XXX.server.packs.OverlayMetadataSection",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.PathPackResources$PathResourcesSupplier",
            "XXX.server.packs.VanillaPackResourcesBuilder",
            "XXX.packs.linkfs.LinkFSFileStore",
            "XXX.packs.linkfs.LinkFSPath$1",
            "XXX.packs.linkfs.LinkFSPath$3",
            "XXX.packs.linkfs.LinkFSProvider$1",
            "XXX.packs.linkfs.LinkFileSystem",
            "XXX.packs.linkfs.LinkFileSystem$DirectoryEntry",
            "XXX.packs.linkfs.PathContents$1",
            "XXX.packs.linkfs.PathContents$DirectoryContents",
            "XXX.packs.linkfs.package-info",
            "XXX.packs.metadata.MetadataSectionType",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.BuiltInPackSource",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.PackSource$1",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.CloseableResourceManager",
            "XXX.packs.resources.FallbackResourceManager$1ResourceWithSourceAndIndex",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.FallbackResourceManager$ResourceWithSource",
            "XXX.packs.resources.MultiPackResourceManager",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceFilterSection",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceMetadata",
            "XXX.packs.resources.ResourceMetadata$2",
            "XXX.packs.resources.ResourceMetadata$Builder$1",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BannerPatternTags",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.DamageTypeTags",
            "XXX.minecraft.tags.FlatLevelGeneratorPresetTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.PoiTypeTags",
            "XXX.minecraft.tags.TagBuilder",
            "XXX.minecraft.tags.TagEntry$Lookup",
            "XXX.minecraft.tags.TagKey",
            "XXX.minecraft.tags.TagLoader$1",
            "XXX.minecraft.tags.TagLoader$SortingEntry",
            "XXX.minecraft.tags.TagManager$LoadResult",
            "XXX.minecraft.tags.TagNetworkSerialization$NetworkPayload",
            "XXX.minecraft.tags.WorldPresetTags",
            "XXX.minecraft.util.AbortableIterationConsumer",
            "XXX.minecraft.util.ArrayListDeque",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$EitherCodec",
            "XXX.minecraft.util.ExtraCodecs$StrictOptionalFieldCodec",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.CriteriaRenameFix",
            "XXX.datafix.fixes.DropInvalidSignDataFix",
            "XXX.datafix.fixes.EffectDurationFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingFieldsRenameFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityVariantFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FilteredBooksFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GoatHornIdFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobEffectIdFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsProgrammerArtFix",
            "XXX.datafix.fixes.OverreachingTickFix",
            "XXX.datafix.fixes.PoiTypeRemoveFix",
            "XXX.datafix.fixes.RandomSequenceSettingsFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.ScoreboardDisplaySlotFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V3078",
            "XXX.datafix.schemas.V3082",
            "XXX.datafix.schemas.V3202",
            "XXX.datafix.schemas.V3204",
            "XXX.datafix.schemas.V3326",
            "XXX.datafix.schemas.V3328",
            "XXX.datafix.schemas.V3448",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.RandomSequences",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.DamageScaling",
            "XXX.world.damagesource.DamageSource$1",
            "XXX.world.damagesource.DamageType",
            "XXX.world.damagesource.DeathMessageType",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttributeModifierTemplate",
            "XXX.world.effect.HealOrHarmMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffect$MobEffectAttributeModifierTemplate",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.PoisonMobEffect",
            "XXX.world.effect.SaturationMobEffect",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Display",
            "XXX.world.entity.Display$BillboardConstraints",
            "XXX.world.entity.Display$BlockDisplay$BlockRenderState",
            "XXX.world.entity.Display$FloatInterpolator",
            "XXX.world.entity.Display$IntInterpolator",
            "XXX.world.entity.Display$ItemDisplay$1",
            "XXX.world.entity.Display$LinearFloatInterpolator",
            "XXX.world.entity.Display$PosRotInterpolationTarget",
            "XXX.world.entity.Display$TextDisplay",
            "XXX.world.entity.Display$TextDisplay$CachedInfo",
            "XXX.world.entity.Display$TextDisplay$LineSplitter",
            "XXX.world.entity.Display$TransformationInterpolator",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.RelativeMovement",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.VariantHolder",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$Base",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.allay.Allay",
            "XXX.animal.allay.Allay$VibrationUser",
            "XXX.animal.allay.package-info",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.camel.Camel",
            "XXX.animal.camel.Camel$CamelLookControl",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.ShapedRecipe$Serializer$RawShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer$Factory",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.SwiftSneakEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.Level$2",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureManager",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeGenerationSettings$PlainBuilder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$2",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.Climate",
            "XXX.level.biome.Climate$Parameter",
            "XXX.level.biome.Climate$ParameterPoint",
            "XXX.level.biome.Climate$RTree$Leaf",
            "XXX.level.biome.Climate$RTree$SubTree",
            "XXX.level.biome.Climate$SpawnFinder",
            "XXX.level.biome.Climate$TargetPoint",
            "XXX.level.biome.FeatureSorter$1FeatureData",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.MobSpawnSettings$Builder",
            "XXX.level.biome.MobSpawnSettings$SpawnerData",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider",
            "XXX.level.biome.OverworldBiomeBuilder",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractCandleBlock",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractGlassBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AmethystClusterBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.AzaleaBlock",
            "XXX.level.block.BambooStalkBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BaseRailBlock$1",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BedBlock$1",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.BigDripleafStemBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$BlockStatePairKey",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BrushableBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.BushBlock",
            "XXX.level.block.ButtonBlock$1",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CandleCakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.CaveVines",
            "XXX.level.block.CaveVinesPlantBlock",
            "XXX.level.block.ChainBlock",
            "XXX.level.block.ChangeOverTimeBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChiseledBookShelfBlock",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.CryingObsidianBlock",
            "XXX.level.block.DeadBushBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DirtPathBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropExperienceBlock",
            "XXX.level.block.EnchantmentTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.Fallable",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrogspawnBlock",
            "XXX.level.block.FungusBlock",
            "XXX.level.block.GameMasterBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.GrowingPlantBlock",
            "XXX.level.block.GrowingPlantHeadBlock",
            "XXX.level.block.HangingRootsBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LavaCauldronBlock",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LightBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MangroveLeavesBlock",
            "XXX.level.block.MangroveRootsBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MossBlock",
            "XXX.level.block.MultifaceBlock",
            "XXX.level.block.MultifaceSpreader$DefaultSpreaderConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPos",
            "XXX.level.block.MultifaceSpreader$SpreadType",
            "XXX.level.block.MultifaceSpreader$SpreadType$2",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PinkPetalsBlock",
            "XXX.level.block.PitcherCropBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PowderSnowCauldronBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkBehaviour",
            "XXX.level.block.SculkBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SculkSpreader",
            "XXX.level.block.SculkVeinBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SporeBlossomBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SuspiciousEffectHolder",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TorchflowerCropBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlantBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallHangingSignBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WeatheringCopper",
            "XXX.level.block.WeatheringCopperFullBlock",
            "XXX.level.block.WeatheringCopperStairBlock",
            "XXX.level.block.WeepingVinesBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityTicker",
            "XXX.block.entity.BlockEntityType$BlockEntitySupplier",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.BrushableBlockEntity",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.ChestLidController",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DecoratedPotBlockEntity$Decorations",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity$1",
            "XXX.block.entity.HangingSignBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.SculkCatalystBlockEntity$CatalystListener",
            "XXX.block.entity.SculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.SculkShriekerBlockEntity$VibrationUser",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickingBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.AzaleaTreeGrower",
            "XXX.block.grower.CherryTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$OffsetType",
            "XXX.block.state.BlockBehaviour$StateArgumentPredicate",
            "XXX.block.state.BlockState",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockSetType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ChestType$1",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.NoteBlockInstrument$Type",
            "XXX.state.properties.Property",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.RotationSegment",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BlockColumn",
            "XXX.level.chunk.CarvingMask",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGenerators",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunk$BoundTickingBlockEntity",
            "XXX.level.chunk.LevelChunk$PostLoadProcessor",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LightChunk",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$Configuration",
            "XXX.level.chunk.PalettedContainer$Data",
            "XXX.level.chunk.PalettedContainer$Strategy$1",
            "XXX.level.chunk.PalettedContainerRO",
            "XXX.level.chunk.PalettedContainerRO$Unpacker",
            "XXX.level.chunk.SingleValuePalette",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.EntityStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionDefaults",
            "XXX.level.dimension.DimensionType$MonsterSettings",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.entity.ChunkEntities",
            "XXX.level.entity.EntityAccess",
            "XXX.level.entity.EntityInLevelCallback$1",
            "XXX.level.entity.EntityPersistentStorage",
            "XXX.level.entity.EntitySectionStorage",
            "XXX.level.entity.EntityTypeTest",
            "XXX.level.entity.LevelCallback",
            "XXX.level.entity.LevelEntityGetterAdapter",
            "XXX.level.entity.PersistentEntitySectionManager$Callback",
            "XXX.level.entity.TransientEntitySectionManager",
            "XXX.level.entity.Visibility",
            "XXX.level.gameevent.BlockPositionSource",
            "XXX.level.gameevent.DynamicGameEventListener",
            "XXX.level.gameevent.EntityPositionSource$Type",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry$OnEmptyAction",
            "XXX.level.gameevent.GameEvent$Context",
            "XXX.level.gameevent.GameEventDispatcher",
            "XXX.level.gameevent.GameEventListener$DeliveryMode",
            "XXX.level.gameevent.GameEventListenerRegistry",
            "XXX.level.gameevent.GameEventListenerRegistry$ListenerVisitor",
            "XXX.level.gameevent.PositionSourceType",
            "XXX.gameevent.vibrations.VibrationInfo",
            "XXX.gameevent.vibrations.VibrationSystem",
            "XXX.gameevent.vibrations.VibrationSystem$Listener",
            "XXX.gameevent.vibrations.VibrationSystem$User",
            "XXX.level.levelgen.Aquifer",
            "XXX.level.levelgen.Aquifer$FluidPicker",
            "XXX.level.levelgen.Aquifer$NoiseBasedAquifer",
            "XXX.level.levelgen.Beardifier$1",
            "XXX.level.levelgen.BelowZeroRetrogen",
            "XXX.level.levelgen.BitRandomSource",
            "XXX.level.levelgen.Column$Line",
            "XXX.level.levelgen.Column$Ray",
            "XXX.level.levelgen.Density",
            "XXX.level.levelgen.DensityFunction$ContextProvider",
            "XXX.level.levelgen.DensityFunction$NoiseHolder",
            "XXX.level.levelgen.DensityFunction$SinglePointContext",
            "XXX.level.levelgen.DensityFunctions",
            "XXX.level.levelgen.DensityFunctions$Ap2",
            "XXX.level.levelgen.DensityFunctions$BeardifierOrMarker",
            "XXX.level.levelgen.DensityFunctions$BlendDensity",
            "XXX.level.levelgen.DensityFunctions$Clamp",
            "XXX.level.levelgen.DensityFunctions$EndIslandDensityFunction",
            "XXX.level.levelgen.DensityFunctions$Mapped",
            "XXX.level.levelgen.DensityFunctions$Marker",
            "XXX.level.levelgen.DensityFunctions$MarkerOrMarked",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd$Type",
            "XXX.level.levelgen.DensityFunctions$PureTransformer",
            "XXX.level.levelgen.DensityFunctions$Shift",
            "XXX.level.levelgen.DensityFunctions$ShiftB",
            "XXX.level.levelgen.DensityFunctions$ShiftedNoise",
            "XXX.level.levelgen.DensityFunctions$Spline$Coordinate",
            "XXX.level.levelgen.DensityFunctions$TransformerWithContext",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction$Type",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler$RarityValueMapper",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.GeodeBlockSettings",
            "XXX.level.levelgen.GeodeLayerSettings",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.LegacyRandomSource",
            "XXX.level.levelgen.MarsagliaPolarGaussian",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$2",
            "XXX.level.levelgen.NoiseChunk$BlendOffset",
            "XXX.level.levelgen.NoiseChunk$Cache2D",
            "XXX.level.levelgen.NoiseChunk$CacheOnce",
            "XXX.level.levelgen.NoiseChunk$NoiseChunkDensityFunction",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseRouterData",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.OreVeinifier",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomState$1",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldDimensions",
            "XXX.level.levelgen.WorldDimensions$Complete",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$CellValueGetter",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.package-info",
            "XXX.levelgen.blockpredicates.AnyOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicateType",
            "XXX.levelgen.blockpredicates.HasSturdyFacePredicate",
            "XXX.levelgen.blockpredicates.MatchingBlockTagPredicate",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.blockpredicates.StateTestingPredicate",
            "XXX.levelgen.blockpredicates.WouldSurvivePredicate",
            "XXX.levelgen.carver.CanyonCarverConfiguration",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockColumnFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DiskFeature",
            "XXX.levelgen.feature.DripstoneUtils",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FeatureCountTracker$1",
            "XXX.levelgen.feature.FeatureCountTracker$LevelData",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.FossilFeatureConfiguration",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeFungusConfiguration",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature$WindOffsetter",
            "XXX.levelgen.feature.MultifaceGrowthFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.PointedDripstoneFeature",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RootSystemFeature",
            "XXX.levelgen.feature.SculkPatchFeature",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.TwistingVinesFeature",
            "XXX.levelgen.feature.VegetationPatchFeature",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.feature.configurations.BlockColumnConfiguration",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.ColumnFeatureConfiguration",
            "XXX.feature.configurations.DeltaFeatureConfiguration",
            "XXX.feature.configurations.DripstoneClusterConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.NetherForestVegetationConfig",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.PointedDripstoneConfiguration",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.SculkPatchConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.configurations.UnderwaterMagmaConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageSetter",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.rootplacers.MangroveRootPlacement",
            "XXX.feature.rootplacers.RootPlacer",
            "XXX.feature.rootplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.NoiseBasedStateProvider",
            "XXX.feature.stateproviders.NoiseThresholdProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider$Rule",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecorator$Context",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.feature.trunkplacers.BendingTrunkPlacer",
            "XXX.feature.trunkplacers.DarkOakTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer$FoliageCoords",
            "XXX.feature.trunkplacers.GiantTrunkPlacer",
            "XXX.feature.trunkplacers.StraightTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacerType",
            "XXX.feature.trunkplacers.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorPreset",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets$Bootstrap",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.heightproviders.WeightedListHeight",
            "XXX.levelgen.material.MaterialRuleList",
            "XXX.levelgen.material.package-info",
            "XXX.levelgen.placement.BiomeFilter",
            "XXX.levelgen.placement.CarvingMaskPlacement",
            "XXX.levelgen.placement.CountOnEveryLayerPlacement",
            "XXX.levelgen.placement.EnvironmentScanPlacement",
            "XXX.levelgen.placement.HeightmapPlacement",
            "XXX.levelgen.placement.NoiseBasedCountPlacement",
            "XXX.levelgen.placement.PlacedFeature",
            "XXX.levelgen.placement.PlacementFilter",
            "XXX.levelgen.placement.PlacementModifierType",
            "XXX.levelgen.placement.RarityFilter",
            "XXX.levelgen.placement.SurfaceRelativeThresholdFilter",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.presets.WorldPresets",
            "XXX.levelgen.presets.package-info",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuiltinStructures",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.SinglePieceStructure$PieceConstructor",
            "XXX.levelgen.structure.Structure$GenerationContext",
            "XXX.levelgen.structure.Structure$StructureSettings",
            "XXX.levelgen.structure.StructureCheckResult",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureSet",
            "XXX.levelgen.structure.StructureSpawnOverride",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.pieces.PieceGenerator$Context",
            "XXX.structure.pieces.PieceGeneratorSupplier$Context",
            "XXX.structure.pieces.StructurePieceSerializationContext",
            "XXX.structure.pieces.StructurePieceType$ContextlessType",
            "XXX.structure.pieces.StructurePiecesBuilder",
            "XXX.structure.placement.ConcentricRingsStructurePlacement",
            "XXX.structure.placement.RandomSpreadType",
            "XXX.structure.placement.StructurePlacement",
            "XXX.structure.placement.StructurePlacement$FrequencyReducer",
            "XXX.structure.placement.StructurePlacementType",
            "XXX.structure.pools.EmptyPoolElement",
            "XXX.structure.pools.JigsawJunction",
            "XXX.structure.pools.JigsawPlacement$PieceState",
            "XXX.structure.pools.LegacySinglePoolElement",
            "XXX.structure.pools.SinglePoolElement",
            "XXX.structure.pools.StructurePoolElementType",
            "XXX.structure.pools.StructureTemplatePool$Projection",
            "XXX.structure.structures.BuriedTreasurePieces",
            "XXX.structure.structures.BuriedTreasureStructure",
            "XXX.structure.structures.DesertPyramidStructure",
            "XXX.structure.structures.EndCityPieces$1",
            "XXX.structure.structures.EndCityPieces$3",
            "XXX.structure.structures.EndCityPieces$EndCityPiece",
            "XXX.structure.structures.EndCityStructure",
            "XXX.structure.structures.IglooPieces$IglooPiece",
            "XXX.structure.structures.JigsawStructure",
            "XXX.structure.structures.JungleTemplePiece",
            "XXX.structure.structures.JungleTempleStructure",
            "XXX.structure.structures.MineshaftPieces$1",
            "XXX.structure.structures.MineshaftPieces$MineShaftCrossing",
            "XXX.structure.structures.MineshaftPieces$MineShaftRoom",
            "XXX.structure.structures.MineshaftStructure",
            "XXX.structure.structures.NetherFortressPieces",
            "XXX.structure.structures.NetherFortressPieces$BridgeCrossing",
            "XXX.structure.structures.NetherFortressPieces$BridgeStraight",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorTBalconyPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorCrossingPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleStalkRoom",
            "XXX.structure.structures.NetherFortressPieces$NetherBridgePiece",
            "XXX.structure.structures.NetherFortressPieces$RoomCrossing",
            "XXX.structure.structures.NetherFortressPieces$StartPiece",
            "XXX.structure.structures.NetherFossilPieces",
            "XXX.structure.structures.NetherFossilStructure",
            "XXX.structure.structures.OceanMonumentPieces$1",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentBuilding",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$RoomDefinition",
            "XXX.structure.structures.OceanRuinPieces",
            "XXX.structure.structures.OceanRuinPieces$OceanRuinPiece",
            "XXX.structure.structures.OceanRuinStructure$Type",
            "XXX.structure.structures.RuinedPortalPiece$Properties",
            "XXX.structure.structures.RuinedPortalStructure",
            "XXX.structure.structures.ShipwreckPieces",
            "XXX.structure.structures.ShipwreckStructure",
            "XXX.structure.structures.StrongholdPieces$1",
            "XXX.structure.structures.StrongholdPieces$3",
            "XXX.structure.structures.StrongholdPieces$FillerCorridor",
            "XXX.structure.structures.StrongholdPieces$LeftTurn",
            "XXX.structure.structures.StrongholdPieces$PieceWeight",
            "XXX.structure.structures.StrongholdPieces$PrisonHall",
            "XXX.structure.structures.StrongholdPieces$RoomCrossing",
            "XXX.structure.structures.StrongholdPieces$StairsDown",
            "XXX.structure.structures.StrongholdPieces$Straight",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece",
            "XXX.structure.structures.StrongholdPieces$Turn",
            "XXX.structure.structures.SwampHutPiece",
            "XXX.structure.structures.WoodlandMansionPieces",
            "XXX.structure.structures.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.structure.structures.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionStructure",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlackstoneReplaceProcessor",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.CappedProcessor",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.LinearPosTest",
            "XXX.structure.templatesystem.PosAlwaysTrueTest",
            "XXX.structure.templatesystem.PosRuleTestType",
            "XXX.structure.templatesystem.ProtectedBlockProcessor",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorList",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$Palette",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.StructureTemplateManager",
            "XXX.structure.templatesystem.StructureTemplateManager$Source",
            "XXX.structure.templatesystem.package-info",
            "XXX.rule.blockentity.AppendStatic",
            "XXX.rule.blockentity.Passthrough",
            "XXX.rule.blockentity.RuleBlockEntityModifierType",
            "XXX.levelgen.synth.BlendedNoise",
            "XXX.levelgen.synth.NoiseUtils",
            "XXX.levelgen.synth.NormalNoise$NoiseParameters",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.ChunkSkyLightSources",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LayerLightSectionStorage$SectionType",
            "XXX.level.lighting.LeveledPriorityQueue",
            "XXX.level.lighting.LightEngine",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightEngine$1",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.FogType",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.MapColor",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.level.pathfinder.AmphibiousNodeEvaluator",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.portal.PortalForcer",
            "XXX.level.portal.PortalShape",
            "XXX.level.redstone.CollectingNeighborUpdater",
            "XXX.level.redstone.CollectingNeighborUpdater$MultiNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$ShapeUpdate",
            "XXX.level.redstone.InstantNeighborUpdater",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.MapItemSavedData$MapPatch",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$LevelCandidates",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$2",
            "XXX.level.storage.LevelSummary$BackupStatus",
            "XXX.level.storage.LevelVersion",
            "XXX.level.storage.PrimaryLevelData",
            "XXX.level.storage.ServerLevelData",
            "XXX.level.storage.WritableLevelData",
            "XXX.storage.loot.IntRange",
            "XXX.storage.loot.IntRange$IntLimiter",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$VisitedEntry",
            "XXX.storage.loot.LootDataId",
            "XXX.storage.loot.LootDataManager$1",
            "XXX.storage.loot.LootDataType",
            "XXX.storage.loot.LootParams",
            "XXX.storage.loot.LootParams$DynamicDrop",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryType",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Path",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FunctionReference",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunctionType",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.SequenceFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetBannerPatternFunction$Builder",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetEnchantmentsFunction",
            "XXX.loot.functions.SetInstrumentFunction",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$EffectEntry",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AllOfCondition",
            "XXX.loot.predicates.AnyOfCondition",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.CompositeLootItemCondition$Builder",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.ValueCheckCondition",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.providers.nbt.ContextNbtProvider",
            "XXX.providers.nbt.ContextNbtProvider$2",
            "XXX.providers.nbt.LootNbtProviderType",
            "XXX.providers.nbt.NbtProviders",
            "XXX.providers.nbt.package-info",
            "XXX.providers.number.ConstantValue",
            "XXX.providers.number.NumberProvider",
            "XXX.providers.number.ScoreboardValue",
            "XXX.providers.number.package-info",
            "XXX.providers.score.FixedScoreboardNameProvider",
            "XXX.providers.score.ScoreboardNameProvider",
            "XXX.providers.score.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.level.validation.ContentValidationException",
            "XXX.level.validation.DirectoryValidator$1",
            "XXX.level.validation.PathAllowList",
            "XXX.level.validation.PathAllowList$EntryType",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.world.scores.DisplaySlot",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info",
            "XXX.world.ticks.BlackholeTickAccess",
            "XXX.world.ticks.BlackholeTickAccess$2",
            "XXX.world.ticks.LevelChunkTicks",
            "XXX.world.ticks.LevelTicks",
            "XXX.world.ticks.ProtoChunkTicks",
            "XXX.world.ticks.SavedTick$1",
            "XXX.world.ticks.ScheduledTick$1",
            "XXX.world.ticks.TickAccess",
            "XXX.world.ticks.TickPriority",
            "XXX.world.ticks.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.realmsclient.RealmsMainScreen$NotificationButton \u001b[2;32m+1M\u001b[0m",
          "XXX.mojang.realmsclient.RealmsMainScreen$ServerEntry \u001b[2;31m-2M\u001b[0m",
          "XXX.gui.screens.RealmsResetNormalWorldScreen \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.screens.RealmsSelectFileToUploadScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.util.task.ConnectTask \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.util.task.GetServerDetailsTask \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.util.task.OpenServerTask \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.util.task.RestoreTask \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.util.task.SwitchSlotTask \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.advancements.Advancement \u001b[2;32m+20M\u001b[0m \u001b[2;31m-15M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-6P\u001b[0m",
          "XXX.minecraft.advancements.AdvancementProgress \u001b[2;32m+15M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.AbstractCriterionTriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.BlockPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.CuredZombieVillagerTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.DamagePredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.DamageSourcePredicate \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.DistanceTrigger \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.EffectsChangedTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.EnchantedItemTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EntityEquipmentPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EntityFlagsPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.EntityPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.FilledBucketTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.FluidPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance \u001b[2;32m+5M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.advancements.critereon.ItemPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.ItemUsedOnLocationTrigger$TriggerInstance \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.advancements.critereon.KilledTrigger$TriggerInstance \u001b[2;32m+16M\u001b[0m \u001b[2;31m-16M\u001b[0m",
          "XXX.advancements.critereon.LevitationTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.LightPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.LightningStrikeTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.LootTableTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.PickedUpItemTrigger \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.PlayerHurtEntityTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.PlayerInteractTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.PlayerPredicate$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.PlayerTrigger \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.RecipeCraftedTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.RecipeUnlockedTrigger \u001b[2;32m+4M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.ShotCrossbowTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.advancements.critereon.SimpleCriterionTrigger \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.player.Player \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.player.StackedContents \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.inventory.AbstractFurnaceMenu \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.inventory.ResultContainer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.world.inventory.SmithingMenu \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.item.crafting.AbstractCookingRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.item.crafting.BannerDuplicateRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.item.crafting.BookCloningRecipe \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.item.crafting.RecipeSerializer \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.item.crafting.ShapedRecipe \u001b[2;32m+3M\u001b[0m \u001b[2;31m-10M\u001b[0m | \u001b[2;31m-1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.RealmsMainScreen$NotificationButton",
        "differences": {
          "added": [],
          "removed": [
            "int notificationCount()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.RealmsMainScreen$ServerEntry",
        "differences": {
          "added": [
            "void renderMcoServerItem(RealmsServer,GuiGraphics,int,int,int,int)",
            "void renderLegacy(RealmsServer,GuiGraphics,int,int,int,int)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.gui.screens.RealmsSelectFileToUploadScreen",
        "differences": {
          "added": [
            "void <init>(long,int,RealmsResetWorldScreen,Runnable)"
          ],
          "removed": [
            "void <init>(long,int,RealmsResetWorldScreen)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.task.ConnectTask",
        "differences": {
          "added": [],
          "removed": [
            "Component getTitle()",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.task.GetServerDetailsTask",
        "differences": {
          "added": [],
          "removed": [
            "Component getTitle()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.task.OpenServerTask",
        "differences": {
          "added": [],
          "removed": [
            "Component getTitle()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.task.RestoreTask",
        "differences": {
          "added": [],
          "removed": [
            "Component getTitle()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.task.SwitchSlotTask",
        "differences": {
          "added": [],
          "removed": [
            "Component getTitle()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.Advancement",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Advancement,DisplayInfo,AdvancementRewards,Map,String[][],boolean)",
            "Advancement$Builder deconstruct()",
            "Advancement getParent()",
            "Advancement getRoot()",
            "Advancement getRoot(Advancement)",
            "DisplayInfo getDisplay()",
            "AdvancementRewards getRewards()",
            "Iterable getChildren()",
            "Map getCriteria()",
            "int getMaxCriteraRequired()",
            "void addChild(Advancement)",
            "ResourceLocation getId()",
            "String[][] getRequirements()",
            "Component getChatComponent()",
            "Style lambda$new$0(Component,Style)"
          ],
          "removed": [
            "void <init>(Optional,Optional,AdvancementRewards,Map,AdvancementRequirements,boolean)",
            "void <init>(Optional,Optional,AdvancementRewards,Map,AdvancementRequirements,boolean,Optional)",
            "Component decorateName(DisplayInfo)",
            "Component name(AdvancementHolder)",
            "JsonObject serializeToJson()",
            "Advancement fromJson(JsonObject,DeserializationContext)",
            "void write(FriendlyByteBuf)",
            "Advancement read(FriendlyByteBuf)",
            "boolean isRoot()",
            "Optional parent()",
            "Optional display()",
            "AdvancementRewards rewards()",
            "Map criteria()",
            "AdvancementRequirements requirements()",
            "Optional name()",
            "void lambda$write$4(FriendlyByteBuf,DisplayInfo)",
            "void lambda$serializeToJson$3(JsonObject,DisplayInfo)",
            "void lambda$serializeToJson$2(JsonObject,ResourceLocation)",
            "Component lambda$name$1(AdvancementHolder)",
            "Style lambda$decorateName$0(Component,Style)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.AdvancementProgress",
        "differences": {
          "added": [
            "void update(Map,String[][])",
            "Date getFirstProgressDate()",
            "void lambda$serializeToNetwork$1(FriendlyByteBuf,CriterionProgress)",
            "boolean lambda$update$0(Set,Map$Entry)"
          ],
          "removed": [
            "void update(AdvancementRequirements)",
            "boolean isCriterionDone(String)",
            "Instant getFirstProgressDate()",
            "void lambda$serializeToNetwork$10(FriendlyByteBuf,CriterionProgress)",
            "boolean lambda$update$9(Set,Map$Entry)",
            "App lambda$static$8(RecordCodecBuilder$Instance)",
            "AdvancementProgress lambda$static$7(Map,Boolean)",
            "Map lambda$static$6(AdvancementProgress)",
            "Map lambda$static$5(Map)",
            "Instant lambda$static$4(Map$Entry)",
            "boolean lambda$static$3(Map$Entry)",
            "Map lambda$static$2(Map)",
            "CriterionProgress lambda$static$1(Map$Entry)",
            "TemporalAccessor lambda$static$0(Instant)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.AbstractCriterionTriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional)",
            "ResourceLocation getCriterion()",
            "Optional getPlayerPredicate()",
            "String toString()"
          ],
          "removed": [
            "void <init>(Optional)",
            "Optional playerPredicate()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
        "differences": {
          "added": [
            "BeeNestDestroyedTrigger$TriggerInstance destroyedBeeNest(Block,ItemPredicate$Builder,MinMaxBounds$Ints)"
          ],
          "removed": [
            "Criterion destroyedBeeNest(Block,ItemPredicate$Builder,MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BlockPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "BlockPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
        "differences": {
          "added": [
            "BredAnimalsTrigger$TriggerInstance bredAnimals()",
            "BredAnimalsTrigger$TriggerInstance bredAnimals(EntityPredicate$Builder)",
            "BredAnimalsTrigger$TriggerInstance bredAnimals(Optional,Optional,Optional)"
          ],
          "removed": [
            "Criterion bredAnimals()",
            "Criterion bredAnimals(EntityPredicate$Builder)",
            "Criterion bredAnimals(Optional,Optional,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
        "differences": {
          "added": [
            "BrewedPotionTrigger$TriggerInstance brewedPotion()"
          ],
          "removed": [
            "Criterion brewedPotion()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ChangeDimensionTrigger$TriggerInstance changedDimension()",
            "ChangeDimensionTrigger$TriggerInstance changedDimension(ResourceKey,ResourceKey)",
            "ChangeDimensionTrigger$TriggerInstance changedDimensionTo(ResourceKey)",
            "ChangeDimensionTrigger$TriggerInstance changedDimensionFrom(ResourceKey)"
          ],
          "removed": [
            "Criterion changedDimension()",
            "Criterion changedDimension(ResourceKey,ResourceKey)",
            "Criterion changedDimensionTo(ResourceKey)",
            "Criterion changedDimensionFrom(ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ChanneledLightningTrigger$TriggerInstance channeledLightning(EntityPredicate$Builder[])"
          ],
          "removed": [
            "Criterion channeledLightning(EntityPredicate$Builder[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ConstructBeaconTrigger$TriggerInstance constructedBeacon()",
            "ConstructBeaconTrigger$TriggerInstance constructedBeacon(MinMaxBounds$Ints)"
          ],
          "removed": [
            "Criterion constructedBeacon()",
            "Criterion constructedBeacon(MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ConsumeItemTrigger$TriggerInstance usedItem()",
            "ConsumeItemTrigger$TriggerInstance usedItem(ItemPredicate)",
            "ConsumeItemTrigger$TriggerInstance usedItem(ItemLike)"
          ],
          "removed": [
            "Criterion usedItem()",
            "Criterion usedItem(ItemLike)",
            "Criterion usedItem(ItemPredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.CuredZombieVillagerTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DamagePredicate",
        "differences": {
          "added": [
            "Optional of(MinMaxBounds$Doubles,MinMaxBounds$Doubles,Optional,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DamageSourcePredicate",
        "differences": {
          "added": [
            "Optional of(List,Optional,Optional)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.DistanceTrigger",
        "differences": {
          "added": [
            "void <init>(ResourceLocation)",
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ],
          "removed": [
            "void <init>()",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EffectsChangedTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EnchantedItemTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance",
        "differences": {
          "added": [
            "EnterBlockTrigger$TriggerInstance entersBlock(Block)"
          ],
          "removed": [
            "Criterion entersBlock(Block)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityEquipmentPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "EntityEquipmentPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityFlagsPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "EntityFlagsPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
        "differences": {
          "added": [
            "EntityHurtPlayerTrigger$TriggerInstance entityHurtPlayer()",
            "EntityHurtPlayerTrigger$TriggerInstance entityHurtPlayer(DamagePredicate)",
            "EntityHurtPlayerTrigger$TriggerInstance entityHurtPlayer(DamagePredicate$Builder)"
          ],
          "removed": [
            "Criterion entityHurtPlayer()",
            "Criterion entityHurtPlayer(DamagePredicate)",
            "Criterion entityHurtPlayer(DamagePredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.EntityPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "EntityPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FilledBucketTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
        "differences": {
          "added": [
            "FishingRodHookedTrigger$TriggerInstance fishedItem(Optional,Optional,Optional)"
          ],
          "removed": [
            "Criterion fishedItem(Optional,Optional,Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.FluidPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "FluidPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ImpossibleTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ResourceLocation getCriterion()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
        "differences": {
          "added": [
            "InventoryChangeTrigger$TriggerInstance hasItems(ItemPredicate$Builder[])",
            "InventoryChangeTrigger$TriggerInstance hasItems(ItemPredicate[])",
            "InventoryChangeTrigger$TriggerInstance hasItems(ItemLike[])",
            "boolean lambda$matches$2(ItemStack,ItemPredicate)",
            "ItemPredicate[] lambda$hasItems$1(int)",
            "Stream lambda$hasItems$0(ItemPredicate$Builder)"
          ],
          "removed": [
            "Criterion hasItems(ItemPredicate$Builder[])",
            "Criterion hasItems(ItemPredicate[])",
            "Criterion hasItems(ItemLike[])",
            "boolean lambda$matches$1(ItemStack,ItemPredicate)",
            "ItemPredicate[] lambda$hasItems$0(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
        "differences": {
          "added": [
            "ItemDurabilityTrigger$TriggerInstance changedDurability(Optional,MinMaxBounds$Ints)",
            "ItemDurabilityTrigger$TriggerInstance changedDurability(Optional,Optional,MinMaxBounds$Ints)"
          ],
          "removed": [
            "Criterion changedDurability(Optional,MinMaxBounds$Ints)",
            "Criterion changedDurability(Optional,Optional,MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "ItemPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ItemUsedOnLocationTrigger$TriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional,Optional)",
            "ItemUsedOnLocationTrigger$TriggerInstance placedBlock(Block)",
            "ItemUsedOnLocationTrigger$TriggerInstance placedBlock(LootItemCondition$Builder[])",
            "ItemUsedOnLocationTrigger$TriggerInstance itemUsedOnLocation(LocationPredicate$Builder,ItemPredicate$Builder,ResourceLocation)",
            "ItemUsedOnLocationTrigger$TriggerInstance itemUsedOnBlock(LocationPredicate$Builder,ItemPredicate$Builder)",
            "ItemUsedOnLocationTrigger$TriggerInstance allayDropItemOnBlock(LocationPredicate$Builder,ItemPredicate$Builder)"
          ],
          "removed": [
            "void <init>(Optional,Optional)",
            "Criterion placedBlock(Block)",
            "Criterion placedBlock(LootItemCondition$Builder[])",
            "ItemUsedOnLocationTrigger$TriggerInstance itemUsedOnLocation(LocationPredicate$Builder,ItemPredicate$Builder)",
            "Criterion itemUsedOnBlock(LocationPredicate$Builder,ItemPredicate$Builder)",
            "Criterion allayDropItemOnBlock(LocationPredicate$Builder,ItemPredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
        "differences": {
          "added": [
            "KilledByCrossbowTrigger$TriggerInstance crossbowKilled(EntityPredicate$Builder[])",
            "KilledByCrossbowTrigger$TriggerInstance crossbowKilled(MinMaxBounds$Ints)"
          ],
          "removed": [
            "Criterion crossbowKilled(EntityPredicate$Builder[])",
            "Criterion crossbowKilled(MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.KilledTrigger$TriggerInstance",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Optional,Optional,Optional)",
            "KilledTrigger$TriggerInstance playerKilledEntity(Optional)",
            "KilledTrigger$TriggerInstance playerKilledEntity(EntityPredicate$Builder)",
            "KilledTrigger$TriggerInstance playerKilledEntity()",
            "KilledTrigger$TriggerInstance playerKilledEntity(Optional,Optional)",
            "KilledTrigger$TriggerInstance playerKilledEntity(EntityPredicate$Builder,Optional)",
            "KilledTrigger$TriggerInstance playerKilledEntity(Optional,DamageSourcePredicate$Builder)",
            "KilledTrigger$TriggerInstance playerKilledEntity(EntityPredicate$Builder,DamageSourcePredicate$Builder)",
            "KilledTrigger$TriggerInstance playerKilledEntityNearSculkCatalyst()",
            "KilledTrigger$TriggerInstance entityKilledPlayer(Optional)",
            "KilledTrigger$TriggerInstance entityKilledPlayer(EntityPredicate$Builder)",
            "KilledTrigger$TriggerInstance entityKilledPlayer()",
            "KilledTrigger$TriggerInstance entityKilledPlayer(Optional,Optional)",
            "KilledTrigger$TriggerInstance entityKilledPlayer(EntityPredicate$Builder,Optional)",
            "KilledTrigger$TriggerInstance entityKilledPlayer(Optional,DamageSourcePredicate$Builder)",
            "KilledTrigger$TriggerInstance entityKilledPlayer(EntityPredicate$Builder,DamageSourcePredicate$Builder)"
          ],
          "removed": [
            "void <init>(Optional,Optional,Optional)",
            "Criterion playerKilledEntity(Optional)",
            "Criterion playerKilledEntity(EntityPredicate$Builder)",
            "Criterion playerKilledEntity()",
            "Criterion playerKilledEntity(Optional,Optional)",
            "Criterion playerKilledEntity(EntityPredicate$Builder,Optional)",
            "Criterion playerKilledEntity(Optional,DamageSourcePredicate$Builder)",
            "Criterion playerKilledEntity(EntityPredicate$Builder,DamageSourcePredicate$Builder)",
            "Criterion playerKilledEntityNearSculkCatalyst()",
            "Criterion entityKilledPlayer(Optional)",
            "Criterion entityKilledPlayer(EntityPredicate$Builder)",
            "Criterion entityKilledPlayer()",
            "Criterion entityKilledPlayer(Optional,Optional)",
            "Criterion entityKilledPlayer(EntityPredicate$Builder,Optional)",
            "Criterion entityKilledPlayer(Optional,DamageSourcePredicate$Builder)",
            "Criterion entityKilledPlayer(EntityPredicate$Builder,DamageSourcePredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LevitationTrigger$TriggerInstance",
        "differences": {
          "added": [
            "LevitationTrigger$TriggerInstance levitated(DistancePredicate)"
          ],
          "removed": [
            "Criterion levitated(DistancePredicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LightPredicate$Builder",
        "differences": {
          "added": [
            "Optional build()"
          ],
          "removed": [
            "LightPredicate build()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LightningStrikeTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.LootTableTrigger$TriggerInstance",
        "differences": {
          "added": [
            "LootTableTrigger$TriggerInstance lootTableUsed(ResourceLocation)"
          ],
          "removed": [
            "Criterion lootTableUsed(ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PickedUpItemTrigger",
        "differences": {
          "added": [
            "void <init>(ResourceLocation)",
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ],
          "removed": [
            "void <init>()",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerHurtEntityTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerInteractTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerPredicate$Builder",
        "differences": {
          "added": [
            "PlayerPredicate$Builder setLookingAt(Optional)"
          ],
          "removed": [
            "PlayerPredicate$Builder setLookingAt(EntityPredicate$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerTrigger",
        "differences": {
          "added": [
            "void <init>(ResourceLocation)",
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ],
          "removed": [
            "void <init>()",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.RecipeCraftedTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.RecipeUnlockedTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "void trigger(ServerPlayer,Recipe)",
            "RecipeUnlockedTrigger$TriggerInstance unlocked(ResourceLocation)",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "boolean lambda$trigger$0(Recipe,RecipeUnlockedTrigger$TriggerInstance)",
            "void <clinit>()"
          ],
          "removed": [
            "void trigger(ServerPlayer,RecipeHolder)",
            "Criterion unlocked(ResourceLocation)",
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "boolean lambda$trigger$0(RecipeHolder,RecipeUnlockedTrigger$TriggerInstance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.ShotCrossbowTrigger",
        "differences": {
          "added": [
            "ResourceLocation getId()",
            "AbstractCriterionTriggerInstance createInstance(JsonObject,Optional,DeserializationContext)",
            "void <clinit>()"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,Optional,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.SimpleCriterionTrigger",
        "differences": {
          "added": [
            "AbstractCriterionTriggerInstance createInstance(JsonObject,DeserializationContext)"
          ],
          "removed": [
            "SimpleCriterionTrigger$SimpleInstance createInstance(JsonObject,DeserializationContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.Player",
        "differences": {
          "added": [
            "void triggerRecipeCrafted(Recipe,List)"
          ],
          "removed": [
            "void triggerRecipeCrafted(RecipeHolder,List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.StackedContents",
        "differences": {
          "added": [
            "int getBiggestCraftableStack(Recipe,IntList)",
            "int getBiggestCraftableStack(Recipe,int,IntList)"
          ],
          "removed": [
            "int getBiggestCraftableStack(RecipeHolder,IntList)",
            "int getBiggestCraftableStack(RecipeHolder,int,IntList)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.AbstractFurnaceMenu",
        "differences": {
          "added": [
            "boolean recipeMatches(Recipe)"
          ],
          "removed": [
            "boolean recipeMatches(RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.ResultContainer",
        "differences": {
          "added": [
            "void setRecipeUsed(Recipe)",
            "Recipe getRecipeUsed()"
          ],
          "removed": [
            "void setRecipeUsed(RecipeHolder)",
            "RecipeHolder getRecipeUsed()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.inventory.SmithingMenu",
        "differences": {
          "added": [
            "IntStream lambda$findSlotToQuickMoveTo$7(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$4(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$2(ItemStack,SmithingRecipe)",
            "boolean lambda$createInputSlotDefinitions$0(ItemStack,SmithingRecipe)"
          ],
          "removed": [
            "IntStream lambda$findSlotToQuickMoveTo$7(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$4(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$2(ItemStack,RecipeHolder)",
            "boolean lambda$createInputSlotDefinitions$0(ItemStack,RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.AbstractCookingRecipe",
        "differences": {
          "added": [
            "void <init>(RecipeType,ResourceLocation,String,CookingBookCategory,Ingredient,ItemStack,float,int)",
            "ResourceLocation getId()"
          ],
          "removed": [
            "void <init>(RecipeType,String,CookingBookCategory,Ingredient,ItemStack,float,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.BannerDuplicateRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,CraftingBookCategory)"
          ],
          "removed": [
            "void <init>(CraftingBookCategory)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.BookCloningRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,CraftingBookCategory)"
          ],
          "removed": [
            "void <init>(CraftingBookCategory)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.ShapedRecipe",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,String,CraftingBookCategory,int,int,NonNullList,ItemStack,boolean)",
            "void <init>(ResourceLocation,String,CraftingBookCategory,int,int,NonNullList,ItemStack)",
            "ResourceLocation getId()",
            "NonNullList dissolvePattern(String[],Map,int,int)",
            "String[] shrink(String[])",
            "String[] patternFromJson(JsonArray)",
            "Map keyFromJson(JsonObject)",
            "ItemStack itemStackFromJson(JsonObject)",
            "Item itemFromJson(JsonObject)",
            "JsonSyntaxException lambda$itemFromJson$2(String)"
          ],
          "removed": [
            "void <init>(String,CraftingBookCategory,int,int,NonNullList,ItemStack,boolean)",
            "void <init>(String,CraftingBookCategory,int,int,NonNullList,ItemStack)",
            "String[] shrink(List)"
          ]
        }
      }
    }
  ]
}