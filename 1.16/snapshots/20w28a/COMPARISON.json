{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "20w27a",
        "currentLabel": "20w28a",
        "values": [
          {
            "key": "World version",
            "previous": "2569",
            "current": "2570"
          },
          {
            "key": "Protocol version",
            "previous": "738",
            "current": "740"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "20w27a",
        "currentLabel": "20w28a",
        "values": [
          {
            "key": "com.mojang:datafixerupper",
            "previous": "3.0.25",
            "current": "4.0.26"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "worldgen/biome_source.txt",
            "worldgen/block_placer_type.txt",
            "worldgen/block_state_provider_type.txt",
            "worldgen/carver.txt",
            "worldgen/chunk_generator.txt",
            "worldgen/decorator.txt",
            "worldgen/feature.txt",
            "worldgen/feature_size_type.txt",
            "worldgen/foliage_placer_type.txt",
            "worldgen/structure_feature.txt",
            "worldgen/structure_piece.txt",
            "worldgen/structure_pool_element.txt",
            "worldgen/structure_processor.txt",
            "worldgen/surface_builder.txt",
            "worldgen/tree_decorator_type.txt",
            "worldgen/trunk_placer_type.txt"
          ],
          "removed": [
            "biome.txt",
            "biome_source.txt",
            "block_placer_type.txt",
            "block_state_provider_type.txt",
            "carver.txt",
            "chunk_generator.txt",
            "decorator.txt",
            "feature.txt",
            "feature_size_type.txt",
            "foliage_placer_type.txt",
            "structure_feature.txt",
            "structure_piece.txt",
            "structure_pool_element.txt",
            "structure_processor.txt",
            "surface_builder.txt",
            "tree_decorator_type.txt",
            "trunk_placer_type.txt"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "memory_module_type",
        "differences": {
          "added": [
            "minecraft:time_trying_to_reach_admire_item",
            "minecraft:disable_walk_to_admire_item"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "universal_tags/worldgen/biome_source.json",
            "universal_tags/worldgen/block_placer_type.json",
            "universal_tags/worldgen/block_state_provider_type.json",
            "universal_tags/worldgen/carver.json",
            "universal_tags/worldgen/chunk_generator.json",
            "universal_tags/worldgen/decorator.json",
            "universal_tags/worldgen/feature.json",
            "universal_tags/worldgen/feature_size_type.json",
            "universal_tags/worldgen/foliage_placer_type.json",
            "universal_tags/worldgen/structure_feature.json",
            "universal_tags/worldgen/structure_piece.json",
            "universal_tags/worldgen/structure_pool_element.json",
            "universal_tags/worldgen/structure_processor.json",
            "universal_tags/worldgen/surface_builder.json",
            "universal_tags/worldgen/tree_decorator_type.json",
            "universal_tags/worldgen/trunk_placer_type.json"
          ],
          "removed": [
            "universal_tags/biome.json",
            "universal_tags/biome_source.json",
            "universal_tags/block_placer_type.json",
            "universal_tags/block_state_provider_type.json",
            "universal_tags/carver.json",
            "universal_tags/chunk_generator.json",
            "universal_tags/decorator.json",
            "universal_tags/feature.json",
            "universal_tags/feature_size_type.json",
            "universal_tags/foliage_placer_type.json",
            "universal_tags/structure_feature.json",
            "universal_tags/structure_piece.json",
            "universal_tags/structure_pool_element.json",
            "universal_tags/structure_processor.json",
            "universal_tags/surface_builder.json",
            "universal_tags/tree_decorator_type.json",
            "universal_tags/trunk_placer_type.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/memory_module_type.json",
        "differences": {
          "added": [
            "minecraft:time_trying_to_reach_admire_item",
            "minecraft:disable_walk_to_admire_item"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "ansi",
      "value": {
        "title": "brewing_stand.json",
        "lines": [
          "\u001b[1;2mA:\u001b[0m #stone_crafting_materials\n\u001b[1;2mB:\u001b[0m blaze_rod\n\u001b[1;2mC:\u001b[0m cobblestone\n\n\u001b[1;2mPrevious pattern:\u001b[0m\n[\u001b[2;31m \u001b[0m | B | \u001b[2;31m \u001b[0m]\n[\u001b[2;33mC\u001b[0m | \u001b[2;33mC\u001b[0m | \u001b[2;33mC\u001b[0m]\n\n\u001b[1;2mNew pattern:\u001b[0m\n[\u001b[2;36m \u001b[0m | B | \u001b[2;36m \u001b[0m]\n[\u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m]"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "furnace.json",
        "lines": [
          "\u001b[1;2mA:\u001b[0m #furnace_materials\n\u001b[1;2mB:\u001b[0m #stone_crafting_materials\n\n\u001b[1;2mPrevious pattern:\u001b[0m\n[\u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m]\n[\u001b[2;33mA\u001b[0m | \u001b[2;31m \u001b[0m | \u001b[2;33mA\u001b[0m]\n[\u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m | \u001b[2;33mA\u001b[0m]\n\n\u001b[1;2mNew pattern:\u001b[0m\n[\u001b[2;33mB\u001b[0m | \u001b[2;33mB\u001b[0m | \u001b[2;33mB\u001b[0m]\n[\u001b[2;33mB\u001b[0m | \u001b[2;36m \u001b[0m | \u001b[2;33mB\u001b[0m]\n[\u001b[2;33mB\u001b[0m | \u001b[2;33mB\u001b[0m | \u001b[2;33mB\u001b[0m]"
        ]
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "chat.square_brackets: [%s]",
            "disconnect.exceeded_packet_rate: Kicked for exceeding packet rate limit",
            "options.off.composed: %s: OFF",
            "options.on.composed: %s: ON",
            "options.generic_value: %s: %s",
            "options.pixel_value: %s: %spx",
            "options.percent_value: %s: %s%%",
            "options.percent_add_value: %s: +%s%%",
            "potion.withAmplifier: %s %s",
            "potion.withDuration: %s (%s)",
            "command.context.parse_error: %s at position %s: %s",
            "commands.list.nameAndId: %s (%s)"
          ],
          "removed": [
            "selectWorld.hardcoreMode: Hardcore:",
            "selectWorld.hardcoreMode.info: World is deleted upon death",
            "options.entityDistancePercent: %s%%"
          ]
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "selectWorld.mapFeatures",
            "previous": "Generate Structures:",
            "current": "Generate Structures"
          },
          {
            "key": "selectWorld.allowCommands",
            "previous": "Allow Cheats:",
            "current": "Allow Cheats"
          },
          {
            "key": "selectWorld.bonusItems",
            "previous": "Bonus Chest:",
            "current": "Bonus Chest"
          },
          {
            "key": "jigsaw_block.keep_jigsaws",
            "previous": "Keep Jigsaws: ",
            "current": "Keep Jigsaws"
          },
          {
            "key": "gamerule.doDaylightCycle",
            "previous": "Advance in-game time",
            "current": "Advance time of day"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/tags/blocks/base_stone_nether.json",
            "minecraft/tags/blocks/base_stone_overworld.json",
            "minecraft/tags/items/stone_crafting_materials.json"
          ],
          "removed": [
            "minecraft/tags/items/furnace_materials.json"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.recipes.UpgradeRecipeBuilder$Result",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.RegistryDataPackCodec",
            "XXX.minecraft.resources.RegistryReadOps",
            "XXX.minecraft.resources.RegistryReadOps$ReadCache",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack$PackConstructor",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.SerializationTags",
            "XXX.minecraft.tags.StaticTagHelper",
            "XXX.minecraft.tags.StaticTagHelper$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$ElementEntry",
            "XXX.minecraft.tags.Tag$Named",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagContainer",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Codecs$1",
            "XXX.minecraft.util.Codecs$3",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.entity.monster.Strider$StriderGroupData",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.DirectionalPlaceContext$1",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.world.level.DefaultExplosionDamageCalculator",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.level.biome.BadlandsPlateauBiome",
            "XXX.level.biome.BambooJungleHillsBiome",
            "XXX.level.biome.BeachBiome",
            "XXX.level.biome.BiomeDefaultFeatures",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.BirchForestHillsBiome",
            "XXX.level.biome.ColdOceanBiome",
            "XXX.level.biome.DarkForestBiome",
            "XXX.level.biome.DeepColdOceanBiome",
            "XXX.level.biome.DeepLukeWarmOceanBiome",
            "XXX.level.biome.DeepWarmOceanBiome",
            "XXX.level.biome.DesertHillsBiome",
            "XXX.level.biome.EndBarrensBiome",
            "XXX.level.biome.EndMidlandsBiome",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.ForestFlowerBiome",
            "XXX.level.biome.FrozenRiverBiome",
            "XXX.level.biome.FuzzyOffsetConstantColumnBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaHillsMutatedBiome",
            "XXX.level.biome.GiantTreeTaigaHillsBiome",
            "XXX.level.biome.IceSpikesBiome",
            "XXX.level.biome.JungleEdgeBiome",
            "XXX.level.biome.LukeWarmOceanBiome",
            "XXX.level.biome.ModifiedGravellyMountainsBiome",
            "XXX.level.biome.ModifiedJungleEdgeBiome",
            "XXX.level.biome.MountainBiome",
            "XXX.level.biome.MushroomFieldsBiome",
            "XXX.level.biome.OceanBiome",
            "XXX.level.biome.PlainsBiome",
            "XXX.level.biome.SavannaBiome",
            "XXX.level.biome.ShatteredSavannaBiome",
            "XXX.level.biome.SmallEndIslandsBiome",
            "XXX.level.biome.SnowyMountainsBiome",
            "XXX.level.biome.SnowyTaigaHillsBiome",
            "XXX.level.biome.SnowyTundraBiome",
            "XXX.level.biome.StoneShoreBiome",
            "XXX.level.biome.SwampBiome",
            "XXX.level.biome.TaigaBiome",
            "XXX.level.biome.TaigaMountainsBiome",
            "XXX.level.biome.TallBirchHillsBiome",
            "XXX.level.biome.WarmOceanBiome",
            "XXX.level.biome.WoodedBadlandsBiome",
            "XXX.level.biome.WoodedMountainBiome",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVines",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeepingVines",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$RuntimePiece",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$1",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.LevelStem",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.package-info",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.levelgen.feature.BastionHoglinStablePools",
            "XXX.levelgen.feature.BastionPieces",
            "XXX.levelgen.feature.BastionSharedPools",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.ConfiguredStructureFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DecoratedFlowerFeature",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart",
            "XXX.levelgen.feature.PlainVillagePools",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.RuinedPortalFeature$FeatureStart",
            "XXX.levelgen.feature.SavannaVillagePools",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.StrongholdFeature$StrongholdStart",
            "XXX.levelgen.feature.StructureFeature$StructureStartFactory",
            "XXX.levelgen.feature.SwamplandHutFeature",
            "XXX.levelgen.feature.TaigaVillagePools",
            "XXX.levelgen.feature.VillageFeature$FeatureStart",
            "XXX.levelgen.feature.VillagePieces$VillagePiece",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeightedConfiguredFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature$WoodlandMansionStart",
            "XXX.feature.blockplacers.BlockPlacerType",
            "XXX.feature.blockplacers.DoublePlantPlacer",
            "XXX.feature.blockplacers.package-info",
            "XXX.feature.configurations.BuriedTreasureConfiguration",
            "XXX.feature.configurations.CountFeatureConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.MultiJigsawConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OceanRuinConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$GrassConfigurationBuilder",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.ReplaceSpheroidConfiguration$Builder",
            "XXX.feature.configurations.SeagrassFeatureConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.StrongholdConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$Factory",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.PlainFlowerProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.StructureTemplatePools",
            "XXX.levelgen.placement.ChanceHeightmapDecorator",
            "XXX.levelgen.placement.ChancePassthroughDecorator",
            "XXX.levelgen.placement.ChorusPlantPlacementDecorator",
            "XXX.levelgen.placement.CountBiasedRangeDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeighmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeightmap32Decorator",
            "XXX.levelgen.placement.CountTopSolidDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceHeightmapDecorator",
            "XXX.levelgen.placement.DepthAverageConfigation",
            "XXX.levelgen.placement.EndGatewayPlacementDecorator",
            "XXX.levelgen.placement.FeatureDecorator",
            "XXX.levelgen.placement.FrequencyChanceDecoratorConfiguration",
            "XXX.levelgen.placement.LakeLavaPlacementDecorator",
            "XXX.levelgen.placement.MonsterRoomPlacementDecorator",
            "XXX.levelgen.placement.NoiseHeightmap32Decorator",
            "XXX.levelgen.placement.NopePlacementDecorator",
            "XXX.levelgen.placement.SimpleFeatureDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapNoiseBasedDecorator",
            "XXX.placement.nether.ChanceRangeDecorator",
            "XXX.placement.nether.FireDecorator",
            "XXX.placement.nether.MagmaDecorator",
            "XXX.levelgen.structure.PillagerOutpostPieces"
          ],
          "removed": [
            "net.minecraft.BlockUtil$FoundRectangle",
            "net.minecraft.CharPredicate",
            "net.minecraft.Util$4",
            "net.minecraft.Util$6",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.UpgradeRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.TagsProvider$1",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.Features",
            "XXX.data.worldgen.Features$Decorators",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureFeatures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.worldgen.biome.BadlandsBiome",
            "XXX.worldgen.biome.BambooJungleBiome",
            "XXX.worldgen.biome.BasaltDeltasBiome",
            "XXX.worldgen.biome.BirchForestBiome",
            "XXX.worldgen.biome.ColdOceanBiome",
            "XXX.worldgen.biome.DarkForestBiome",
            "XXX.worldgen.biome.DeepColdOceanBiome",
            "XXX.worldgen.biome.DeepLukeWarmOceanBiome",
            "XXX.worldgen.biome.DeepWarmOceanBiome",
            "XXX.worldgen.biome.DesertHillsBiome",
            "XXX.worldgen.biome.EndBarrensBiome",
            "XXX.worldgen.biome.EndMidlandsBiome",
            "XXX.worldgen.biome.ForestBiome",
            "XXX.worldgen.biome.FrozenOceanBiome",
            "XXX.worldgen.biome.GiantSpruceTaigaBiome",
            "XXX.worldgen.biome.GiantTreeTaigaBiome",
            "XXX.worldgen.biome.GravellyMountainsBiome",
            "XXX.worldgen.biome.JungleBiome",
            "XXX.worldgen.biome.JungleHillsBiome",
            "XXX.worldgen.biome.ModifiedBadlandsPlateauBiome",
            "XXX.worldgen.biome.ModifiedJungleBiome",
            "XXX.worldgen.biome.ModifiedWoodedBadlandsPlateauBiome",
            "XXX.worldgen.biome.MountainEdgeBiome",
            "XXX.worldgen.biome.MushroomFieldsShoreBiome",
            "XXX.worldgen.biome.OceanBiome",
            "XXX.worldgen.biome.RiverBiome",
            "XXX.worldgen.biome.SavannaPlateauBiome",
            "XXX.worldgen.biome.ShatteredSavannaPlateauBiome",
            "XXX.worldgen.biome.SnowyBeachBiome",
            "XXX.worldgen.biome.SnowyTaigaBiome",
            "XXX.worldgen.biome.SnowyTaigaMountainsBiome",
            "XXX.worldgen.biome.SoulSandValleyBiome",
            "XXX.worldgen.biome.SunflowerPlainsBiome",
            "XXX.worldgen.biome.SwampHillsBiome",
            "XXX.worldgen.biome.TaigaHillsBiome",
            "XXX.worldgen.biome.TallBirchForestBiome",
            "XXX.worldgen.biome.TheEndBiome",
            "XXX.worldgen.biome.WarmOceanBiome",
            "XXX.worldgen.biome.WoodedBadlandsBiome",
            "XXX.worldgen.biome.WoodedMountainBiome",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryReadOps$1",
            "XXX.minecraft.resources.RegistryWriteOps",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerResources",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.FolderPackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPackResources",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SetTag",
            "XXX.minecraft.tags.StaticTagHelper$1",
            "XXX.minecraft.tags.StaticTags",
            "XXX.minecraft.tags.Tag$1",
            "XXX.minecraft.tags.Tag$BuilderEntry",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection$1",
            "XXX.minecraft.tags.TagContainer$1",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.Vanishable",
            "XXX.world.item.Wearable",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects$1",
            "XXX.level.biome.BiomeZoomer",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.FuzzyOffsetBiomeZoomer",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlant",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlant",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.DimensionType",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.level.dimension.package-info",
            "XXX.level.levelgen.Decoratable",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature$BuriedTreasureStart",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DecoratedFeature",
            "XXX.levelgen.feature.DefaultFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.JigsawFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RuinedPortalFeature",
            "XXX.levelgen.feature.RuinedPortalFeature$Type",
            "XXX.levelgen.feature.SpikeFeature$1",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.StrongholdFeature",
            "XXX.levelgen.feature.StructureFeature",
            "XXX.levelgen.feature.StructurePieceType",
            "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature",
            "XXX.feature.blockplacers.BlockPlacer",
            "XXX.feature.blockplacers.ColumnPlacer",
            "XXX.feature.blockplacers.SimpleBlockPlacer",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.NoiseDependantDecoratorConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$1",
            "XXX.feature.configurations.RangeDecoratorConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.ShipwreckConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.StructureFeatureConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.ForestFlowerProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$1",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.LegacySinglePoolElement",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.levelgen.placement.BiasedRangeDecorator",
            "XXX.levelgen.placement.ChanceDecoratorConfiguration",
            "XXX.levelgen.placement.CountDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceDecorator",
            "XXX.levelgen.placement.DecoratedDecorator",
            "XXX.levelgen.placement.DecorationContext",
            "XXX.levelgen.placement.DepthAverageDecorator",
            "XXX.levelgen.placement.EmeraldPlacementDecorator",
            "XXX.levelgen.placement.EndIslandPlacementDecorator",
            "XXX.levelgen.placement.HeightmapDecorator",
            "XXX.levelgen.placement.IcebergPlacementDecorator",
            "XXX.levelgen.placement.LakeWaterPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.RangeDecorator",
            "XXX.levelgen.placement.Spread32Decorator",
            "XXX.levelgen.placement.TopSolidHeightMapDecorator",
            "XXX.placement.nether.CountMultiLayerDecorator",
            "XXX.placement.nether.GlowstoneDecorator",
            "XXX.level.portal.PortalInfo",
            "XXX.level.portal.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.minecraft.core.RegistryAccess$RegistryHolder \u001b[2;32m+14M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.minecraft.core.SectionPos \u001b[2;32m+7M\u001b[0m",
          "XXX.network.chat.CommonComponents \u001b[2;32m+1M\u001b[0m",
          "XXX.protocol.game.ClientGamePacketListener \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.protocol.game.ClientboundBlockUpdatePacket \u001b[2;32m+1M\u001b[0m",
          "XXX.protocol.game.ClientboundLevelChunkPacket \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.AcquirePoi \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.memory.MemoryModuleType \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.monster.piglin.Piglin \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.world.item.BoneMealItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.EndCrystalItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.FireChargeItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.FlintAndSteelItem \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.world.item.GameMasterBlockItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.HoeItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.item.LeadItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.MapItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.item.MinecartItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.StandingAndWallBlockItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.level.BlockGetter \u001b[2;32m+3M\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource \u001b[2;32m+6M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.AbstractFurnaceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AnvilBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BambooBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseCoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.BaseRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BedBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BeehiveBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BellBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CarvedPumpkinBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChainBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChorusPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ConduitBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DiodeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DispenserBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndRodBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EnderChestBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FaceAttachedHorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FenceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantBodyBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HugeMushroomBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.JigsawBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.KelpBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LadderBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Lantern \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LecternBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.NetherPortalBlock \u001b[2;31m-3M\u001b[0m",
          "XXX.block.piston.PistonBaseBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour$BlockStateBase \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.pattern.BlockPattern$BlockPatternMatch \u001b[2;31m-1M\u001b[0m",
          "XXX.level.levelgen.GenerationStep$Decoration \u001b[2;32m+1M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.carver.WorldCarver \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.BastionFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature$OceanMonumentStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.PillagerOutpostFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.SeagrassFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.ShipwreckFeature$FeatureStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.configurations.ColumnFeatureConfiguration \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.feature.configurations.DecoratedFeatureConfiguration \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.DeltaFeatureConfiguration \u001b[2;32m+8M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.structure.NetherFossilFeature$FeatureStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.PoolElementStructurePiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.StructureStart$1 \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.structure.templatesystem.StructureProcessorType \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.surfacebuilders.SurfaceBuilder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.level.storage.McRegionUpgrader \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.RegistryAccess$RegistryHolder",
        "differences": {
          "added": [
            "void <init>(MappedRegistry)",
            "void registerDimension(ResourceKey,DimensionType)",
            "Registry dimensionTypes()",
            "MappedRegistry lambda$static$0(RegistryAccess$RegistryHolder)"
          ],
          "removed": [
            "Codec makeDirectCodec()",
            "Codec captureMap(UnboundedMapCodec)",
            "DataResult getCodec(ResourceKey)",
            "void <init>(Map)",
            "MappedRegistry createRegistry(ResourceKey)",
            "WritableRegistry lambda$registry$7(MappedRegistry)",
            "DataResult lambda$getCodec$6(ResourceKey)",
            "DataResult lambda$getCodec$5(RegistryAccess$RegistryData)",
            "Map lambda$captureMap$4(RegistryAccess$RegistryHolder)",
            "boolean lambda$null$3(Map$Entry)",
            "DataResult lambda$makeDirectCodec$2(ResourceKey)",
            "Codec lambda$null$1(ResourceKey,MapCodec)",
            "DataResult lambda$makeDirectCodec$0(MappedRegistry)",
            "Map access$000(RegistryAccess$RegistryHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.SectionPos",
        "differences": {
          "added": [],
          "removed": [
            "int sectionRelativeX(short)",
            "int sectionRelativeY(short)",
            "int sectionRelativeZ(short)",
            "int relativeToBlockX(short)",
            "int relativeToBlockY(short)",
            "int relativeToBlockZ(short)",
            "BlockPos relativeToBlockPos(short)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.chat.CommonComponents",
        "differences": {
          "added": [],
          "removed": [
            "MutableComponent optionStatus(Component,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(BlockPos,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ClientboundLevelChunkPacket",
        "differences": {
          "added": [
            "ChunkBiomeContainer getBiomes()"
          ],
          "removed": [
            "int[] getBiomes()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.AcquirePoi",
        "differences": {
          "added": [
            "void <init>(PoiType,MemoryModuleType,MemoryModuleType,boolean)",
            "void <init>(PoiType,MemoryModuleType,boolean)",
            "AcquirePoi$JitteredLinearRetry lambda$start$4(PathfinderMob,long,long)",
            "void lambda$start$3(PoiManager,BlockPos,PathfinderMob,ServerLevel,PoiType)"
          ],
          "removed": [
            "void <init>(PoiType,MemoryModuleType,MemoryModuleType,boolean,Optional)",
            "void <init>(PoiType,MemoryModuleType,boolean,Optional)",
            "AcquirePoi$JitteredLinearRetry lambda$start$5(PathfinderMob,long,long)",
            "void lambda$start$4(PoiManager,BlockPos,PathfinderMob,ServerLevel,PoiType)",
            "void lambda$null$3(ServerLevel,PathfinderMob,Byte)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.EnderMan$EndermanLookForPlayerGoal",
        "differences": {
          "added": [
            "void <init>(EnderMan)"
          ],
          "removed": [
            "void <init>(EnderMan,Predicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.piglin.Piglin",
        "differences": {
          "added": [
            "void sendDebugPackets()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.BoneMealItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.EndCrystalItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.FireChargeItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.FlintAndSteelItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$1(UseOnContext,Player)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$1(UseOnContext,Player)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.GameMasterBlockItem",
        "differences": {
          "added": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.HoeItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.LeadItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.MapItem",
        "differences": {
          "added": [
            "ItemStack lockMap(Level,ItemStack)",
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "void lockMap(Level,ItemStack)",
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.MinecartItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.StandingAndWallBlockItem",
        "differences": {
          "added": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.BlockGetter",
        "differences": {
          "added": [],
          "removed": [
            "double getBlockFloorHeight(VoxelShape,Supplier)",
            "double getBlockFloorHeight(BlockPos)",
            "VoxelShape lambda$getBlockFloorHeight$2(BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource",
        "differences": {
          "added": [
            "Float lambda$getNoiseBiome$11(Biome$ClimateParameters,Pair)",
            "Stream lambda$defaultNether$10(Biome)",
            "Pair lambda$null$9(Biome,Biome$ClimateParameters)"
          ],
          "removed": [
            "Float lambda$getNoiseBiome$14(Biome$ClimateParameters,Pair)",
            "Biome lambda$defaultNether$13()",
            "Biome lambda$defaultNether$12()",
            "Biome lambda$defaultNether$11()",
            "Biome lambda$defaultNether$10()",
            "Biome lambda$defaultNether$9()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractFurnaceBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AnvilBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BambooBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BannerBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralWallFanBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseFireBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)",
            "boolean canBePlacedAt(LevelAccessor,BlockPos)",
            "boolean isPortal(LevelAccessor,BlockPos)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)",
            "boolean inPortalDimension(Level)",
            "boolean canBePlacedAt(Level,BlockPos,Direction)",
            "boolean isPortal(Level,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseRailBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BedBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BeehiveBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BellBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CarvedPumpkinBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChainBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChorusPlantBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ConduitBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DiodeBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DispenserBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndRodBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnderChestBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FenceBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantBodyBlock",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HugeMushroomBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.JigsawBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.KelpBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LadderBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Lantern",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LecternBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.NetherPortalBlock",
        "differences": {
          "added": [
            "boolean trySpawnPortal(LevelAccessor,BlockPos)",
            "NetherPortalBlock$PortalShape isPortal(LevelAccessor,BlockPos)",
            "BlockPattern$BlockPatternMatch getPortalShape(LevelAccessor,BlockPos)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.PistonBaseBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockPlaceContext)",
            "boolean isFaceSturdy(BlockGetter,BlockPos,Direction,SupportType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch",
        "differences": {
          "added": [
            "BlockPattern$PortalInfo getPortalOutput(Direction,BlockPos,double,Vec3,double)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.GenerationStep$Decoration",
        "differences": {
          "added": [
            "void <init>(String,int,String)",
            "String getName()",
            "GenerationStep$Decoration byName(String)",
            "String getSerializedName()",
            "GenerationStep$Decoration lambda$static$0(GenerationStep$Decoration)"
          ],
          "removed": [
            "void <init>(String,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.WorldCarver",
        "differences": {
          "added": [
            "CarverConfiguration lambda$new$1(ConfiguredWorldCarver)",
            "ConfiguredWorldCarver lambda$new$0(CarverConfiguration)"
          ],
          "removed": [
            "ConfiguredWorldCarver configured(CarverConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.BastionFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,MultiJigsawConfiguration)",
            "StructureFeature$StructureStartFactory getStartFactory()"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,JigsawConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature$OceanMonumentStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.PillagerOutpostFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,NoneFeatureConfiguration)",
            "StructureFeature$StructureStartFactory getStartFactory()"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,JigsawConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SeagrassFeature",
        "differences": {
          "added": [
            "boolean place(WorldGenLevel,ChunkGenerator,Random,BlockPos,SeagrassFeatureConfiguration)"
          ],
          "removed": [
            "boolean place(WorldGenLevel,ChunkGenerator,Random,BlockPos,ProbabilityFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ShipwreckFeature$FeatureStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,ShipwreckConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,ShipwreckConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(int,int,int,int)",
            "App lambda$static$4(RecordCodecBuilder$Instance)",
            "Integer lambda$null$3(ColumnFeatureConfiguration)",
            "Integer lambda$null$2(ColumnFeatureConfiguration)",
            "Integer lambda$null$1(ColumnFeatureConfiguration)",
            "Integer lambda$null$0(ColumnFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(UniformInt,UniformInt)",
            "UniformInt reach()",
            "UniformInt height()",
            "App lambda$static$2(RecordCodecBuilder$Instance)",
            "UniformInt lambda$null$1(ColumnFeatureConfiguration)",
            "UniformInt lambda$null$0(ColumnFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DecoratedFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(ConfiguredFeature,ConfiguredDecorator)",
            "ConfiguredFeature lambda$null$0(DecoratedFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(Supplier,ConfiguredDecorator)",
            "Supplier lambda$null$0(DecoratedFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(BlockState,BlockState,int,int,int)",
            "App lambda$static$5(RecordCodecBuilder$Instance)",
            "Integer lambda$null$4(DeltaFeatureConfiguration)",
            "Integer lambda$null$3(DeltaFeatureConfiguration)",
            "Integer lambda$null$2(DeltaFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(BlockState,BlockState,UniformInt,UniformInt)",
            "BlockState contents()",
            "BlockState rim()",
            "UniformInt size()",
            "UniformInt rimSize()",
            "App lambda$static$4(RecordCodecBuilder$Instance)",
            "UniformInt lambda$null$3(DeltaFeatureConfiguration)",
            "UniformInt lambda$null$2(DeltaFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherFossilFeature$FeatureStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinFeature$OceanRuinStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,OceanRuinConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,OceanRuinConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.PoolElementStructurePiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,StructureManager,StructurePoolElement,BlockPos,int,Rotation,BoundingBox)",
            "void <init>(StructureManager,CompoundTag,StructurePieceType)"
          ],
          "removed": [
            "void <init>(StructureManager,StructurePoolElement,BlockPos,int,Rotation,BoundingBox)",
            "void <init>(StructureManager,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StructureStart$1",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,MineshaftConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,MineshaftConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.surfacebuilders.SurfaceBuilder",
        "differences": {
          "added": [
            "SurfaceBuilderConfiguration lambda$new$1(ConfiguredSurfaceBuilder)",
            "ConfiguredSurfaceBuilder lambda$new$0(SurfaceBuilderConfiguration)"
          ],
          "removed": [
            "ConfiguredSurfaceBuilder configured(SurfaceBuilderConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.McRegionUpgrader",
        "differences": {
          "added": [
            "void convertRegions(File,Iterable,BiomeSource,int,int,ProgressListener)",
            "void convertRegion(File,File,BiomeSource,int,int,ProgressListener)"
          ],
          "removed": [
            "void convertRegions(RegistryAccess$RegistryHolder,File,Iterable,BiomeSource,int,int,ProgressListener)",
            "void convertRegion(RegistryAccess$RegistryHolder,File,File,BiomeSource,int,int,ProgressListener)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.recipes.UpgradeRecipeBuilder$Result",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.NarrationHelper",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.RegistryDataPackCodec",
            "XXX.minecraft.resources.RegistryReadOps",
            "XXX.minecraft.resources.RegistryReadOps$ReadCache",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack$PackConstructor",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.SerializationTags",
            "XXX.minecraft.tags.StaticTagHelper",
            "XXX.minecraft.tags.StaticTagHelper$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$ElementEntry",
            "XXX.minecraft.tags.Tag$Named",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagContainer",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Codecs$1",
            "XXX.minecraft.util.Codecs$3",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.entity.monster.Strider$StriderGroupData",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.DirectionalPlaceContext$1",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.world.level.DefaultExplosionDamageCalculator",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.level.biome.BadlandsPlateauBiome",
            "XXX.level.biome.BambooJungleHillsBiome",
            "XXX.level.biome.BeachBiome",
            "XXX.level.biome.BiomeDefaultFeatures",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.BirchForestHillsBiome",
            "XXX.level.biome.ColdOceanBiome",
            "XXX.level.biome.DarkForestBiome",
            "XXX.level.biome.DeepColdOceanBiome",
            "XXX.level.biome.DeepLukeWarmOceanBiome",
            "XXX.level.biome.DeepWarmOceanBiome",
            "XXX.level.biome.DesertHillsBiome",
            "XXX.level.biome.EndBarrensBiome",
            "XXX.level.biome.EndMidlandsBiome",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.ForestFlowerBiome",
            "XXX.level.biome.FrozenRiverBiome",
            "XXX.level.biome.FuzzyOffsetConstantColumnBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaHillsMutatedBiome",
            "XXX.level.biome.GiantTreeTaigaHillsBiome",
            "XXX.level.biome.IceSpikesBiome",
            "XXX.level.biome.JungleEdgeBiome",
            "XXX.level.biome.LukeWarmOceanBiome",
            "XXX.level.biome.ModifiedGravellyMountainsBiome",
            "XXX.level.biome.ModifiedJungleEdgeBiome",
            "XXX.level.biome.MountainBiome",
            "XXX.level.biome.MushroomFieldsBiome",
            "XXX.level.biome.OceanBiome",
            "XXX.level.biome.PlainsBiome",
            "XXX.level.biome.SavannaBiome",
            "XXX.level.biome.ShatteredSavannaBiome",
            "XXX.level.biome.SmallEndIslandsBiome",
            "XXX.level.biome.SnowyMountainsBiome",
            "XXX.level.biome.SnowyTaigaHillsBiome",
            "XXX.level.biome.SnowyTundraBiome",
            "XXX.level.biome.StoneShoreBiome",
            "XXX.level.biome.SwampBiome",
            "XXX.level.biome.TaigaBiome",
            "XXX.level.biome.TaigaMountainsBiome",
            "XXX.level.biome.TallBirchHillsBiome",
            "XXX.level.biome.WarmOceanBiome",
            "XXX.level.biome.WoodedBadlandsBiome",
            "XXX.level.biome.WoodedMountainBiome",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVines",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeepingVines",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$RuntimePiece",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$1",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.LevelStem",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.package-info",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.levelgen.feature.BastionHoglinStablePools",
            "XXX.levelgen.feature.BastionPieces",
            "XXX.levelgen.feature.BastionSharedPools",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.ConfiguredStructureFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DecoratedFlowerFeature",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart",
            "XXX.levelgen.feature.PlainVillagePools",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.RuinedPortalFeature$FeatureStart",
            "XXX.levelgen.feature.SavannaVillagePools",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.StrongholdFeature$StrongholdStart",
            "XXX.levelgen.feature.StructureFeature$StructureStartFactory",
            "XXX.levelgen.feature.SwamplandHutFeature",
            "XXX.levelgen.feature.TaigaVillagePools",
            "XXX.levelgen.feature.VillageFeature$FeatureStart",
            "XXX.levelgen.feature.VillagePieces$VillagePiece",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeightedConfiguredFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature$WoodlandMansionStart",
            "XXX.feature.blockplacers.BlockPlacerType",
            "XXX.feature.blockplacers.DoublePlantPlacer",
            "XXX.feature.blockplacers.package-info",
            "XXX.feature.configurations.BuriedTreasureConfiguration",
            "XXX.feature.configurations.CountFeatureConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.MultiJigsawConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OceanRuinConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$GrassConfigurationBuilder",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.ReplaceSpheroidConfiguration$Builder",
            "XXX.feature.configurations.SeagrassFeatureConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.StrongholdConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$Factory",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.PlainFlowerProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.StructureTemplatePools",
            "XXX.levelgen.placement.ChanceHeightmapDecorator",
            "XXX.levelgen.placement.ChancePassthroughDecorator",
            "XXX.levelgen.placement.ChorusPlantPlacementDecorator",
            "XXX.levelgen.placement.CountBiasedRangeDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeighmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeightmap32Decorator",
            "XXX.levelgen.placement.CountTopSolidDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceHeightmapDecorator",
            "XXX.levelgen.placement.DepthAverageConfigation",
            "XXX.levelgen.placement.EndGatewayPlacementDecorator",
            "XXX.levelgen.placement.FeatureDecorator",
            "XXX.levelgen.placement.FrequencyChanceDecoratorConfiguration",
            "XXX.levelgen.placement.LakeLavaPlacementDecorator",
            "XXX.levelgen.placement.MonsterRoomPlacementDecorator",
            "XXX.levelgen.placement.NoiseHeightmap32Decorator",
            "XXX.levelgen.placement.NopePlacementDecorator",
            "XXX.levelgen.placement.SimpleFeatureDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapNoiseBasedDecorator",
            "XXX.placement.nether.ChanceRangeDecorator",
            "XXX.placement.nether.FireDecorator",
            "XXX.placement.nether.MagmaDecorator",
            "XXX.levelgen.structure.PillagerOutpostPieces"
          ],
          "removed": [
            "net.minecraft.BlockUtil",
            "net.minecraft.BlockUtil$IntBounds",
            "net.minecraft.Util$5",
            "net.minecraft.Util$7",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.UpgradeRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.TagsProvider$1",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.Features",
            "XXX.data.worldgen.Features$Decorators",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureFeatures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.worldgen.biome.BadlandsBiome",
            "XXX.worldgen.biome.BambooJungleBiome",
            "XXX.worldgen.biome.BasaltDeltasBiome",
            "XXX.worldgen.biome.BirchForestBiome",
            "XXX.worldgen.biome.ColdOceanBiome",
            "XXX.worldgen.biome.DarkForestBiome",
            "XXX.worldgen.biome.DeepColdOceanBiome",
            "XXX.worldgen.biome.DeepLukeWarmOceanBiome",
            "XXX.worldgen.biome.DeepWarmOceanBiome",
            "XXX.worldgen.biome.DesertHillsBiome",
            "XXX.worldgen.biome.EndBarrensBiome",
            "XXX.worldgen.biome.EndMidlandsBiome",
            "XXX.worldgen.biome.ForestBiome",
            "XXX.worldgen.biome.FrozenOceanBiome",
            "XXX.worldgen.biome.GiantSpruceTaigaBiome",
            "XXX.worldgen.biome.GiantTreeTaigaBiome",
            "XXX.worldgen.biome.GravellyMountainsBiome",
            "XXX.worldgen.biome.JungleBiome",
            "XXX.worldgen.biome.JungleHillsBiome",
            "XXX.worldgen.biome.ModifiedBadlandsPlateauBiome",
            "XXX.worldgen.biome.ModifiedJungleBiome",
            "XXX.worldgen.biome.ModifiedWoodedBadlandsPlateauBiome",
            "XXX.worldgen.biome.MountainEdgeBiome",
            "XXX.worldgen.biome.MushroomFieldsShoreBiome",
            "XXX.worldgen.biome.OceanBiome",
            "XXX.worldgen.biome.RiverBiome",
            "XXX.worldgen.biome.SavannaPlateauBiome",
            "XXX.worldgen.biome.ShatteredSavannaPlateauBiome",
            "XXX.worldgen.biome.SnowyBeachBiome",
            "XXX.worldgen.biome.SnowyTaigaBiome",
            "XXX.worldgen.biome.SnowyTaigaMountainsBiome",
            "XXX.worldgen.biome.SoulSandValleyBiome",
            "XXX.worldgen.biome.SunflowerPlainsBiome",
            "XXX.worldgen.biome.SwampHillsBiome",
            "XXX.worldgen.biome.TaigaHillsBiome",
            "XXX.worldgen.biome.TallBirchForestBiome",
            "XXX.worldgen.biome.TheEndBiome",
            "XXX.worldgen.biome.WarmOceanBiome",
            "XXX.worldgen.biome.WoodedBadlandsBiome",
            "XXX.worldgen.biome.WoodedMountainBiome",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryReadOps$1",
            "XXX.minecraft.resources.RegistryWriteOps",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerResources",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.FolderPackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPackResources",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SetTag",
            "XXX.minecraft.tags.StaticTagHelper$1",
            "XXX.minecraft.tags.StaticTags",
            "XXX.minecraft.tags.Tag$1",
            "XXX.minecraft.tags.Tag$BuilderEntry",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection$1",
            "XXX.minecraft.tags.TagContainer$1",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.Vanishable",
            "XXX.world.item.Wearable",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects$1",
            "XXX.level.biome.BiomeZoomer",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.FuzzyOffsetBiomeZoomer",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlant",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlant",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.DimensionType",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.level.dimension.package-info",
            "XXX.level.levelgen.Decoratable",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature$BuriedTreasureStart",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DecoratedFeature",
            "XXX.levelgen.feature.DefaultFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.JigsawFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RuinedPortalFeature",
            "XXX.levelgen.feature.RuinedPortalFeature$Type",
            "XXX.levelgen.feature.SpikeFeature$1",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.StrongholdFeature",
            "XXX.levelgen.feature.StructureFeature",
            "XXX.levelgen.feature.StructurePieceType",
            "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature",
            "XXX.feature.blockplacers.BlockPlacer",
            "XXX.feature.blockplacers.ColumnPlacer",
            "XXX.feature.blockplacers.SimpleBlockPlacer",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.NoiseDependantDecoratorConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$1",
            "XXX.feature.configurations.RangeDecoratorConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.ShipwreckConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.StructureFeatureConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.ForestFlowerProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$1",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.LegacySinglePoolElement",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.levelgen.placement.BiasedRangeDecorator",
            "XXX.levelgen.placement.ChanceDecoratorConfiguration",
            "XXX.levelgen.placement.CountDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceDecorator",
            "XXX.levelgen.placement.DecoratedDecorator",
            "XXX.levelgen.placement.DecorationContext",
            "XXX.levelgen.placement.DepthAverageDecorator",
            "XXX.levelgen.placement.EmeraldPlacementDecorator",
            "XXX.levelgen.placement.EndIslandPlacementDecorator",
            "XXX.levelgen.placement.HeightmapDecorator",
            "XXX.levelgen.placement.IcebergPlacementDecorator",
            "XXX.levelgen.placement.LakeWaterPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.RangeDecorator",
            "XXX.levelgen.placement.Spread32Decorator",
            "XXX.levelgen.placement.TopSolidHeightMapDecorator",
            "XXX.placement.nether.CountMultiLayerDecorator",
            "XXX.placement.nether.GlowstoneDecorator",
            "XXX.level.portal.PortalInfo",
            "XXX.level.portal.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "net.minecraft.Util \u001b[2;32m+9M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "net.minecraft.Util$3 \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.client.Option \u001b[2;32m+6M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.gui.screens.CreateBuffetWorldScreen \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.gui.screens.CreateFlatWorldScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.gui.screens.ShareToLanScreen \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.screens.inventory.BookEditScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+6P\u001b[0m",
          "XXX.screens.inventory.BookViewScreen \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.screens.worldselection.CreateWorldScreen$SelectedGameMode \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.worldselection.EditGameRulesScreen$BooleanRuleEntry \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.worldselection.EditGameRulesScreen$RuleEntry \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.worldselection.WorldGenSettingsComponent \u001b[2;32m+4M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.client.multiplayer.ClientPacketListener \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.server.IntegratedServer \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.core.RegistryAccess$RegistryHolder \u001b[2;32m+14M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.minecraft.core.SectionPos \u001b[2;32m+7M\u001b[0m",
          "XXX.network.chat.CommonComponents \u001b[2;32m+1M\u001b[0m",
          "XXX.protocol.game.ClientGamePacketListener \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.protocol.game.ClientboundBlockUpdatePacket \u001b[2;32m+1M\u001b[0m",
          "XXX.protocol.game.ClientboundLevelChunkPacket \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.AcquirePoi \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.memory.MemoryModuleType \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.monster.piglin.Piglin \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.world.item.BoneMealItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.EndCrystalItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.FireChargeItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.FlintAndSteelItem \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.world.item.GameMasterBlockItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.HoeItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.item.LeadItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.MapItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.world.item.MinecartItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.StandingAndWallBlockItem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.level.BlockGetter \u001b[2;32m+3M\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource \u001b[2;32m+6M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.AbstractFurnaceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AnvilBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BambooBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseCoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.BaseRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BedBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BeehiveBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BellBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CarvedPumpkinBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChainBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChorusPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ConduitBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DiodeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DispenserBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndRodBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EnderChestBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FaceAttachedHorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FenceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantBodyBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HugeMushroomBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.JigsawBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.KelpBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LadderBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Lantern \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LecternBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.NetherPortalBlock \u001b[2;31m-3M\u001b[0m",
          "XXX.block.piston.PistonBaseBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour$BlockStateBase \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.pattern.BlockPattern$BlockPatternMatch \u001b[2;31m-1M\u001b[0m",
          "XXX.level.levelgen.GenerationStep$Decoration \u001b[2;32m+1M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.carver.WorldCarver \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.BastionFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature$OceanMonumentStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.PillagerOutpostFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.SeagrassFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.ShipwreckFeature$FeatureStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.configurations.ColumnFeatureConfiguration \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.feature.configurations.DecoratedFeatureConfiguration \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.DeltaFeatureConfiguration \u001b[2;32m+8M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.structure.NetherFossilFeature$FeatureStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.PoolElementStructurePiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.StructureStart$1 \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.structure.templatesystem.StructureProcessorType \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.surfacebuilders.SurfaceBuilder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.level.storage.McRegionUpgrader \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.Util",
        "differences": {
          "added": [
            "String sanitizeResourceName(String)",
            "String lambda$sanitizeResourceName$7(int)"
          ],
          "removed": [
            "BooleanSupplier createRenamer(Path,Path)",
            "BooleanSupplier createDeleter(Path)",
            "BooleanSupplier createFileDeletedCheck(Path)",
            "BooleanSupplier createFileCreatedCheck(Path)",
            "boolean executeInSequence(BooleanSupplier[])",
            "boolean runWithRetries(int,String,BooleanSupplier[])",
            "void safeReplaceFile(Path,Path,Path)",
            "String sanitizeName(String,CharPredicate)",
            "String lambda$sanitizeName$7(CharPredicate,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.Util$3",
        "differences": {
          "added": [
            "void <init>(String)",
            "void run()"
          ],
          "removed": [
            "void <init>(Path,Path)",
            "boolean getAsBoolean()",
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.Option",
        "differences": {
          "added": [
            "MutableComponent createCaption()"
          ],
          "removed": [
            "Component getCaption()",
            "Component pixelValueLabel(int)",
            "Component percentValueLabel(double)",
            "Component percentAddValueLabel(int)",
            "Component genericValueLabel(Component)",
            "Component genericValueLabel(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.CreateBuffetWorldScreen",
        "differences": {
          "added": [
            "void <init>(Screen,Consumer,Biome)",
            "Biome access$102(CreateBuffetWorldScreen,Biome)",
            "void access$300(CreateBuffetWorldScreen)"
          ],
          "removed": [
            "void <init>(Screen,RegistryAccess,Consumer,Biome)",
            "WritableRegistry access$100(CreateBuffetWorldScreen)",
            "Biome access$202(CreateBuffetWorldScreen,Biome)",
            "void access$400(CreateBuffetWorldScreen)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.CreateBuffetWorldScreen$BiomeList",
        "differences": {
          "added": [
            "void lambda$new$1(Biome)",
            "String lambda$new$0(Biome)"
          ],
          "removed": [
            "void lambda$new$1(Map$Entry)",
            "String lambda$new$0(Map$Entry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.CreateFlatWorldScreen",
        "differences": {
          "added": [
            "void <init>(Screen,Consumer,FlatLevelGeneratorSettings)"
          ],
          "removed": [
            "void <init>(CreateWorldScreen,Consumer,FlatLevelGeneratorSettings)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.ShareToLanScreen",
        "differences": {
          "added": [],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.BookEditScreen",
        "differences": {
          "added": [
            "int strWidth(String)"
          ],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.BookViewScreen",
        "differences": {
          "added": [
            "int strWidth(String)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen$SelectedGameMode",
        "differences": {
          "added": [
            "String access$200(CreateWorldScreen$SelectedGameMode)",
            "GameType access$700(CreateWorldScreen$SelectedGameMode)"
          ],
          "removed": [
            "String access$300(CreateWorldScreen$SelectedGameMode)",
            "GameType access$800(CreateWorldScreen$SelectedGameMode)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen$BooleanRuleEntry",
        "differences": {
          "added": [
            "MutableComponent createFullMessage(Component,boolean)",
            "MutableComponent access$500(EditGameRulesScreen$BooleanRuleEntry,Component,boolean)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen$RuleEntry",
        "differences": {
          "added": [
            "List access$1100(EditGameRulesScreen$RuleEntry)"
          ],
          "removed": [
            "List access$1000(EditGameRulesScreen$RuleEntry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.WorldGenSettingsComponent",
        "differences": {
          "added": [
            "void <init>()",
            "void <init>(RegistryAccess$RegistryHolder,WorldGenSettings)"
          ],
          "removed": [
            "void <init>(RegistryAccess$RegistryHolder,WorldGenSettings,Optional,OptionalLong)",
            "String toString(OptionalLong)",
            "OptionalLong parseSeed()",
            "void setRegistryHolder(RegistryAccess$RegistryHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.multiplayer.ClientPacketListener",
        "differences": {
          "added": [
            "void handleChunkBlocksUpdate(ClientboundChunkBlocksUpdatePacket)"
          ],
          "removed": [
            "void handleChunkBlocksUpdate(ClientboundSectionBlocksUpdatePacket)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.server.IntegratedServer",
        "differences": {
          "added": [],
          "removed": [
            "int getRateLimitPacketsPerSecond()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.RegistryAccess$RegistryHolder",
        "differences": {
          "added": [
            "void <init>(MappedRegistry)",
            "void registerDimension(ResourceKey,DimensionType)",
            "Registry dimensionTypes()",
            "MappedRegistry lambda$static$0(RegistryAccess$RegistryHolder)"
          ],
          "removed": [
            "Codec makeDirectCodec()",
            "Codec captureMap(UnboundedMapCodec)",
            "DataResult getCodec(ResourceKey)",
            "void <init>(Map)",
            "MappedRegistry createRegistry(ResourceKey)",
            "WritableRegistry lambda$registry$7(MappedRegistry)",
            "DataResult lambda$getCodec$6(ResourceKey)",
            "DataResult lambda$getCodec$5(RegistryAccess$RegistryData)",
            "Map lambda$captureMap$4(RegistryAccess$RegistryHolder)",
            "boolean lambda$null$3(Map$Entry)",
            "DataResult lambda$makeDirectCodec$2(ResourceKey)",
            "Codec lambda$null$1(ResourceKey,MapCodec)",
            "DataResult lambda$makeDirectCodec$0(MappedRegistry)",
            "Map access$000(RegistryAccess$RegistryHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.SectionPos",
        "differences": {
          "added": [],
          "removed": [
            "int sectionRelativeX(short)",
            "int sectionRelativeY(short)",
            "int sectionRelativeZ(short)",
            "int relativeToBlockX(short)",
            "int relativeToBlockY(short)",
            "int relativeToBlockZ(short)",
            "BlockPos relativeToBlockPos(short)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.chat.CommonComponents",
        "differences": {
          "added": [],
          "removed": [
            "MutableComponent optionStatus(Component,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(BlockPos,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ClientboundLevelChunkPacket",
        "differences": {
          "added": [
            "ChunkBiomeContainer getBiomes()"
          ],
          "removed": [
            "int[] getBiomes()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.AcquirePoi",
        "differences": {
          "added": [
            "void <init>(PoiType,MemoryModuleType,MemoryModuleType,boolean)",
            "void <init>(PoiType,MemoryModuleType,boolean)",
            "AcquirePoi$JitteredLinearRetry lambda$start$4(PathfinderMob,long,long)",
            "void lambda$start$3(PoiManager,BlockPos,PathfinderMob,ServerLevel,PoiType)"
          ],
          "removed": [
            "void <init>(PoiType,MemoryModuleType,MemoryModuleType,boolean,Optional)",
            "void <init>(PoiType,MemoryModuleType,boolean,Optional)",
            "AcquirePoi$JitteredLinearRetry lambda$start$5(PathfinderMob,long,long)",
            "void lambda$start$4(PoiManager,BlockPos,PathfinderMob,ServerLevel,PoiType)",
            "void lambda$null$3(ServerLevel,PathfinderMob,Byte)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.EnderMan$EndermanLookForPlayerGoal",
        "differences": {
          "added": [
            "void <init>(EnderMan)"
          ],
          "removed": [
            "void <init>(EnderMan,Predicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.piglin.Piglin",
        "differences": {
          "added": [
            "void sendDebugPackets()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.BoneMealItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.EndCrystalItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.FireChargeItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.FlintAndSteelItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$1(UseOnContext,Player)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$1(UseOnContext,Player)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.GameMasterBlockItem",
        "differences": {
          "added": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.HoeItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)",
            "void lambda$useOn$0(UseOnContext,Player)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.LeadItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.MapItem",
        "differences": {
          "added": [
            "ItemStack lockMap(Level,ItemStack)",
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "void lockMap(Level,ItemStack)",
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.MinecartItem",
        "differences": {
          "added": [
            "InteractionResult useOn(UseOnContext)"
          ],
          "removed": [
            "InteractionResult useOn(UseOnContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.StandingAndWallBlockItem",
        "differences": {
          "added": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getPlacementState(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.BlockGetter",
        "differences": {
          "added": [],
          "removed": [
            "double getBlockFloorHeight(VoxelShape,Supplier)",
            "double getBlockFloorHeight(BlockPos)",
            "VoxelShape lambda$getBlockFloorHeight$2(BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource",
        "differences": {
          "added": [
            "Float lambda$getNoiseBiome$11(Biome$ClimateParameters,Pair)",
            "Stream lambda$defaultNether$10(Biome)",
            "Pair lambda$null$9(Biome,Biome$ClimateParameters)"
          ],
          "removed": [
            "Float lambda$getNoiseBiome$14(Biome$ClimateParameters,Pair)",
            "Biome lambda$defaultNether$13()",
            "Biome lambda$defaultNether$12()",
            "Biome lambda$defaultNether$11()",
            "Biome lambda$defaultNether$10()",
            "Biome lambda$defaultNether$9()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractFurnaceBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AnvilBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BambooBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BannerBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralWallFanBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseFireBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)",
            "boolean canBePlacedAt(LevelAccessor,BlockPos)",
            "boolean isPortal(LevelAccessor,BlockPos)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)",
            "boolean inPortalDimension(Level)",
            "boolean canBePlacedAt(Level,BlockPos,Direction)",
            "boolean isPortal(Level,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseRailBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BedBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BeehiveBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BellBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CarvedPumpkinBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChainBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChorusPlantBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ConduitBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DiodeBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DispenserBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndRodBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnderChestBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FenceBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantBodyBlock",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HugeMushroomBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.JigsawBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.KelpBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LadderBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Lantern",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LecternBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.NetherPortalBlock",
        "differences": {
          "added": [
            "boolean trySpawnPortal(LevelAccessor,BlockPos)",
            "NetherPortalBlock$PortalShape isPortal(LevelAccessor,BlockPos)",
            "BlockPattern$BlockPatternMatch getPortalShape(LevelAccessor,BlockPos)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.PistonBaseBlock",
        "differences": {
          "added": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockState,BlockPlaceContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "differences": {
          "added": [
            "boolean canBeReplaced(BlockPlaceContext)"
          ],
          "removed": [
            "boolean canBeReplaced(BlockPlaceContext)",
            "boolean isFaceSturdy(BlockGetter,BlockPos,Direction,SupportType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch",
        "differences": {
          "added": [
            "BlockPattern$PortalInfo getPortalOutput(Direction,BlockPos,double,Vec3,double)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.GenerationStep$Decoration",
        "differences": {
          "added": [
            "void <init>(String,int,String)",
            "String getName()",
            "GenerationStep$Decoration byName(String)",
            "String getSerializedName()",
            "GenerationStep$Decoration lambda$static$0(GenerationStep$Decoration)"
          ],
          "removed": [
            "void <init>(String,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.WorldCarver",
        "differences": {
          "added": [
            "CarverConfiguration lambda$new$1(ConfiguredWorldCarver)",
            "ConfiguredWorldCarver lambda$new$0(CarverConfiguration)"
          ],
          "removed": [
            "ConfiguredWorldCarver configured(CarverConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.BastionFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,MultiJigsawConfiguration)",
            "StructureFeature$StructureStartFactory getStartFactory()"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,JigsawConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature$OceanMonumentStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.PillagerOutpostFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,NoneFeatureConfiguration)",
            "StructureFeature$StructureStartFactory getStartFactory()"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,int,int,Biome,ChunkPos,JigsawConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SeagrassFeature",
        "differences": {
          "added": [
            "boolean place(WorldGenLevel,ChunkGenerator,Random,BlockPos,SeagrassFeatureConfiguration)"
          ],
          "removed": [
            "boolean place(WorldGenLevel,ChunkGenerator,Random,BlockPos,ProbabilityFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ShipwreckFeature$FeatureStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,ShipwreckConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,ShipwreckConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(int,int,int,int)",
            "App lambda$static$4(RecordCodecBuilder$Instance)",
            "Integer lambda$null$3(ColumnFeatureConfiguration)",
            "Integer lambda$null$2(ColumnFeatureConfiguration)",
            "Integer lambda$null$1(ColumnFeatureConfiguration)",
            "Integer lambda$null$0(ColumnFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(UniformInt,UniformInt)",
            "UniformInt reach()",
            "UniformInt height()",
            "App lambda$static$2(RecordCodecBuilder$Instance)",
            "UniformInt lambda$null$1(ColumnFeatureConfiguration)",
            "UniformInt lambda$null$0(ColumnFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DecoratedFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(ConfiguredFeature,ConfiguredDecorator)",
            "ConfiguredFeature lambda$null$0(DecoratedFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(Supplier,ConfiguredDecorator)",
            "Supplier lambda$null$0(DecoratedFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(BlockState,BlockState,int,int,int)",
            "App lambda$static$5(RecordCodecBuilder$Instance)",
            "Integer lambda$null$4(DeltaFeatureConfiguration)",
            "Integer lambda$null$3(DeltaFeatureConfiguration)",
            "Integer lambda$null$2(DeltaFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(BlockState,BlockState,UniformInt,UniformInt)",
            "BlockState contents()",
            "BlockState rim()",
            "UniformInt size()",
            "UniformInt rimSize()",
            "App lambda$static$4(RecordCodecBuilder$Instance)",
            "UniformInt lambda$null$3(DeltaFeatureConfiguration)",
            "UniformInt lambda$null$2(DeltaFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherFossilFeature$FeatureStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,NoneFeatureConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinFeature$OceanRuinStart",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,OceanRuinConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,OceanRuinConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.PoolElementStructurePiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,StructureManager,StructurePoolElement,BlockPos,int,Rotation,BoundingBox)",
            "void <init>(StructureManager,CompoundTag,StructurePieceType)"
          ],
          "removed": [
            "void <init>(StructureManager,StructurePoolElement,BlockPos,int,Rotation,BoundingBox)",
            "void <init>(StructureManager,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StructureStart$1",
        "differences": {
          "added": [
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,MineshaftConfiguration)",
            "void generatePieces(ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ],
          "removed": [
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,MineshaftConfiguration)",
            "void generatePieces(RegistryAccess,ChunkGenerator,StructureManager,int,int,Biome,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.surfacebuilders.SurfaceBuilder",
        "differences": {
          "added": [
            "SurfaceBuilderConfiguration lambda$new$1(ConfiguredSurfaceBuilder)",
            "ConfiguredSurfaceBuilder lambda$new$0(SurfaceBuilderConfiguration)"
          ],
          "removed": [
            "ConfiguredSurfaceBuilder configured(SurfaceBuilderConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.McRegionUpgrader",
        "differences": {
          "added": [
            "void convertRegions(File,Iterable,BiomeSource,int,int,ProgressListener)",
            "void convertRegion(File,File,BiomeSource,int,int,ProgressListener)"
          ],
          "removed": [
            "void convertRegions(RegistryAccess$RegistryHolder,File,Iterable,BiomeSource,int,int,ProgressListener)",
            "void convertRegion(RegistryAccess$RegistryHolder,File,File,BiomeSource,int,int,ProgressListener)"
          ]
        }
      }
    }
  ]
}