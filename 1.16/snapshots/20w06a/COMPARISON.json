{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "1.15.2",
        "currentLabel": "20w06a",
        "values": [
          {
            "key": "World version",
            "previous": "2230",
            "current": "2504"
          },
          {
            "key": "Protocol version",
            "previous": "578",
            "current": "701"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "1.15.2",
        "currentLabel": "20w06a",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "biome",
        "differences": {
          "added": [
            "minecraft:nether_wastes",
            "minecraft:soul_sand_valley",
            "minecraft:crimson_forest",
            "minecraft:warped_forest"
          ],
          "removed": [
            "minecraft:nether"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "biome_source_type",
        "differences": {
          "added": [
            "minecraft:multi_noise"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:soul_fire",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:soul_fire_torch",
            "minecraft:soul_fire_wall_torch",
            "minecraft:soul_fire_lantern",
            "minecraft:warped_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:warped_nylium",
            "minecraft:warped_fungi",
            "minecraft:warped_wart_block",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:crimson_stem",
            "minecraft:stripped_crimson_stem",
            "minecraft:crimson_nylium",
            "minecraft:crimson_fungi",
            "minecraft:shroomlight",
            "minecraft:weeping_vines",
            "minecraft:weeping_vines_plant",
            "minecraft:crimson_roots",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign",
            "minecraft:netherite_block",
            "minecraft:ancient_debris"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "carver",
        "differences": {
          "added": [
            "minecraft:nether_cave"
          ],
          "removed": [
            "minecraft:hell_cave"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "decorator",
        "differences": {
          "added": [
            "minecraft:fire"
          ],
          "removed": [
            "minecraft:hell_fire"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "entity_type",
        "differences": {
          "added": [
            "minecraft:hoglin"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "feature",
        "differences": {
          "added": [
            "minecraft:nether_fossil",
            "minecraft:huge_fungi",
            "minecraft:nether_forest_vegetation",
            "minecraft:weeping_vines",
            "minecraft:basalt_pillar",
            "minecraft:no_surface_ore"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:crimson_nylium",
            "minecraft:warped_nylium",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:crimson_stem",
            "minecraft:warped_stem",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:crimson_fungi",
            "minecraft:warped_fungi",
            "minecraft:crimson_roots",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:weeping_vines",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:soul_fire_torch",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:warped_wart_block",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:hoglin_spawn_egg",
            "minecraft:soul_fire_lantern",
            "minecraft:shroomlight",
            "minecraft:netherite_block",
            "minecraft:ancient_debris",
            "minecraft:netherite_ingot",
            "minecraft:netherite_scrap",
            "minecraft:netherite_sword",
            "minecraft:netherite_shovel",
            "minecraft:netherite_pickaxe",
            "minecraft:netherite_axe",
            "minecraft:netherite_hoe",
            "minecraft:netherite_helmet",
            "minecraft:netherite_chestplate",
            "minecraft:netherite_leggings",
            "minecraft:netherite_boots"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "particle_type",
        "differences": {
          "added": [
            "minecraft:soul_fire_flame",
            "minecraft:ash",
            "minecraft:crimson_spore",
            "minecraft:warped_spore"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:block.ancient_debris.break",
            "minecraft:block.ancient_debris.step",
            "minecraft:block.ancient_debris.place",
            "minecraft:block.ancient_debris.hit",
            "minecraft:block.ancient_debris.fall",
            "minecraft:item.armor.equip_netherite",
            "minecraft:block.basalt.break",
            "minecraft:block.basalt.step",
            "minecraft:block.basalt.place",
            "minecraft:block.basalt.hit",
            "minecraft:block.basalt.fall",
            "minecraft:block.bone_block.break",
            "minecraft:block.bone_block.fall",
            "minecraft:block.bone_block.hit",
            "minecraft:block.bone_block.place",
            "minecraft:block.bone_block.step",
            "minecraft:block.roots.break",
            "minecraft:block.roots.step",
            "minecraft:block.roots.place",
            "minecraft:block.roots.hit",
            "minecraft:block.roots.fall",
            "minecraft:block.nether_bricks.break",
            "minecraft:block.nether_bricks.step",
            "minecraft:block.nether_bricks.place",
            "minecraft:block.nether_bricks.hit",
            "minecraft:block.nether_bricks.fall",
            "minecraft:block.stem.break",
            "minecraft:block.stem.step",
            "minecraft:block.stem.place",
            "minecraft:block.stem.hit",
            "minecraft:block.stem.fall",
            "minecraft:block.nylium.break",
            "minecraft:block.nylium.step",
            "minecraft:block.nylium.place",
            "minecraft:block.nylium.hit",
            "minecraft:block.nylium.fall",
            "minecraft:block.nether_sprouts.break",
            "minecraft:block.nether_sprouts.step",
            "minecraft:block.nether_sprouts.place",
            "minecraft:block.nether_sprouts.hit",
            "minecraft:block.nether_sprouts.fall",
            "minecraft:block.fungi.break",
            "minecraft:block.fungi.step",
            "minecraft:block.fungi.place",
            "minecraft:block.fungi.hit",
            "minecraft:block.fungi.fall",
            "minecraft:block.weeping_vines.break",
            "minecraft:block.weeping_vines.step",
            "minecraft:block.weeping_vines.place",
            "minecraft:block.weeping_vines.hit",
            "minecraft:block.weeping_vines.fall",
            "minecraft:block.wart_block.break",
            "minecraft:block.wart_block.step",
            "minecraft:block.wart_block.place",
            "minecraft:block.wart_block.hit",
            "minecraft:block.wart_block.fall",
            "minecraft:block.netherite_block.break",
            "minecraft:block.netherite_block.step",
            "minecraft:block.netherite_block.place",
            "minecraft:block.netherite_block.hit",
            "minecraft:block.netherite_block.fall",
            "minecraft:block.netherrack.break",
            "minecraft:block.netherrack.step",
            "minecraft:block.netherrack.place",
            "minecraft:block.netherrack.hit",
            "minecraft:block.netherrack.fall",
            "minecraft:block.nether_ore.break",
            "minecraft:block.nether_ore.fall",
            "minecraft:block.nether_ore.hit",
            "minecraft:block.nether_ore.place",
            "minecraft:block.nether_ore.step",
            "minecraft:block.shroomlight.break",
            "minecraft:block.shroomlight.step",
            "minecraft:block.shroomlight.place",
            "minecraft:block.shroomlight.hit",
            "minecraft:block.shroomlight.fall",
            "minecraft:block.soul_sand.break",
            "minecraft:block.soul_sand.step",
            "minecraft:block.soul_sand.place",
            "minecraft:block.soul_sand.hit",
            "minecraft:block.soul_sand.fall",
            "minecraft:block.soul_soil.break",
            "minecraft:block.soul_soil.step",
            "minecraft:block.soul_soil.place",
            "minecraft:block.soul_soil.hit",
            "minecraft:block.soul_soil.fall"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "structure_feature",
        "differences": {
          "added": [
            "minecraft:nether_fossil"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "structure_piece",
        "differences": {
          "added": [
            "minecraft:nefos"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "surface_builder",
        "differences": {
          "added": [
            "minecraft:nether_forest",
            "minecraft:soul_sand_valley"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_without_drop.json",
        "differences": {
          "added": [
            "minecraft:soul_fire",
            "minecraft:soul_fire_wall_torch",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_with_drop.json",
        "differences": {
          "added": [
            "minecraft:ancient_debris",
            "minecraft:basalt",
            "minecraft:crimson_button",
            "minecraft:crimson_door",
            "minecraft:crimson_fence",
            "minecraft:crimson_fence_gate",
            "minecraft:crimson_fungi",
            "minecraft:crimson_nylium",
            "minecraft:crimson_planks",
            "minecraft:crimson_pressure_plate",
            "minecraft:crimson_roots",
            "minecraft:crimson_sign",
            "minecraft:crimson_slab",
            "minecraft:crimson_stairs",
            "minecraft:crimson_stem",
            "minecraft:crimson_trapdoor",
            "minecraft:netherite_block",
            "minecraft:nether_sprouts",
            "minecraft:shroomlight",
            "minecraft:soul_fire_lantern",
            "minecraft:soul_fire_torch",
            "minecraft:soul_soil",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:warped_button",
            "minecraft:warped_door",
            "minecraft:warped_fence",
            "minecraft:warped_fence_gate",
            "minecraft:warped_fungi",
            "minecraft:warped_nylium",
            "minecraft:warped_planks",
            "minecraft:warped_pressure_plate",
            "minecraft:warped_roots",
            "minecraft:warped_sign",
            "minecraft:warped_slab",
            "minecraft:warped_stairs",
            "minecraft:warped_stem",
            "minecraft:warped_trapdoor",
            "minecraft:warped_wart_block",
            "minecraft:weeping_vines",
            "minecraft:weeping_vines_plant"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_entities_with_drop.json",
        "differences": {
          "added": [
            "minecraft:hoglin"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/biome.json",
        "differences": {
          "added": [
            "minecraft:nether_wastes",
            "minecraft:soul_sand_valley",
            "minecraft:crimson_forest",
            "minecraft:warped_forest"
          ],
          "removed": [
            "minecraft:nether"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/biome_source_type.json",
        "differences": {
          "added": [
            "minecraft:multi_noise"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:soul_fire",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:soul_fire_torch",
            "minecraft:soul_fire_wall_torch",
            "minecraft:soul_fire_lantern",
            "minecraft:warped_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:warped_nylium",
            "minecraft:warped_fungi",
            "minecraft:warped_wart_block",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:crimson_stem",
            "minecraft:stripped_crimson_stem",
            "minecraft:crimson_nylium",
            "minecraft:crimson_fungi",
            "minecraft:shroomlight",
            "minecraft:weeping_vines",
            "minecraft:weeping_vines_plant",
            "minecraft:crimson_roots",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign",
            "minecraft:netherite_block",
            "minecraft:ancient_debris"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/carver.json",
        "differences": {
          "added": [
            "minecraft:nether_cave"
          ],
          "removed": [
            "minecraft:hell_cave"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/decorator.json",
        "differences": {
          "added": [
            "minecraft:fire"
          ],
          "removed": [
            "minecraft:hell_fire"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/entity_type.json",
        "differences": {
          "added": [
            "minecraft:hoglin"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/feature.json",
        "differences": {
          "added": [
            "minecraft:nether_fossil",
            "minecraft:huge_fungi",
            "minecraft:nether_forest_vegetation",
            "minecraft:weeping_vines",
            "minecraft:basalt_pillar",
            "minecraft:no_surface_ore"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:crimson_nylium",
            "minecraft:warped_nylium",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:crimson_stem",
            "minecraft:warped_stem",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:crimson_fungi",
            "minecraft:warped_fungi",
            "minecraft:crimson_roots",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:weeping_vines",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:soul_fire_torch",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:warped_wart_block",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:hoglin_spawn_egg",
            "minecraft:soul_fire_lantern",
            "minecraft:shroomlight",
            "minecraft:netherite_block",
            "minecraft:ancient_debris",
            "minecraft:netherite_ingot",
            "minecraft:netherite_scrap",
            "minecraft:netherite_sword",
            "minecraft:netherite_shovel",
            "minecraft:netherite_pickaxe",
            "minecraft:netherite_axe",
            "minecraft:netherite_hoe",
            "minecraft:netherite_helmet",
            "minecraft:netherite_chestplate",
            "minecraft:netherite_leggings",
            "minecraft:netherite_boots"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/particle_type.json",
        "differences": {
          "added": [
            "minecraft:soul_fire_flame",
            "minecraft:ash",
            "minecraft:crimson_spore",
            "minecraft:warped_spore"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:block.ancient_debris.break",
            "minecraft:block.ancient_debris.step",
            "minecraft:block.ancient_debris.place",
            "minecraft:block.ancient_debris.hit",
            "minecraft:block.ancient_debris.fall",
            "minecraft:item.armor.equip_netherite",
            "minecraft:block.basalt.break",
            "minecraft:block.basalt.step",
            "minecraft:block.basalt.place",
            "minecraft:block.basalt.hit",
            "minecraft:block.basalt.fall",
            "minecraft:block.bone_block.break",
            "minecraft:block.bone_block.fall",
            "minecraft:block.bone_block.hit",
            "minecraft:block.bone_block.place",
            "minecraft:block.bone_block.step",
            "minecraft:block.roots.break",
            "minecraft:block.roots.step",
            "minecraft:block.roots.place",
            "minecraft:block.roots.hit",
            "minecraft:block.roots.fall",
            "minecraft:block.nether_bricks.break",
            "minecraft:block.nether_bricks.step",
            "minecraft:block.nether_bricks.place",
            "minecraft:block.nether_bricks.hit",
            "minecraft:block.nether_bricks.fall",
            "minecraft:block.stem.break",
            "minecraft:block.stem.step",
            "minecraft:block.stem.place",
            "minecraft:block.stem.hit",
            "minecraft:block.stem.fall",
            "minecraft:block.nylium.break",
            "minecraft:block.nylium.step",
            "minecraft:block.nylium.place",
            "minecraft:block.nylium.hit",
            "minecraft:block.nylium.fall",
            "minecraft:block.nether_sprouts.break",
            "minecraft:block.nether_sprouts.step",
            "minecraft:block.nether_sprouts.place",
            "minecraft:block.nether_sprouts.hit",
            "minecraft:block.nether_sprouts.fall",
            "minecraft:block.fungi.break",
            "minecraft:block.fungi.step",
            "minecraft:block.fungi.place",
            "minecraft:block.fungi.hit",
            "minecraft:block.fungi.fall",
            "minecraft:block.weeping_vines.break",
            "minecraft:block.weeping_vines.step",
            "minecraft:block.weeping_vines.place",
            "minecraft:block.weeping_vines.hit",
            "minecraft:block.weeping_vines.fall",
            "minecraft:block.wart_block.break",
            "minecraft:block.wart_block.step",
            "minecraft:block.wart_block.place",
            "minecraft:block.wart_block.hit",
            "minecraft:block.wart_block.fall",
            "minecraft:block.netherite_block.break",
            "minecraft:block.netherite_block.step",
            "minecraft:block.netherite_block.place",
            "minecraft:block.netherite_block.hit",
            "minecraft:block.netherite_block.fall",
            "minecraft:block.netherrack.break",
            "minecraft:block.netherrack.step",
            "minecraft:block.netherrack.place",
            "minecraft:block.netherrack.hit",
            "minecraft:block.netherrack.fall",
            "minecraft:block.nether_ore.break",
            "minecraft:block.nether_ore.fall",
            "minecraft:block.nether_ore.hit",
            "minecraft:block.nether_ore.place",
            "minecraft:block.nether_ore.step",
            "minecraft:block.shroomlight.break",
            "minecraft:block.shroomlight.step",
            "minecraft:block.shroomlight.place",
            "minecraft:block.shroomlight.hit",
            "minecraft:block.shroomlight.fall",
            "minecraft:block.soul_sand.break",
            "minecraft:block.soul_sand.step",
            "minecraft:block.soul_sand.place",
            "minecraft:block.soul_sand.hit",
            "minecraft:block.soul_sand.fall",
            "minecraft:block.soul_soil.break",
            "minecraft:block.soul_soil.step",
            "minecraft:block.soul_soil.place",
            "minecraft:block.soul_soil.hit",
            "minecraft:block.soul_soil.fall"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/structure_feature.json",
        "differences": {
          "added": [
            "minecraft:nether_fossil"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/structure_piece.json",
        "differences": {
          "added": [
            "minecraft:nefos"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/surface_builder.json",
        "differences": {
          "added": [
            "minecraft:nether_forest",
            "minecraft:soul_sand_valley"
          ],
          "removed": []
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "ancient_debris.json",
            "basalt.json",
            "crimson_button.json",
            "crimson_door.json",
            "crimson_fence.json",
            "crimson_fence_gate.json",
            "crimson_fungi.json",
            "crimson_nylium.json",
            "crimson_planks.json",
            "crimson_pressure_plate.json",
            "crimson_roots.json",
            "crimson_sign.json",
            "crimson_slab.json",
            "crimson_stairs.json",
            "crimson_stem.json",
            "crimson_trapdoor.json",
            "crimson_wall_sign.json",
            "netherite_block.json",
            "nether_sprouts.json",
            "shroomlight.json",
            "soul_fire.json",
            "soul_fire_lantern.json",
            "soul_fire_torch.json",
            "soul_fire_wall_torch.json",
            "soul_soil.json",
            "stripped_crimson_stem.json",
            "stripped_warped_stem.json",
            "warped_button.json",
            "warped_door.json",
            "warped_fence.json",
            "warped_fence_gate.json",
            "warped_fungi.json",
            "warped_nylium.json",
            "warped_planks.json",
            "warped_pressure_plate.json",
            "warped_roots.json",
            "warped_sign.json",
            "warped_slab.json",
            "warped_stairs.json",
            "warped_stem.json",
            "warped_trapdoor.json",
            "warped_wall_sign.json",
            "warped_wart_block.json",
            "weeping_vines.json",
            "weeping_vines_plant.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "commands": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "locatebiome.txt"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "crimson_button.json",
            "crimson_door.json",
            "crimson_fence.json",
            "crimson_fence_gate.json",
            "crimson_planks.json",
            "crimson_pressure_plate.json",
            "crimson_slab.json",
            "crimson_stairs.json",
            "crimson_trapdoor.json",
            "netherite_axe.json",
            "netherite_block.json",
            "netherite_boots.json",
            "netherite_chestplate.json",
            "netherite_helmet.json",
            "netherite_hoe.json",
            "netherite_ingot.json",
            "netherite_ingot_from_netherite_block.json",
            "netherite_leggings.json",
            "netherite_pickaxe.json",
            "netherite_scrap.json",
            "netherite_scrap_from_blasting.json",
            "netherite_shovel.json",
            "netherite_sword.json",
            "soul_fire_lantern.json",
            "soul_fire_torch.json",
            "warped_button.json",
            "warped_door.json",
            "warped_fence.json",
            "warped_fence_gate.json",
            "warped_planks.json",
            "warped_pressure_plate.json",
            "warped_slab.json",
            "warped_stairs.json",
            "warped_trapdoor.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "block.minecraft.soul_fire_torch: Soul Fire Torch",
            "block.minecraft.soul_fire_wall_torch: Soul Fire Wall Torch",
            "block.minecraft.warped_wart_block: Warped Wart Block",
            "block.minecraft.warped_stem: Warped Stem",
            "block.minecraft.stripped_warped_stem: Stripped Warped Stem",
            "block.minecraft.crimson_stem: Crimson Stem",
            "block.minecraft.stripped_crimson_stem: Stripped Crimson Stem",
            "block.minecraft.warped_nylium: Warped Nylium",
            "block.minecraft.crimson_nylium: Crimson Nylium",
            "block.minecraft.warped_fungi: Warped Fungi",
            "block.minecraft.crimson_fungi: Crimson Fungi",
            "block.minecraft.crimson_roots: Crimson Roots",
            "block.minecraft.warped_roots: Warped Roots",
            "block.minecraft.nether_sprouts: Nether Sprouts",
            "block.minecraft.shroomlight: Shroomlight",
            "block.minecraft.weeping_vines: Weeping Vines",
            "block.minecraft.weeping_vines_plant: Weeping Vines",
            "block.minecraft.soul_soil: Soul Soil",
            "block.minecraft.basalt: Basalt",
            "block.minecraft.warped_planks: Warped Planks",
            "block.minecraft.warped_slab: Warped Slab",
            "block.minecraft.warped_pressure_plate: Warped Pressure Plate",
            "block.minecraft.warped_fence: Warped Fence",
            "block.minecraft.warped_trapdoor: Warped Trapdoor",
            "block.minecraft.warped_fence_gate: Warped Fence Gate",
            "block.minecraft.warped_stairs: Warped Stairs",
            "block.minecraft.warped_button: Warped Button",
            "block.minecraft.warped_door: Warped Door",
            "block.minecraft.warped_sign: Warped Sign",
            "block.minecraft.warped_wall_sign: Warped Sign",
            "block.minecraft.crimson_planks: Crimson Planks",
            "block.minecraft.crimson_slab: Crimson Slab",
            "block.minecraft.crimson_pressure_plate: Crimson Pressure Plate",
            "block.minecraft.crimson_fence: Crimson Fence",
            "block.minecraft.crimson_trapdoor: Crimson Trapdoor",
            "block.minecraft.crimson_fence_gate: Crimson Fence Gate",
            "block.minecraft.crimson_stairs: Crimson Stairs",
            "block.minecraft.crimson_button: Crimson Button",
            "block.minecraft.crimson_door: Crimson Door",
            "block.minecraft.crimson_sign: Crimson Sign",
            "block.minecraft.crimson_wall_sign: Crimson Sign",
            "block.minecraft.soul_fire: Soul Fire",
            "block.minecraft.soul_fire_lantern: Soul Fire Lantern",
            "block.minecraft.netherite_block: Block of Netherite",
            "block.minecraft.ancient_debris: Ancient Debris",
            "item.minecraft.hoglin_spawn_egg: Hoglin Spawn Egg",
            "item.minecraft.netherite_scrap: Netherite Scrap",
            "item.minecraft.netherite_ingot: Netherite Ingot",
            "item.minecraft.netherite_helmet: Netherite Helmet",
            "item.minecraft.netherite_chestplate: Netherite Chestplate",
            "item.minecraft.netherite_leggings: Netherite Leggings",
            "item.minecraft.netherite_boots: Netherite Boots",
            "item.minecraft.netherite_axe: Netherite Axe",
            "item.minecraft.netherite_pickaxe: Netherite Pickaxe",
            "item.minecraft.netherite_hoe: Netherite Hoe",
            "item.minecraft.netherite_shovel: Netherite Shovel",
            "item.minecraft.netherite_sword: Netherite Sword",
            "entity.minecraft.hoglin: Hoglin",
            "subtitles.block.composter.empty: Composter emptied",
            "subtitles.block.composter.fill: Composter filled",
            "subtitles.block.composter.ready: Composter composts",
            "subtitles.item.armor.equip_netherite: Netherite armor clanks",
            "commands.locatebiome.success: The nearest %s is at %s (%s blocks away)",
            "commands.teleport.invalidPosition: Invalid position for teleport",
            "commands.locatebiome.notFound: Could not find a %s within reasonable distance",
            "commands.locatebiome.invalid: There is no biome named %s",
            "commands.summon.invalidPosition: Invalid position for summon",
            "biome.minecraft.nether_wastes: Nether Wastes",
            "biome.minecraft.soul_sand_valley: Soul Sand Valley",
            "biome.minecraft.warped_forest: Warped Forest",
            "biome.minecraft.crimson_forest: Crimson Forest"
          ],
          "removed": [
            "selectWorld.empty: empty",
            "selectServer.empty: empty",
            "mcoServer.title: Minecraft Online World",
            "multiplayer.connect: Connect",
            "multiplayer.ipinfo: Enter the IP of a server to connect to it:",
            "options.music: Music",
            "options.sound: Sound",
            "options.anaglyph: 3D Anaglyph",
            "block.minecraft.flowing_water: Flowing Water",
            "block.minecraft.flowing_lava: Flowing Lava",
            "block.minecraft.bed: Bed",
            "block.minecraft.two_turtle_eggs: Two Turtle Eggs",
            "block.minecraft.three_turtle_eggs: Three Turtle Eggs",
            "block.minecraft.four_turtle_eggs: Four Turtle Eggs",
            "block.minecraft.banner: Banner",
            "block.minecraft.wall_banner: Wall Banner",
            "item.minecraft.skeleton_skull: Skeleton Skull",
            "item.minecraft.wither_skeleton_skull: Wither Skeleton Skull",
            "item.minecraft.zombie_head: Zombie Head",
            "item.minecraft.creeper_head: Creeper Head",
            "item.minecraft.dragon_head: Dragon Head",
            "stat.blocksButton: Blocks",
            "biome.minecraft.nether: Nether"
          ]
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "selectWorld.futureworld.error.title",
            "previous": "An error occured!",
            "current": "An error occurred!"
          },
          {
            "key": "selectWorld.futureworld.error.text",
            "previous": "Something went wrong while trying to load a world from a future version. This was a risky operation to begin with, sorry it didn't work.",
            "current": "Something went wrong while trying to load a world from a future version. This was a risky operation to begin with; sorry it didn't work."
          },
          {
            "key": "selectWorld.recreate.error.title",
            "previous": "An error occured!",
            "current": "An error occurred!"
          },
          {
            "key": "createWorld.customize.presets.share",
            "previous": "Want to share your preset with someone? Use the below box!",
            "current": "Want to share your preset with someone? Use the box below!"
          },
          {
            "key": "selectWorld.gameMode.survival.line1",
            "previous": "Search for resources, crafting, gain",
            "current": "Search for resources, craft, gain"
          },
          {
            "key": "selectWorld.gameMode.hardcore.line1",
            "previous": "Same as survival mode, locked at hardest",
            "current": "Same as Survival Mode, locked at hardest"
          },
          {
            "key": "selectWorld.gameMode.adventure.line1",
            "previous": "Same as survival mode, but blocks can't",
            "current": "Same as Survival Mode, but blocks can't"
          },
          {
            "key": "selectWorld.mapFeatures.info",
            "previous": "Villages, dungeons etc",
            "current": "Villages, dungeons etc."
          },
          {
            "key": "generator.amplified.info",
            "previous": "Notice: Just for fun, requires beefy computer",
            "current": "Notice: Just for fun! Requires a beefy computer."
          },
          {
            "key": "selectServer.direct",
            "previous": "Direct Connect",
            "current": "Direct Connection"
          },
          {
            "key": "multiplayer.downloadingStats",
            "previous": "Downloading statistics...",
            "current": "Retrieving statistics..."
          },
          {
            "key": "multiplayer.message_not_delivered",
            "previous": "Can't deliver chat message starting with %s, check server logs",
            "current": "Can't deliver chat message, check server logs: %s"
          },
          {
            "key": "multiplayer.status.request_handled",
            "previous": "Status requst has been handled",
            "current": "Status request has been handled"
          },
          {
            "key": "demo.day.1",
            "previous": "This demo will last five game days, do your best!",
            "current": "This demo will last five game days. Do your best!"
          },
          {
            "key": "demo.day.6",
            "previous": "You have passed your fifth day, use %s to save a screenshot of your creation",
            "current": "You have passed your fifth day. Use %s to save a screenshot of your creation."
          },
          {
            "key": "demo.reminder",
            "previous": "The demo time has expired, buy the game to continue or start a new world!",
            "current": "The demo time has expired. Buy the game to continue or start a new world!"
          },
          {
            "key": "demo.help.fullWrapped",
            "previous": "This demo will last 5 ingame days (about 1 hour and 40 minutes of real time). Check the advancements for hints! Have fun!",
            "current": "This demo will last 5 in-game days (about 1 hour and 40 minutes of real time). Check the advancements for hints! Have fun!"
          },
          {
            "key": "options.chat.scale",
            "previous": "Scale",
            "current": "Chat Text Size"
          },
          {
            "key": "options.narrator.all",
            "previous": "Narrates all",
            "current": "Narrates All"
          },
          {
            "key": "options.narrator.chat",
            "previous": "Narrates chat",
            "current": "Narrates Chat"
          },
          {
            "key": "options.narrator.system",
            "previous": "Narrates system",
            "current": "Narrates System"
          },
          {
            "key": "options.narrator.notavailable",
            "previous": "Not available",
            "current": "Not Available"
          },
          {
            "key": "key.saveToolbarActivator",
            "previous": "Save Toolbar Activator",
            "current": "Save Hotbar Activator"
          },
          {
            "key": "key.loadToolbarActivator",
            "previous": "Load Toolbar Activator",
            "current": "Load Hotbar Activator"
          },
          {
            "key": "block.minecraft.smooth_quartz",
            "previous": "Smooth Quartz",
            "current": "Smooth Quartz Block"
          },
          {
            "key": "block.minecraft.bed.no_sleep",
            "previous": "You can sleep only at night and during thunderstorms",
            "current": "You can sleep only at night or during thunderstorms"
          },
          {
            "key": "block.minecraft.bamboo_sapling",
            "previous": "Bamboo Sapling",
            "current": "Bamboo Shoot"
          },
          {
            "key": "item.minecraft.clay_ball",
            "previous": "Clay",
            "current": "Clay Ball"
          },
          {
            "key": "entity.minecraft.tropical_fish.type.sunstreak",
            "previous": "SunStreak",
            "current": "Sunstreak"
          },
          {
            "key": "stat.minecraft.time_since_rest",
            "previous": "Since Last Rest",
            "current": "Time Since Last Rest"
          },
          {
            "key": "stat.minecraft.time_since_death",
            "previous": "Since Last Death",
            "current": "Time Since Last Death"
          },
          {
            "key": "itemGroup.hotbar",
            "previous": "Saved Toolbars",
            "current": "Saved Hotbars"
          },
          {
            "key": "inventory.hotbarSaved",
            "previous": "Item toolbar saved (restore with %1$s+%2$s)",
            "current": "Item hotbar saved (restore with %1$s+%2$s)"
          },
          {
            "key": "inventory.hotbarInfo",
            "previous": "Save toolbar with %1$s+%2$s",
            "current": "Save hotbar with %1$s+%2$s"
          },
          {
            "key": "subtitles.item.honey_bottle.drink",
            "previous": "Honey gulping",
            "current": "Gulping"
          },
          {
            "key": "advancements.adventure.shoot_arrow.description",
            "previous": "Shoot something with a bow and arrow",
            "current": "Shoot something with an arrow"
          },
          {
            "key": "advancements.end.elytra.description",
            "previous": "Find Elytra",
            "current": "Find elytra"
          },
          {
            "key": "advancements.story.deflect_arrow.description",
            "previous": "Deflect an arrow with a shield",
            "current": "Deflect an arrow or trident with a shield"
          },
          {
            "key": "advancements.story.form_obsidian.description",
            "previous": "Form and mine a block of Obsidian",
            "current": "Form and mine a block of obsidian"
          },
          {
            "key": "commands.drop.success.single",
            "previous": "Dropped %s * %s",
            "current": "Dropped %s %s"
          },
          {
            "key": "commands.drop.success.single_with_table",
            "previous": "Dropped %s * %s from loot table %s",
            "current": "Dropped %s %s from loot table %s"
          },
          {
            "key": "commands.list.players",
            "previous": "There are %s of a max %s players online: %s",
            "current": "There are %s of a max of %s players online: %s"
          },
          {
            "key": "commands.worldborder.damage.amount.success",
            "previous": "Set the world border damage time to %s seconds",
            "current": "Set the world border damage time to %s per block each second"
          },
          {
            "key": "commands.team.option.name.success",
            "previous": "Updated team %s name",
            "current": "Updated the name of team %s"
          },
          {
            "key": "commands.scoreboard.objectives.modify.displayname",
            "previous": "Changed objective %s display name to %s",
            "current": "Changed the display name of %s to %s"
          },
          {
            "key": "commands.scoreboard.objectives.modify.rendertype",
            "previous": "Changed objective %s render type",
            "current": "Changed the render type of objective %s"
          },
          {
            "key": "commands.data.merge.failed",
            "previous": "Nothing changed, the specified properties already have these values",
            "current": "Nothing changed. The specified properties already have these values"
          },
          {
            "key": "argument.criteria.invalid",
            "previous": "Unknown criteria '%s'",
            "current": "Unknown criterion '%s'"
          },
          {
            "key": "command.unknown.command",
            "previous": "Unknown command",
            "current": "Unknown or incomplete command, see below for error"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/recipes/building_blocks/crimson_planks.json",
            "minecraft/advancements/recipes/building_blocks/crimson_slab.json",
            "minecraft/advancements/recipes/building_blocks/crimson_stairs.json",
            "minecraft/advancements/recipes/building_blocks/netherite_block.json",
            "minecraft/advancements/recipes/building_blocks/warped_planks.json",
            "minecraft/advancements/recipes/building_blocks/warped_slab.json",
            "minecraft/advancements/recipes/building_blocks/warped_stairs.json",
            "minecraft/advancements/recipes/combat/netherite_boots.json",
            "minecraft/advancements/recipes/combat/netherite_chestplate.json",
            "minecraft/advancements/recipes/combat/netherite_helmet.json",
            "minecraft/advancements/recipes/combat/netherite_leggings.json",
            "minecraft/advancements/recipes/combat/netherite_sword.json",
            "minecraft/advancements/recipes/decorations/composter.json",
            "minecraft/advancements/recipes/decorations/crimson_fence.json",
            "minecraft/advancements/recipes/decorations/soul_fire_lantern.json",
            "minecraft/advancements/recipes/decorations/soul_fire_torch.json",
            "minecraft/advancements/recipes/decorations/warped_fence.json",
            "minecraft/advancements/recipes/misc/netherite_ingot.json",
            "minecraft/advancements/recipes/misc/netherite_ingot_from_netherite_block.json",
            "minecraft/advancements/recipes/misc/netherite_scrap.json",
            "minecraft/advancements/recipes/misc/netherite_scrap_from_blasting.json",
            "minecraft/advancements/recipes/redstone/crimson_button.json",
            "minecraft/advancements/recipes/redstone/crimson_door.json",
            "minecraft/advancements/recipes/redstone/crimson_fence_gate.json",
            "minecraft/advancements/recipes/redstone/crimson_pressure_plate.json",
            "minecraft/advancements/recipes/redstone/crimson_trapdoor.json",
            "minecraft/advancements/recipes/redstone/warped_button.json",
            "minecraft/advancements/recipes/redstone/warped_door.json",
            "minecraft/advancements/recipes/redstone/warped_fence_gate.json",
            "minecraft/advancements/recipes/redstone/warped_pressure_plate.json",
            "minecraft/advancements/recipes/redstone/warped_trapdoor.json",
            "minecraft/advancements/recipes/tools/netherite_axe.json",
            "minecraft/advancements/recipes/tools/netherite_hoe.json",
            "minecraft/advancements/recipes/tools/netherite_pickaxe.json",
            "minecraft/advancements/recipes/tools/netherite_shovel.json",
            "minecraft/loot_tables/blocks/ancient_debris.json",
            "minecraft/loot_tables/blocks/basalt.json",
            "minecraft/loot_tables/blocks/crimson_button.json",
            "minecraft/loot_tables/blocks/crimson_door.json",
            "minecraft/loot_tables/blocks/crimson_fence.json",
            "minecraft/loot_tables/blocks/crimson_fence_gate.json",
            "minecraft/loot_tables/blocks/crimson_fungi.json",
            "minecraft/loot_tables/blocks/crimson_nylium.json",
            "minecraft/loot_tables/blocks/crimson_planks.json",
            "minecraft/loot_tables/blocks/crimson_pressure_plate.json",
            "minecraft/loot_tables/blocks/crimson_roots.json",
            "minecraft/loot_tables/blocks/crimson_sign.json",
            "minecraft/loot_tables/blocks/crimson_slab.json",
            "minecraft/loot_tables/blocks/crimson_stairs.json",
            "minecraft/loot_tables/blocks/crimson_stem.json",
            "minecraft/loot_tables/blocks/crimson_trapdoor.json",
            "minecraft/loot_tables/blocks/netherite_block.json",
            "minecraft/loot_tables/blocks/nether_sprouts.json",
            "minecraft/loot_tables/blocks/shroomlight.json",
            "minecraft/loot_tables/blocks/soul_fire_lantern.json",
            "minecraft/loot_tables/blocks/soul_fire_torch.json",
            "minecraft/loot_tables/blocks/soul_soil.json",
            "minecraft/loot_tables/blocks/stripped_crimson_stem.json",
            "minecraft/loot_tables/blocks/stripped_warped_stem.json",
            "minecraft/loot_tables/blocks/warped_button.json",
            "minecraft/loot_tables/blocks/warped_door.json",
            "minecraft/loot_tables/blocks/warped_fence.json",
            "minecraft/loot_tables/blocks/warped_fence_gate.json",
            "minecraft/loot_tables/blocks/warped_fungi.json",
            "minecraft/loot_tables/blocks/warped_nylium.json",
            "minecraft/loot_tables/blocks/warped_planks.json",
            "minecraft/loot_tables/blocks/warped_pressure_plate.json",
            "minecraft/loot_tables/blocks/warped_roots.json",
            "minecraft/loot_tables/blocks/warped_sign.json",
            "minecraft/loot_tables/blocks/warped_slab.json",
            "minecraft/loot_tables/blocks/warped_stairs.json",
            "minecraft/loot_tables/blocks/warped_stem.json",
            "minecraft/loot_tables/blocks/warped_trapdoor.json",
            "minecraft/loot_tables/blocks/warped_wart_block.json",
            "minecraft/loot_tables/blocks/weeping_vines.json",
            "minecraft/loot_tables/blocks/weeping_vines_plant.json",
            "minecraft/loot_tables/entities/hoglin.json",
            "minecraft/recipes/crimson_button.json",
            "minecraft/recipes/crimson_door.json",
            "minecraft/recipes/crimson_fence.json",
            "minecraft/recipes/crimson_fence_gate.json",
            "minecraft/recipes/crimson_planks.json",
            "minecraft/recipes/crimson_pressure_plate.json",
            "minecraft/recipes/crimson_slab.json",
            "minecraft/recipes/crimson_stairs.json",
            "minecraft/recipes/crimson_trapdoor.json",
            "minecraft/recipes/netherite_axe.json",
            "minecraft/recipes/netherite_block.json",
            "minecraft/recipes/netherite_boots.json",
            "minecraft/recipes/netherite_chestplate.json",
            "minecraft/recipes/netherite_helmet.json",
            "minecraft/recipes/netherite_hoe.json",
            "minecraft/recipes/netherite_ingot.json",
            "minecraft/recipes/netherite_ingot_from_netherite_block.json",
            "minecraft/recipes/netherite_leggings.json",
            "minecraft/recipes/netherite_pickaxe.json",
            "minecraft/recipes/netherite_scrap.json",
            "minecraft/recipes/netherite_scrap_from_blasting.json",
            "minecraft/recipes/netherite_shovel.json",
            "minecraft/recipes/netherite_sword.json",
            "minecraft/recipes/soul_fire_lantern.json",
            "minecraft/recipes/soul_fire_torch.json",
            "minecraft/recipes/warped_button.json",
            "minecraft/recipes/warped_door.json",
            "minecraft/recipes/warped_fence.json",
            "minecraft/recipes/warped_fence_gate.json",
            "minecraft/recipes/warped_planks.json",
            "minecraft/recipes/warped_pressure_plate.json",
            "minecraft/recipes/warped_slab.json",
            "minecraft/recipes/warped_stairs.json",
            "minecraft/recipes/warped_trapdoor.json",
            "minecraft/structures/nether_fossils/fossil_1.nbt",
            "minecraft/structures/nether_fossils/fossil_10.nbt",
            "minecraft/structures/nether_fossils/fossil_11.nbt",
            "minecraft/structures/nether_fossils/fossil_12.nbt",
            "minecraft/structures/nether_fossils/fossil_13.nbt",
            "minecraft/structures/nether_fossils/fossil_14.nbt",
            "minecraft/structures/nether_fossils/fossil_2.nbt",
            "minecraft/structures/nether_fossils/fossil_3.nbt",
            "minecraft/structures/nether_fossils/fossil_4.nbt",
            "minecraft/structures/nether_fossils/fossil_5.nbt",
            "minecraft/structures/nether_fossils/fossil_6.nbt",
            "minecraft/structures/nether_fossils/fossil_7.nbt",
            "minecraft/structures/nether_fossils/fossil_8.nbt",
            "minecraft/structures/nether_fossils/fossil_9.nbt",
            "minecraft/tags/blocks/crimson_stems.json",
            "minecraft/tags/blocks/fire.json",
            "minecraft/tags/blocks/nylium.json",
            "minecraft/tags/blocks/warped_stems.json",
            "minecraft/tags/blocks/wart_blocks.json",
            "minecraft/tags/items/crimson_stems.json",
            "minecraft/tags/items/warped_stems.json"
          ],
          "removed": [
            "minecraft/advancements/recipes/misc/composter.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/ancient_debris.json",
            "minecraft/blockstates/basalt.json",
            "minecraft/blockstates/crimson_button.json",
            "minecraft/blockstates/crimson_door.json",
            "minecraft/blockstates/crimson_fence.json",
            "minecraft/blockstates/crimson_fence_gate.json",
            "minecraft/blockstates/crimson_fungi.json",
            "minecraft/blockstates/crimson_nylium.json",
            "minecraft/blockstates/crimson_planks.json",
            "minecraft/blockstates/crimson_pressure_plate.json",
            "minecraft/blockstates/crimson_roots.json",
            "minecraft/blockstates/crimson_sign.json",
            "minecraft/blockstates/crimson_slab.json",
            "minecraft/blockstates/crimson_stairs.json",
            "minecraft/blockstates/crimson_stem.json",
            "minecraft/blockstates/crimson_trapdoor.json",
            "minecraft/blockstates/crimson_wall_sign.json",
            "minecraft/blockstates/netherite_block.json",
            "minecraft/blockstates/nether_sprouts.json",
            "minecraft/blockstates/shroomlight.json",
            "minecraft/blockstates/soul_fire.json",
            "minecraft/blockstates/soul_fire_lantern.json",
            "minecraft/blockstates/soul_fire_torch.json",
            "minecraft/blockstates/soul_fire_wall_torch.json",
            "minecraft/blockstates/soul_soil.json",
            "minecraft/blockstates/stripped_crimson_stem.json",
            "minecraft/blockstates/stripped_warped_stem.json",
            "minecraft/blockstates/warped_button.json",
            "minecraft/blockstates/warped_door.json",
            "minecraft/blockstates/warped_fence.json",
            "minecraft/blockstates/warped_fence_gate.json",
            "minecraft/blockstates/warped_fungi.json",
            "minecraft/blockstates/warped_nylium.json",
            "minecraft/blockstates/warped_planks.json",
            "minecraft/blockstates/warped_pressure_plate.json",
            "minecraft/blockstates/warped_roots.json",
            "minecraft/blockstates/warped_sign.json",
            "minecraft/blockstates/warped_slab.json",
            "minecraft/blockstates/warped_stairs.json",
            "minecraft/blockstates/warped_stem.json",
            "minecraft/blockstates/warped_trapdoor.json",
            "minecraft/blockstates/warped_wall_sign.json",
            "minecraft/blockstates/warped_wart_block.json",
            "minecraft/blockstates/weeping_vines.json",
            "minecraft/blockstates/weeping_vines_plant.json",
            "minecraft/models/block/acacia_log_horizontal.json",
            "minecraft/models/block/ancient_debris.json",
            "minecraft/models/block/andesite_wall_side_tall.json",
            "minecraft/models/block/basalt.json",
            "minecraft/models/block/birch_log_horizontal.json",
            "minecraft/models/block/brick_wall_side_tall.json",
            "minecraft/models/block/cobblestone_wall_side_tall.json",
            "minecraft/models/block/crimson_button.json",
            "minecraft/models/block/crimson_button_inventory.json",
            "minecraft/models/block/crimson_button_pressed.json",
            "minecraft/models/block/crimson_door_bottom.json",
            "minecraft/models/block/crimson_door_bottom_hinge.json",
            "minecraft/models/block/crimson_door_top.json",
            "minecraft/models/block/crimson_door_top_hinge.json",
            "minecraft/models/block/crimson_fence_gate.json",
            "minecraft/models/block/crimson_fence_gate_open.json",
            "minecraft/models/block/crimson_fence_gate_wall.json",
            "minecraft/models/block/crimson_fence_gate_wall_open.json",
            "minecraft/models/block/crimson_fence_inventory.json",
            "minecraft/models/block/crimson_fence_post.json",
            "minecraft/models/block/crimson_fence_side.json",
            "minecraft/models/block/crimson_fungi.json",
            "minecraft/models/block/crimson_nylium.json",
            "minecraft/models/block/crimson_planks.json",
            "minecraft/models/block/crimson_pressure_plate.json",
            "minecraft/models/block/crimson_pressure_plate_down.json",
            "minecraft/models/block/crimson_roots.json",
            "minecraft/models/block/crimson_sign.json",
            "minecraft/models/block/crimson_slab.json",
            "minecraft/models/block/crimson_slab_top.json",
            "minecraft/models/block/crimson_stairs.json",
            "minecraft/models/block/crimson_stairs_inner.json",
            "minecraft/models/block/crimson_stairs_outer.json",
            "minecraft/models/block/crimson_stem.json",
            "minecraft/models/block/crimson_trapdoor_bottom.json",
            "minecraft/models/block/crimson_trapdoor_open.json",
            "minecraft/models/block/crimson_trapdoor_top.json",
            "minecraft/models/block/cube_column_horizontal.json",
            "minecraft/models/block/dark_oak_log_horizontal.json",
            "minecraft/models/block/diorite_wall_side_tall.json",
            "minecraft/models/block/end_stone_brick_wall_side_tall.json",
            "minecraft/models/block/granite_wall_side_tall.json",
            "minecraft/models/block/hanging_soul_fire_lantern.json",
            "minecraft/models/block/hay_block_horizontal.json",
            "minecraft/models/block/jungle_log_horizontal.json",
            "minecraft/models/block/mossy_cobblestone_wall_side_tall.json",
            "minecraft/models/block/mossy_stone_brick_wall_side_tall.json",
            "minecraft/models/block/netherite_block.json",
            "minecraft/models/block/nether_brick_wall_side_tall.json",
            "minecraft/models/block/nether_sprouts.json",
            "minecraft/models/block/oak_log_horizontal.json",
            "minecraft/models/block/prismarine_wall_side_tall.json",
            "minecraft/models/block/purpur_pillar_horizontal.json",
            "minecraft/models/block/quartz_pillar_horizontal.json",
            "minecraft/models/block/red_nether_brick_wall_side_tall.json",
            "minecraft/models/block/red_sandstone_wall_side_tall.json",
            "minecraft/models/block/sandstone_wall_side_tall.json",
            "minecraft/models/block/shroomlight.json",
            "minecraft/models/block/soul_fire_floor0.json",
            "minecraft/models/block/soul_fire_floor1.json",
            "minecraft/models/block/soul_fire_lantern.json",
            "minecraft/models/block/soul_fire_side0.json",
            "minecraft/models/block/soul_fire_side1.json",
            "minecraft/models/block/soul_fire_side_alt0.json",
            "minecraft/models/block/soul_fire_side_alt1.json",
            "minecraft/models/block/soul_fire_torch.json",
            "minecraft/models/block/soul_fire_wall_torch.json",
            "minecraft/models/block/soul_soil.json",
            "minecraft/models/block/spruce_log_horizontal.json",
            "minecraft/models/block/stone_brick_wall_side_tall.json",
            "minecraft/models/block/stripped_acacia_log_horizontal.json",
            "minecraft/models/block/stripped_birch_log_horizontal.json",
            "minecraft/models/block/stripped_crimson_stem.json",
            "minecraft/models/block/stripped_dark_oak_log_horizontal.json",
            "minecraft/models/block/stripped_jungle_log_horizontal.json",
            "minecraft/models/block/stripped_oak_log_horizontal.json",
            "minecraft/models/block/stripped_spruce_log_horizontal.json",
            "minecraft/models/block/stripped_warped_stem.json",
            "minecraft/models/block/template_fire_floor.json",
            "minecraft/models/block/template_fire_side.json",
            "minecraft/models/block/template_fire_side_alt.json",
            "minecraft/models/block/template_fire_up.json",
            "minecraft/models/block/template_fire_up_alt.json",
            "minecraft/models/block/template_hanging_lantern.json",
            "minecraft/models/block/template_lantern.json",
            "minecraft/models/block/template_torch_wall.json",
            "minecraft/models/block/template_wall_side_tall.json",
            "minecraft/models/block/warped_button.json",
            "minecraft/models/block/warped_button_inventory.json",
            "minecraft/models/block/warped_button_pressed.json",
            "minecraft/models/block/warped_door_bottom.json",
            "minecraft/models/block/warped_door_bottom_hinge.json",
            "minecraft/models/block/warped_door_top.json",
            "minecraft/models/block/warped_door_top_hinge.json",
            "minecraft/models/block/warped_fence_gate.json",
            "minecraft/models/block/warped_fence_gate_open.json",
            "minecraft/models/block/warped_fence_gate_wall.json",
            "minecraft/models/block/warped_fence_gate_wall_open.json",
            "minecraft/models/block/warped_fence_inventory.json",
            "minecraft/models/block/warped_fence_post.json",
            "minecraft/models/block/warped_fence_side.json",
            "minecraft/models/block/warped_fungi.json",
            "minecraft/models/block/warped_nylium.json",
            "minecraft/models/block/warped_planks.json",
            "minecraft/models/block/warped_pressure_plate.json",
            "minecraft/models/block/warped_pressure_plate_down.json",
            "minecraft/models/block/warped_roots.json",
            "minecraft/models/block/warped_sign.json",
            "minecraft/models/block/warped_slab.json",
            "minecraft/models/block/warped_slab_top.json",
            "minecraft/models/block/warped_stairs.json",
            "minecraft/models/block/warped_stairs_inner.json",
            "minecraft/models/block/warped_stairs_outer.json",
            "minecraft/models/block/warped_stem.json",
            "minecraft/models/block/warped_trapdoor_bottom.json",
            "minecraft/models/block/warped_trapdoor_open.json",
            "minecraft/models/block/warped_trapdoor_top.json",
            "minecraft/models/block/warped_wart_block.json",
            "minecraft/models/block/weeping_vines.json",
            "minecraft/models/block/weeping_vines_plant.json",
            "minecraft/models/item/ancient_debris.json",
            "minecraft/models/item/basalt.json",
            "minecraft/models/item/crimson_button.json",
            "minecraft/models/item/crimson_door.json",
            "minecraft/models/item/crimson_fence.json",
            "minecraft/models/item/crimson_fence_gate.json",
            "minecraft/models/item/crimson_fungi.json",
            "minecraft/models/item/crimson_nylium.json",
            "minecraft/models/item/crimson_planks.json",
            "minecraft/models/item/crimson_pressure_plate.json",
            "minecraft/models/item/crimson_roots.json",
            "minecraft/models/item/crimson_sign.json",
            "minecraft/models/item/crimson_slab.json",
            "minecraft/models/item/crimson_stairs.json",
            "minecraft/models/item/crimson_stem.json",
            "minecraft/models/item/crimson_trapdoor.json",
            "minecraft/models/item/hoglin_spawn_egg.json",
            "minecraft/models/item/netherite_axe.json",
            "minecraft/models/item/netherite_block.json",
            "minecraft/models/item/netherite_boots.json",
            "minecraft/models/item/netherite_chestplate.json",
            "minecraft/models/item/netherite_helmet.json",
            "minecraft/models/item/netherite_hoe.json",
            "minecraft/models/item/netherite_ingot.json",
            "minecraft/models/item/netherite_leggings.json",
            "minecraft/models/item/netherite_pickaxe.json",
            "minecraft/models/item/netherite_scrap.json",
            "minecraft/models/item/netherite_shovel.json",
            "minecraft/models/item/netherite_sword.json",
            "minecraft/models/item/nether_sprouts.json",
            "minecraft/models/item/shroomlight.json",
            "minecraft/models/item/soul_fire_lantern.json",
            "minecraft/models/item/soul_fire_torch.json",
            "minecraft/models/item/soul_soil.json",
            "minecraft/models/item/stripped_crimson_stem.json",
            "minecraft/models/item/stripped_warped_stem.json",
            "minecraft/models/item/warped_button.json",
            "minecraft/models/item/warped_door.json",
            "minecraft/models/item/warped_fence.json",
            "minecraft/models/item/warped_fence_gate.json",
            "minecraft/models/item/warped_fungi.json",
            "minecraft/models/item/warped_nylium.json",
            "minecraft/models/item/warped_planks.json",
            "minecraft/models/item/warped_pressure_plate.json",
            "minecraft/models/item/warped_roots.json",
            "minecraft/models/item/warped_sign.json",
            "minecraft/models/item/warped_slab.json",
            "minecraft/models/item/warped_stairs.json",
            "minecraft/models/item/warped_stem.json",
            "minecraft/models/item/warped_trapdoor.json",
            "minecraft/models/item/warped_wart_block.json",
            "minecraft/models/item/weeping_vines.json",
            "minecraft/particles/ash.json",
            "minecraft/particles/crimson_spore.json",
            "minecraft/particles/soul_fire_flame.json",
            "minecraft/particles/warped_spore.json",
            "minecraft/textures/block/ancient_debris_side.png",
            "minecraft/textures/block/ancient_debris_top.png",
            "minecraft/textures/block/basalt_side.png",
            "minecraft/textures/block/basalt_top.png",
            "minecraft/textures/block/crimson_door_bottom.png",
            "minecraft/textures/block/crimson_door_top.png",
            "minecraft/textures/block/crimson_fungi.png",
            "minecraft/textures/block/crimson_nylium.png",
            "minecraft/textures/block/crimson_nylium_side.png",
            "minecraft/textures/block/crimson_planks.png",
            "minecraft/textures/block/crimson_roots.png",
            "minecraft/textures/block/crimson_stem.png",
            "minecraft/textures/block/crimson_stem.png.mcmeta",
            "minecraft/textures/block/crimson_stem_top.png",
            "minecraft/textures/block/crimson_trapdoor.png",
            "minecraft/textures/block/netherite_block.png",
            "minecraft/textures/block/nether_sprouts.png",
            "minecraft/textures/block/shroomlight.png",
            "minecraft/textures/block/soul_fire_0.png",
            "minecraft/textures/block/soul_fire_0.png.mcmeta",
            "minecraft/textures/block/soul_fire_1.png",
            "minecraft/textures/block/soul_fire_1.png.mcmeta",
            "minecraft/textures/block/soul_fire_lantern.png",
            "minecraft/textures/block/soul_fire_lantern.png.mcmeta",
            "minecraft/textures/block/soul_fire_torch.png",
            "minecraft/textures/block/soul_soil.png",
            "minecraft/textures/block/stripped_crimson_stem.png",
            "minecraft/textures/block/stripped_crimson_stem_top.png",
            "minecraft/textures/block/stripped_warped_stem.png",
            "minecraft/textures/block/stripped_warped_stem_top.png",
            "minecraft/textures/block/warped_door_bottom.png",
            "minecraft/textures/block/warped_door_top.png",
            "minecraft/textures/block/warped_fungi.png",
            "minecraft/textures/block/warped_nylium.png",
            "minecraft/textures/block/warped_nylium_side.png",
            "minecraft/textures/block/warped_planks.png",
            "minecraft/textures/block/warped_roots.png",
            "minecraft/textures/block/warped_stem.png",
            "minecraft/textures/block/warped_stem.png.mcmeta",
            "minecraft/textures/block/warped_stem_top.png",
            "minecraft/textures/block/warped_stripped_log_side.png",
            "minecraft/textures/block/warped_stripped_log_top.png",
            "minecraft/textures/block/warped_trapdoor.png",
            "minecraft/textures/block/warped_wart_block.png",
            "minecraft/textures/block/weeping_vines.png",
            "minecraft/textures/block/weeping_vines_plant.png",
            "minecraft/textures/entity/hoglin/hoglin.png",
            "minecraft/textures/entity/signs/crimson.png",
            "minecraft/textures/entity/signs/warped.png",
            "minecraft/textures/item/crimson_door.png",
            "minecraft/textures/item/crimson_sign.png",
            "minecraft/textures/item/netherite_axe.png",
            "minecraft/textures/item/netherite_boots.png",
            "minecraft/textures/item/netherite_chestplate.png",
            "minecraft/textures/item/netherite_helmet.png",
            "minecraft/textures/item/netherite_hoe.png",
            "minecraft/textures/item/netherite_ingot.png",
            "minecraft/textures/item/netherite_leggings.png",
            "minecraft/textures/item/netherite_pickaxe.png",
            "minecraft/textures/item/netherite_scrap.png",
            "minecraft/textures/item/netherite_shovel.png",
            "minecraft/textures/item/netherite_sword.png",
            "minecraft/textures/item/soul_fire_lantern.png",
            "minecraft/textures/item/warped_door.png",
            "minecraft/textures/item/warped_sign.png",
            "minecraft/textures/models/armor/netherite_layer_1.png",
            "minecraft/textures/models/armor/netherite_layer_2.png",
            "minecraft/textures/particle/soul_fire_flame.png"
          ],
          "removed": [
            "minecraft/models/block/fire_floor.json",
            "minecraft/models/block/fire_side.json",
            "minecraft/models/block/fire_side_alt.json",
            "minecraft/models/block/fire_up.json",
            "minecraft/models/block/fire_up_alt.json",
            "minecraft/models/block/torch_wall.json"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServer$2",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DerivedServerLevel",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FileResourcePack",
            "XXX.server.packs.Pack",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.repository.UnopenedPack$Position",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$2",
            "XXX.server.players.GameProfileCache$Serializer",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.StoredUserList$1",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SynchronizableTagCollection",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagManager$Preparations",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.FrameTimer",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RewindableStream$1",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$1",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.OminousBannerRenameFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.SwimStatsRenameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.GameProfiler",
            "XXX.util.profiling.GameProfiler$Profiler",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.ai.goal.SitGoal",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.PigZombie$PigZombieAngerTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Ravager$RavagerNodeEvaluator",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Vindicator$VindicatorMeleeAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie$1",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.AnvilMenu$2",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ClockItem$1",
            "XXX.world.item.CompassItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$10",
            "XXX.world.item.CreativeModeTab$12",
            "XXX.world.item.CreativeModeTab$3",
            "XXX.world.item.CreativeModeTab$5",
            "XXX.world.item.CreativeModeTab$7",
            "XXX.world.item.CreativeModeTab$9",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DirectionalPlaceContext",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.DyeableHorseArmorItem",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileWeaponItem$Type",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelConflictException",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.ServerTickList",
            "XXX.world.level.TickList",
            "XXX.world.level.TickPriority",
            "XXX.level.biome.Biome$SpawnerData",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSourceType",
            "XXX.level.biome.DarkForestBiome",
            "XXX.level.biome.DeepColdOceanBiome",
            "XXX.level.biome.DeepLukeWarmOceanBiome",
            "XXX.level.biome.DeepWarmOceanBiome",
            "XXX.level.biome.DesertHillsBiome",
            "XXX.level.biome.EndBarrensBiome",
            "XXX.level.biome.EndMidlandsBiome",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.ForestBiome",
            "XXX.level.biome.FrozenOceanBiome",
            "XXX.level.biome.FuzzyOffsetBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaBiome",
            "XXX.level.biome.GiantTreeTaigaBiome",
            "XXX.level.biome.GravellyMountainsBiome",
            "XXX.level.biome.JungleBiome",
            "XXX.level.biome.JungleHillsBiome",
            "XXX.level.biome.ModifiedBadlandsPlateauBiome",
            "XXX.level.biome.ModifiedJungleBiome",
            "XXX.level.biome.ModifiedWoodedBadlandsPlateauBiome",
            "XXX.level.biome.MountainEdgeBiome",
            "XXX.level.biome.MushroomFieldsShoreBiome",
            "XXX.level.biome.NetherBiome",
            "XXX.level.biome.OverworldBiomeSource",
            "XXX.level.biome.PlainsBiome",
            "XXX.level.biome.SavannaBiome",
            "XXX.level.biome.ShatteredSavannaBiome",
            "XXX.level.biome.SmallEndIslandsBiome",
            "XXX.level.biome.SnowyMountainsBiome",
            "XXX.level.biome.SnowyTaigaHillsBiome",
            "XXX.level.biome.SnowyTundraBiome",
            "XXX.level.biome.WoodedHillsBiome",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractGlassBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.GlassBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GravelBlock",
            "XXX.level.block.GrindstoneBlock$1",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LogBlock",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.SoulsandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkGeneratorFactory",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.Dimension",
            "XXX.level.dimension.NetherDimension",
            "XXX.level.dimension.NormalDimension",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.TheEndDimension",
            "XXX.level.dimension.package-info",
            "XXX.level.levelgen.DebugGeneratorSettings",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.NetherGeneratorSettings",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.OverworldLevelSource",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.TheEndLevelSource",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.HellCaveWorldCarver",
            "XXX.levelgen.carver.UnderwaterCanyonWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.feature.AbstractFlowerFeature",
            "XXX.levelgen.feature.AbstractSmallTreeFeature",
            "XXX.levelgen.feature.AcaciaFeature",
            "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
            "XXX.levelgen.feature.WeightedConfiguredFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature$WoodlandMansionStart",
            "XXX.feature.blockplacers.BlockPlacerType",
            "XXX.feature.blockplacers.DoublePlantPlacer",
            "XXX.feature.blockplacers.package-info",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.BuriedTreasureConfiguration",
            "XXX.feature.configurations.CountFeatureConfiguration",
            "XXX.feature.configurations.DecoratedFeatureConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.MegaTreeConfiguration",
            "XXX.feature.configurations.MineshaftConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OceanRuinConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$GrassConfigurationBuilder",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.ShipwreckConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SmallTreeConfiguration$SmallTreeConfigurationBuilder",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.configurations.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.PlainFlowerProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.feature.structures.package-info",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.CarvingMaskDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceHeightmapDecorator",
            "XXX.levelgen.placement.ChancePassthroughDecorator",
            "XXX.levelgen.placement.ChorusPlantPlacementDecorator",
            "XXX.levelgen.placement.CountBiasedRangeDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeighmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeightmap32Decorator",
            "XXX.levelgen.placement.CountTopSolidDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceHeightmapDecorator",
            "XXX.levelgen.placement.DepthAverageConfigation",
            "XXX.levelgen.placement.EndGatewayPlacementDecorator",
            "XXX.levelgen.placement.FeatureDecorator",
            "XXX.levelgen.placement.FrequencyChanceDecoratorConfiguration",
            "XXX.levelgen.placement.FrequencyWithExtraChanceDecoratorConfiguration",
            "XXX.levelgen.placement.LakeLavaPlacementDecorator",
            "XXX.levelgen.placement.MonsterRoomPlacementDecorator",
            "XXX.levelgen.placement.NoiseHeightmap32Decorator",
            "XXX.levelgen.placement.NopePlacementDecorator",
            "XXX.levelgen.placement.SimpleFeatureDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapNoiseBasedDecorator",
            "XXX.placement.nether.ChanceRangeDecorator",
            "XXX.placement.nether.HellFireDecorator",
            "XXX.placement.nether.MagmaDecorator",
            "XXX.placement.nether.package-info",
            "XXX.levelgen.structure.BeardedStructureStart",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.levelgen.structure.EndCityPieces",
            "XXX.levelgen.structure.EndCityPieces$2",
            "XXX.levelgen.structure.EndCityPieces$4",
            "XXX.levelgen.structure.EndCityPieces$SectionGenerator",
            "XXX.levelgen.structure.IglooPieces$IglooPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$1",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.MineShaftPieces$1",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCrossing",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftRoom",
            "XXX.levelgen.structure.NetherBridgePieces",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeStraight",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorTBalconyPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorCrossingPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleStalkRoom",
            "XXX.levelgen.structure.NetherBridgePieces$NetherBridgePiece",
            "XXX.levelgen.structure.NetherBridgePieces$RoomCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$StartPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$1",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentBuilding",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$RoomDefinition",
            "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart",
            "XXX.levelgen.structure.OceanRuinPieces",
            "XXX.levelgen.structure.PillagerOutpostPieces",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ShipwreckPieces",
            "XXX.levelgen.structure.StrongholdPieces",
            "XXX.levelgen.structure.StrongholdPieces$2",
            "XXX.levelgen.structure.StrongholdPieces$ChestCorridor",
            "XXX.levelgen.structure.StrongholdPieces$FiveCrossing",
            "XXX.levelgen.structure.StrongholdPieces$Library",
            "XXX.levelgen.structure.StrongholdPieces$PortalRoom",
            "XXX.levelgen.structure.StrongholdPieces$RightTurn",
            "XXX.levelgen.structure.StrongholdPieces$SmoothStoneSelector",
            "XXX.levelgen.structure.StrongholdPieces$StartPiece",
            "XXX.levelgen.structure.StrongholdPieces$StraightStairsDown",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.levelgen.structure.StructureFeatureIO",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureStart$1",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.WoodlandMansionPieces$1",
            "XXX.levelgen.structure.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.levelgen.structure.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.FrozenOceanSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GravellyMountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderBaseConfiguration",
            "XXX.levelgen.surfacebuilders.SwampSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.package-info",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.FlatDataLayer",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage$1",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.FluidStateImpl",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.Material$Builder",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.newbiome.area.AreaFactory",
            "XXX.newbiome.area.package-info",
            "XXX.newbiome.context.Context",
            "XXX.newbiome.context.package-info",
            "XXX.newbiome.layer.AddEdgeLayer",
            "XXX.newbiome.layer.AddEdgeLayer$HeatIce",
            "XXX.newbiome.layer.AddIslandLayer",
            "XXX.newbiome.layer.AddSnowLayer",
            "XXX.newbiome.layer.BiomeInitLayer",
            "XXX.newbiome.layer.Layer",
            "XXX.newbiome.layer.OceanLayer",
            "XXX.newbiome.layer.RareBiomeLargeLayer",
            "XXX.newbiome.layer.RegionHillsLayer",
            "XXX.newbiome.layer.RiverInitLayer",
            "XXX.newbiome.layer.RiverMixerLayer",
            "XXX.newbiome.layer.SmoothLayer",
            "XXX.newbiome.layer.ZoomLayer$1",
            "XXX.layer.traits.AreaTransformer0",
            "XXX.layer.traits.AreaTransformer2",
            "XXX.layer.traits.C0Transformer",
            "XXX.layer.traits.CastleTransformer",
            "XXX.layer.traits.DimensionOffset1Transformer",
            "XXX.layer.traits.PixelTransformer",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SaveDataDirtyRunnable",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$1",
            "XXX.level.storage.McRegionUpgrader",
            "XXX.storage.loot.BinomialDistributionGenerator",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ConstantIntValue$Serializer",
            "XXX.storage.loot.IntLimiter$1",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootPool$1",
            "XXX.storage.loot.LootPool$Serializer",
            "XXX.storage.loot.LootTable$1",
            "XXX.storage.loot.LootTable$Serializer",
            "XXX.storage.loot.PredicateManager",
            "XXX.storage.loot.RandomIntGenerators",
            "XXX.storage.loot.RandomValueBounds$Serializer",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$1",
            "XXX.loot.entries.CompositeEntryBase$Serializer",
            "XXX.loot.entries.DynamicLoot$1",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EmptyLootItem$Serializer",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootItem$1",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootPoolSingletonContainer$Serializer",
            "XXX.loot.entries.LootTableReference$1",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.TagEntry$Serializer",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaDeserializer",
            "XXX.loot.functions.ApplyBonusCount$Serializer",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.ApplyExplosionDecay$Serializer",
            "XXX.loot.functions.CopyBlockState$1",
            "XXX.loot.functions.CopyBlockState$Serializer",
            "XXX.loot.functions.CopyNameFunction$1",
            "XXX.loot.functions.CopyNameFunction$Serializer",
            "XXX.loot.functions.CopyNbtFunction$1",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Serializer",
            "XXX.loot.functions.EnchantRandomlyFunction$1",
            "XXX.loot.functions.EnchantRandomlyFunction$Serializer",
            "XXX.loot.functions.EnchantWithLevelsFunction$1",
            "XXX.loot.functions.EnchantWithLevelsFunction$Serializer",
            "XXX.loot.functions.ExplorationMapFunction$1",
            "XXX.loot.functions.ExplorationMapFunction$Serializer",
            "XXX.loot.functions.FillPlayerHead$Serializer",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LimitCount$Serializer",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemConditionalFunction$Serializer",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetContainerLootTable$Serializer",
            "XXX.loot.functions.SetItemCountFunction$1",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetItemDamageFunction$Serializer",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetNameFunction$Serializer",
            "XXX.loot.functions.SetNbtFunction$1",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.SmeltItemFunction$Serializer",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AlternativeLootItemCondition",
            "XXX.loot.predicates.AlternativeLootItemCondition$Builder",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.BonusLevelTableCondition$Serializer",
            "XXX.loot.predicates.ConditionReference$Serializer",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.DamageSourceCondition$Serializer",
            "XXX.loot.predicates.EntityHasScoreCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition$Serializer",
            "XXX.loot.predicates.ExplosionCondition$Serializer",
            "XXX.loot.predicates.InvertedLootItemCondition$1",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemCondition$Serializer",
            "XXX.loot.predicates.LootItemConditions$Serializer",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$1",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$1",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.loot.predicates.package-info",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.PosAndRot",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ],
          "removed": [
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractResourcePack",
            "XXX.server.packs.FolderResourcePack",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPack",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.UnopenedPack",
            "XXX.packs.repository.UnopenedPack$UnopenedPackConstructor",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.StoredUserList$Serializer",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BlockTags$Wrapper",
            "XXX.minecraft.tags.EntityTypeTags$Wrapper",
            "XXX.minecraft.tags.FluidTags$Wrapper",
            "XXX.minecraft.tags.ItemTags$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$ValuesEntry",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.Deserializer",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.InsensitiveStringMap",
            "XXX.minecraft.util.LimitedCapacityList",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.RewindableStream",
            "XXX.minecraft.util.Serializable",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataVillageCropFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.schemas.V2502",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.ShulkerSharedHelper",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$1",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$1",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.PigZombie",
            "XXX.entity.monster.PigZombie$PigZombieHurtByOtherGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$1",
            "XXX.entity.monster.Ravager$RavagerNavigation",
            "XXX.entity.monster.SharedMonsterAttributes",
            "XXX.entity.monster.Shulker$1",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.AnvilMenu$3",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.CarrotOnAStickItem",
            "XXX.world.item.ClockItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$11",
            "XXX.world.item.CreativeModeTab$2",
            "XXX.world.item.CreativeModeTab$4",
            "XXX.world.item.CreativeModeTab$6",
            "XXX.world.item.CreativeModeTab$8",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DirectionalPlaceContext$1",
            "XXX.world.item.DyeColor",
            "XXX.world.item.DyeableArmorItem",
            "XXX.world.item.DyeableLeatherItem",
            "XXX.world.item.ElytraItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishBucketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$1",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemPropertyFunction",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$1",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkTickList",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.CollisionGetter$1",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.Explosion",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelType",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.PortalForcer",
            "XXX.world.level.SpawnData",
            "XXX.world.level.TickNextTickData",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.BiomeDefaultFeatures",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSourceSettings",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.CrimsonForestBiome",
            "XXX.level.biome.DarkForestHillsBiome",
            "XXX.level.biome.DeepFrozenOceanBiome",
            "XXX.level.biome.DeepOceanBiome",
            "XXX.level.biome.DesertBiome",
            "XXX.level.biome.DesertLakesBiome",
            "XXX.level.biome.EndHighlandsBiome",
            "XXX.level.biome.ErodedBadlandsBiome",
            "XXX.level.biome.FixedBiomeSourceSettings",
            "XXX.level.biome.ForestFlowerBiome",
            "XXX.level.biome.FrozenRiverBiome",
            "XXX.level.biome.FuzzyOffsetConstantColumnBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaHillsMutatedBiome",
            "XXX.level.biome.GiantTreeTaigaHillsBiome",
            "XXX.level.biome.IceSpikesBiome",
            "XXX.level.biome.JungleEdgeBiome",
            "XXX.level.biome.LukeWarmOceanBiome",
            "XXX.level.biome.ModifiedGravellyMountainsBiome",
            "XXX.level.biome.ModifiedJungleEdgeBiome",
            "XXX.level.biome.MountainBiome",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MushroomFieldsBiome",
            "XXX.level.biome.NearestNeighborBiomeZoomer",
            "XXX.level.biome.OceanBiome",
            "XXX.level.biome.OverworldBiomeSourceSettings",
            "XXX.level.biome.RiverBiome",
            "XXX.level.biome.SavannaPlateauBiome",
            "XXX.level.biome.ShatteredSavannaPlateauBiome",
            "XXX.level.biome.SnowyBeachBiome",
            "XXX.level.biome.SnowyTaigaBiome",
            "XXX.level.biome.SnowyTaigaMountainsBiome",
            "XXX.level.biome.SoulSandValleyBiome",
            "XXX.level.biome.WoodedBadlandsBiome",
            "XXX.level.biome.WoodedMountainBiome",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.BambooBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassPathBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.Lantern",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WeepingVinesPlant",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGeneratorType",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker$1",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.NetherDimension$1",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.levelgen.ChunkGeneratorSettings",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.FlatLevelSource$FlatLevelBiomeWrapper",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.NetherLevelSource",
            "XXX.level.levelgen.OverworldGeneratorSettings",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.TheEndGeneratorSettings",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.NoneCarverConfiguration",
            "XXX.levelgen.carver.UnderwaterCaveWorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.AbstractTreeFeature",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.HugeFungiConfiguration",
            "XXX.levelgen.feature.NetherFortressFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.levelgen.feature.WoodlandMansionFeature",
            "XXX.feature.blockplacers.BlockPlacer",
            "XXX.feature.blockplacers.ColumnPlacer",
            "XXX.feature.blockplacers.SimpleBlockPlacer",
            "XXX.feature.configurations.BlockBlobConfiguration",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.ChanceRangeDecoratorConfiguration",
            "XXX.feature.configurations.CountRangeDecoratorConfiguration",
            "XXX.feature.configurations.DecoratorConfiguration",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.FeatureRadiusConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.MegaTreeConfiguration$MegaTreeConfigurationBuilder",
            "XXX.feature.configurations.NoiseDependantDecoratorConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$1",
            "XXX.feature.configurations.RandomRandomFeatureConfiguration",
            "XXX.feature.configurations.SeagrassFeatureConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SmallTreeConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.VillageConfiguration",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.ForestFlowerProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$1",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.StructureTemplatePools",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.placement.CarvingMaskDecorator",
            "XXX.levelgen.placement.ChanceDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.ChanceTopSolidHeightmapDecorator",
            "XXX.levelgen.placement.ConfiguredDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDecorator",
            "XXX.levelgen.placement.CountDepthAverageDecorator",
            "XXX.levelgen.placement.CountHeight64Decorator",
            "XXX.levelgen.placement.CountHeightmapDecorator",
            "XXX.levelgen.placement.CountVeryBiasedRangeDecorator",
            "XXX.levelgen.placement.DarkOakTreePlacementDecorator",
            "XXX.levelgen.placement.EmeraldPlacementDecorator",
            "XXX.levelgen.placement.EndIslandPlacementDecorator",
            "XXX.levelgen.placement.ForestRockPlacementDecorator",
            "XXX.levelgen.placement.FrequencyDecoratorConfiguration",
            "XXX.levelgen.placement.IcebergPlacementDecorator",
            "XXX.levelgen.placement.LakeWaterPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.NoiseHeightmapDoubleDecorator",
            "XXX.levelgen.placement.RangeDecoratorConfiguration",
            "XXX.levelgen.placement.TopSolidHeightMapDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapRangeDecorator",
            "XXX.placement.nether.CountRangeDecorator",
            "XXX.placement.nether.LightGemChanceDecorator",
            "XXX.placement.nether.RandomCountRangeDecorator",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuriedTreasurePieces",
            "XXX.levelgen.structure.DesertPyramidPiece",
            "XXX.levelgen.structure.EndCityPieces$1",
            "XXX.levelgen.structure.EndCityPieces$3",
            "XXX.levelgen.structure.EndCityPieces$EndCityPiece",
            "XXX.levelgen.structure.IglooPieces",
            "XXX.levelgen.structure.JunglePyramidPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$MossStoneSelector",
            "XXX.levelgen.structure.MineShaftPieces",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftPiece",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs",
            "XXX.levelgen.structure.NetherBridgePieces$1",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone",
            "XXX.levelgen.structure.NetherBridgePieces$PieceWeight",
            "XXX.levelgen.structure.NetherBridgePieces$StairsRoom",
            "XXX.levelgen.structure.NetherFossilFeature",
            "XXX.levelgen.structure.NetherFossilPieces",
            "XXX.levelgen.structure.OceanMonumentPieces",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.levelgen.structure.OceanRuinFeature",
            "XXX.levelgen.structure.OceanRuinFeature$Type",
            "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
            "XXX.levelgen.structure.PillagerOutpostPieces$PillagerOutpostPiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
            "XXX.levelgen.structure.StrongholdPieces$1",
            "XXX.levelgen.structure.StrongholdPieces$3",
            "XXX.levelgen.structure.StrongholdPieces$FillerCorridor",
            "XXX.levelgen.structure.StrongholdPieces$LeftTurn",
            "XXX.levelgen.structure.StrongholdPieces$PieceWeight",
            "XXX.levelgen.structure.StrongholdPieces$PrisonHall",
            "XXX.levelgen.structure.StrongholdPieces$RoomCrossing",
            "XXX.levelgen.structure.StrongholdPieces$StairsDown",
            "XXX.levelgen.structure.StrongholdPieces$Straight",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece",
            "XXX.levelgen.structure.StrongholdPieces$Turn",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.SwamplandHutPiece",
            "XXX.levelgen.structure.WoodlandMansionPieces",
            "XXX.levelgen.structure.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$PlacementData",
            "XXX.levelgen.structure.WoodlandMansionPieces$SimpleGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructureManager",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.package-info",
            "XXX.levelgen.surfacebuilders.ConfiguredSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ErodedBadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GiantTreeTaigaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.MountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderConfiguration",
            "XXX.levelgen.surfacebuilders.WoodedBadlandsSurfaceBuilder",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.SurfaceNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$2",
            "XXX.level.lighting.LayerLightEngine",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$1",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.Material",
            "XXX.level.material.MaterialColor",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.newbiome.area.Area",
            "XXX.newbiome.area.LazyArea",
            "XXX.newbiome.context.BigContext",
            "XXX.newbiome.context.LazyAreaContext",
            "XXX.newbiome.layer.AddDeepOceanLayer",
            "XXX.newbiome.layer.AddEdgeLayer$CoolWarm",
            "XXX.newbiome.layer.AddEdgeLayer$IntroduceSpecial",
            "XXX.newbiome.layer.AddMushroomIslandLayer",
            "XXX.newbiome.layer.BiomeEdgeLayer",
            "XXX.newbiome.layer.IslandLayer",
            "XXX.newbiome.layer.Layers",
            "XXX.newbiome.layer.OceanMixerLayer",
            "XXX.newbiome.layer.RareBiomeSpotLayer",
            "XXX.newbiome.layer.RemoveTooMuchOceanLayer",
            "XXX.newbiome.layer.RiverLayer",
            "XXX.newbiome.layer.ShoreLayer",
            "XXX.newbiome.layer.ZoomLayer",
            "XXX.newbiome.layer.package-info",
            "XXX.layer.traits.AreaTransformer1",
            "XXX.layer.traits.BishopTransformer",
            "XXX.layer.traits.C1Transformer",
            "XXX.layer.traits.DimensionOffset0Transformer",
            "XXX.layer.traits.DimensionTransformer",
            "XXX.layer.traits.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.TurtleNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelStorage",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.PlayerIO",
            "XXX.storage.loot.BinomialDistributionGenerator$Serializer",
            "XXX.storage.loot.ConstantIntValue",
            "XXX.storage.loot.IntLimiter",
            "XXX.storage.loot.IntLimiter$Serializer",
            "XXX.storage.loot.LootContext$1",
            "XXX.storage.loot.LootContext$DynamicDrop",
            "XXX.storage.loot.LootContext$EntityTarget$Serializer",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.storage.loot.LootTables",
            "XXX.storage.loot.RandomIntGenerator",
            "XXX.storage.loot.RandomValueBounds",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.DynamicLoot$Serializer",
            "XXX.loot.entries.EmptyLootItem$1",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootItem$Serializer",
            "XXX.loot.entries.LootPoolEntries$Serializer",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryContainer$Serializer",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.LootTableReference$Serializer",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.ApplyExplosionDecay$1",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$DataSource",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LimitCount$1",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunction$Serializer",
            "XXX.loot.functions.LootItemFunctions$Serializer",
            "XXX.loot.functions.LootingEnchantFunction$1",
            "XXX.loot.functions.LootingEnchantFunction$Serializer",
            "XXX.loot.functions.SetAttributesFunction$1",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetAttributesFunction$Serializer",
            "XXX.loot.functions.SetContainerContents$1",
            "XXX.loot.functions.SetContainerContents$Serializer",
            "XXX.loot.functions.SetContainerLootTable$1",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemCountFunction$Serializer",
            "XXX.loot.functions.SetItemDamageFunction$1",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetLoreFunction$Serializer",
            "XXX.loot.functions.SetNameFunction$1",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetNbtFunction$Serializer",
            "XXX.loot.functions.SetStewEffectFunction$1",
            "XXX.loot.functions.SetStewEffectFunction$Serializer",
            "XXX.loot.functions.SmeltItemFunction$1",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$1",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AlternativeLootItemCondition$1",
            "XXX.loot.predicates.AlternativeLootItemCondition$Serializer",
            "XXX.loot.predicates.BonusLevelTableCondition$1",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.DamageSourceCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.InvertedLootItemCondition$Serializer",
            "XXX.loot.predicates.LocationCheck$Serializer",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$1",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceCondition$1",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$Serializer",
            "XXX.loot.predicates.MatchTool$Serializer",
            "XXX.loot.predicates.TimeCheck$1",
            "XXX.loot.predicates.TimeCheck$Serializer",
            "XXX.loot.predicates.WeatherCheck$1",
            "XXX.loot.predicates.WeatherCheck$Serializer",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.IntPointRange",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.WorldRegionIndirectVoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.advancements.critereon.InventoryChangeTrigger \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.commands.synchronization.SuggestionProviders \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.data.loot.BlockLoot \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.recipes.ShapedRecipeBuilder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.recipes.ShapelessRecipeBuilder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.recipes.SimpleCookingRecipeBuilder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.Fox \u001b[2;32m+1M\u001b[0m",
          "XXX.level.biome.Biome \u001b[2;32m+11M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.biome.Biome$BiomeBuilder \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.biome.Biomes \u001b[2;32m+4P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.block.BaseRailBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+45P\u001b[0m",
          "XXX.level.block.FireBlock \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.WallTorchBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.AbstractFurnaceBlockEntity \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+4P\u001b[0m",
          "XXX.levelgen.feature.Feature \u001b[2;32m+6P\u001b[0m",
          "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder \u001b[2;31m-1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.InventoryChangeTrigger",
        "differences": {
          "added": [
            "void trigger(ServerPlayer,Inventory)",
            "boolean lambda$trigger$0(Inventory,InventoryChangeTrigger$TriggerInstance)"
          ],
          "removed": [
            "void trigger(ServerPlayer,Inventory,ItemStack)",
            "void trigger(ServerPlayer,Inventory,ItemStack,int,int,int)",
            "boolean lambda$trigger$0(Inventory,ItemStack,int,int,int,InventoryChangeTrigger$TriggerInstance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.synchronization.SuggestionProviders",
        "differences": {
          "added": [
            "CompletableFuture lambda$static$4(CommandContext,SuggestionsBuilder)",
            "Message lambda$null$3(EntityType)"
          ],
          "removed": [
            "CompletableFuture lambda$static$5(CommandContext,SuggestionsBuilder)",
            "Message lambda$null$4(EntityType)",
            "CompletableFuture lambda$static$3(CommandContext,SuggestionsBuilder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.loot.BlockLoot",
        "differences": {
          "added": [
            "LootTable$Builder lambda$dropPottedContents$74(Block)"
          ],
          "removed": [
            "LootTable$Builder lambda$dropPottedContents$75(Block)",
            "LootTable$Builder lambda$accept$74(Block)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.ShapedRecipeBuilder",
        "differences": {
          "added": [
            "ShapedRecipeBuilder unlocks(String,CriterionTriggerInstance)"
          ],
          "removed": [
            "ShapedRecipeBuilder unlockedBy(String,CriterionTriggerInstance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.ShapelessRecipeBuilder",
        "differences": {
          "added": [
            "ShapelessRecipeBuilder unlocks(String,CriterionTriggerInstance)"
          ],
          "removed": [
            "ShapelessRecipeBuilder unlockedBy(String,CriterionTriggerInstance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.SimpleCookingRecipeBuilder",
        "differences": {
          "added": [
            "SimpleCookingRecipeBuilder unlocks(String,CriterionTriggerInstance)"
          ],
          "removed": [
            "SimpleCookingRecipeBuilder unlockedBy(String,CriterionTriggerInstance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Fox",
        "differences": {
          "added": [],
          "removed": [
            "boolean lambda$registerGoals$9(LivingEntity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Biome",
        "differences": {
          "added": [
            "Pair lambda$serialize$11(DynamicOps,Map$Entry)",
            "Object lambda$null$10(DynamicOps,Biome$SpawnerData)",
            "Pair lambda$serialize$8(DynamicOps,Map$Entry)",
            "Object lambda$null$7(DynamicOps,ConfiguredFeature)",
            "Pair lambda$serialize$6(DynamicOps,Map$Entry)",
            "Object lambda$null$5(DynamicOps,ConfiguredWorldCarver)"
          ],
          "removed": [
            "int getFogColor()",
            "BiomeSpecialEffects getSpecialEffects()",
            "Optional getAmbientParticle()",
            "float getFitness(Biome$ClimateParameters)",
            "Pair lambda$serialize$12(DynamicOps,Map$Entry)",
            "Object lambda$null$11(DynamicOps,Biome$SpawnerData)",
            "Pair lambda$serialize$10(DynamicOps,Map$Entry)",
            "Object lambda$null$8(DynamicOps,ConfiguredFeature)",
            "Pair lambda$serialize$7(DynamicOps,Map$Entry)",
            "Object lambda$null$6(DynamicOps,ConfiguredWorldCarver)",
            "Float lambda$getFitness$5(Biome$ClimateParameters,Biome$ClimateParameters)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Biome$BiomeBuilder",
        "differences": {
          "added": [
            "Biome$BiomeBuilder waterColor(int)",
            "Biome$BiomeBuilder waterFogColor(int)",
            "Integer access$700(Biome$BiomeBuilder)",
            "Integer access$800(Biome$BiomeBuilder)",
            "String access$900(Biome$BiomeBuilder)"
          ],
          "removed": [
            "Biome$BiomeBuilder optimalParameters(List)",
            "Biome$BiomeBuilder specialEffects(BiomeSpecialEffects)",
            "BiomeSpecialEffects access$700(Biome$BiomeBuilder)",
            "String access$800(Biome$BiomeBuilder)",
            "List access$900(Biome$BiomeBuilder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseRailBlock",
        "differences": {
          "added": [],
          "removed": [
            "BlockState updateState(BlockState,Level,BlockPos,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Blocks",
        "differences": {
          "added": [],
          "removed": [
            "ConfiguredFeature lambda$static$2()",
            "ConfiguredFeature lambda$static$1()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FireBlock",
        "differences": {
          "added": [
            "VoxelShape getShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "void animateTick(BlockState,Level,BlockPos,Random)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallTorchBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(Block$Properties,ParticleOptions)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "differences": {
          "added": [
            "void lambda$awardResetAndExperience$1(List,Player,Map$Entry,Recipe)",
            "Integer lambda$setRecipeUsed$0(ResourceLocation,Integer)"
          ],
          "removed": [
            "void lambda$awardResetAndExperience$1(List,Player,Object2IntMap$Entry,Recipe)",
            "void lambda$save$0(CompoundTag,ResourceLocation,Integer)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.client.model.HumanoidHeadModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.OcelotModel",
            "XXX.client.model.ParrotModel",
            "XXX.client.model.ParrotModel$State",
            "XXX.client.model.PigModel",
            "XXX.client.model.PolarBearModel",
            "XXX.client.model.PufferfishMidModel",
            "XXX.client.model.QuadrupedModel",
            "XXX.client.model.RavagerModel",
            "XXX.client.model.SheepFurModel",
            "XXX.client.model.ShieldModel",
            "XXX.client.model.ShulkerModel",
            "XXX.client.model.SkeletonModel",
            "XXX.client.model.SlimeModel",
            "XXX.client.model.SpiderModel",
            "XXX.client.model.TridentModel",
            "XXX.client.model.TropicalFishModelB",
            "XXX.client.model.VexModel",
            "XXX.client.model.VillagerModel",
            "XXX.client.model.WitherBossModel",
            "XXX.client.model.ZombieModel",
            "XXX.model.dragon.DragonHeadModel",
            "XXX.model.geom.ModelPart",
            "XXX.model.geom.ModelPart$Polygon",
            "XXX.model.geom.package-info",
            "XXX.client.multiplayer.ClientAdvancements",
            "XXX.client.multiplayer.ClientChunkCache",
            "XXX.client.multiplayer.ClientChunkCache$Storage",
            "XXX.client.multiplayer.ClientLevel",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.ServerAddress",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.client.multiplayer.package-info",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BarrierParticle$1",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.AbstractArmorLayer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PigSaddleLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.LayeredTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Info",
            "XXX.renderer.texture.TextureManager",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.DefaultClientResourcePack",
            "XXX.client.resources.DirectAssetIndex",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PackAdapterV4",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$SkinTextureCallback",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.language.LanguageMetadataSectionSerializer",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.resources.model.package-info",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.ReloadableIdSearchTree",
            "XXX.client.searchtree.ReloadableSearchTree",
            "XXX.client.searchtree.SearchRegistry",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.SuffixArray$1",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.skins.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Floats$Serializer",
            "XXX.commands.arguments.RangeArgument$Ints$Serializer",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.commands.synchronization.ArgumentSerializer",
            "XXX.commands.synchronization.ArgumentTypes$1",
            "XXX.commands.synchronization.EmptyArgumentSerializer",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentSerializer",
            "XXX.synchronization.brigadier.IntegerArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$PooledMutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.Location",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.SerializableLong",
            "XXX.minecraft.core.Vec3i",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$16",
            "XXX.core.dispenser.DispenseItemBehavior$18",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$21",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquippedItemPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugMobNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.AbstractRealmsButton",
            "XXX.minecraft.realms.DisconnectedRealmsScreen$1",
            "XXX.minecraft.realms.Realms",
            "XXX.minecraft.realms.RealmsAnvilLevelStorageSource",
            "XXX.minecraft.realms.RealmsButton",
            "XXX.minecraft.realms.RealmsClickableScrolledSelectionList",
            "XXX.minecraft.realms.RealmsConfirmResultListener",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsEditBox",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsLevelSummary",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RealmsScrolledSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RealmsSimpleScrolledSelectionList",
            "XXX.minecraft.realms.RealmsSliderButton",
            "XXX.minecraft.realms.RealmsVertexFormat",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.Tezzelator",
            "XXX.realms.pluginapi.LoadedRealmsPlugin",
            "XXX.realms.pluginapi.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$1",
            "XXX.util.profiling.GameProfiler",
            "XXX.util.profiling.GameProfiler$Profiler",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.Snooper$1",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.EntityDamageSource",
            "XXX.world.damagesource.NetherBedDamage",
            "XXX.world.effect.AbsoptionMobEffect",
            "XXX.world.effect.HealthBoostMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgableMob$AgableMobGroupData",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveCallback",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmourEntitySelector",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.entity.ai.Brain",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.BaseAttributeMap",
            "XXX.ai.attributes.ModifiableAttributeMap",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosWrapper",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MakeLove",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFromEntity",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WeightedList$1",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.DolphinLookControl",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillage",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTemptGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.ArmorStand$1",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.ItemFrame$1",
            "XXX.entity.decoration.Motive",
            "XXX.entity.decoration.package-info",
            "XXX.entity.fishing.FishingHook$FishHookState",
            "XXX.entity.global.LightningBolt",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$1",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.level.biome.BadlandsPlateauBiome",
            "XXX.level.biome.BambooJungleHillsBiome",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$BiomeTempCategory",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.BirchForestHillsBiome",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.NetherBiome",
            "XXX.level.biome.SunflowerPlainsBiome",
            "XXX.level.biome.SwampHillsBiome",
            "XXX.level.biome.TaigaHillsBiome",
            "XXX.level.biome.TallBirchForestBiome",
            "XXX.level.biome.TheEndBiome",
            "XXX.level.biome.TheEndBiomeSourceSettings",
            "XXX.level.biome.WarmOceanBiome",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BedBlock$1",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$3",
            "XXX.level.block.Block$OffsetType",
            "XXX.level.block.Blocks",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DeadBushBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EndRodBlock$1",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShearableDoublePlantBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulsandBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.AbstractStateHolder$1",
            "XXX.block.state.BlockState$1",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.StairsShape",
            "XXX.levelgen.carver.HellCaveWorldCarver",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DarkOakFeature",
            "XXX.levelgen.feature.DecoratedFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.DesertVillagePools",
            "XXX.levelgen.feature.DiskReplaceFeature",
            "XXX.levelgen.feature.EndCityFeature$EndCityStart",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.FancyTreeFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GroundBushFeature",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.IglooFeature",
            "XXX.levelgen.feature.JunglePyramidFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.MegaJungleTreeFeature",
            "XXX.levelgen.feature.MegaTreeFeature",
            "XXX.levelgen.feature.MineshaftFeature$MineShaftStart",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.OceanMonumentFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.PillagerOutpostFeature$FeatureStart",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomRandomFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.SavannaVillagePools",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.ShipwreckFeature$FeatureStart",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.StrongholdFeature$StrongholdStart",
            "XXX.levelgen.feature.StructureFeature$StructureStartFactory",
            "XXX.levelgen.feature.SwamplandHutFeature",
            "XXX.levelgen.feature.TaigaVillagePools",
            "XXX.levelgen.feature.VillageFeature",
            "XXX.levelgen.feature.VillagePieces",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.placement.nether.HellFireDecorator",
            "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ShatteredSavanaSurfaceBuilder"
          ],
          "removed": [
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.PandaModel",
            "XXX.client.model.ParrotModel$1",
            "XXX.client.model.PhantomModel",
            "XXX.client.model.PlayerModel",
            "XXX.client.model.PufferfishBigModel",
            "XXX.client.model.PufferfishSmallModel",
            "XXX.client.model.RabbitModel",
            "XXX.client.model.SalmonModel",
            "XXX.client.model.SheepModel",
            "XXX.client.model.ShulkerBulletModel",
            "XXX.client.model.SilverfishModel",
            "XXX.client.model.SkullModel",
            "XXX.client.model.SnowGolemModel",
            "XXX.client.model.SquidModel",
            "XXX.client.model.TropicalFishModelA",
            "XXX.client.model.TurtleModel",
            "XXX.client.model.VillagerHeadModel",
            "XXX.client.model.WitchModel",
            "XXX.client.model.WolfModel",
            "XXX.client.model.ZombieVillagerModel",
            "XXX.model.dragon.package-info",
            "XXX.model.geom.ModelPart$Cube",
            "XXX.model.geom.ModelPart$Vertex",
            "XXX.client.model.package-info",
            "XXX.client.multiplayer.ClientAdvancements$Listener",
            "XXX.client.multiplayer.ClientChunkCache$1",
            "XXX.client.multiplayer.ClientHandshakePacketListenerImpl",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.client.multiplayer.ServerStatusPinger$2$1",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AshParticle$Provider",
            "XXX.client.particle.AttackSweepParticle$1",
            "XXX.client.particle.BarrierParticle",
            "XXX.client.particle.BarrierParticle$Provider",
            "XXX.client.particle.SuspendedParticle$UnderwaterProvider",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PigZombieRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.AtlasSet",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlas$Preparations",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureAtlasSprite$InterpolationData",
            "XXX.renderer.texture.Tickable",
            "XXX.client.resources.AssetIndex",
            "XXX.client.resources.ClientPackSource$1",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.LegacyResourcePackAdapter",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SplashManager",
            "XXX.client.resources.UnopenedResourcePack",
            "XXX.resources.language.Language",
            "XXX.resources.language.Locale",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.WeightedBakedModel$WeightedModel",
            "XXX.client.resources.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.MutableSearchTree",
            "XXX.client.searchtree.ReloadableIdSearchTree$IntersectionIterator",
            "XXX.client.searchtree.ReloadableSearchTree$MergingUniqueIterator",
            "XXX.client.searchtree.SearchRegistry$Key",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.MusicManager$Music",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionTypeArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$ListElementFunction",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.RangeArgument$Serializer",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypes",
            "XXX.commands.synchronization.ArgumentTypes$Entry",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.BrigadierArgumentSerializers",
            "XXX.synchronization.brigadier.FloatArgumentSerializer",
            "XXX.synchronization.brigadier.LongArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LocatableSource",
            "XXX.minecraft.core.MapFiller",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.Source",
            "XXX.minecraft.core.Vec3i$1",
            "XXX.core.dispenser.AbstractProjectileDispenseBehavior",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$17",
            "XXX.core.dispenser.DispenseItemBehavior$19",
            "XXX.core.dispenser.DispenseItemBehavior$20",
            "XXX.core.dispenser.DispenseItemBehavior$22",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.package-info",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmListEntry",
            "XXX.minecraft.realms.RealmsAbstractButtonProxy",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsButtonProxy",
            "XXX.minecraft.realms.RealmsClickableScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsDefaultVertexFormat",
            "XXX.minecraft.realms.RealmsGuiEventListener",
            "XXX.minecraft.realms.RealmsLabelProxy",
            "XXX.minecraft.realms.RealmsMth",
            "XXX.minecraft.realms.RealmsObjectSelectionListProxy",
            "XXX.minecraft.realms.RealmsScreenProxy",
            "XXX.minecraft.realms.RealmsScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsSharedConstants",
            "XXX.minecraft.realms.RealmsSimpleScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsSliderButtonProxy",
            "XXX.minecraft.realms.RealmsVertexFormatElement",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.realms.package-info",
            "XXX.realms.pluginapi.RealmsPlugin",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_7",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.Snooper",
            "XXX.minecraft.world.SnooperPopulator",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.IndirectEntityDamageSource",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttackDamageMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.MobEffects$1",
            "XXX.world.entity.AgableMob",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.BaseAttribute",
            "XXX.ai.attributes.ModifiableAttributeInstance",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.Celebrate",
            "XXX.ai.behavior.EntityPosWrapper",
            "XXX.ai.behavior.GateBehavior$1",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.PickUpItems",
            "XXX.ai.behavior.PositionWrapper",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.VictoryStroll",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WeightedList",
            "XXX.ai.behavior.WeightedList$WeightedEntry",
            "XXX.ai.behavior.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.InteractableDoorsSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinMoveControl",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$1",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$1",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$1",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$1",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.package-info",
            "XXX.entity.boss.BossMob",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.Painting",
            "XXX.entity.fishing.FishingHook",
            "XXX.entity.fishing.package-info",
            "XXX.entity.global.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Hoglin",
            "XXX.level.biome.BadlandsBiome",
            "XXX.level.biome.BambooJungleBiome",
            "XXX.level.biome.BeachBiome",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$BiomeCategory",
            "XXX.level.biome.Biome$ClimateParameters",
            "XXX.level.biome.BiomeSpecialEffects$1",
            "XXX.level.biome.BiomeZoomer",
            "XXX.level.biome.BirchForestBiome",
            "XXX.level.biome.CheckerboardBiomeSourceSettings",
            "XXX.level.biome.ColdOceanBiome",
            "XXX.level.biome.MultiNoiseBiomeSourceSettings",
            "XXX.level.biome.NetherWastesBiome",
            "XXX.level.biome.StoneShoreBiome",
            "XXX.level.biome.SwampBiome",
            "XXX.level.biome.TaigaBiome",
            "XXX.level.biome.TaigaMountainsBiome",
            "XXX.level.biome.TallBirchHillsBiome",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.biome.TheVoidBiome",
            "XXX.level.biome.WarpedForestBiome",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BedrockBlock",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.Block$BlockStatePairKey",
            "XXX.level.block.Block$Properties",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BushBlock",
            "XXX.level.block.ButtonBlock$1",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.EnchantmentTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FungiBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeepingVines",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$1",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickableBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.AbstractStateHolder",
            "XXX.block.state.BlockState",
            "XXX.block.state.BlockState$Cache",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPattern$PortalInfo",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AbstractProperty",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.BuriedTreasureFeature$BuriedTreasureStart",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DecoratedFeature",
            "XXX.levelgen.feature.DefaultFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.EndCityFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FancyTreeFeature$FoliageCoords",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungiFeature",
            "XXX.levelgen.feature.IcePatchFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.IglooFeature$FeatureStart",
            "XXX.levelgen.feature.JunglePyramidFeature$FeatureStart",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.MegaPineTreeFeature",
            "XXX.levelgen.feature.MineshaftFeature",
            "XXX.levelgen.feature.MineshaftFeature$Type",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.NoSurfaceOreFeature",
            "XXX.levelgen.feature.OceanMonumentFeature$OceanMonumentStart",
            "XXX.levelgen.feature.PillagerOutpostFeature",
            "XXX.levelgen.feature.PlainVillagePools",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.RandomScatteredFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.ShipwreckFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SimulatedFeature",
            "XXX.levelgen.feature.SnowyVillagePools",
            "XXX.levelgen.feature.SpikeFeature$1",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.StrongholdFeature",
            "XXX.levelgen.feature.StructureFeature",
            "XXX.levelgen.feature.StructurePieceType",
            "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.VillageFeature$FeatureStart",
            "XXX.levelgen.feature.VillagePieces$VillagePiece",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.placement.nether.FireDecorator",
            "XXX.levelgen.structure.NetherFossilFeature$FeatureStart",
            "XXX.levelgen.structure.NetherFossilPieces$NetherFossilPiece",
            "XXX.levelgen.surfacebuilders.NetherForestSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NopeSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SoulSandValleySurfaceBuilder"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "net.minecraft.SharedConstants \u001b[2;32m+1P\u001b[0m",
          "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.SmokeParticle \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.client.renderer.RenderStateShard$AlphaStateShard \u001b[2;32m+1M\u001b[0m",
          "XXX.client.renderer.RenderStateShard$LineStateShard \u001b[2;32m+1M\u001b[0m",
          "XXX.client.renderer.RenderStateShard$TextureStateShard \u001b[2;32m+1M\u001b[0m",
          "XXX.client.renderer.RenderType \u001b[2;32m+2M\u001b[0m",
          "XXX.client.renderer.RenderType$CompositeRenderType \u001b[2;32m+2M\u001b[0m",
          "XXX.client.renderer.RenderType$CompositeState \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.renderer.RenderType$OutlineProperty \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.server.level.DerivedServerLevel \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.server.level.WorldGenRegion \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.sounds.SoundEvents \u001b[2;32m+86P\u001b[0m",
          "XXX.minecraft.tags.BlockTags \u001b[2;32m+5P\u001b[0m",
          "XXX.minecraft.tags.ItemTags \u001b[2;32m+2P\u001b[0m",
          "XXX.util.profiling.InactiveProfiler \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.monster.Shulker \u001b[2;32m+2M\u001b[0m",
          "XXX.entity.player.Inventory \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.ArmorItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.ArmorMaterial \u001b[2;32m+1P\u001b[0m",
          "XXX.item.crafting.RepairItemRecipe \u001b[2;32m+1M\u001b[0m",
          "XXX.world.level.Level \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.biome.BiomeSource \u001b[2;32m+1M\u001b[0m",
          "XXX.level.biome.BiomeSourceType \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.biome.FixedBiomeSource \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.properties.WoodType \u001b[2;32m+2P\u001b[0m",
          "XXX.level.dimension.Dimension \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.dimension.NetherDimension \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.level.dimension.NormalDimension \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.dimension.end.TheEndDimension \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.carver.WorldCarver \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.placement.FeatureDecorator \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.structure.StructureFeatureIO \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.synth.PerlinNoise \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.phys.Vec3 \u001b[2;32m+1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
        "differences": {
          "added": [
            "boolean matches(Inventory)"
          ],
          "removed": [
            "boolean matches(Inventory,ItemStack,int,int,int)",
            "boolean lambda$matches$0(ItemStack,ItemPredicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SmokeParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()",
            "float getQuadSize(float)",
            "void tick()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderStateShard$AlphaStateShard",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderStateShard$LineStateShard",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderStateShard$TextureStateShard",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType",
        "differences": {
          "added": [],
          "removed": [
            "RenderType entityShadow(ResourceLocation)",
            "RenderType outline(ResourceLocation,RenderStateShard$CullStateShard)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType$CompositeRenderType",
        "differences": {
          "added": [],
          "removed": [
            "String toString()",
            "RenderType lambda$new$2(RenderType$CompositeState,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType$CompositeState",
        "differences": {
          "added": [
            "ImmutableList access$700(RenderType$CompositeState)"
          ],
          "removed": [
            "String toString()",
            "RenderStateShard$CullStateShard access$700(RenderType$CompositeState)",
            "ImmutableList access$800(RenderType$CompositeState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType$OutlineProperty",
        "differences": {
          "added": [
            "void <init>(String,int)"
          ],
          "removed": [
            "void <init>(String,int,String)",
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.DerivedServerLevel",
        "differences": {
          "added": [
            "void <init>(ServerLevel,MinecraftServer,Executor,LevelStorage,DimensionType,ProfilerFiller,ChunkProgressListener)"
          ],
          "removed": [
            "void <init>(ServerLevel,MinecraftServer,Executor,LevelStorage,DimensionType,ChunkProgressListener)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.WorldGenRegion",
        "differences": {
          "added": [
            "void blockUpdated(BlockPos,Block)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Shulker",
        "differences": {
          "added": [],
          "removed": [
            "Direction findAttachableFace(BlockPos)",
            "boolean canAttachOnBlockFace(BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.Inventory",
        "differences": {
          "added": [
            "void hurtArmor(float)"
          ],
          "removed": [
            "void hurtArmor(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.RepairItemRecipe",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$assemble$0(Map,Map,Map,Enchantment)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.Level",
        "differences": {
          "added": [
            "void <init>(LevelData,DimensionType,BiFunction,ProfilerFiller,boolean)",
            "void blockUpdated(BlockPos,Block)"
          ],
          "removed": [
            "void <init>(LevelData,DimensionType,BiFunction,Supplier,boolean)",
            "boolean loadedAndEntityCanStandOnFace(BlockPos,Entity,Direction)",
            "Supplier getProfilerSupplier()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSource",
        "differences": {
          "added": [],
          "removed": [
            "BlockPos findBiomeHorizontal(int,int,int,int,int,List,Random,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSourceType",
        "differences": {
          "added": [],
          "removed": [
            "MultiNoiseBiomeSourceSettings lambda$static$0(LevelData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.FixedBiomeSource",
        "differences": {
          "added": [
            "BlockPos findBiomeHorizontal(int,int,int,int,List,Random)"
          ],
          "removed": [
            "BlockPos findBiomeHorizontal(int,int,int,int,int,List,Random,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.dimension.NetherDimension",
        "differences": {
          "added": [
            "Vec3 getFogColor(float,float)",
            "void <clinit>()"
          ],
          "removed": [
            "Vec3 getBrightnessDependentFogColor(int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.dimension.NormalDimension",
        "differences": {
          "added": [
            "Vec3 getFogColor(float,float)"
          ],
          "removed": [
            "Vec3 getBrightnessDependentFogColor(int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.dimension.end.TheEndDimension",
        "differences": {
          "added": [
            "Vec3 getFogColor(float,float)"
          ],
          "removed": [
            "Vec3 getBrightnessDependentFogColor(int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.synth.PerlinNoise",
        "differences": {
          "added": [
            "void <init>(WorldgenRandom,int,int)"
          ],
          "removed": [
            "void <init>(WorldgenRandom,IntStream)",
            "void <init>(WorldgenRandom,List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.Vec3",
        "differences": {
          "added": [],
          "removed": [
            "Vec3 fromRGB24(int)"
          ]
        }
      }
    }
  ]
}