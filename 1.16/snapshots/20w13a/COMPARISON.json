{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "20w12a",
        "currentLabel": "20w13a",
        "values": [
          {
            "key": "World version",
            "previous": "2515",
            "current": "2520"
          },
          {
            "key": "Protocol version",
            "previous": "707",
            "current": "708"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "20w12a",
        "currentLabel": "20w13a",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "pos_rule_test.txt"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "entity_type",
        "differences": {
          "added": [
            "minecraft:strider"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:strider_spawn_egg",
            "minecraft:warped_fungus_on_a_stick",
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "memory_module_type",
        "differences": {
          "added": [
            "minecraft:nearest_adult_piglins"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "point_of_interest_type",
        "differences": {
          "added": [
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:block.lodestone.break",
            "minecraft:block.lodestone.step",
            "minecraft:block.lodestone.place",
            "minecraft:block.lodestone.hit",
            "minecraft:block.lodestone.fall",
            "minecraft:item.lodestone_compass.lock",
            "minecraft:entity.strider.ambient",
            "minecraft:entity.strider.happy",
            "minecraft:entity.strider.retreat",
            "minecraft:entity.strider.death",
            "minecraft:entity.strider.hurt",
            "minecraft:entity.strider.step",
            "minecraft:entity.strider.step_lava",
            "minecraft:entity.strider.eat"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "universal_tags/pos_rule_test.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_with_drop.json",
        "differences": {
          "added": [
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_entities_with_drop.json",
        "differences": {
          "added": [
            "minecraft:strider"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/entity_type.json",
        "differences": {
          "added": [
            "minecraft:strider"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:strider_spawn_egg",
            "minecraft:warped_fungus_on_a_stick",
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/memory_module_type.json",
        "differences": {
          "added": [
            "minecraft:nearest_adult_piglins"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/point_of_interest_type.json",
        "differences": {
          "added": [
            "minecraft:lodestone"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:block.lodestone.break",
            "minecraft:block.lodestone.step",
            "minecraft:block.lodestone.place",
            "minecraft:block.lodestone.hit",
            "minecraft:block.lodestone.fall",
            "minecraft:item.lodestone_compass.lock",
            "minecraft:entity.strider.ambient",
            "minecraft:entity.strider.happy",
            "minecraft:entity.strider.retreat",
            "minecraft:entity.strider.death",
            "minecraft:entity.strider.hurt",
            "minecraft:entity.strider.step",
            "minecraft:entity.strider.step_lava",
            "minecraft:entity.strider.eat"
          ],
          "removed": []
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "lodestone.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "lodestone.json",
            "polished_basalt_from_basalt_stonecutting.json",
            "warped_fungus_on_a_stick.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "polished_basalt.json",
        "lines": [
          "\u001b[1;2mType:\u001b[0m minecraft:smelting -> minecraft:crafting_shaped\n\u001b[1;2mResult:\u001b[0m \u001b[2;0mpolished_basalt\u001b[0m \u001b[2;33mx1\u001b[0m -> \u001b[2;0mpolished_basalt\u001b[0m \u001b[2;33mx4\u001b[0m"
        ]
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "block.minecraft.lodestone: Lodestone",
            "item.minecraft.strider_spawn_egg: Strider Spawn Egg",
            "item.minecraft.lodestone_compass: Lodestone Compass",
            "item.minecraft.warped_fungus_on_a_stick: Warped Fungus on a Stick",
            "jigsaw_block.pool: Target pool:",
            "jigsaw_block.name: Name:",
            "jigsaw_block.target: Target name:",
            "jigsaw_block.joint_label: Joint type:",
            "jigsaw_block.joint.rollable: Rollable",
            "jigsaw_block.joint.aligned: Aligned",
            "entity.minecraft.strider: Strider",
            "death.attack.badRespawnPoint.message: %1$s was killed by %2$s",
            "death.attack.badRespawnPoint.link: Intentional Game Design",
            "subtitles.item.lodestone_compass.lock: Lodestone Compass locks onto Lodestone"
          ],
          "removed": [
            "jigsaw_block.target_pool: Target pool:",
            "jigsaw_block.attachement_type: Attachment type:",
            "death.attack.netherBed.message: %1$s was killed by %2$s",
            "death.attack.netherBed.link: Intentional Game Design"
          ]
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "block.minecraft.spawn.not_valid",
            "previous": "Your have no home bed or respawn anchor, or it was obstructed",
            "current": "You have no home bed or respawn anchor, or it was obstructed"
          },
          {
            "key": "block.minecraft.weeping_vines_plant",
            "previous": "Weeping Vines",
            "current": "Weeping Vines Plant"
          },
          {
            "key": "block.minecraft.twisting_vines_plant",
            "previous": "Twisting Vines",
            "current": "Twisting Vines Plant"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/recipes/building_blocks/polished_basalt_from_basalt_stonecutting.json",
            "minecraft/advancements/recipes/decorations/lodestone.json",
            "minecraft/advancements/recipes/transportation/warped_fungus_on_a_stick.json",
            "minecraft/loot_tables/blocks/lodestone.json",
            "minecraft/loot_tables/entities/strider.json",
            "minecraft/recipes/lodestone.json",
            "minecraft/recipes/polished_basalt_from_basalt_stonecutting.json",
            "minecraft/recipes/warped_fungus_on_a_stick.json",
            "minecraft/tags/blocks/logs_that_burn.json",
            "minecraft/tags/blocks/non_flammable_wood.json",
            "minecraft/tags/blocks/strider_warm_blocks.json",
            "minecraft/tags/items/logs_that_burn.json",
            "minecraft/tags/items/non_flammable_wood.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/lodestone.json",
            "minecraft/models/block/lodestone.json",
            "minecraft/models/item/lodestone.json",
            "minecraft/models/item/strider_spawn_egg.json",
            "minecraft/models/item/warped_fungus_on_a_stick.json",
            "minecraft/textures/block/jigsaw_lock.png",
            "minecraft/textures/block/lodestone_side.png",
            "minecraft/textures/block/lodestone_top.png",
            "minecraft/textures/entity/strider/strider.png",
            "minecraft/textures/entity/strider/strider_saddle.png",
            "minecraft/textures/item/warped_fungus_on_a_stick.png"
          ],
          "removed": []
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.mojang.math.Vector3f",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.Util",
            "net.minecraft.Util$IdentityStrategy",
            "net.minecraft.Util$OS$1",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementList$Listener",
            "XXX.minecraft.advancements.AdvancementProgress$Serializer",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.minecraft.advancements.RequirementsStrategy",
            "XXX.advancements.critereon.AbstractCriterionTriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.EntityTypePredicate$TagPredicate",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Floats$Serializer",
            "XXX.commands.arguments.RangeArgument$Ints$Serializer",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.commands.synchronization.ArgumentSerializer",
            "XXX.commands.synchronization.ArgumentTypes$1",
            "XXX.commands.synchronization.EmptyArgumentSerializer",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentSerializer",
            "XXX.synchronization.brigadier.IntegerArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.PropertyValue",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractResourcePack",
            "XXX.server.packs.FolderResourcePack",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPack",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.UnopenedPack",
            "XXX.packs.repository.UnopenedPack$UnopenedPackConstructor",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BlockTags$Wrapper",
            "XXX.minecraft.tags.EntityTypeTags$Wrapper",
            "XXX.minecraft.tags.FluidTags$Wrapper",
            "XXX.minecraft.tags.ItemTags$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$ValuesEntry",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.Deserializer",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.InsensitiveStringMap",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RewindableStream$1",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$1",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$1",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.ShulkerSharedHelper",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.Snooper$1",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.NetherBedDamage",
            "XXX.world.effect.AbsoptionMobEffect",
            "XXX.world.effect.HealthBoostMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgableMob$AgableMobGroupData",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveCallback",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmourEntitySelector",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.entity.ai.Brain",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.BaseAttributeMap",
            "XXX.ai.attributes.ModifiableAttributeMap",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityPosWrapper",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.InteractableDoorsSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinMoveControl",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$1",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$1",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$1",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$1",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.package-info",
            "XXX.entity.boss.BossMob",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.Painting",
            "XXX.entity.fishing.FishingHook",
            "XXX.entity.fishing.package-info",
            "XXX.entity.global.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$1",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$1",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Ravager$RavagerNodeEvaluator",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Vindicator$VindicatorMeleeAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinAngerTargetGoal",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.CarrotOnAStickItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$1",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemPropertyFunction",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$1",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelConflictException",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PortalForcer",
            "XXX.world.level.SpawnData",
            "XXX.world.level.TickNextTickData",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.BadlandsPlateauBiome",
            "XXX.level.biome.BambooJungleHillsBiome",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$BiomeTempCategory",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.BiomeDefaultFeatures",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSourceSettings",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.BirchForestHillsBiome",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.CrimsonForestBiome",
            "XXX.level.biome.DarkForestHillsBiome",
            "XXX.level.biome.DeepFrozenOceanBiome",
            "XXX.level.biome.DeepOceanBiome",
            "XXX.level.biome.DesertBiome",
            "XXX.level.biome.DesertLakesBiome",
            "XXX.level.biome.EndHighlandsBiome",
            "XXX.level.biome.ErodedBadlandsBiome",
            "XXX.level.biome.FixedBiomeSourceSettings",
            "XXX.level.biome.ForestFlowerBiome",
            "XXX.level.biome.FrozenRiverBiome",
            "XXX.level.biome.FuzzyOffsetConstantColumnBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaHillsMutatedBiome",
            "XXX.level.biome.GiantTreeTaigaHillsBiome",
            "XXX.level.biome.IceSpikesBiome",
            "XXX.level.biome.JungleEdgeBiome",
            "XXX.level.biome.LukeWarmOceanBiome",
            "XXX.level.biome.ModifiedGravellyMountainsBiome",
            "XXX.level.biome.ModifiedJungleEdgeBiome",
            "XXX.level.biome.MountainBiome",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MushroomFieldsBiome",
            "XXX.level.biome.NearestNeighborBiomeZoomer",
            "XXX.level.biome.OceanBiome",
            "XXX.level.biome.OverworldBiomeSourceSettings",
            "XXX.level.biome.RiverBiome",
            "XXX.level.biome.SavannaPlateauBiome",
            "XXX.level.biome.ShatteredSavannaPlateauBiome",
            "XXX.level.biome.SnowyBeachBiome",
            "XXX.level.biome.SnowyTaigaBiome",
            "XXX.level.biome.SnowyTaigaMountainsBiome",
            "XXX.level.biome.SoulSandValleyBiome",
            "XXX.level.biome.SunflowerPlainsBiome",
            "XXX.level.biome.SwampHillsBiome",
            "XXX.level.biome.TaigaHillsBiome",
            "XXX.level.biome.TallBirchForestBiome",
            "XXX.level.biome.TheEndBiome",
            "XXX.level.biome.TheEndBiomeSourceSettings",
            "XXX.level.biome.WarmOceanBiome",
            "XXX.level.biome.WoodedBadlandsBiome",
            "XXX.level.biome.WoodedMountainBiome",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.BambooBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BedBlock$1",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.Blocks",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.EnchantmentTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FungusBlock",
            "XXX.level.block.GlassBlock",
            "XXX.level.block.GoldBlock",
            "XXX.level.block.GrassPathBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.GrowingPlantBlock",
            "XXX.level.block.GrowingPlantHeadBlock",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlant",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlant",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructureManager",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.package-info",
            "XXX.levelgen.surfacebuilders.ConfiguredSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ErodedBadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GiantTreeTaigaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.MountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ShatteredSavanaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderConfiguration",
            "XXX.levelgen.surfacebuilders.WoodedBadlandsSurfaceBuilder",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.SurfaceNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$2",
            "XXX.level.lighting.LayerLightEngine",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$1",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.Material",
            "XXX.level.material.MaterialColor",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.newbiome.area.Area",
            "XXX.newbiome.area.LazyArea",
            "XXX.newbiome.context.BigContext",
            "XXX.newbiome.context.LazyAreaContext",
            "XXX.newbiome.layer.AddDeepOceanLayer",
            "XXX.newbiome.layer.AddEdgeLayer$CoolWarm",
            "XXX.newbiome.layer.AddEdgeLayer$IntroduceSpecial",
            "XXX.newbiome.layer.AddMushroomIslandLayer",
            "XXX.newbiome.layer.BiomeEdgeLayer",
            "XXX.newbiome.layer.IslandLayer",
            "XXX.newbiome.layer.Layers",
            "XXX.newbiome.layer.OceanMixerLayer",
            "XXX.newbiome.layer.RareBiomeSpotLayer",
            "XXX.newbiome.layer.RemoveTooMuchOceanLayer",
            "XXX.newbiome.layer.RiverLayer",
            "XXX.newbiome.layer.ShoreLayer",
            "XXX.newbiome.layer.ZoomLayer",
            "XXX.newbiome.layer.package-info",
            "XXX.layer.traits.AreaTransformer1",
            "XXX.layer.traits.BishopTransformer",
            "XXX.layer.traits.C1Transformer",
            "XXX.layer.traits.DimensionOffset0Transformer",
            "XXX.layer.traits.DimensionTransformer",
            "XXX.layer.traits.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.TurtleNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelStorage",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.PlayerIO",
            "XXX.storage.loot.BinomialDistributionGenerator$Serializer",
            "XXX.storage.loot.ConstantIntValue",
            "XXX.storage.loot.IntLimiter",
            "XXX.storage.loot.IntLimiter$Serializer",
            "XXX.storage.loot.LootContext$1",
            "XXX.storage.loot.LootContext$DynamicDrop",
            "XXX.storage.loot.LootContext$EntityTarget$Serializer",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.storage.loot.LootTables",
            "XXX.storage.loot.RandomIntGenerator",
            "XXX.storage.loot.RandomValueBounds",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.DynamicLoot$Serializer",
            "XXX.loot.entries.EmptyLootItem$1",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootItem$Serializer",
            "XXX.loot.entries.LootPoolEntries$Serializer",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryContainer$Serializer",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.LootTableReference$Serializer",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.ApplyExplosionDecay$1",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$DataSource",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LimitCount$1",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunction$Serializer",
            "XXX.loot.functions.LootItemFunctions$Serializer",
            "XXX.loot.functions.LootingEnchantFunction$1",
            "XXX.loot.functions.LootingEnchantFunction$Serializer",
            "XXX.loot.functions.SetAttributesFunction$1",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetAttributesFunction$Serializer",
            "XXX.loot.functions.SetContainerContents$1",
            "XXX.loot.functions.SetContainerContents$Serializer",
            "XXX.loot.functions.SetContainerLootTable$1",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemCountFunction$Serializer",
            "XXX.loot.functions.SetItemDamageFunction$1",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetLoreFunction$Serializer",
            "XXX.loot.functions.SetNameFunction$1",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetNbtFunction$Serializer",
            "XXX.loot.functions.SetStewEffectFunction$1",
            "XXX.loot.functions.SetStewEffectFunction$Serializer",
            "XXX.loot.functions.SmeltItemFunction$1",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$1",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AlternativeLootItemCondition$1",
            "XXX.loot.predicates.AlternativeLootItemCondition$Serializer",
            "XXX.loot.predicates.BonusLevelTableCondition$1",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.DamageSourceCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.InvertedLootItemCondition$Serializer",
            "XXX.loot.predicates.LocationCheck$Serializer",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$1",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceCondition$1",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$Serializer",
            "XXX.loot.predicates.MatchTool$Serializer",
            "XXX.loot.predicates.TimeCheck$1",
            "XXX.loot.predicates.TimeCheck$Serializer",
            "XXX.loot.predicates.WeatherCheck$1",
            "XXX.loot.predicates.WeatherCheck$Serializer",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.IntPointRange",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.WorldRegionIndirectVoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ],
          "removed": [
            "XXX.mojang.math.OctahedralGroup",
            "XXX.mojang.math.Transformation",
            "XXX.mojang.math.Vector4f",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.Util$1",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement$1",
            "XXX.minecraft.advancements.AdvancementList",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementRewards$Deserializer",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntityTypePredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate$TypePredicate",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionTypeArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$ListElementFunction",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.RangeArgument$Serializer",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypes",
            "XXX.commands.synchronization.ArgumentTypes$Entry",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.BrigadierArgumentSerializers",
            "XXX.synchronization.brigadier.FloatArgumentSerializer",
            "XXX.synchronization.brigadier.LongArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.core.dispenser.DispenseItemBehavior$23",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.package-info",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquippedItemPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServer$2",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DerivedServerLevel",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FileResourcePack",
            "XXX.server.packs.Pack",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.repository.UnopenedPack$Position",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$2",
            "XXX.server.players.GameProfileCache$Serializer",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SynchronizableTagCollection",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagManager$Preparations",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.FrameTimer",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.IntRange",
            "XXX.minecraft.util.LimitedCapacityList",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.RewindableStream",
            "XXX.minecraft.util.Serializable",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.OminousBannerRenameFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.Snooper",
            "XXX.minecraft.world.SnooperPopulator",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttackDamageMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.MobEffects$1",
            "XXX.world.entity.AgableMob",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.BaseAttribute",
            "XXX.ai.attributes.ModifiableAttributeInstance",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosWrapper",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior$1",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PositionWrapper",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunIf",
            "XXX.ai.behavior.RunSometimes",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.DolphinLookControl",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillage",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTemptGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.ArmorStand$1",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.ItemFrame$1",
            "XXX.entity.decoration.Motive",
            "XXX.entity.decoration.package-info",
            "XXX.entity.fishing.FishingHook$1",
            "XXX.entity.fishing.FishingHook$OpenWaterType",
            "XXX.entity.global.LightningBolt",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$1",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$1",
            "XXX.entity.monster.Ravager$RavagerNavigation",
            "XXX.entity.monster.SharedMonsterAttributes",
            "XXX.entity.monster.Shulker$1",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGroupData",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinHurtByOtherGoal",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin$PiglinArmPose",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileWeaponItem$Type",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkTickList",
            "XXX.world.level.ChunkTickList$ScheduledTick",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.CollisionGetter$1",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.Explosion",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelType",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.ServerTickList",
            "XXX.world.level.TickList",
            "XXX.world.level.TickPriority",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.BadlandsBiome",
            "XXX.level.biome.BambooJungleBiome",
            "XXX.level.biome.BeachBiome",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$BiomeCategory",
            "XXX.level.biome.Biome$ClimateParameters",
            "XXX.level.biome.Biome$SpawnerData",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSourceType",
            "XXX.level.biome.BiomeSpecialEffects$1",
            "XXX.level.biome.BiomeZoomer",
            "XXX.level.biome.BirchForestBiome",
            "XXX.level.biome.CheckerboardBiomeSourceSettings",
            "XXX.level.biome.ColdOceanBiome",
            "XXX.level.biome.DarkForestBiome",
            "XXX.level.biome.DeepColdOceanBiome",
            "XXX.level.biome.DeepLukeWarmOceanBiome",
            "XXX.level.biome.DeepWarmOceanBiome",
            "XXX.level.biome.DesertHillsBiome",
            "XXX.level.biome.EndBarrensBiome",
            "XXX.level.biome.EndMidlandsBiome",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.ForestBiome",
            "XXX.level.biome.FrozenOceanBiome",
            "XXX.level.biome.FuzzyOffsetBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaBiome",
            "XXX.level.biome.GiantTreeTaigaBiome",
            "XXX.level.biome.GravellyMountainsBiome",
            "XXX.level.biome.JungleBiome",
            "XXX.level.biome.JungleHillsBiome",
            "XXX.level.biome.ModifiedBadlandsPlateauBiome",
            "XXX.level.biome.ModifiedJungleBiome",
            "XXX.level.biome.ModifiedWoodedBadlandsPlateauBiome",
            "XXX.level.biome.MountainEdgeBiome",
            "XXX.level.biome.MultiNoiseBiomeSourceSettings",
            "XXX.level.biome.MushroomFieldsShoreBiome",
            "XXX.level.biome.NetherWastesBiome",
            "XXX.level.biome.OverworldBiomeSource",
            "XXX.level.biome.PlainsBiome",
            "XXX.level.biome.SavannaBiome",
            "XXX.level.biome.ShatteredSavannaBiome",
            "XXX.level.biome.SmallEndIslandsBiome",
            "XXX.level.biome.SnowyMountainsBiome",
            "XXX.level.biome.SnowyTaigaHillsBiome",
            "XXX.level.biome.SnowyTundraBiome",
            "XXX.level.biome.StoneShoreBiome",
            "XXX.level.biome.SwampBiome",
            "XXX.level.biome.TaigaBiome",
            "XXX.level.biome.TaigaMountainsBiome",
            "XXX.level.biome.TallBirchHillsBiome",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.biome.TheVoidBiome",
            "XXX.level.biome.WarpedForestBiome",
            "XXX.level.biome.WoodedHillsBiome",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractGlassBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$BlockStatePairKey",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BushBlock",
            "XXX.level.block.ButtonBlock$1",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.CryingObsidianBlock",
            "XXX.level.block.DeadBushBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EndRodBlock$1",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GravelBlock",
            "XXX.level.block.GrindstoneBlock$1",
            "XXX.level.block.GrowingPlantBodyBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.Lantern",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShearableDoublePlantBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVines",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeepingVines",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.LinearPosTest",
            "XXX.structure.templatesystem.PosAlwaysTrueTest",
            "XXX.structure.templatesystem.PosRuleTestType",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.FrozenOceanSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GravellyMountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherForestSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NopeSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SoulSandValleySurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderBaseConfiguration",
            "XXX.levelgen.surfacebuilders.SwampSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.package-info",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.FlatDataLayer",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage$1",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.FluidStateImpl",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.Material$Builder",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.newbiome.area.AreaFactory",
            "XXX.newbiome.area.package-info",
            "XXX.newbiome.context.Context",
            "XXX.newbiome.context.package-info",
            "XXX.newbiome.layer.AddEdgeLayer",
            "XXX.newbiome.layer.AddEdgeLayer$HeatIce",
            "XXX.newbiome.layer.AddIslandLayer",
            "XXX.newbiome.layer.AddSnowLayer",
            "XXX.newbiome.layer.BiomeInitLayer",
            "XXX.newbiome.layer.Layer",
            "XXX.newbiome.layer.OceanLayer",
            "XXX.newbiome.layer.RareBiomeLargeLayer",
            "XXX.newbiome.layer.RegionHillsLayer",
            "XXX.newbiome.layer.RiverInitLayer",
            "XXX.newbiome.layer.RiverMixerLayer",
            "XXX.newbiome.layer.SmoothLayer",
            "XXX.newbiome.layer.ZoomLayer$1",
            "XXX.layer.traits.AreaTransformer0",
            "XXX.layer.traits.AreaTransformer2",
            "XXX.layer.traits.C0Transformer",
            "XXX.layer.traits.CastleTransformer",
            "XXX.layer.traits.DimensionOffset1Transformer",
            "XXX.layer.traits.PixelTransformer",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SaveDataDirtyRunnable",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$1",
            "XXX.level.storage.McRegionUpgrader",
            "XXX.storage.loot.BinomialDistributionGenerator",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ConstantIntValue$Serializer",
            "XXX.storage.loot.IntLimiter$1",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootPool$1",
            "XXX.storage.loot.LootPool$Serializer",
            "XXX.storage.loot.LootTable$1",
            "XXX.storage.loot.LootTable$Serializer",
            "XXX.storage.loot.PredicateManager",
            "XXX.storage.loot.RandomIntGenerators",
            "XXX.storage.loot.RandomValueBounds$Serializer",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$1",
            "XXX.loot.entries.CompositeEntryBase$Serializer",
            "XXX.loot.entries.DynamicLoot$1",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EmptyLootItem$Serializer",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootItem$1",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootPoolSingletonContainer$Serializer",
            "XXX.loot.entries.LootTableReference$1",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.TagEntry$Serializer",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaDeserializer",
            "XXX.loot.functions.ApplyBonusCount$Serializer",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.ApplyExplosionDecay$Serializer",
            "XXX.loot.functions.CopyBlockState$1",
            "XXX.loot.functions.CopyBlockState$Serializer",
            "XXX.loot.functions.CopyNameFunction$1",
            "XXX.loot.functions.CopyNameFunction$Serializer",
            "XXX.loot.functions.CopyNbtFunction$1",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Serializer",
            "XXX.loot.functions.EnchantRandomlyFunction$1",
            "XXX.loot.functions.EnchantRandomlyFunction$Serializer",
            "XXX.loot.functions.EnchantWithLevelsFunction$1",
            "XXX.loot.functions.EnchantWithLevelsFunction$Serializer",
            "XXX.loot.functions.ExplorationMapFunction$1",
            "XXX.loot.functions.ExplorationMapFunction$Serializer",
            "XXX.loot.functions.FillPlayerHead$Serializer",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LimitCount$Serializer",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemConditionalFunction$Serializer",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetContainerLootTable$Serializer",
            "XXX.loot.functions.SetItemCountFunction$1",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetItemDamageFunction$Serializer",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetNameFunction$Serializer",
            "XXX.loot.functions.SetNbtFunction$1",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.SmeltItemFunction$Serializer",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AlternativeLootItemCondition",
            "XXX.loot.predicates.AlternativeLootItemCondition$Builder",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.BonusLevelTableCondition$Serializer",
            "XXX.loot.predicates.ConditionReference$Serializer",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.DamageSourceCondition$Serializer",
            "XXX.loot.predicates.EntityHasScoreCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition$Serializer",
            "XXX.loot.predicates.ExplosionCondition$Serializer",
            "XXX.loot.predicates.InvertedLootItemCondition$1",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemCondition$Serializer",
            "XXX.loot.predicates.LootItemConditions$Serializer",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$1",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$1",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.loot.predicates.package-info",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.PosAndRot",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.math.Matrix3f \u001b[2;32m+1M\u001b[0m",
          "XXX.datafix.fixes.ItemStackUUIDFix \u001b[2;32m+8M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.world.item.CompassItem \u001b[2;32m+16M\u001b[0m",
          "XXX.world.item.DiggerItem \u001b[2;32m+1M\u001b[0m",
          "XXX.block.entity.JukeboxBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.ShulkerBoxBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.SkullBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.SpawnerBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.StructureBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+1P\u001b[0m",
          "XXX.level.chunk.ProtoTickList \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.structures.EmptyPoolElement \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.ListPoolElement \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.StructurePoolElement \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.structure.DesertPyramidPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.JunglePyramidPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$StairsRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$FillerCorridor \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$LeftTurn \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$PrisonHall \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$RoomCrossing \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$StairsDown \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$Straight \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.SwamplandHutPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Matrix3f",
        "differences": {
          "added": [],
          "removed": [
            "void set(int,int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.datafix.fixes.ItemStackUUIDFix",
        "differences": {
          "added": [
            "Typed lambda$makeRule$4(OpticFinder,Typed)",
            "Typed lambda$null$3(Typed)",
            "Dynamic lambda$null$2(Dynamic)",
            "Dynamic lambda$null$1(Dynamic)"
          ],
          "removed": [
            "Dynamic updateAttributeModifiers(Dynamic)",
            "Dynamic updateSkullOwner(Dynamic)",
            "Dynamic lambda$updateSkullOwner$6(Dynamic)",
            "Dynamic lambda$updateAttributeModifiers$5(Dynamic,Dynamic)",
            "Dynamic lambda$null$4(Dynamic)",
            "Typed lambda$makeRule$3(OpticFinder,Typed)",
            "Typed lambda$null$2(Typed,OpticFinder,Typed)",
            "Dynamic lambda$null$1(Typed,OpticFinder,Dynamic)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.CompassItem",
        "differences": {
          "added": [],
          "removed": [
            "boolean hasLodestoneData(CompoundTag)",
            "boolean isLodestoneCompass(ItemStack)",
            "boolean isFoil(ItemStack)",
            "Optional getLodestoneDimension(CompoundTag)",
            "BlockPos getSpawnPosition(Level)",
            "BlockPos getLodestonePosition(Level,CompoundTag)",
            "double getFrameRotation(ItemFrame)",
            "double getAngleTo(Vec3,Entity)",
            "void inventoryTick(ItemStack,Level,Entity,int,boolean)",
            "InteractionResult useOn(UseOnContext)",
            "String getDescriptionId(ItemStack)",
            "boolean access$000(CompoundTag)",
            "BlockPos access$100(CompassItem,Level,CompoundTag)",
            "BlockPos access$200(CompassItem,Level)",
            "double access$300(ItemFrame)",
            "double access$400(Vec3,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.DiggerItem",
        "differences": {
          "added": [],
          "removed": [
            "float getAttackDamage()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.JukeboxBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.SkullBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.SpawnerBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.StructureBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.ProtoTickList",
        "differences": {
          "added": [
            "void addAll(Stream)",
            "void lambda$addAll$0(TickNextTickData)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.EmptyPoolElement",
        "differences": {
          "added": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,Rotation,BoundingBox,Random)"
          ],
          "removed": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,BlockPos,Rotation,BoundingBox,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.ListPoolElement",
        "differences": {
          "added": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,Rotation,BoundingBox,Random)"
          ],
          "removed": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,BlockPos,Rotation,BoundingBox,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.DesertPyramidPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.JunglePyramidPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftCorridor",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftStairs",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleEntrance",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$MonsterThrone",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$StairsRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$FillerCorridor",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$LeftTurn",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$PrisonHall",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$RoomCrossing",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$StairsDown",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$Straight",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.SwamplandHutPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.mojang.math.Vector3d",
            "XXX.mojang.math.Vector4f",
            "XXX.mojang.realmsclient.RealmsMainScreen",
            "XXX.mojang.realmsclient.RealmsMainScreen$2",
            "XXX.mojang.realmsclient.RealmsMainScreen$4",
            "XXX.mojang.realmsclient.RealmsMainScreen$CloseButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$NewsButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionList",
            "XXX.mojang.realmsclient.RealmsMainScreen$ShowPopupButton",
            "XXX.mojang.realmsclient.Unit",
            "XXX.realmsclient.client.FileDownload$1",
            "XXX.realmsclient.client.FileDownload$ProgressListener",
            "XXX.realmsclient.client.FileUpload",
            "XXX.realmsclient.client.Ping",
            "XXX.realmsclient.client.RealmsClient",
            "XXX.realmsclient.client.RealmsClient$Environment",
            "XXX.realmsclient.client.RealmsError",
            "XXX.realmsclient.client.Request$Delete",
            "XXX.realmsclient.client.Request$Post",
            "XXX.realmsclient.client.UploadStatus",
            "XXX.realmsclient.dto.BackupList",
            "XXX.realmsclient.dto.Ops",
            "XXX.realmsclient.dto.PendingInvitesList",
            "XXX.realmsclient.dto.PlayerInfo",
            "XXX.realmsclient.dto.RealmsNews",
            "XXX.realmsclient.dto.RealmsServer$McoServerComparator",
            "XXX.realmsclient.dto.RealmsServer$WorldType",
            "XXX.realmsclient.dto.RealmsServerList",
            "XXX.realmsclient.dto.RealmsServerPlayerList",
            "XXX.realmsclient.dto.RealmsWorldOptions",
            "XXX.realmsclient.dto.ReflectionBasedSerialization",
            "XXX.realmsclient.dto.Subscription",
            "XXX.realmsclient.dto.UploadInfo",
            "XXX.realmsclient.dto.WorldDownload",
            "XXX.realmsclient.dto.WorldTemplate$WorldTemplateType",
            "XXX.realmsclient.exception.RealmsDefaultUncaughtExceptionHandler",
            "XXX.realmsclient.exception.RealmsServiceException",
            "XXX.realmsclient.gui.RealmsDataFetcher",
            "XXX.realmsclient.gui.RealmsDataFetcher$LiveStatsTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$ServerListUpdateTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$TrialAvailabilityTask",
            "XXX.realmsclient.gui.RealmsWorldSlotButton",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$State",
            "XXX.gui.screens.RealmsBackupInfoScreen",
            "XXX.gui.screens.RealmsBackupScreen",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$1",
            "XXX.gui.screens.RealmsPendingInvitesScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$2",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$RejectRowButton",
            "XXX.gui.screens.RealmsPlayerScreen",
            "XXX.gui.screens.RealmsPlayerScreen$InvitedObjectSelectionList",
            "XXX.gui.screens.RealmsResetWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$2",
            "XXX.gui.screens.RealmsResetWorldScreen$ResetType",
            "XXX.gui.screens.RealmsScreenWithCallback",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$Entry",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$Entry",
            "XXX.gui.screens.RealmsSettingsScreen",
            "XXX.gui.screens.RealmsSlotOptionsScreen$SettingsSlider",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$1",
            "XXX.gui.screens.RealmsUploadScreen",
            "XXX.gui.screens.UploadResult$1",
            "XXX.realmsclient.util.JsonUtils",
            "XXX.realmsclient.util.RealmsPersistence$RealmsPersistenceData",
            "XXX.realmsclient.util.RealmsTextureManager$1",
            "XXX.realmsclient.util.RealmsUtil",
            "XXX.realmsclient.util.SkinProcessor",
            "XXX.realmsclient.util.TextRenderingUtils$Line",
            "XXX.realmsclient.util.UploadTokenCache",
            "XXX.util.task.ConnectTask",
            "XXX.util.task.GetServerDetailsTask",
            "XXX.util.task.OpenServerTask",
            "XXX.util.task.RestoreTask",
            "XXX.util.task.SwitchSlotTask",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.Util",
            "net.minecraft.Util$IdentityStrategy",
            "net.minecraft.Util$OS$1",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementList$Listener",
            "XXX.minecraft.advancements.AdvancementProgress$Serializer",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.minecraft.advancements.RequirementsStrategy",
            "XXX.advancements.critereon.AbstractCriterionTriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.EntityTypePredicate$TagPredicate",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.client.AmbientOcclusionStatus",
            "XXX.minecraft.client.BooleanOption",
            "XXX.minecraft.client.ClientBrandRetriever",
            "XXX.minecraft.client.CloudStatus",
            "XXX.minecraft.client.DebugQueryHandler",
            "XXX.minecraft.client.Game",
            "XXX.minecraft.client.GuiMessage",
            "XXX.minecraft.client.KeyMapping",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.LogaritmicProgressOption",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.Option",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.ParticleStatus",
            "XXX.minecraft.client.RecipeBookCategories",
            "XXX.minecraft.client.Session",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.minecraft.client.User$Type",
            "XXX.color.block.BlockColors",
            "XXX.color.block.BlockTintCache$1",
            "XXX.color.block.package-info",
            "XXX.color.item.ItemColors",
            "XXX.client.gui.Font",
            "XXX.client.gui.GuiComponent",
            "XXX.client.gui.MapRenderer$1",
            "XXX.gui.chat.ChatListener",
            "XXX.gui.chat.OverlayChatListener",
            "XXX.gui.chat.package-info",
            "XXX.gui.components.AbstractOptionSliderButton",
            "XXX.gui.components.AbstractSelectionList$1",
            "XXX.gui.components.AbstractSelectionList$TrackedList",
            "XXX.gui.components.AbstractWidget",
            "XXX.gui.components.Button",
            "XXX.gui.components.ChatComponent",
            "XXX.gui.components.CommandSuggestions",
            "XXX.gui.components.CommandSuggestions$SuggestionsList",
            "XXX.gui.components.ContainerObjectSelectionList",
            "XXX.gui.components.DebugScreenOverlay",
            "XXX.gui.components.EditBox",
            "XXX.gui.components.LerpingBossEvent",
            "XXX.gui.components.LockIconButton",
            "XXX.gui.components.ObjectSelectionList",
            "XXX.gui.components.OptionButton",
            "XXX.gui.components.OptionsList$Entry",
            "XXX.gui.components.PlayerTabOverlay$1",
            "XXX.gui.components.ScrolledSelectionList",
            "XXX.gui.components.StateSwitchingButton",
            "XXX.gui.components.SubtitleOverlay$Subtitle",
            "XXX.gui.components.VolumeSlider",
            "XXX.components.events.AbstractContainerEventHandler",
            "XXX.components.events.GuiEventListener",
            "XXX.gui.components.package-info",
            "XXX.components.spectator.package-info",
            "XXX.components.toasts.RecipeToast",
            "XXX.components.toasts.SystemToast$SystemToastIds",
            "XXX.components.toasts.Toast$Visibility",
            "XXX.components.toasts.ToastComponent$1",
            "XXX.components.toasts.TutorialToast",
            "XXX.components.toasts.package-info",
            "XXX.gui.font.FontManager",
            "XXX.gui.font.FontManager$2",
            "XXX.gui.font.FontTexture",
            "XXX.gui.font.FontTexture$Node",
            "XXX.font.glyphs.BakedGlyph",
            "XXX.font.glyphs.EmptyGlyph",
            "XXX.font.glyphs.WhiteGlyph",
            "XXX.gui.font.package-info",
            "XXX.font.providers.BitmapProvider$1",
            "XXX.font.providers.BitmapProvider$Glyph",
            "XXX.font.providers.GlyphProviderBuilderType",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$1",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Glyph",
            "XXX.font.providers.package-info",
            "XXX.gui.screens.AccessibilityOptionsScreen",
            "XXX.gui.screens.BackupConfirmScreen",
            "XXX.gui.screens.ChatOptionsScreen",
            "XXX.gui.screens.ChatScreen$1",
            "XXX.gui.screens.ConfirmScreen",
            "XXX.gui.screens.ConnectScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry",
            "XXX.gui.screens.CreateFlatWorldScreen$1",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList$Entry",
            "XXX.gui.screens.DemoIntroScreen",
            "XXX.gui.screens.DisconnectedScreen",
            "XXX.gui.screens.ErrorScreen",
            "XXX.gui.screens.InBedChatScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList",
            "XXX.gui.screens.LevelLoadingScreen",
            "XXX.gui.screens.LoadingOverlay$LogoTexture",
            "XXX.gui.screens.MenuScreens$ScreenConstructor",
            "XXX.gui.screens.OptionsScreen",
            "XXX.gui.screens.OutOfMemoryScreen",
            "XXX.gui.screens.PauseScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetInfo",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList$Entry",
            "XXX.gui.screens.ReceivingLevelScreen",
            "XXX.gui.screens.ShareToLanScreen",
            "XXX.gui.screens.SoundOptionsScreen",
            "XXX.gui.screens.VideoSettingsScreen",
            "XXX.screens.achievement.StatsScreen",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRow",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList$MobRow",
            "XXX.screens.achievement.package-info",
            "XXX.screens.advancements.AdvancementTabType",
            "XXX.screens.advancements.AdvancementWidget",
            "XXX.screens.advancements.AdvancementsScreen",
            "XXX.screens.controls.ControlList",
            "XXX.screens.controls.ControlList$CategoryEntry",
            "XXX.screens.controls.ControlList$KeyEntry",
            "XXX.screens.controls.ControlList$KeyEntry$2",
            "XXX.screens.controls.package-info",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$1",
            "XXX.screens.inventory.AbstractFurnaceScreen",
            "XXX.screens.inventory.BeaconScreen",
            "XXX.screens.inventory.BeaconScreen$BeaconCancelButton",
            "XXX.screens.inventory.BeaconScreen$BeaconPowerButton",
            "XXX.screens.inventory.BeaconScreen$BeaconSpriteScreenButton",
            "XXX.screens.inventory.BookEditScreen",
            "XXX.screens.inventory.BookViewScreen",
            "XXX.screens.inventory.BookViewScreen$BookAccess",
            "XXX.screens.inventory.BookViewScreen$WrittenBookAccess",
            "XXX.screens.inventory.CartographyTableScreen",
            "XXX.screens.inventory.CommandBlockEditScreen$1",
            "XXX.screens.inventory.CraftingScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen$ItemPickerMenu",
            "XXX.screens.inventory.DispenserScreen",
            "XXX.screens.inventory.EnchantmentNames",
            "XXX.screens.inventory.FurnaceScreen",
            "XXX.screens.inventory.HopperScreen",
            "XXX.screens.inventory.InventoryScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen",
            "XXX.screens.inventory.LecternScreen$1",
            "XXX.screens.inventory.MenuAccess",
            "XXX.screens.inventory.MerchantScreen$TradeOfferButton",
            "XXX.screens.inventory.PageButton",
            "XXX.screens.inventory.SignEditScreen",
            "XXX.screens.inventory.SmokerScreen",
            "XXX.screens.inventory.StructureBlockEditScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$2",
            "XXX.screens.mco.package-info",
            "XXX.screens.multiplayer.SafetyScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.resourcepacks.ResourcePackSelectScreen",
            "XXX.resourcepacks.lists.AvailableResourcePackList",
            "XXX.resourcepacks.lists.ResourcePackList$ResourcePackEntry",
            "XXX.resourcepacks.lists.package-info",
            "XXX.screens.stream.package-info",
            "XXX.screens.worldselection.CreateWorldScreen$1",
            "XXX.screens.worldselection.CreateWorldScreen$3",
            "XXX.screens.worldselection.CreateWorldScreen$5",
            "XXX.screens.worldselection.CreateWorldScreen$7",
            "XXX.screens.worldselection.EditWorldScreen",
            "XXX.screens.worldselection.SelectWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList$WorldListEntry",
            "XXX.gui.spectator.PlayerMenuItem",
            "XXX.gui.spectator.SpectatorMenu",
            "XXX.gui.spectator.SpectatorMenu$CloseSpectatorItem",
            "XXX.gui.spectator.SpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenuListener",
            "XXX.spectator.categories.TeleportToPlayerMenuCategory",
            "XXX.spectator.categories.TeleportToTeamMenuCategory$TeamSelectionItem",
            "XXX.gui.spectator.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$ServerData",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.SilentInitException",
            "XXX.client.map.Map",
            "XXX.client.map.Map$2",
            "XXX.client.map.package-info",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BoatModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColorableAgeableListModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.model.HoglinModel",
            "XXX.client.model.HumanoidHeadModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.OcelotModel",
            "XXX.client.model.ParrotModel",
            "XXX.client.model.ParrotModel$State",
            "XXX.client.model.PigModel",
            "XXX.client.model.PlayerModel",
            "XXX.client.model.PufferfishBigModel",
            "XXX.client.model.PufferfishSmallModel",
            "XXX.client.model.RabbitModel",
            "XXX.client.model.SalmonModel",
            "XXX.client.model.SheepModel",
            "XXX.client.model.ShulkerBulletModel",
            "XXX.client.model.SilverfishModel",
            "XXX.client.model.SkullModel",
            "XXX.client.model.SnowGolemModel",
            "XXX.client.model.SquidModel",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.AbstractArmorLayer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PigSaddleLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.AtlasSet",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlas$Preparations",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureAtlasSprite$InterpolationData",
            "XXX.renderer.texture.Tickable",
            "XXX.client.resources.AssetIndex",
            "XXX.client.resources.ClientPackSource$1",
            "XXX.client.resources.DefaultClientResourcePack",
            "XXX.client.resources.DirectAssetIndex",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PackAdapterV4",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$SkinTextureCallback",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.language.LanguageMetadataSectionSerializer",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.resources.model.package-info",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.ReloadableIdSearchTree",
            "XXX.client.searchtree.ReloadableSearchTree",
            "XXX.client.searchtree.SearchRegistry",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.SuffixArray$1",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.skins.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Floats$Serializer",
            "XXX.commands.arguments.RangeArgument$Ints$Serializer",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.commands.synchronization.ArgumentSerializer",
            "XXX.commands.synchronization.ArgumentTypes$1",
            "XXX.commands.synchronization.EmptyArgumentSerializer",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentSerializer",
            "XXX.synchronization.brigadier.IntegerArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.PropertyValue",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractResourcePack",
            "XXX.server.packs.FolderResourcePack",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPack",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.UnopenedPack",
            "XXX.packs.repository.UnopenedPack$UnopenedPackConstructor",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BlockTags$Wrapper",
            "XXX.minecraft.tags.EntityTypeTags$Wrapper",
            "XXX.minecraft.tags.FluidTags$Wrapper",
            "XXX.minecraft.tags.ItemTags$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$ValuesEntry",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.Deserializer",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.InsensitiveStringMap",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RewindableStream$1",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$1",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$1",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.ShulkerSharedHelper",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.Snooper$1",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.NetherBedDamage",
            "XXX.world.effect.AbsoptionMobEffect",
            "XXX.world.effect.HealthBoostMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgableMob$AgableMobGroupData",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveCallback",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmourEntitySelector",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.entity.ai.Brain",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.BaseAttributeMap",
            "XXX.ai.attributes.ModifiableAttributeMap",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityPosWrapper",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.InteractableDoorsSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinMoveControl",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$1",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$1",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$1",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$1",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.package-info",
            "XXX.entity.boss.BossMob",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.Painting",
            "XXX.entity.fishing.FishingHook",
            "XXX.entity.fishing.package-info",
            "XXX.entity.global.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$1",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$1",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Ravager$RavagerNodeEvaluator",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Vindicator$VindicatorMeleeAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinAngerTargetGoal",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.CarrotOnAStickItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$1",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemPropertyFunction",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$1",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelConflictException",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PortalForcer",
            "XXX.world.level.SpawnData",
            "XXX.world.level.TickNextTickData",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.BadlandsPlateauBiome",
            "XXX.level.biome.BambooJungleHillsBiome",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$BiomeTempCategory",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.BiomeDefaultFeatures",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSourceSettings",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.BirchForestHillsBiome",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.CrimsonForestBiome",
            "XXX.level.biome.DarkForestHillsBiome",
            "XXX.level.biome.DeepFrozenOceanBiome",
            "XXX.level.biome.DeepOceanBiome",
            "XXX.level.biome.DesertBiome",
            "XXX.level.biome.DesertLakesBiome",
            "XXX.level.biome.EndHighlandsBiome",
            "XXX.level.biome.ErodedBadlandsBiome",
            "XXX.level.biome.FixedBiomeSourceSettings",
            "XXX.level.biome.ForestFlowerBiome",
            "XXX.level.biome.FrozenRiverBiome",
            "XXX.level.biome.FuzzyOffsetConstantColumnBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaHillsMutatedBiome",
            "XXX.level.biome.GiantTreeTaigaHillsBiome",
            "XXX.level.biome.IceSpikesBiome",
            "XXX.level.biome.JungleEdgeBiome",
            "XXX.level.biome.LukeWarmOceanBiome",
            "XXX.level.biome.ModifiedGravellyMountainsBiome",
            "XXX.level.biome.ModifiedJungleEdgeBiome",
            "XXX.level.biome.MountainBiome",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MushroomFieldsBiome",
            "XXX.level.biome.NearestNeighborBiomeZoomer",
            "XXX.level.biome.OceanBiome",
            "XXX.level.biome.OverworldBiomeSourceSettings",
            "XXX.level.biome.RiverBiome",
            "XXX.level.biome.SavannaPlateauBiome",
            "XXX.level.biome.ShatteredSavannaPlateauBiome",
            "XXX.level.biome.SnowyBeachBiome",
            "XXX.level.biome.SnowyTaigaBiome",
            "XXX.level.biome.SnowyTaigaMountainsBiome",
            "XXX.level.biome.SoulSandValleyBiome",
            "XXX.level.biome.SunflowerPlainsBiome",
            "XXX.level.biome.SwampHillsBiome",
            "XXX.level.biome.TaigaHillsBiome",
            "XXX.level.biome.TallBirchForestBiome",
            "XXX.level.biome.TheEndBiome",
            "XXX.level.biome.TheEndBiomeSourceSettings",
            "XXX.level.biome.WarmOceanBiome",
            "XXX.level.biome.WoodedBadlandsBiome",
            "XXX.level.biome.WoodedMountainBiome",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.BambooBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BedBlock$1",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.Blocks",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.EnchantmentTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FungusBlock",
            "XXX.level.block.GlassBlock",
            "XXX.level.block.GoldBlock",
            "XXX.level.block.GrassPathBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.GrowingPlantBlock",
            "XXX.level.block.GrowingPlantHeadBlock",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlant",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlant",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructureManager",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.package-info",
            "XXX.levelgen.surfacebuilders.ConfiguredSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ErodedBadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GiantTreeTaigaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.MountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ShatteredSavanaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderConfiguration",
            "XXX.levelgen.surfacebuilders.WoodedBadlandsSurfaceBuilder",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.SurfaceNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$2",
            "XXX.level.lighting.LayerLightEngine",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$1",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.Material",
            "XXX.level.material.MaterialColor",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.newbiome.area.Area",
            "XXX.newbiome.area.LazyArea",
            "XXX.newbiome.context.BigContext",
            "XXX.newbiome.context.LazyAreaContext",
            "XXX.newbiome.layer.AddDeepOceanLayer",
            "XXX.newbiome.layer.AddEdgeLayer$CoolWarm",
            "XXX.newbiome.layer.AddEdgeLayer$IntroduceSpecial",
            "XXX.newbiome.layer.AddMushroomIslandLayer",
            "XXX.newbiome.layer.BiomeEdgeLayer",
            "XXX.newbiome.layer.IslandLayer",
            "XXX.newbiome.layer.Layers",
            "XXX.newbiome.layer.OceanMixerLayer",
            "XXX.newbiome.layer.RareBiomeSpotLayer",
            "XXX.newbiome.layer.RemoveTooMuchOceanLayer",
            "XXX.newbiome.layer.RiverLayer",
            "XXX.newbiome.layer.ShoreLayer",
            "XXX.newbiome.layer.ZoomLayer",
            "XXX.newbiome.layer.package-info",
            "XXX.layer.traits.AreaTransformer1",
            "XXX.layer.traits.BishopTransformer",
            "XXX.layer.traits.C1Transformer",
            "XXX.layer.traits.DimensionOffset0Transformer",
            "XXX.layer.traits.DimensionTransformer",
            "XXX.layer.traits.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.TurtleNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelStorage",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.PlayerIO",
            "XXX.storage.loot.BinomialDistributionGenerator$Serializer",
            "XXX.storage.loot.ConstantIntValue",
            "XXX.storage.loot.IntLimiter",
            "XXX.storage.loot.IntLimiter$Serializer",
            "XXX.storage.loot.LootContext$1",
            "XXX.storage.loot.LootContext$DynamicDrop",
            "XXX.storage.loot.LootContext$EntityTarget$Serializer",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.storage.loot.LootTables",
            "XXX.storage.loot.RandomIntGenerator",
            "XXX.storage.loot.RandomValueBounds",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.DynamicLoot$Serializer",
            "XXX.loot.entries.EmptyLootItem$1",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootItem$Serializer",
            "XXX.loot.entries.LootPoolEntries$Serializer",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryContainer$Serializer",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.LootTableReference$Serializer",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.ApplyExplosionDecay$1",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$DataSource",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LimitCount$1",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunction$Serializer",
            "XXX.loot.functions.LootItemFunctions$Serializer",
            "XXX.loot.functions.LootingEnchantFunction$1",
            "XXX.loot.functions.LootingEnchantFunction$Serializer",
            "XXX.loot.functions.SetAttributesFunction$1",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetAttributesFunction$Serializer",
            "XXX.loot.functions.SetContainerContents$1",
            "XXX.loot.functions.SetContainerContents$Serializer",
            "XXX.loot.functions.SetContainerLootTable$1",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemCountFunction$Serializer",
            "XXX.loot.functions.SetItemDamageFunction$1",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetLoreFunction$Serializer",
            "XXX.loot.functions.SetNameFunction$1",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetNbtFunction$Serializer",
            "XXX.loot.functions.SetStewEffectFunction$1",
            "XXX.loot.functions.SetStewEffectFunction$Serializer",
            "XXX.loot.functions.SmeltItemFunction$1",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$1",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AlternativeLootItemCondition$1",
            "XXX.loot.predicates.AlternativeLootItemCondition$Serializer",
            "XXX.loot.predicates.BonusLevelTableCondition$1",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.DamageSourceCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.InvertedLootItemCondition$Serializer",
            "XXX.loot.predicates.LocationCheck$Serializer",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$1",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceCondition$1",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$Serializer",
            "XXX.loot.predicates.MatchTool$Serializer",
            "XXX.loot.predicates.TimeCheck$1",
            "XXX.loot.predicates.TimeCheck$Serializer",
            "XXX.loot.predicates.WeatherCheck$1",
            "XXX.loot.predicates.WeatherCheck$Serializer",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.IntPointRange",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.WorldRegionIndirectVoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ],
          "removed": [
            "XXX.mojang.math.OctahedralGroup",
            "XXX.mojang.math.Transformation",
            "XXX.mojang.math.Vector3f",
            "XXX.mojang.realmsclient.KeyCombo",
            "XXX.mojang.realmsclient.RealmsMainScreen$1",
            "XXX.mojang.realmsclient.RealmsMainScreen$3",
            "XXX.mojang.realmsclient.RealmsMainScreen$5",
            "XXX.mojang.realmsclient.RealmsMainScreen$Entry",
            "XXX.mojang.realmsclient.RealmsMainScreen$PendingInvitesButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$ServerEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$TrialEntry",
            "XXX.realmsclient.client.FileDownload",
            "XXX.realmsclient.client.FileDownload$DownloadCountingOutputStream",
            "XXX.realmsclient.client.FileDownload$ResourcePackProgressListener",
            "XXX.realmsclient.client.FileUpload$CustomInputStreamEntity",
            "XXX.realmsclient.client.Ping$Region",
            "XXX.realmsclient.client.RealmsClient$CompatibleVersionResponse",
            "XXX.realmsclient.client.RealmsClientConfig",
            "XXX.realmsclient.client.Request",
            "XXX.realmsclient.client.Request$Get",
            "XXX.realmsclient.client.Request$Put",
            "XXX.realmsclient.dto.Backup",
            "XXX.realmsclient.dto.GuardedSerializer",
            "XXX.realmsclient.dto.PendingInvite",
            "XXX.realmsclient.dto.PingResult",
            "XXX.realmsclient.dto.RealmsDescriptionDto",
            "XXX.realmsclient.dto.RealmsServer",
            "XXX.realmsclient.dto.RealmsServer$State",
            "XXX.realmsclient.dto.RealmsServerAddress",
            "XXX.realmsclient.dto.RealmsServerPing",
            "XXX.realmsclient.dto.RealmsServerPlayerLists",
            "XXX.realmsclient.dto.RealmsWorldResetDto",
            "XXX.realmsclient.dto.RegionPingResult",
            "XXX.realmsclient.dto.Subscription$SubscriptionType",
            "XXX.realmsclient.dto.ValueObject",
            "XXX.realmsclient.dto.WorldTemplate",
            "XXX.realmsclient.dto.WorldTemplatePaginatedList",
            "XXX.realmsclient.exception.RealmsHttpException",
            "XXX.realmsclient.exception.RetryCallException",
            "XXX.realmsclient.gui.RealmsDataFetcher$1",
            "XXX.realmsclient.gui.RealmsDataFetcher$PendingInviteUpdateTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$Task",
            "XXX.realmsclient.gui.RealmsDataFetcher$UnreadNewsTask",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Action",
            "XXX.realmsclient.gui.RowButton",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.gui.screens.RealmsBackupScreen$1",
            "XXX.gui.screens.RealmsBackupScreen$Entry",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen$1",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsInviteScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen$Type",
            "XXX.gui.screens.RealmsNotificationsScreen",
            "XXX.gui.screens.RealmsParentalConsentScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$1",
            "XXX.gui.screens.RealmsPendingInvitesScreen$3",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$AcceptRowButton",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionList",
            "XXX.gui.screens.RealmsPlayerScreen$Entry",
            "XXX.gui.screens.RealmsResetNormalWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$1",
            "XXX.gui.screens.RealmsResetWorldScreen$FrameButton",
            "XXX.gui.screens.RealmsResetWorldScreen$ResetWorldInfo",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$WorldSelectionList",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$1",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList",
            "XXX.gui.screens.RealmsSlotOptionsScreen",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen",
            "XXX.gui.screens.RealmsTermsScreen",
            "XXX.gui.screens.UploadResult",
            "XXX.gui.screens.UploadResult$Builder",
            "XXX.realmsclient.util.RealmsPersistence",
            "XXX.realmsclient.util.RealmsTextureManager",
            "XXX.realmsclient.util.RealmsTextureManager$RealmsTexture",
            "XXX.realmsclient.util.RealmsUtil$1",
            "XXX.realmsclient.util.TextRenderingUtils",
            "XXX.realmsclient.util.TextRenderingUtils$LineSegment",
            "XXX.util.task.CloseServerTask",
            "XXX.util.task.DownloadTask",
            "XXX.util.task.LongRunningTask",
            "XXX.util.task.ResettingWorldTask",
            "XXX.util.task.SwitchMinigameTask",
            "XXX.util.task.WorldCreationTask",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.Util$1",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement$1",
            "XXX.minecraft.advancements.AdvancementList",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementRewards$Deserializer",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntityTypePredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate$TypePredicate",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.client.AttackIndicatorStatus",
            "XXX.minecraft.client.Camera",
            "XXX.minecraft.client.ClientRecipeBook",
            "XXX.minecraft.client.CycleOption",
            "XXX.minecraft.client.FullscreenResolutionProgressOption",
            "XXX.minecraft.client.Game$Metrics",
            "XXX.minecraft.client.HotbarManager",
            "XXX.minecraft.client.KeyMapping$1",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$2",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.ProgressOption",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.Timer",
            "XXX.minecraft.client.User",
            "XXX.color.block.BlockColor",
            "XXX.color.block.BlockTintCache",
            "XXX.color.block.BlockTintCache$LatestCacheInfo",
            "XXX.color.item.ItemColor",
            "XXX.color.item.package-info",
            "XXX.client.gui.Gui",
            "XXX.client.gui.MapRenderer",
            "XXX.client.gui.MapRenderer$MapInstance",
            "XXX.gui.chat.NarratorChatListener",
            "XXX.gui.chat.StandardChatListener",
            "XXX.gui.components.AbstractButton",
            "XXX.gui.components.AbstractSelectionList",
            "XXX.gui.components.AbstractSelectionList$Entry",
            "XXX.gui.components.AbstractSliderButton",
            "XXX.gui.components.BossHealthOverlay",
            "XXX.gui.components.Button$OnPress",
            "XXX.gui.components.Checkbox",
            "XXX.gui.components.CommandSuggestions$1",
            "XXX.gui.components.ComponentRenderUtils",
            "XXX.gui.components.ContainerObjectSelectionList$Entry",
            "XXX.gui.components.DebugScreenOverlay$1",
            "XXX.gui.components.ImageButton",
            "XXX.gui.components.LerpingBossEvent$1",
            "XXX.gui.components.LockIconButton$Icon",
            "XXX.gui.components.ObjectSelectionList$Entry",
            "XXX.gui.components.OptionsList",
            "XXX.gui.components.PlayerTabOverlay",
            "XXX.gui.components.PlayerTabOverlay$PlayerInfoComparator",
            "XXX.gui.components.SliderButton",
            "XXX.gui.components.SubtitleOverlay",
            "XXX.gui.components.TickableWidget",
            "XXX.gui.components.Widget",
            "XXX.components.events.ContainerEventHandler",
            "XXX.components.events.package-info",
            "XXX.components.spectator.SpectatorGui",
            "XXX.components.toasts.AdvancementToast",
            "XXX.components.toasts.SystemToast",
            "XXX.components.toasts.Toast",
            "XXX.components.toasts.ToastComponent",
            "XXX.components.toasts.ToastComponent$ToastInstance",
            "XXX.components.toasts.TutorialToast$Icons",
            "XXX.gui.font.AllMissingGlyphProvider",
            "XXX.gui.font.FontManager$1",
            "XXX.gui.font.FontSet",
            "XXX.gui.font.FontTexture$1",
            "XXX.gui.font.TextFieldHelper",
            "XXX.font.glyphs.BakedGlyph$Effect",
            "XXX.font.glyphs.MissingGlyph",
            "XXX.font.glyphs.package-info",
            "XXX.font.providers.BitmapProvider",
            "XXX.font.providers.BitmapProvider$Builder",
            "XXX.font.providers.GlyphProviderBuilder",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Builder",
            "XXX.font.providers.TrueTypeGlyphProviderBuilder",
            "XXX.client.gui.package-info",
            "XXX.gui.screens.AlertScreen",
            "XXX.gui.screens.BackupConfirmScreen$Listener",
            "XXX.gui.screens.ChatScreen",
            "XXX.gui.screens.ConfirmLinkScreen",
            "XXX.gui.screens.ConnectScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList",
            "XXX.gui.screens.CreateFlatWorldScreen",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList",
            "XXX.gui.screens.DeathScreen",
            "XXX.gui.screens.DirectJoinServerScreen",
            "XXX.gui.screens.EditServerScreen",
            "XXX.gui.screens.GenericDirtMessageScreen",
            "XXX.gui.screens.LanguageSelectScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList$Entry",
            "XXX.gui.screens.LoadingOverlay",
            "XXX.gui.screens.MenuScreens",
            "XXX.gui.screens.MouseSettingsScreen",
            "XXX.gui.screens.OptionsSubScreen",
            "XXX.gui.screens.Overlay",
            "XXX.gui.screens.PresetFlatWorldScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList",
            "XXX.gui.screens.ProgressScreen",
            "XXX.gui.screens.Screen",
            "XXX.gui.screens.SkinCustomizationScreen",
            "XXX.gui.screens.TitleScreen",
            "XXX.gui.screens.WinScreen",
            "XXX.screens.achievement.StatsScreen$1",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList$Entry",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemComparator",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList",
            "XXX.screens.achievement.StatsUpdateListener",
            "XXX.screens.advancements.AdvancementTab",
            "XXX.screens.advancements.AdvancementTabType$1",
            "XXX.screens.advancements.AdvancementWidgetType",
            "XXX.screens.advancements.package-info",
            "XXX.screens.controls.ControlList$1",
            "XXX.screens.controls.ControlList$Entry",
            "XXX.screens.controls.ControlList$KeyEntry$1",
            "XXX.screens.controls.ControlsScreen",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen",
            "XXX.screens.inventory.AbstractContainerScreen",
            "XXX.screens.inventory.AnvilScreen",
            "XXX.screens.inventory.BeaconScreen$1",
            "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton",
            "XXX.screens.inventory.BeaconScreen$BeaconScreenButton",
            "XXX.screens.inventory.BlastFurnaceScreen",
            "XXX.screens.inventory.BookEditScreen$Pos2i",
            "XXX.screens.inventory.BookViewScreen$1",
            "XXX.screens.inventory.BookViewScreen$WritableBookAccess",
            "XXX.screens.inventory.BrewingStandScreen",
            "XXX.screens.inventory.CommandBlockEditScreen",
            "XXX.screens.inventory.ContainerScreen",
            "XXX.screens.inventory.CreativeInventoryListener",
            "XXX.screens.inventory.CreativeModeInventoryScreen$CustomCreativeSlot",
            "XXX.screens.inventory.CreativeModeInventoryScreen$SlotWrapper",
            "XXX.screens.inventory.EffectRenderingInventoryScreen",
            "XXX.screens.inventory.EnchantmentScreen",
            "XXX.screens.inventory.GrindstoneScreen",
            "XXX.screens.inventory.HorseInventoryScreen",
            "XXX.screens.inventory.ItemCombinerScreen",
            "XXX.screens.inventory.LecternScreen",
            "XXX.screens.inventory.LoomScreen",
            "XXX.screens.inventory.MerchantScreen",
            "XXX.screens.inventory.MinecartCommandBlockEditScreen",
            "XXX.screens.inventory.ShulkerBoxScreen",
            "XXX.screens.inventory.SmithingScreen",
            "XXX.screens.inventory.StonecutterScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$1",
            "XXX.screens.inventory.package-info",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.gui.screens.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.resourcepacks.entries.package-info",
            "XXX.resourcepacks.lists.ResourcePackList",
            "XXX.resourcepacks.lists.SelectedResourcePackList",
            "XXX.screens.resourcepacks.package-info",
            "XXX.screens.worldselection.CreateWorldScreen",
            "XXX.screens.worldselection.CreateWorldScreen$2",
            "XXX.screens.worldselection.CreateWorldScreen$4",
            "XXX.screens.worldselection.CreateWorldScreen$6",
            "XXX.screens.worldselection.CreateWorldScreen$SelectedGameMode",
            "XXX.screens.worldselection.OptimizeWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList",
            "XXX.screens.worldselection.package-info",
            "XXX.gui.spectator.RootSpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenu$1",
            "XXX.gui.spectator.SpectatorMenu$ScrollMenuItem",
            "XXX.gui.spectator.SpectatorMenuItem",
            "XXX.spectator.categories.SpectatorPage",
            "XXX.spectator.categories.TeleportToTeamMenuCategory",
            "XXX.spectator.categories.package-info",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.Main$3",
            "XXX.client.main.package-info",
            "XXX.client.map.Map$1",
            "XXX.client.map.Map$3",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.ChestedHorseModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColorableListModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.HeadedModel",
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.PandaModel",
            "XXX.client.model.ParrotModel$1",
            "XXX.client.model.PhantomModel",
            "XXX.client.model.PiglinModel",
            "XXX.client.model.PolarBearModel",
            "XXX.client.model.PufferfishMidModel",
            "XXX.client.model.QuadrupedModel",
            "XXX.client.model.RavagerModel",
            "XXX.client.model.SheepFurModel",
            "XXX.client.model.ShieldModel",
            "XXX.client.model.ShulkerModel",
            "XXX.client.model.SkeletonModel",
            "XXX.client.model.SlimeModel",
            "XXX.client.model.SpiderModel",
            "XXX.client.model.StriderModel",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.LayeredTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Info",
            "XXX.renderer.texture.TextureManager",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.ClientPackSource$2",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.LegacyResourcePackAdapter",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SplashManager",
            "XXX.client.resources.UnopenedResourcePack",
            "XXX.resources.language.Language",
            "XXX.resources.language.Locale",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.WeightedBakedModel$WeightedModel",
            "XXX.client.resources.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.MutableSearchTree",
            "XXX.client.searchtree.ReloadableIdSearchTree$IntersectionIterator",
            "XXX.client.searchtree.ReloadableSearchTree$MergingUniqueIterator",
            "XXX.client.searchtree.SearchRegistry$Key",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.LoopingAudioStream$1",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.MusicManager$Music",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionTypeArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$ListElementFunction",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.RangeArgument$Serializer",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypes",
            "XXX.commands.synchronization.ArgumentTypes$Entry",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.BrigadierArgumentSerializers",
            "XXX.synchronization.brigadier.FloatArgumentSerializer",
            "XXX.synchronization.brigadier.LongArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.core.dispenser.DispenseItemBehavior$23",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.package-info",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquippedItemPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.NarrationHelper",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServer$2",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DerivedServerLevel",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FileResourcePack",
            "XXX.server.packs.Pack",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.repository.UnopenedPack$Position",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$2",
            "XXX.server.players.GameProfileCache$Serializer",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SynchronizableTagCollection",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagManager$Preparations",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.FrameTimer",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.IntRange",
            "XXX.minecraft.util.LimitedCapacityList",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.RewindableStream",
            "XXX.minecraft.util.Serializable",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.OminousBannerRenameFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.Snooper",
            "XXX.minecraft.world.SnooperPopulator",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttackDamageMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.MobEffects$1",
            "XXX.world.entity.AgableMob",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.BaseAttribute",
            "XXX.ai.attributes.ModifiableAttributeInstance",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosWrapper",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior$1",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PositionWrapper",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunIf",
            "XXX.ai.behavior.RunSometimes",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.DolphinLookControl",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillage",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTemptGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.ArmorStand$1",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.ItemFrame$1",
            "XXX.entity.decoration.Motive",
            "XXX.entity.decoration.package-info",
            "XXX.entity.fishing.FishingHook$1",
            "XXX.entity.fishing.FishingHook$OpenWaterType",
            "XXX.entity.global.LightningBolt",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$1",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$1",
            "XXX.entity.monster.Ravager$RavagerNavigation",
            "XXX.entity.monster.SharedMonsterAttributes",
            "XXX.entity.monster.Shulker$1",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGroupData",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinHurtByOtherGoal",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin$PiglinArmPose",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileWeaponItem$Type",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkTickList",
            "XXX.world.level.ChunkTickList$ScheduledTick",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.CollisionGetter$1",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.Explosion",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelType",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.ServerTickList",
            "XXX.world.level.TickList",
            "XXX.world.level.TickPriority",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.BadlandsBiome",
            "XXX.level.biome.BambooJungleBiome",
            "XXX.level.biome.BeachBiome",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$BiomeCategory",
            "XXX.level.biome.Biome$ClimateParameters",
            "XXX.level.biome.Biome$SpawnerData",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSourceType",
            "XXX.level.biome.BiomeSpecialEffects$1",
            "XXX.level.biome.BiomeZoomer",
            "XXX.level.biome.BirchForestBiome",
            "XXX.level.biome.CheckerboardBiomeSourceSettings",
            "XXX.level.biome.ColdOceanBiome",
            "XXX.level.biome.DarkForestBiome",
            "XXX.level.biome.DeepColdOceanBiome",
            "XXX.level.biome.DeepLukeWarmOceanBiome",
            "XXX.level.biome.DeepWarmOceanBiome",
            "XXX.level.biome.DesertHillsBiome",
            "XXX.level.biome.EndBarrensBiome",
            "XXX.level.biome.EndMidlandsBiome",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.ForestBiome",
            "XXX.level.biome.FrozenOceanBiome",
            "XXX.level.biome.FuzzyOffsetBiomeZoomer",
            "XXX.level.biome.GiantSpruceTaigaBiome",
            "XXX.level.biome.GiantTreeTaigaBiome",
            "XXX.level.biome.GravellyMountainsBiome",
            "XXX.level.biome.JungleBiome",
            "XXX.level.biome.JungleHillsBiome",
            "XXX.level.biome.ModifiedBadlandsPlateauBiome",
            "XXX.level.biome.ModifiedJungleBiome",
            "XXX.level.biome.ModifiedWoodedBadlandsPlateauBiome",
            "XXX.level.biome.MountainEdgeBiome",
            "XXX.level.biome.MultiNoiseBiomeSourceSettings",
            "XXX.level.biome.MushroomFieldsShoreBiome",
            "XXX.level.biome.NetherWastesBiome",
            "XXX.level.biome.OverworldBiomeSource",
            "XXX.level.biome.PlainsBiome",
            "XXX.level.biome.SavannaBiome",
            "XXX.level.biome.ShatteredSavannaBiome",
            "XXX.level.biome.SmallEndIslandsBiome",
            "XXX.level.biome.SnowyMountainsBiome",
            "XXX.level.biome.SnowyTaigaHillsBiome",
            "XXX.level.biome.SnowyTundraBiome",
            "XXX.level.biome.StoneShoreBiome",
            "XXX.level.biome.SwampBiome",
            "XXX.level.biome.TaigaBiome",
            "XXX.level.biome.TaigaMountainsBiome",
            "XXX.level.biome.TallBirchHillsBiome",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.biome.TheVoidBiome",
            "XXX.level.biome.WarpedForestBiome",
            "XXX.level.biome.WoodedHillsBiome",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractGlassBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$BlockStatePairKey",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BushBlock",
            "XXX.level.block.ButtonBlock$1",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.CryingObsidianBlock",
            "XXX.level.block.DeadBushBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EndRodBlock$1",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GravelBlock",
            "XXX.level.block.GrindstoneBlock$1",
            "XXX.level.block.GrowingPlantBodyBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.Lantern",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShearableDoublePlantBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVines",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeepingVines",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.LinearPosTest",
            "XXX.structure.templatesystem.PosAlwaysTrueTest",
            "XXX.structure.templatesystem.PosRuleTestType",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.FrozenOceanSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GravellyMountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherForestSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NopeSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SoulSandValleySurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderBaseConfiguration",
            "XXX.levelgen.surfacebuilders.SwampSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.package-info",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.FlatDataLayer",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage$1",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.FluidStateImpl",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.Material$Builder",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.newbiome.area.AreaFactory",
            "XXX.newbiome.area.package-info",
            "XXX.newbiome.context.Context",
            "XXX.newbiome.context.package-info",
            "XXX.newbiome.layer.AddEdgeLayer",
            "XXX.newbiome.layer.AddEdgeLayer$HeatIce",
            "XXX.newbiome.layer.AddIslandLayer",
            "XXX.newbiome.layer.AddSnowLayer",
            "XXX.newbiome.layer.BiomeInitLayer",
            "XXX.newbiome.layer.Layer",
            "XXX.newbiome.layer.OceanLayer",
            "XXX.newbiome.layer.RareBiomeLargeLayer",
            "XXX.newbiome.layer.RegionHillsLayer",
            "XXX.newbiome.layer.RiverInitLayer",
            "XXX.newbiome.layer.RiverMixerLayer",
            "XXX.newbiome.layer.SmoothLayer",
            "XXX.newbiome.layer.ZoomLayer$1",
            "XXX.layer.traits.AreaTransformer0",
            "XXX.layer.traits.AreaTransformer2",
            "XXX.layer.traits.C0Transformer",
            "XXX.layer.traits.CastleTransformer",
            "XXX.layer.traits.DimensionOffset1Transformer",
            "XXX.layer.traits.PixelTransformer",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SaveDataDirtyRunnable",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$1",
            "XXX.level.storage.McRegionUpgrader",
            "XXX.storage.loot.BinomialDistributionGenerator",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ConstantIntValue$Serializer",
            "XXX.storage.loot.IntLimiter$1",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootPool$1",
            "XXX.storage.loot.LootPool$Serializer",
            "XXX.storage.loot.LootTable$1",
            "XXX.storage.loot.LootTable$Serializer",
            "XXX.storage.loot.PredicateManager",
            "XXX.storage.loot.RandomIntGenerators",
            "XXX.storage.loot.RandomValueBounds$Serializer",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$1",
            "XXX.loot.entries.CompositeEntryBase$Serializer",
            "XXX.loot.entries.DynamicLoot$1",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EmptyLootItem$Serializer",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootItem$1",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootPoolSingletonContainer$Serializer",
            "XXX.loot.entries.LootTableReference$1",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.TagEntry$Serializer",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaDeserializer",
            "XXX.loot.functions.ApplyBonusCount$Serializer",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.ApplyExplosionDecay$Serializer",
            "XXX.loot.functions.CopyBlockState$1",
            "XXX.loot.functions.CopyBlockState$Serializer",
            "XXX.loot.functions.CopyNameFunction$1",
            "XXX.loot.functions.CopyNameFunction$Serializer",
            "XXX.loot.functions.CopyNbtFunction$1",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Serializer",
            "XXX.loot.functions.EnchantRandomlyFunction$1",
            "XXX.loot.functions.EnchantRandomlyFunction$Serializer",
            "XXX.loot.functions.EnchantWithLevelsFunction$1",
            "XXX.loot.functions.EnchantWithLevelsFunction$Serializer",
            "XXX.loot.functions.ExplorationMapFunction$1",
            "XXX.loot.functions.ExplorationMapFunction$Serializer",
            "XXX.loot.functions.FillPlayerHead$Serializer",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LimitCount$Serializer",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemConditionalFunction$Serializer",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetContainerLootTable$Serializer",
            "XXX.loot.functions.SetItemCountFunction$1",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetItemDamageFunction$Serializer",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetNameFunction$Serializer",
            "XXX.loot.functions.SetNbtFunction$1",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.SmeltItemFunction$Serializer",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AlternativeLootItemCondition",
            "XXX.loot.predicates.AlternativeLootItemCondition$Builder",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.BonusLevelTableCondition$Serializer",
            "XXX.loot.predicates.ConditionReference$Serializer",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.DamageSourceCondition$Serializer",
            "XXX.loot.predicates.EntityHasScoreCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition$Serializer",
            "XXX.loot.predicates.ExplosionCondition$Serializer",
            "XXX.loot.predicates.InvertedLootItemCondition$1",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemCondition$Serializer",
            "XXX.loot.predicates.LootItemConditions$Serializer",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$1",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$1",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.loot.predicates.package-info",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.PosAndRot",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.math.Matrix3f \u001b[2;32m+1M\u001b[0m",
          "XXX.datafix.fixes.ItemStackUUIDFix \u001b[2;32m+8M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.world.item.CompassItem \u001b[2;32m+16M\u001b[0m",
          "XXX.world.item.DiggerItem \u001b[2;32m+1M\u001b[0m",
          "XXX.block.entity.JukeboxBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.ShulkerBoxBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.SkullBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.SpawnerBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.StructureBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+1P\u001b[0m",
          "XXX.level.chunk.ProtoTickList \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.structures.EmptyPoolElement \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.ListPoolElement \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.StructurePoolElement \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.structure.DesertPyramidPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.JunglePyramidPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$StairsRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$FillerCorridor \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$LeftTurn \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$PrisonHall \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$RoomCrossing \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$StairsDown \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StrongholdPieces$Straight \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.SwamplandHutPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Matrix3f",
        "differences": {
          "added": [],
          "removed": [
            "void set(int,int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.datafix.fixes.ItemStackUUIDFix",
        "differences": {
          "added": [
            "Typed lambda$makeRule$4(OpticFinder,Typed)",
            "Typed lambda$null$3(Typed)",
            "Dynamic lambda$null$2(Dynamic)",
            "Dynamic lambda$null$1(Dynamic)"
          ],
          "removed": [
            "Dynamic updateAttributeModifiers(Dynamic)",
            "Dynamic updateSkullOwner(Dynamic)",
            "Dynamic lambda$updateSkullOwner$6(Dynamic)",
            "Dynamic lambda$updateAttributeModifiers$5(Dynamic,Dynamic)",
            "Dynamic lambda$null$4(Dynamic)",
            "Typed lambda$makeRule$3(OpticFinder,Typed)",
            "Typed lambda$null$2(Typed,OpticFinder,Typed)",
            "Dynamic lambda$null$1(Typed,OpticFinder,Dynamic)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.CompassItem",
        "differences": {
          "added": [],
          "removed": [
            "boolean hasLodestoneData(CompoundTag)",
            "boolean isLodestoneCompass(ItemStack)",
            "boolean isFoil(ItemStack)",
            "Optional getLodestoneDimension(CompoundTag)",
            "BlockPos getSpawnPosition(Level)",
            "BlockPos getLodestonePosition(Level,CompoundTag)",
            "double getFrameRotation(ItemFrame)",
            "double getAngleTo(Vec3,Entity)",
            "void inventoryTick(ItemStack,Level,Entity,int,boolean)",
            "InteractionResult useOn(UseOnContext)",
            "String getDescriptionId(ItemStack)",
            "boolean access$000(CompoundTag)",
            "BlockPos access$100(CompassItem,Level,CompoundTag)",
            "BlockPos access$200(CompassItem,Level)",
            "double access$300(ItemFrame)",
            "double access$400(Vec3,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.DiggerItem",
        "differences": {
          "added": [],
          "removed": [
            "float getAttackDamage()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.JukeboxBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.SkullBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.SpawnerBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.StructureBlockEntity",
        "differences": {
          "added": [
            "void load(CompoundTag)"
          ],
          "removed": [
            "void load(BlockState,CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.ProtoTickList",
        "differences": {
          "added": [
            "void addAll(Stream)",
            "void lambda$addAll$0(TickNextTickData)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.EmptyPoolElement",
        "differences": {
          "added": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,Rotation,BoundingBox,Random)"
          ],
          "removed": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,BlockPos,Rotation,BoundingBox,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.ListPoolElement",
        "differences": {
          "added": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,Rotation,BoundingBox,Random)"
          ],
          "removed": [
            "boolean place(StructureManager,LevelAccessor,ChunkGenerator,BlockPos,BlockPos,Rotation,BoundingBox,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.DesertPyramidPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.JunglePyramidPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftCorridor",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftStairs",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleEntrance",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$MonsterThrone",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$StairsRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$FillerCorridor",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$LeftTurn",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$PrisonHall",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$RoomCrossing",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$StairsDown",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StrongholdPieces$Straight",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.SwamplandHutPiece",
        "differences": {
          "added": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "boolean postProcess(LevelAccessor,ChunkGenerator,Random,BoundingBox,ChunkPos,BlockPos)"
          ]
        }
      }
    }
  ]
}