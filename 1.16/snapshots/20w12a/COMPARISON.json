{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "20w11a",
        "currentLabel": "20w12a",
        "values": [
          {
            "key": "World version",
            "previous": "2513",
            "current": "2515"
          },
          {
            "key": "Protocol version",
            "previous": "706",
            "current": "707"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "20w11a",
        "currentLabel": "20w12a",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:polished_basalt",
            "minecraft:respawn_anchor"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:polished_basalt",
            "minecraft:respawn_anchor"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "particle_type",
        "differences": {
          "added": [
            "minecraft:reverse_portal"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:block.respawn_anchor.ambient",
            "minecraft:block.respawn_anchor.charge",
            "minecraft:block.respawn_anchor.deplete",
            "minecraft:block.respawn_anchor.set_spawn"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_with_drop.json",
        "differences": {
          "added": [
            "minecraft:polished_basalt",
            "minecraft:respawn_anchor"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:polished_basalt",
            "minecraft:respawn_anchor"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:polished_basalt",
            "minecraft:respawn_anchor"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/particle_type.json",
        "differences": {
          "added": [
            "minecraft:reverse_portal"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:block.respawn_anchor.ambient",
            "minecraft:block.respawn_anchor.charge",
            "minecraft:block.respawn_anchor.deplete",
            "minecraft:block.respawn_anchor.set_spawn"
          ],
          "removed": []
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "polished_basalt.json",
            "respawn_anchor.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "entries",
      "value": {
        "name": "🗒️ List",
        "differences": {
          "added": [
            "polished_basalt.json",
            "respawn_anchor.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "acacia_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "birch_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "crimson_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "dark_oak_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "jungle_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "netherite_ingot.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> netherite_ingot"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "oak_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "spruce_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "warped_sign.json",
        "lines": [
          "\u001b[1;2mGroup:\u001b[0m none -> sign"
        ]
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "block.minecraft.respawn_anchor: Respawn Anchor",
            "block.minecraft.spawn.not_valid: Your have no home bed or respawn anchor, or it was obstructed",
            "block.minecraft.set_spawn: Respawn point set",
            "block.minecraft.polished_basalt: Polished Basalt",
            "subtitles.block.respawn_anchor.charge: Respawn anchor is charged",
            "subtitles.block.respawn_anchor.deplete: Respawn anchor depletes",
            "subtitles.block.respawn_anchor.set_spawn: Respawn anchor sets spawn",
            "subtitles.block.respawn_anchor.ambient: Portal whooshes"
          ],
          "removed": [
            "block.minecraft.bed.not_valid: Your home bed was missing or obstructed",
            "block.minecraft.bed.set_spawn: Respawn point set",
            "death.fell.accident.water: %1$s fell out of the water"
          ]
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "advancements.adventure.sleep_in_bed.description",
            "previous": "Change your respawn point",
            "current": "Sleep in a bed to change your respawn point"
          },
          {
            "key": "commands.spawnpoint.success.single",
            "previous": "Set spawn point to %s, %s, %s for %s",
            "current": "Set spawn point to %s, %s, %s in %s for %s"
          },
          {
            "key": "commands.spawnpoint.success.multiple",
            "previous": "Set spawn point to %s, %s, %s for %s players",
            "current": "Set spawn point to %s, %s, %s in %s for %s players"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/recipes/building_blocks/polished_basalt.json",
            "minecraft/advancements/recipes/decorations/respawn_anchor.json",
            "minecraft/loot_tables/blocks/polished_basalt.json",
            "minecraft/loot_tables/blocks/respawn_anchor.json",
            "minecraft/recipes/polished_basalt.json",
            "minecraft/recipes/respawn_anchor.json",
            "minecraft/tags/blocks/soul_fire_base_blocks.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/polished_basalt.json",
            "minecraft/blockstates/respawn_anchor.json",
            "minecraft/models/block/polished_basalt.json",
            "minecraft/models/block/respawn_anchor_0.json",
            "minecraft/models/block/respawn_anchor_1.json",
            "minecraft/models/block/respawn_anchor_2.json",
            "minecraft/models/block/respawn_anchor_3.json",
            "minecraft/models/block/respawn_anchor_4.json",
            "minecraft/models/item/polished_basalt.json",
            "minecraft/models/item/respawn_anchor.json",
            "minecraft/particles/reverse_portal.json",
            "minecraft/textures/block/polished_basalt_side.png",
            "minecraft/textures/block/polished_basalt_top.png",
            "minecraft/textures/block/respawn_anchor_bottom.png",
            "minecraft/textures/block/respawn_anchor_side0.png",
            "minecraft/textures/block/respawn_anchor_side1.png",
            "minecraft/textures/block/respawn_anchor_side2.png",
            "minecraft/textures/block/respawn_anchor_side3.png",
            "minecraft/textures/block/respawn_anchor_side4.png",
            "minecraft/textures/block/respawn_anchor_top.png",
            "minecraft/textures/block/respawn_anchor_top.png.mcmeta",
            "minecraft/textures/block/respawn_anchor_top_off.png"
          ],
          "removed": []
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionTypeArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$ListElementFunction",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.RangeArgument$Serializer",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypes",
            "XXX.commands.synchronization.ArgumentTypes$Entry",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.BrigadierArgumentSerializers",
            "XXX.synchronization.brigadier.FloatArgumentSerializer",
            "XXX.synchronization.brigadier.LongArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.Location",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.SerializableBoolean",
            "XXX.minecraft.core.SerializableUUID",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.dispenser.AbstractProjectileDispenseBehavior",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$17",
            "XXX.core.dispenser.DispenseItemBehavior$19",
            "XXX.core.dispenser.DispenseItemBehavior$20",
            "XXX.core.dispenser.DispenseItemBehavior$22",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.package-info",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServer$2",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DerivedServerLevel",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FileResourcePack",
            "XXX.server.packs.Pack",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.repository.UnopenedPack$Position",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$2",
            "XXX.server.players.GameProfileCache$Serializer",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SynchronizableTagCollection",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagManager$Preparations",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.FrameTimer",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.IntRange",
            "XXX.minecraft.util.LimitedCapacityList",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.RewindableStream",
            "XXX.minecraft.util.Serializable",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.OminousBannerRenameFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.entity.monster.Zombie$1",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinHurtByOtherGoal",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin$PiglinArmPose",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ClockItem$1",
            "XXX.world.item.CompassItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$10",
            "XXX.world.item.CreativeModeTab$12",
            "XXX.world.item.CreativeModeTab$3",
            "XXX.world.item.CreativeModeTab$5",
            "XXX.world.item.CreativeModeTab$7",
            "XXX.world.item.CreativeModeTab$9",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DirectionalPlaceContext",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.DyeableHorseArmorItem",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileWeaponItem$Type",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkTickList",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.CollisionGetter$1",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.Explosion",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelType",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$3",
            "XXX.level.block.Block$OffsetType",
            "XXX.level.block.LogBlock",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.block.state.BlockState$1"
          ],
          "removed": [
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Floats$Serializer",
            "XXX.commands.arguments.RangeArgument$Ints$Serializer",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.commands.synchronization.ArgumentSerializer",
            "XXX.commands.synchronization.ArgumentTypes$1",
            "XXX.commands.synchronization.EmptyArgumentSerializer",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentSerializer",
            "XXX.synchronization.brigadier.IntegerArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LocatableSource",
            "XXX.minecraft.core.MapFiller",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.SerializableLong",
            "XXX.minecraft.core.Source",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$16",
            "XXX.core.dispenser.DispenseItemBehavior$18",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$21",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.PropertyValue",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractResourcePack",
            "XXX.server.packs.FolderResourcePack",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPack",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.UnopenedPack",
            "XXX.packs.repository.UnopenedPack$UnopenedPackConstructor",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BlockTags$Wrapper",
            "XXX.minecraft.tags.EntityTypeTags$Wrapper",
            "XXX.minecraft.tags.FluidTags$Wrapper",
            "XXX.minecraft.tags.ItemTags$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$ValuesEntry",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.Deserializer",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.InsensitiveStringMap",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RewindableStream$1",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$1",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinAngerTargetGoal",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.CarrotOnAStickItem",
            "XXX.world.item.ClockItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$11",
            "XXX.world.item.CreativeModeTab$2",
            "XXX.world.item.CreativeModeTab$4",
            "XXX.world.item.CreativeModeTab$6",
            "XXX.world.item.CreativeModeTab$8",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DirectionalPlaceContext$1",
            "XXX.world.item.DyeColor",
            "XXX.world.item.DyeableArmorItem",
            "XXX.world.item.DyeableLeatherItem",
            "XXX.world.item.ElytraItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishBucketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$1",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemPropertyFunction",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$1",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelConflictException",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NoiseColumn",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.world.entity.Entity \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.AnimalMakeLove \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.BehaviorUtils \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.ai.behavior.GoToCelebrateLocation \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.GoToWantedItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.InsideBrownianWalk \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.LocateHidingPlace \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.LookAndFollowTradingPlayerSink \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.MoveToSkySeeingSpot \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.RandomStroll \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetClosestHomeAsWalkTarget \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetWalkTargetFromLookTarget \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.StrollToPoiList \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.VillageBoundRandomStroll \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.fishing.FishingHook \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.biome.Biome \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.biome.BiomeSpecialEffects \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.biome.BiomeSpecialEffects$Builder \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.block.AbstractBannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AbstractFurnaceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.AbstractSkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AnvilBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.level.block.BambooBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.BannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BarrierBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.BaseCoralPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseCoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BeaconBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+52M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.BrewingStandBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ButtonBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.CactusBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CampfireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.CartographyTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CauldronBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChorusPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ComparatorBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ConduitBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CoralFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CropBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DaylightDetectorBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DetectorRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DiodeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DispenserBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DragonEggBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.EnchantmentTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndPortalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndRodBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EnderChestBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FaceAttachedHorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FallingBlock \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.level.block.FenceBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FletchingTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FlowerPotBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FungusBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GlassBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GoldBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrassPathBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.GrindstoneBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantHeadBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HayBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HopperBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.IceBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.IronBarsBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.JukeboxBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.KelpPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LeavesBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.LeverBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LiquidBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.RotatedPillarBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SandBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.ScaffoldingBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Seagrass \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ShulkerBoxBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.SignBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SmithingTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SnowLayerBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.SnowyDirtBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SoulSandBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.level.block.SpawnerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SpreadingSnowyDirtBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.StainedGlassPaneBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StemBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.StoneButtonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StructureBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StructureVoidBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SweetBerryBushBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TallGrassBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TargetBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TorchBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TripWireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TripWireHookBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TurtleEggBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TwistingVinesPlant \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallSignBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallTorchBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WebBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WeepingVinesPlant \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WetSpongeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WitherSkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WoodButtonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.piston.MovingPistonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+1P\u001b[0m",
          "XXX.level.chunk.ChunkGenerator \u001b[2;32m+1P\u001b[0m",
          "XXX.level.levelgen.FlatLevelSource \u001b[2;32m+1M\u001b[0m",
          "XXX.level.levelgen.NoiseBasedChunkGenerator \u001b[2;32m+3M\u001b[0m",
          "XXX.levelgen.feature.NetherForestVegetationFeature \u001b[2;32m+1M\u001b[0m",
          "XXX.loot.functions.EnchantRandomlyFunction \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.Entity",
        "differences": {
          "added": [
            "double getDismountTargetFloorHeight(Level,BlockPos,CollisionContext)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.AnimalMakeLove",
        "differences": {
          "added": [
            "void <init>(EntityType)"
          ],
          "removed": [
            "void <init>(EntityType,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.BehaviorUtils",
        "differences": {
          "added": [
            "void lockGazeAndWalkToEachOther(LivingEntity,LivingEntity)",
            "void setWalkAndLookTargetMemoriesToEachOther(LivingEntity,LivingEntity)",
            "void setWalkAndLookTargetMemories(LivingEntity,Entity,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,BlockPos,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,PositionWrapper,int)"
          ],
          "removed": [
            "void lockGazeAndWalkToEachOther(LivingEntity,LivingEntity,float)",
            "void setWalkAndLookTargetMemoriesToEachOther(LivingEntity,LivingEntity,float)",
            "void setWalkAndLookTargetMemories(LivingEntity,Entity,float,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,BlockPos,float,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,PositionWrapper,float,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.GoToCelebrateLocation",
        "differences": {
          "added": [
            "void <init>(int)"
          ],
          "removed": [
            "void <init>(int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.GoToWantedItem",
        "differences": {
          "added": [
            "void <init>(int,boolean)",
            "void <init>(Predicate,int,boolean)"
          ],
          "removed": [
            "void <init>(float,boolean,int)",
            "void <init>(Predicate,float,boolean,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.fishing.FishingHook",
        "differences": {
          "added": [],
          "removed": [
            "boolean calculateOpenWater(BlockPos)",
            "boolean validOpenWaterBlockAt(BlockPos)",
            "boolean isOpenWaterFishing()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Biome",
        "differences": {
          "added": [
            "Optional getAmbientLoopSoundEvent()",
            "Optional getAmbientMoodSoundEvent()",
            "Optional getAmbientAdditionsSoundEvent()"
          ],
          "removed": [
            "Optional getAmbientLoop()",
            "Optional getAmbientMood()",
            "Optional getAmbientAdditions()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSpecialEffects",
        "differences": {
          "added": [
            "Optional getAmbientMoodSoundEvent()",
            "Optional getAmbientAdditionsSoundEvent()"
          ],
          "removed": [
            "Optional getAmbientMoodSettings()",
            "Optional getAmbientAdditionsSettings()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder",
        "differences": {
          "added": [
            "BiomeSpecialEffects$Builder ambientMoodSound(SoundEvent)",
            "BiomeSpecialEffects$Builder ambientAdditionsSound(SoundEvent)"
          ],
          "removed": [
            "BiomeSpecialEffects$Builder ambientMoodSound(AmbientMoodSettings)",
            "BiomeSpecialEffects$Builder ambientAdditionsSound(AmbientAdditionsSettings)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractBannerBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractFurnaceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getLightEmission(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractSkullBlock",
        "differences": {
          "added": [
            "void <init>(SkullBlock$Type,Block$Properties)"
          ],
          "removed": [
            "void <init>(SkullBlock$Type,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AnvilBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void onLand(Level,BlockPos,BlockState,BlockState)",
            "void onBroken(Level,BlockPos)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void onLand(Level,BlockPos,BlockState,BlockState,FallingBlockEntity)",
            "void onBroken(Level,BlockPos,FallingBlockEntity)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BambooBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "Block$OffsetType getOffsetType()"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "BlockBehaviour$OffsetType getOffsetType()",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BannerBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BarrierBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralWallFanBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseFireBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,float)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseRailBlock",
        "differences": {
          "added": [
            "void <init>(boolean,Block$Properties)"
          ],
          "removed": [
            "void <init>(boolean,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BeaconBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Blocks",
        "differences": {
          "added": [
            "ConfiguredFeature lambda$static$2()",
            "ConfiguredFeature lambda$static$1()",
            "BlockEntityType lambda$static$0()"
          ],
          "removed": [
            "ToIntFunction litBlockEmission(int)",
            "Boolean never(BlockState,BlockGetter,BlockPos,EntityType)",
            "Boolean always(BlockState,BlockGetter,BlockPos,EntityType)",
            "Boolean ocelotOrParrot(BlockState,BlockGetter,BlockPos,EntityType)",
            "BedBlock bed(DyeColor)",
            "RotatedPillarBlock log(MaterialColor,MaterialColor)",
            "Block stem(MaterialColor)",
            "boolean always(BlockState,BlockGetter,BlockPos)",
            "boolean never(BlockState,BlockGetter,BlockPos)",
            "StainedGlassBlock stainedGlass(DyeColor)",
            "LeavesBlock leaves()",
            "ShulkerBoxBlock shulkerBox(DyeColor,BlockBehaviour$Properties)",
            "PistonBaseBlock pistonBase(boolean)",
            "int lambda$static$38(BlockState)",
            "int lambda$static$37(BlockState)",
            "int lambda$static$36(BlockState)",
            "ConfiguredFeature lambda$static$35()",
            "ConfiguredFeature lambda$static$34()",
            "int lambda$static$33(BlockState)",
            "int lambda$static$32(BlockState)",
            "int lambda$static$31(BlockState)",
            "int lambda$static$30(BlockState)",
            "boolean lambda$static$29(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$28(BlockState)",
            "boolean lambda$static$27(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$26(BlockState)",
            "int lambda$static$25(BlockState)",
            "int lambda$static$24(BlockState)",
            "int lambda$static$23(BlockState)",
            "int lambda$static$22(BlockState)",
            "int lambda$static$21(BlockState)",
            "int lambda$static$20(BlockState)",
            "int lambda$static$19(BlockState)",
            "int lambda$static$18(BlockState)",
            "int lambda$static$17(BlockState)",
            "int lambda$static$16(BlockState)",
            "int lambda$static$15(BlockState)",
            "int lambda$static$14(BlockState)",
            "int lambda$static$13(BlockState)",
            "boolean lambda$static$12(BlockState,BlockGetter,BlockPos,EntityType)",
            "BlockEntityType lambda$static$11()",
            "int lambda$static$10(BlockState)",
            "int lambda$static$9(BlockState)",
            "int lambda$static$8(BlockState)",
            "int lambda$static$7(BlockState)",
            "int lambda$static$6(BlockState)",
            "int lambda$static$5(BlockState)",
            "boolean lambda$pistonBase$4(BlockState,BlockGetter,BlockPos)",
            "MaterialColor lambda$stem$3(MaterialColor,BlockState)",
            "MaterialColor lambda$log$2(MaterialColor,MaterialColor,BlockState)",
            "MaterialColor lambda$bed$1(DyeColor,BlockState)",
            "int lambda$litBlockEmission$0(int,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BrewingStandBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ButtonBlock",
        "differences": {
          "added": [
            "void <init>(boolean,Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(boolean,BlockBehaviour$Properties)",
            "int getPressDuration()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CactusBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CampfireBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getLightEmission(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CartographyTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CauldronBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChorusPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ComparatorBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ConduitBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CoralFanBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CoralWallFanBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CropBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DaylightDetectorBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DetectorRailBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DiodeBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DispenserBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DragonEggBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "int getDelayAfterPlace()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnchantmentTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndPortalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndRodBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnderChestBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FallingBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)",
            "void onLand(Level,BlockPos,BlockState,BlockState)",
            "void onBroken(Level,BlockPos)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "int getDelayAfterPlace()",
            "void onLand(Level,BlockPos,BlockState,BlockState,FallingBlockEntity)",
            "void onBroken(Level,BlockPos,FallingBlockEntity)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FenceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FletchingTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FlowerPotBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FungusBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Supplier)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Supplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GlassBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GoldBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrassPathBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isViewBlocking(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrindstoneBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Direction,VoxelShape,boolean)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Direction,VoxelShape,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantHeadBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Direction,VoxelShape,boolean,double)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Direction,VoxelShape,boolean,double)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HayBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HopperBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HorizontalDirectionalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.IceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.IronBarsBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.JukeboxBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.KelpPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LeavesBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LeverBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LiquidBlock",
        "differences": {
          "added": [
            "void <init>(FlowingFluid,Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(FlowingFluid,BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.RotatedPillarBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SandBlock",
        "differences": {
          "added": [
            "void <init>(int,Block$Properties)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(int,BlockBehaviour$Properties)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ScaffoldingBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Seagrass",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ShulkerBoxBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SignBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,WoodType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,WoodType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SkullBlock",
        "differences": {
          "added": [
            "void <init>(SkullBlock$Type,Block$Properties)"
          ],
          "removed": [
            "void <init>(SkullBlock$Type,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SmithingTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SnowLayerBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SnowyDirtBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SoulSandBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void neighborChanged(BlockState,Level,BlockPos,Block,BlockPos,boolean)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)",
            "int getTickDelay(LevelReader)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)",
            "boolean isViewBlocking(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "BlockState updateShape(BlockState,Direction,BlockState,LevelAccessor,BlockPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SpawnerBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SpreadingSnowyDirtBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StainedGlassPaneBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StemBlock",
        "differences": {
          "added": [
            "void <init>(StemGrownBlock,Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(StemGrownBlock,BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StoneButtonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StructureBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StructureVoidBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SweetBerryBushBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TallGrassBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "Block$OffsetType getOffsetType()"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "BlockBehaviour$OffsetType getOffsetType()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TargetBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TorchBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,ParticleOptions)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,ParticleOptions)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TripWireBlock",
        "differences": {
          "added": [
            "void <init>(TripWireHookBlock,Block$Properties)"
          ],
          "removed": [
            "void <init>(TripWireHookBlock,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TripWireHookBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TurtleEggBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TwistingVinesPlant",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallSignBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,WoodType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,WoodType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallTorchBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,ParticleOptions)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,ParticleOptions)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WebBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WeepingVinesPlant",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WetSpongeBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WitherSkullBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WoodButtonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.MovingPistonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.FlatLevelSource",
        "differences": {
          "added": [],
          "removed": [
            "BlockGetter getBaseColumn(int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator",
        "differences": {
          "added": [],
          "removed": [
            "BlockGetter getBaseColumn(int,int)",
            "int iterateNoiseColumn(int,int,BlockState[],Predicate)",
            "BlockState generateBaseState(double,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature",
        "differences": {
          "added": [],
          "removed": [
            "boolean place(LevelAccessor,Random,BlockPos,BlockPileConfiguration,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction",
        "differences": {
          "added": [
            "LootItemFunction lambda$randomApplicableEnchantment$0(LootItemCondition[])"
          ],
          "removed": [
            "ItemStack enchantItem(ItemStack,Enchantment,Random)",
            "LootItemFunction lambda$randomApplicableEnchantment$1(LootItemCondition[])",
            "boolean lambda$run$0(boolean,ItemStack,Enchantment)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.client.AttackIndicatorStatus",
            "XXX.minecraft.client.Camera",
            "XXX.minecraft.client.ClientRecipeBook",
            "XXX.minecraft.client.CycleOption",
            "XXX.minecraft.client.FullscreenResolutionProgressOption",
            "XXX.minecraft.client.Game$Metrics",
            "XXX.minecraft.client.HotbarManager",
            "XXX.minecraft.client.KeyMapping$1",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$2",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.ProgressOption",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.Timer",
            "XXX.minecraft.client.User",
            "XXX.color.block.BlockColor",
            "XXX.color.block.BlockTintCache",
            "XXX.color.block.BlockTintCache$LatestCacheInfo",
            "XXX.color.item.ItemColor",
            "XXX.color.item.package-info",
            "XXX.client.gui.Gui",
            "XXX.client.gui.MapRenderer",
            "XXX.client.gui.MapRenderer$MapInstance",
            "XXX.gui.chat.NarratorChatListener",
            "XXX.gui.chat.StandardChatListener",
            "XXX.gui.components.AbstractButton",
            "XXX.gui.components.AbstractSelectionList",
            "XXX.gui.components.AbstractSelectionList$Entry",
            "XXX.gui.components.AbstractSliderButton",
            "XXX.gui.components.BossHealthOverlay",
            "XXX.gui.components.Button$OnPress",
            "XXX.gui.components.Checkbox",
            "XXX.gui.components.CommandSuggestions$1",
            "XXX.gui.components.ComponentRenderUtils",
            "XXX.gui.components.ContainerObjectSelectionList$Entry",
            "XXX.gui.components.DebugScreenOverlay$1",
            "XXX.gui.components.ImageButton",
            "XXX.gui.components.LerpingBossEvent$1",
            "XXX.gui.components.LockIconButton$Icon",
            "XXX.gui.components.ObjectSelectionList$Entry",
            "XXX.gui.components.OptionsList",
            "XXX.gui.components.PlayerTabOverlay",
            "XXX.gui.components.PlayerTabOverlay$PlayerInfoComparator",
            "XXX.gui.components.SliderButton",
            "XXX.gui.components.SubtitleOverlay",
            "XXX.gui.components.TickableWidget",
            "XXX.gui.components.Widget",
            "XXX.components.events.ContainerEventHandler",
            "XXX.components.events.package-info",
            "XXX.components.spectator.SpectatorGui",
            "XXX.components.toasts.AdvancementToast",
            "XXX.components.toasts.SystemToast",
            "XXX.components.toasts.Toast",
            "XXX.components.toasts.ToastComponent",
            "XXX.components.toasts.ToastComponent$ToastInstance",
            "XXX.components.toasts.TutorialToast$Icons",
            "XXX.gui.font.AllMissingGlyphProvider",
            "XXX.gui.font.FontManager$1",
            "XXX.gui.font.FontSet",
            "XXX.gui.font.FontTexture$1",
            "XXX.gui.font.TextFieldHelper",
            "XXX.font.glyphs.BakedGlyph$Effect",
            "XXX.font.glyphs.MissingGlyph",
            "XXX.font.glyphs.package-info",
            "XXX.font.providers.BitmapProvider",
            "XXX.font.providers.BitmapProvider$Builder",
            "XXX.font.providers.GlyphProviderBuilder",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Builder",
            "XXX.font.providers.TrueTypeGlyphProviderBuilder",
            "XXX.client.gui.package-info",
            "XXX.gui.screens.AlertScreen",
            "XXX.gui.screens.BackupConfirmScreen$Listener",
            "XXX.gui.screens.ChatScreen",
            "XXX.gui.screens.ConfirmLinkScreen",
            "XXX.gui.screens.ConnectScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList",
            "XXX.gui.screens.CreateFlatWorldScreen",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList",
            "XXX.gui.screens.DeathScreen",
            "XXX.gui.screens.DirectJoinServerScreen",
            "XXX.gui.screens.EditServerScreen",
            "XXX.gui.screens.GenericDirtMessageScreen",
            "XXX.gui.screens.LanguageSelectScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList$Entry",
            "XXX.gui.screens.LoadingOverlay",
            "XXX.gui.screens.MenuScreens",
            "XXX.gui.screens.MouseSettingsScreen",
            "XXX.gui.screens.OptionsSubScreen",
            "XXX.gui.screens.Overlay",
            "XXX.gui.screens.PresetFlatWorldScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList",
            "XXX.gui.screens.ProgressScreen",
            "XXX.gui.screens.Screen",
            "XXX.gui.screens.SkinCustomizationScreen",
            "XXX.gui.screens.TitleScreen",
            "XXX.gui.screens.WinScreen",
            "XXX.screens.achievement.StatsScreen$1",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList$Entry",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemComparator",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList",
            "XXX.screens.achievement.StatsUpdateListener",
            "XXX.screens.advancements.AdvancementTab",
            "XXX.screens.advancements.AdvancementTabType$1",
            "XXX.screens.advancements.AdvancementWidgetType",
            "XXX.screens.advancements.package-info",
            "XXX.screens.controls.ControlList$1",
            "XXX.screens.controls.ControlList$Entry",
            "XXX.screens.controls.ControlList$KeyEntry$1",
            "XXX.screens.controls.ControlsScreen",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen",
            "XXX.screens.inventory.AbstractContainerScreen",
            "XXX.screens.inventory.AnvilScreen",
            "XXX.screens.inventory.BeaconScreen$1",
            "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton",
            "XXX.screens.inventory.BeaconScreen$BeaconScreenButton",
            "XXX.screens.inventory.BlastFurnaceScreen",
            "XXX.screens.inventory.BookEditScreen$Pos2i",
            "XXX.screens.inventory.BookViewScreen$1",
            "XXX.screens.inventory.BookViewScreen$WritableBookAccess",
            "XXX.screens.inventory.BrewingStandScreen",
            "XXX.screens.inventory.CommandBlockEditScreen",
            "XXX.screens.inventory.ContainerScreen",
            "XXX.screens.inventory.CreativeInventoryListener",
            "XXX.screens.inventory.CreativeModeInventoryScreen$CustomCreativeSlot",
            "XXX.screens.inventory.CreativeModeInventoryScreen$SlotWrapper",
            "XXX.screens.inventory.EffectRenderingInventoryScreen",
            "XXX.screens.inventory.EnchantmentScreen",
            "XXX.screens.inventory.GrindstoneScreen",
            "XXX.screens.inventory.HorseInventoryScreen",
            "XXX.screens.inventory.ItemCombinerScreen",
            "XXX.screens.inventory.LecternScreen",
            "XXX.screens.inventory.LoomScreen",
            "XXX.screens.inventory.MerchantScreen",
            "XXX.screens.inventory.MinecartCommandBlockEditScreen",
            "XXX.screens.inventory.ShulkerBoxScreen",
            "XXX.screens.inventory.SmithingScreen",
            "XXX.screens.inventory.StonecutterScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$1",
            "XXX.screens.inventory.package-info",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.gui.screens.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.resourcepacks.entries.package-info",
            "XXX.resourcepacks.lists.ResourcePackList",
            "XXX.resourcepacks.lists.SelectedResourcePackList",
            "XXX.screens.resourcepacks.package-info",
            "XXX.screens.worldselection.CreateWorldScreen",
            "XXX.screens.worldselection.CreateWorldScreen$2",
            "XXX.screens.worldselection.CreateWorldScreen$4",
            "XXX.screens.worldselection.CreateWorldScreen$6",
            "XXX.screens.worldselection.CreateWorldScreen$SelectedGameMode",
            "XXX.screens.worldselection.OptimizeWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList",
            "XXX.screens.worldselection.package-info",
            "XXX.gui.spectator.RootSpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenu$1",
            "XXX.gui.spectator.SpectatorMenu$ScrollMenuItem",
            "XXX.gui.spectator.SpectatorMenuItem",
            "XXX.spectator.categories.SpectatorPage",
            "XXX.spectator.categories.TeleportToTeamMenuCategory",
            "XXX.spectator.categories.package-info",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.Main$3",
            "XXX.client.main.package-info",
            "XXX.client.map.Map$1",
            "XXX.client.map.Map$3",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.ChestedHorseModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColorableListModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.HeadedModel",
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.PandaModel",
            "XXX.client.model.ParrotModel$1",
            "XXX.client.model.PhantomModel",
            "XXX.client.model.PiglinModel",
            "XXX.client.model.PolarBearModel",
            "XXX.client.model.PufferfishMidModel",
            "XXX.client.model.QuadrupedModel",
            "XXX.client.model.RavagerModel",
            "XXX.client.model.SheepFurModel",
            "XXX.client.model.ShieldModel",
            "XXX.client.model.ShulkerModel",
            "XXX.client.model.SkeletonModel",
            "XXX.client.model.SlimeModel",
            "XXX.client.model.SpiderModel",
            "XXX.client.model.TridentModel",
            "XXX.client.model.TropicalFishModelB",
            "XXX.client.model.VexModel",
            "XXX.client.model.VillagerModel",
            "XXX.client.model.WitherBossModel",
            "XXX.client.model.ZombieModel",
            "XXX.model.dragon.DragonHeadModel",
            "XXX.model.geom.ModelPart",
            "XXX.model.geom.ModelPart$Polygon",
            "XXX.model.geom.package-info",
            "XXX.client.multiplayer.ClientAdvancements",
            "XXX.client.multiplayer.ClientChunkCache",
            "XXX.client.multiplayer.ClientChunkCache$Storage",
            "XXX.client.multiplayer.ClientLevel",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.client.multiplayer.ServerStatusPinger$2$1",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AshParticle$Provider",
            "XXX.client.particle.AttackSweepParticle$1",
            "XXX.client.particle.BarrierParticle",
            "XXX.client.particle.BarrierParticle$Provider",
            "XXX.client.particle.BreakingItemParticle",
            "XXX.client.particle.BreakingItemParticle$Provider",
            "XXX.client.particle.BreakingItemParticle$SnowballProvider",
            "XXX.client.particle.BubbleColumnUpParticle$1",
            "XXX.client.particle.BubbleParticle",
            "XXX.client.particle.BubbleParticle$Provider",
            "XXX.client.particle.BubblePopParticle$1",
            "XXX.client.particle.CampfireSmokeParticle",
            "XXX.client.particle.CampfireSmokeParticle$CosyProvider",
            "XXX.client.particle.CritParticle",
            "XXX.client.particle.CritParticle$DamageIndicatorProvider",
            "XXX.client.particle.CritParticle$Provider",
            "XXX.client.particle.DragonBreathParticle$1",
            "XXX.client.particle.DripParticle",
            "XXX.client.particle.DripParticle$CoolingDripHangParticle",
            "XXX.client.particle.DripParticle$DripLandParticle",
            "XXX.client.particle.DripParticle$FallingParticle",
            "XXX.client.particle.DripParticle$HoneyFallProvider",
            "XXX.client.particle.DripParticle$HoneyLandProvider",
            "XXX.client.particle.DripParticle$LavaHangProvider",
            "XXX.client.particle.DripParticle$NectarFallProvider",
            "XXX.client.particle.DripParticle$ObsidianTearHangProvider",
            "XXX.client.particle.DripParticle$WaterFallProvider",
            "XXX.client.particle.DustParticle",
            "XXX.client.particle.DustParticle$Provider",
            "XXX.client.particle.EnchantmentTableParticle$1",
            "XXX.client.particle.EnchantmentTableParticle$Provider",
            "XXX.client.particle.EndRodParticle$1",
            "XXX.client.particle.ExplodeParticle",
            "XXX.client.particle.FallingDustParticle",
            "XXX.client.particle.FallingDustParticle$Provider",
            "XXX.client.particle.FireworkParticles$1",
            "XXX.client.particle.FireworkParticles$OverlayParticle",
            "XXX.client.particle.FireworkParticles$SparkProvider",
            "XXX.client.particle.FlameParticle",
            "XXX.client.particle.FlameParticle$Provider",
            "XXX.client.particle.HeartParticle$1",
            "XXX.client.particle.HeartParticle$Provider",
            "XXX.client.particle.HugeExplosionParticle$1",
            "XXX.client.particle.HugeExplosionSeedParticle",
            "XXX.client.particle.HugeExplosionSeedParticle$Provider",
            "XXX.client.particle.LargeSmokeParticle",
            "XXX.client.particle.LavaParticle",
            "XXX.client.particle.LavaParticle$Provider",
            "XXX.client.particle.MobAppearanceParticle$1",
            "XXX.client.particle.NoRenderParticle",
            "XXX.client.particle.NoteParticle$1",
            "XXX.client.particle.Particle",
            "XXX.client.particle.ParticleEngine",
            "XXX.client.particle.ParticleEngine$MutableSpriteSet",
            "XXX.client.particle.ParticleProvider",
            "XXX.client.particle.ParticleRenderType$1",
            "XXX.client.particle.ParticleRenderType$3",
            "XXX.client.particle.ParticleRenderType$5",
            "XXX.client.particle.PlayerCloudParticle",
            "XXX.client.particle.PlayerCloudParticle$Provider",
            "XXX.client.particle.PortalParticle",
            "XXX.client.particle.SimpleAnimatedParticle",
            "XXX.client.particle.SmokeParticle",
            "XXX.client.particle.SoulParticle",
            "XXX.client.particle.SoulParticle$Provider",
            "XXX.client.particle.SpellParticle$1",
            "XXX.client.particle.SpellParticle$InstantProvider",
            "XXX.client.particle.SpellParticle$Provider",
            "XXX.client.particle.SpitParticle",
            "XXX.client.particle.SpitParticle$Provider",
            "XXX.client.particle.SplashParticle$1",
            "XXX.client.particle.SpriteSet",
            "XXX.client.particle.SquidInkParticle$1",
            "XXX.client.particle.SuspendedParticle",
            "XXX.client.particle.SuspendedParticle$CrimsonSporeProvider",
            "XXX.client.particle.SuspendedParticle$WarpedSporeProvider",
            "XXX.client.particle.SuspendedTownParticle$1",
            "XXX.client.particle.SuspendedTownParticle$DolphinSpeedProvider",
            "XXX.client.particle.SuspendedTownParticle$Provider",
            "XXX.client.particle.TerrainParticle$Provider",
            "XXX.client.particle.TotemParticle",
            "XXX.client.particle.TotemParticle$Provider",
            "XXX.client.particle.WakeParticle",
            "XXX.client.particle.WakeParticle$Provider",
            "XXX.client.particle.WaterCurrentDownParticle$1",
            "XXX.client.particle.WaterDropParticle",
            "XXX.client.particle.package-info",
            "XXX.client.player.Input",
            "XXX.client.player.LocalPlayer",
            "XXX.client.player.RemotePlayer",
            "XXX.player.inventory.package-info",
            "XXX.client.renderer.BiomeColors",
            "XXX.client.renderer.ChunkBufferBuilderPack",
            "XXX.client.renderer.EffectInstance",
            "XXX.client.renderer.FaceInfo$1",
            "XXX.client.renderer.FaceInfo$VertexInfo",
            "XXX.client.renderer.FogRenderer$FogMode",
            "XXX.client.renderer.ItemBlockRenderTypes",
            "XXX.client.renderer.ItemInHandRenderer$1",
            "XXX.client.renderer.LevelRenderer",
            "XXX.client.renderer.LevelRenderer$RenderChunkInfo",
            "XXX.client.renderer.MultiBufferSource",
            "XXX.client.renderer.OutlineBufferSource",
            "XXX.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
            "XXX.client.renderer.PostChain",
            "XXX.client.renderer.Rect2i",
            "XXX.client.renderer.RenderStateShard",
            "XXX.client.renderer.RenderStateShard$BooleanStateShard",
            "XXX.client.renderer.RenderStateShard$DepthTestStateShard",
            "XXX.client.renderer.RenderStateShard$FogStateShard",
            "XXX.client.renderer.RenderStateShard$LightmapStateShard",
            "XXX.client.renderer.RenderStateShard$OffsetTexturingStateShard",
            "XXX.client.renderer.RenderStateShard$OverlayStateShard",
            "XXX.client.renderer.RenderStateShard$ShadeModelStateShard",
            "XXX.client.renderer.RenderStateShard$TexturingStateShard",
            "XXX.client.renderer.RenderStateShard$WriteMaskStateShard",
            "XXX.client.renderer.RenderType$1",
            "XXX.client.renderer.RenderType$CompositeRenderType$EqualsStrategy",
            "XXX.client.renderer.RenderType$CompositeState$CompositeStateBuilder",
            "XXX.client.renderer.RunningTrimmedMean",
            "XXX.client.renderer.Sheets",
            "XXX.client.renderer.SpriteCoordinateExpander",
            "XXX.client.renderer.VirtualScreen",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.BlockRenderDispatcher$1",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElement$Deserializer",
            "XXX.block.model.BlockElementFace$Deserializer",
            "XXX.block.model.BlockFaceUV",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModel$GuiLight",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockModelDefinition$Deserializer",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemOverride",
            "XXX.block.model.ItemOverrides",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.ItemTransforms$TransformType",
            "XXX.block.model.MultiVariant$Deserializer",
            "XXX.block.model.Variant$Deserializer",
            "XXX.model.multipart.Condition",
            "XXX.model.multipart.MultiPart",
            "XXX.model.multipart.OrCondition",
            "XXX.model.multipart.Selector$Deserializer",
            "XXX.block.model.package-info",
            "XXX.block.statemap.package-info",
            "XXX.renderer.blockentity.BeaconRenderer",
            "XXX.renderer.blockentity.BellRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderer",
            "XXX.renderer.blockentity.CampfireRenderer",
            "XXX.renderer.blockentity.ConduitRenderer",
            "XXX.renderer.blockentity.LecternRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer",
            "XXX.renderer.blockentity.SignRenderer$SignModel",
            "XXX.renderer.blockentity.SkullBlockRenderer$1",
            "XXX.renderer.blockentity.StructureBlockRenderer",
            "XXX.renderer.blockentity.TheEndGatewayRenderer",
            "XXX.renderer.blockentity.package-info",
            "XXX.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk$1",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BeeDebugRenderer$HiveInfo",
            "XXX.renderer.debug.BrainDebugRenderer$BrainDump",
            "XXX.renderer.debug.CaveDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChestedHorseRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.PiglinArmorLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.LayeredTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Info",
            "XXX.renderer.texture.TextureManager",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.ClientPackSource$2",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.LegacyResourcePackAdapter",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SplashManager",
            "XXX.client.resources.UnopenedResourcePack",
            "XXX.resources.language.Language",
            "XXX.resources.language.Locale",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.WeightedBakedModel$WeightedModel",
            "XXX.client.resources.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.MutableSearchTree",
            "XXX.client.searchtree.ReloadableIdSearchTree$IntersectionIterator",
            "XXX.client.searchtree.ReloadableSearchTree$MergingUniqueIterator",
            "XXX.client.searchtree.SearchRegistry$Key",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.LoopingAudioStream$1",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.MusicManager$Music",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionTypeArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$ListElementFunction",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.RangeArgument$Serializer",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypes",
            "XXX.commands.synchronization.ArgumentTypes$Entry",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.BrigadierArgumentSerializers",
            "XXX.synchronization.brigadier.FloatArgumentSerializer",
            "XXX.synchronization.brigadier.LongArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.BlockSourceImpl",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$1",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.Location",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.SerializableBoolean",
            "XXX.minecraft.core.SerializableUUID",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.dispenser.AbstractProjectileDispenseBehavior",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$17",
            "XXX.core.dispenser.DispenseItemBehavior$19",
            "XXX.core.dispenser.DispenseItemBehavior$20",
            "XXX.core.dispenser.DispenseItemBehavior$22",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$7$1",
            "XXX.core.dispenser.DispenseItemBehavior$8$1",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.package-info",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.Main",
            "XXX.data.advancements.AdventureAdvancements",
            "XXX.data.advancements.NetherAdvancements",
            "XXX.data.advancements.TheEndAdvancements",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$1",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$1",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.NarrationHelper",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServer$2",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DerivedServerLevel",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FileResourcePack",
            "XXX.server.packs.Pack",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.repository.UnopenedPack$Position",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$2",
            "XXX.server.players.GameProfileCache$Serializer",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SynchronizableTagCollection",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagManager$Preparations",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.FrameTimer",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.IntRange",
            "XXX.minecraft.util.LimitedCapacityList",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.RewindableStream",
            "XXX.minecraft.util.Serializable",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.OminousBannerRenameFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.entity.monster.Zombie$1",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinHurtByOtherGoal",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin$PiglinArmPose",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspisciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType$1",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$1",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ClockItem$1",
            "XXX.world.item.CompassItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$10",
            "XXX.world.item.CreativeModeTab$12",
            "XXX.world.item.CreativeModeTab$3",
            "XXX.world.item.CreativeModeTab$5",
            "XXX.world.item.CreativeModeTab$7",
            "XXX.world.item.CreativeModeTab$9",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DirectionalPlaceContext",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.DyeableHorseArmorItem",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileWeaponItem$Type",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkTickList",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.CollisionGetter$1",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyTickList",
            "XXX.world.level.Explosion",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelType",
            "XXX.world.level.LightLayer",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$3",
            "XXX.level.block.Block$OffsetType",
            "XXX.level.block.LogBlock",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.block.state.BlockState$1"
          ],
          "removed": [
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.client.AmbientOcclusionStatus",
            "XXX.minecraft.client.BooleanOption",
            "XXX.minecraft.client.ClientBrandRetriever",
            "XXX.minecraft.client.CloudStatus",
            "XXX.minecraft.client.DebugQueryHandler",
            "XXX.minecraft.client.Game",
            "XXX.minecraft.client.GuiMessage",
            "XXX.minecraft.client.KeyMapping",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.LogaritmicProgressOption",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.Option",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.ParticleStatus",
            "XXX.minecraft.client.RecipeBookCategories",
            "XXX.minecraft.client.Session",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.minecraft.client.User$Type",
            "XXX.color.block.BlockColors",
            "XXX.color.block.BlockTintCache$1",
            "XXX.color.block.package-info",
            "XXX.color.item.ItemColors",
            "XXX.client.gui.Font",
            "XXX.client.gui.GuiComponent",
            "XXX.client.gui.MapRenderer$1",
            "XXX.gui.chat.ChatListener",
            "XXX.gui.chat.OverlayChatListener",
            "XXX.gui.chat.package-info",
            "XXX.gui.components.AbstractOptionSliderButton",
            "XXX.gui.components.AbstractSelectionList$1",
            "XXX.gui.components.AbstractSelectionList$TrackedList",
            "XXX.gui.components.AbstractWidget",
            "XXX.gui.components.Button",
            "XXX.gui.components.ChatComponent",
            "XXX.gui.components.CommandSuggestions",
            "XXX.gui.components.CommandSuggestions$SuggestionsList",
            "XXX.gui.components.ContainerObjectSelectionList",
            "XXX.gui.components.DebugScreenOverlay",
            "XXX.gui.components.EditBox",
            "XXX.gui.components.LerpingBossEvent",
            "XXX.gui.components.LockIconButton",
            "XXX.gui.components.ObjectSelectionList",
            "XXX.gui.components.OptionButton",
            "XXX.gui.components.OptionsList$Entry",
            "XXX.gui.components.PlayerTabOverlay$1",
            "XXX.gui.components.ScrolledSelectionList",
            "XXX.gui.components.StateSwitchingButton",
            "XXX.gui.components.SubtitleOverlay$Subtitle",
            "XXX.gui.components.VolumeSlider",
            "XXX.components.events.AbstractContainerEventHandler",
            "XXX.components.events.GuiEventListener",
            "XXX.gui.components.package-info",
            "XXX.components.spectator.package-info",
            "XXX.components.toasts.RecipeToast",
            "XXX.components.toasts.SystemToast$SystemToastIds",
            "XXX.components.toasts.Toast$Visibility",
            "XXX.components.toasts.ToastComponent$1",
            "XXX.components.toasts.TutorialToast",
            "XXX.components.toasts.package-info",
            "XXX.gui.font.FontManager",
            "XXX.gui.font.FontManager$2",
            "XXX.gui.font.FontTexture",
            "XXX.gui.font.FontTexture$Node",
            "XXX.font.glyphs.BakedGlyph",
            "XXX.font.glyphs.EmptyGlyph",
            "XXX.font.glyphs.WhiteGlyph",
            "XXX.gui.font.package-info",
            "XXX.font.providers.BitmapProvider$1",
            "XXX.font.providers.BitmapProvider$Glyph",
            "XXX.font.providers.GlyphProviderBuilderType",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$1",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Glyph",
            "XXX.font.providers.package-info",
            "XXX.gui.screens.AccessibilityOptionsScreen",
            "XXX.gui.screens.BackupConfirmScreen",
            "XXX.gui.screens.ChatOptionsScreen",
            "XXX.gui.screens.ChatScreen$1",
            "XXX.gui.screens.ConfirmScreen",
            "XXX.gui.screens.ConnectScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry",
            "XXX.gui.screens.CreateFlatWorldScreen$1",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList$Entry",
            "XXX.gui.screens.DemoIntroScreen",
            "XXX.gui.screens.DisconnectedScreen",
            "XXX.gui.screens.ErrorScreen",
            "XXX.gui.screens.InBedChatScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList",
            "XXX.gui.screens.LevelLoadingScreen",
            "XXX.gui.screens.LoadingOverlay$LogoTexture",
            "XXX.gui.screens.MenuScreens$ScreenConstructor",
            "XXX.gui.screens.OptionsScreen",
            "XXX.gui.screens.OutOfMemoryScreen",
            "XXX.gui.screens.PauseScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetInfo",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList$Entry",
            "XXX.gui.screens.ReceivingLevelScreen",
            "XXX.gui.screens.ShareToLanScreen",
            "XXX.gui.screens.SoundOptionsScreen",
            "XXX.gui.screens.VideoSettingsScreen",
            "XXX.screens.achievement.StatsScreen",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRow",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList$MobRow",
            "XXX.screens.achievement.package-info",
            "XXX.screens.advancements.AdvancementTabType",
            "XXX.screens.advancements.AdvancementWidget",
            "XXX.screens.advancements.AdvancementsScreen",
            "XXX.screens.controls.ControlList",
            "XXX.screens.controls.ControlList$CategoryEntry",
            "XXX.screens.controls.ControlList$KeyEntry",
            "XXX.screens.controls.ControlList$KeyEntry$2",
            "XXX.screens.controls.package-info",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$1",
            "XXX.screens.inventory.AbstractFurnaceScreen",
            "XXX.screens.inventory.BeaconScreen",
            "XXX.screens.inventory.BeaconScreen$BeaconCancelButton",
            "XXX.screens.inventory.BeaconScreen$BeaconPowerButton",
            "XXX.screens.inventory.BeaconScreen$BeaconSpriteScreenButton",
            "XXX.screens.inventory.BookEditScreen",
            "XXX.screens.inventory.BookViewScreen",
            "XXX.screens.inventory.BookViewScreen$BookAccess",
            "XXX.screens.inventory.BookViewScreen$WrittenBookAccess",
            "XXX.screens.inventory.CartographyTableScreen",
            "XXX.screens.inventory.CommandBlockEditScreen$1",
            "XXX.screens.inventory.CraftingScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen$ItemPickerMenu",
            "XXX.screens.inventory.DispenserScreen",
            "XXX.screens.inventory.EnchantmentNames",
            "XXX.screens.inventory.FurnaceScreen",
            "XXX.screens.inventory.HopperScreen",
            "XXX.screens.inventory.InventoryScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen",
            "XXX.screens.inventory.LecternScreen$1",
            "XXX.screens.inventory.MenuAccess",
            "XXX.screens.inventory.MerchantScreen$TradeOfferButton",
            "XXX.screens.inventory.PageButton",
            "XXX.screens.inventory.SignEditScreen",
            "XXX.screens.inventory.SmokerScreen",
            "XXX.screens.inventory.StructureBlockEditScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$2",
            "XXX.screens.mco.package-info",
            "XXX.screens.multiplayer.SafetyScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.resourcepacks.ResourcePackSelectScreen",
            "XXX.resourcepacks.lists.AvailableResourcePackList",
            "XXX.resourcepacks.lists.ResourcePackList$ResourcePackEntry",
            "XXX.resourcepacks.lists.package-info",
            "XXX.screens.stream.package-info",
            "XXX.screens.worldselection.CreateWorldScreen$1",
            "XXX.screens.worldselection.CreateWorldScreen$3",
            "XXX.screens.worldselection.CreateWorldScreen$5",
            "XXX.screens.worldselection.CreateWorldScreen$7",
            "XXX.screens.worldselection.EditWorldScreen",
            "XXX.screens.worldselection.SelectWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList$WorldListEntry",
            "XXX.gui.spectator.PlayerMenuItem",
            "XXX.gui.spectator.SpectatorMenu",
            "XXX.gui.spectator.SpectatorMenu$CloseSpectatorItem",
            "XXX.gui.spectator.SpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenuListener",
            "XXX.spectator.categories.TeleportToPlayerMenuCategory",
            "XXX.spectator.categories.TeleportToTeamMenuCategory$TeamSelectionItem",
            "XXX.gui.spectator.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$ServerData",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.SilentInitException",
            "XXX.client.map.Map",
            "XXX.client.map.Map$2",
            "XXX.client.map.package-info",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BoatModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColorableAgeableListModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.model.HoglinModel",
            "XXX.client.model.HumanoidHeadModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.OcelotModel",
            "XXX.client.model.ParrotModel",
            "XXX.client.model.ParrotModel$State",
            "XXX.client.model.PigModel",
            "XXX.client.model.PlayerModel",
            "XXX.client.model.PufferfishBigModel",
            "XXX.client.model.PufferfishSmallModel",
            "XXX.client.model.RabbitModel",
            "XXX.client.model.SalmonModel",
            "XXX.client.model.SheepModel",
            "XXX.client.model.ShulkerBulletModel",
            "XXX.client.model.SilverfishModel",
            "XXX.client.model.SkullModel",
            "XXX.client.model.SnowGolemModel",
            "XXX.client.model.SquidModel",
            "XXX.client.model.TropicalFishModelA",
            "XXX.client.model.TurtleModel",
            "XXX.client.model.VillagerHeadModel",
            "XXX.client.model.WitchModel",
            "XXX.client.model.WolfModel",
            "XXX.client.model.ZombieVillagerModel",
            "XXX.model.dragon.package-info",
            "XXX.model.geom.ModelPart$Cube",
            "XXX.model.geom.ModelPart$Vertex",
            "XXX.client.model.package-info",
            "XXX.client.multiplayer.ClientAdvancements$Listener",
            "XXX.client.multiplayer.ClientChunkCache$1",
            "XXX.client.multiplayer.ClientHandshakePacketListenerImpl",
            "XXX.client.multiplayer.ClientLevel$1",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.ServerAddress",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.client.multiplayer.package-info",
            "XXX.client.particle.AshParticle",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BarrierParticle$1",
            "XXX.client.particle.BaseAshSmokeParticle",
            "XXX.client.particle.BreakingItemParticle$1",
            "XXX.client.particle.BreakingItemParticle$SlimeProvider",
            "XXX.client.particle.BubbleColumnUpParticle",
            "XXX.client.particle.BubbleColumnUpParticle$Provider",
            "XXX.client.particle.BubbleParticle$1",
            "XXX.client.particle.BubblePopParticle",
            "XXX.client.particle.BubblePopParticle$Provider",
            "XXX.client.particle.CampfireSmokeParticle$1",
            "XXX.client.particle.CampfireSmokeParticle$SignalProvider",
            "XXX.client.particle.CritParticle$1",
            "XXX.client.particle.CritParticle$MagicProvider",
            "XXX.client.particle.DragonBreathParticle",
            "XXX.client.particle.DragonBreathParticle$Provider",
            "XXX.client.particle.DripParticle$1",
            "XXX.client.particle.DripParticle$DripHangParticle",
            "XXX.client.particle.DripParticle$FallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyFallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyHangProvider",
            "XXX.client.particle.DripParticle$LavaFallProvider",
            "XXX.client.particle.DripParticle$LavaLandProvider",
            "XXX.client.particle.DripParticle$ObsidianTearFallProvider",
            "XXX.client.particle.DripParticle$ObsidianTearLandProvider",
            "XXX.client.particle.DripParticle$WaterHangProvider",
            "XXX.client.particle.DustParticle$1",
            "XXX.client.particle.EnchantmentTableParticle",
            "XXX.client.particle.EnchantmentTableParticle$NautilusProvider",
            "XXX.client.particle.EndRodParticle",
            "XXX.client.particle.EndRodParticle$Provider",
            "XXX.client.particle.ExplodeParticle$Provider",
            "XXX.client.particle.FallingDustParticle$1",
            "XXX.client.particle.FireworkParticles",
            "XXX.client.particle.FireworkParticles$FlashProvider",
            "XXX.client.particle.FireworkParticles$SparkParticle",
            "XXX.client.particle.FireworkParticles$Starter",
            "XXX.client.particle.FlameParticle$1",
            "XXX.client.particle.HeartParticle",
            "XXX.client.particle.HeartParticle$AngryVillagerProvider",
            "XXX.client.particle.HugeExplosionParticle",
            "XXX.client.particle.HugeExplosionParticle$Provider",
            "XXX.client.particle.HugeExplosionSeedParticle$1",
            "XXX.client.particle.ItemPickupParticle",
            "XXX.client.particle.LargeSmokeParticle$Provider",
            "XXX.client.particle.LavaParticle$1",
            "XXX.client.particle.MobAppearanceParticle",
            "XXX.client.particle.MobAppearanceParticle$Provider",
            "XXX.client.particle.NoteParticle",
            "XXX.client.particle.NoteParticle$Provider",
            "XXX.client.particle.ParticleDescription",
            "XXX.client.particle.ParticleEngine$1",
            "XXX.client.particle.ParticleEngine$SpriteParticleRegistration",
            "XXX.client.particle.ParticleRenderType",
            "XXX.client.particle.ParticleRenderType$2",
            "XXX.client.particle.ParticleRenderType$4",
            "XXX.client.particle.ParticleRenderType$6",
            "XXX.client.particle.PlayerCloudParticle$1",
            "XXX.client.particle.PlayerCloudParticle$SneezeProvider",
            "XXX.client.particle.ReversePortalParticle$1",
            "XXX.client.particle.RisingParticle",
            "XXX.client.particle.SingleQuadParticle",
            "XXX.client.particle.SmokeParticle$Provider",
            "XXX.client.particle.SoulParticle$1",
            "XXX.client.particle.SpellParticle",
            "XXX.client.particle.SpellParticle$AmbientMobProvider",
            "XXX.client.particle.SpellParticle$MobProvider",
            "XXX.client.particle.SpellParticle$WitchProvider",
            "XXX.client.particle.SpitParticle$1",
            "XXX.client.particle.SplashParticle",
            "XXX.client.particle.SplashParticle$Provider",
            "XXX.client.particle.SquidInkParticle",
            "XXX.client.particle.SquidInkParticle$Provider",
            "XXX.client.particle.SuspendedParticle$1",
            "XXX.client.particle.SuspendedParticle$UnderwaterProvider",
            "XXX.client.particle.SuspendedTownParticle",
            "XXX.client.particle.SuspendedTownParticle$ComposterFillProvider",
            "XXX.client.particle.SuspendedTownParticle$HappyVillagerProvider",
            "XXX.client.particle.TerrainParticle",
            "XXX.client.particle.TextureSheetParticle",
            "XXX.client.particle.TotemParticle$1",
            "XXX.client.particle.TrackingEmitter",
            "XXX.client.particle.WakeParticle$1",
            "XXX.client.particle.WaterCurrentDownParticle",
            "XXX.client.particle.WaterCurrentDownParticle$Provider",
            "XXX.client.particle.WaterDropParticle$Provider",
            "XXX.client.player.AbstractClientPlayer",
            "XXX.client.player.KeyboardInput",
            "XXX.client.player.LocalPlayer$1",
            "XXX.player.inventory.Hotbar",
            "XXX.client.player.package-info",
            "XXX.client.renderer.BlockEntityWithoutLevelRenderer",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.FaceInfo",
            "XXX.client.renderer.FaceInfo$Constants",
            "XXX.client.renderer.FogRenderer",
            "XXX.client.renderer.GameRenderer",
            "XXX.client.renderer.ItemInHandRenderer",
            "XXX.client.renderer.ItemModelShaper",
            "XXX.client.renderer.LevelRenderer$1",
            "XXX.client.renderer.LightTexture",
            "XXX.client.renderer.MultiBufferSource$BufferSource",
            "XXX.client.renderer.OutlineBufferSource$1",
            "XXX.client.renderer.PanoramaRenderer",
            "XXX.client.renderer.PostPass",
            "XXX.client.renderer.RenderBuffers",
            "XXX.client.renderer.RenderStateShard$AlphaStateShard",
            "XXX.client.renderer.RenderStateShard$CullStateShard",
            "XXX.client.renderer.RenderStateShard$DiffuseLightingStateShard",
            "XXX.client.renderer.RenderStateShard$LayeringStateShard",
            "XXX.client.renderer.RenderStateShard$LineStateShard",
            "XXX.client.renderer.RenderStateShard$OutputStateShard",
            "XXX.client.renderer.RenderStateShard$PortalTexturingStateShard",
            "XXX.client.renderer.RenderStateShard$TextureStateShard",
            "XXX.client.renderer.RenderStateShard$TransparencyStateShard",
            "XXX.client.renderer.RenderType",
            "XXX.client.renderer.RenderType$CompositeRenderType",
            "XXX.client.renderer.RenderType$CompositeState",
            "XXX.client.renderer.RenderType$OutlineProperty",
            "XXX.client.renderer.ScreenEffectRenderer",
            "XXX.client.renderer.Sheets$1",
            "XXX.client.renderer.ViewArea",
            "XXX.renderer.banner.package-info",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionFace",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$1",
            "XXX.block.model.BlockElementFace",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockFaceUV$Deserializer",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModel$LoopException",
            "XXX.block.model.BlockModelDefinition$Context",
            "XXX.block.model.BlockModelDefinition$MissingVariantException",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$1",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemOverride$Deserializer",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.MultiVariant",
            "XXX.block.model.Variant",
            "XXX.model.multipart.AndCondition",
            "XXX.model.multipart.KeyValueCondition",
            "XXX.model.multipart.MultiPart$Deserializer",
            "XXX.model.multipart.Selector",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.blockentity.BannerRenderer",
            "XXX.renderer.blockentity.BedRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderDispatcher",
            "XXX.renderer.blockentity.BrightnessCombiner",
            "XXX.renderer.blockentity.ChestRenderer",
            "XXX.renderer.blockentity.EnchantTableRenderer",
            "XXX.renderer.blockentity.PistonHeadRenderer",
            "XXX.renderer.blockentity.SignRenderer",
            "XXX.renderer.blockentity.SkullBlockRenderer",
            "XXX.renderer.blockentity.SpawnerRenderer",
            "XXX.renderer.blockentity.StructureBlockRenderer$1",
            "XXX.renderer.blockentity.TheEndPortalRenderer",
            "XXX.renderer.chunk.ChunkRenderDispatcher",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask",
            "XXX.renderer.chunk.RenderChunkRegion",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$BeeInfo",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$1",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$DebugGoal",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AreaEffectCloudRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EnderDragonRenderer$DragonModel",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.AbstractArmorLayer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PigSaddleLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.AtlasSet",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlas$Preparations",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureAtlasSprite$InterpolationData",
            "XXX.renderer.texture.Tickable",
            "XXX.client.resources.AssetIndex",
            "XXX.client.resources.ClientPackSource$1",
            "XXX.client.resources.DefaultClientResourcePack",
            "XXX.client.resources.DirectAssetIndex",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PackAdapterV4",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$SkinTextureCallback",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.language.LanguageMetadataSectionSerializer",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.resources.model.package-info",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.ReloadableIdSearchTree",
            "XXX.client.searchtree.ReloadableSearchTree",
            "XXX.client.searchtree.SearchRegistry",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.SuffixArray$1",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.skins.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Floats$Serializer",
            "XXX.commands.arguments.RangeArgument$Ints$Serializer",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.commands.synchronization.ArgumentSerializer",
            "XXX.commands.synchronization.ArgumentTypes$1",
            "XXX.commands.synchronization.EmptyArgumentSerializer",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentSerializer",
            "XXX.synchronization.brigadier.IntegerArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockSource",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LocatableSource",
            "XXX.minecraft.core.MapFiller",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.PositionImpl",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.SerializableLong",
            "XXX.minecraft.core.Source",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$16",
            "XXX.core.dispenser.DispenseItemBehavior$18",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$21",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.BlockParticleOption$1",
            "XXX.core.particles.DustParticleOptions$1",
            "XXX.core.particles.ItemParticleOption$1",
            "XXX.core.particles.ParticleOptions$Deserializer",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.SimpleParticleType$1",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.HashCache",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.HusbandryAdvancements",
            "XXX.data.advancements.StoryAdvancements",
            "XXX.data.advancements.package-info",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$1",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.PropertyValue",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FeatureSimulator",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractResourcePack",
            "XXX.server.packs.FolderResourcePack",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPack",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.UnopenedPack",
            "XXX.packs.repository.UnopenedPack$UnopenedPackConstructor",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BlockTags$Wrapper",
            "XXX.minecraft.tags.EntityTypeTags$Wrapper",
            "XXX.minecraft.tags.FluidTags$Wrapper",
            "XXX.minecraft.tags.ItemTags$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$ValuesEntry",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.Deserializer",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.InsensitiveStringMap",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RewindableStream$1",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$1",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.entity.monster.ZombifiedPiglin$ZombifiedPiglinAngerTargetGoal",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BlockPlaceContext",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.CarrotOnAStickItem",
            "XXX.world.item.ClockItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$11",
            "XXX.world.item.CreativeModeTab$2",
            "XXX.world.item.CreativeModeTab$4",
            "XXX.world.item.CreativeModeTab$6",
            "XXX.world.item.CreativeModeTab$8",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DirectionalPlaceContext$1",
            "XXX.world.item.DyeColor",
            "XXX.world.item.DyeableArmorItem",
            "XXX.world.item.DyeableLeatherItem",
            "XXX.world.item.ElytraItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishBucketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$1",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemPropertyFunction",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.UseOnContext",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$1",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$1",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelConflictException",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NoiseColumn",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.world.entity.Entity \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.AnimalMakeLove \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.BehaviorUtils \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.ai.behavior.GoToCelebrateLocation \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.GoToWantedItem \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.InsideBrownianWalk \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.LocateHidingPlace \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.LookAndFollowTradingPlayerSink \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.MoveToSkySeeingSpot \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.RandomStroll \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetClosestHomeAsWalkTarget \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.SetWalkTargetFromLookTarget \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.StrollToPoiList \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.VillageBoundRandomStroll \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.fishing.FishingHook \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.biome.Biome \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.biome.BiomeSpecialEffects \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.biome.BiomeSpecialEffects$Builder \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.level.block.AbstractBannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AbstractFurnaceBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.AbstractSkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.AnvilBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.level.block.BambooBlock \u001b[2;32m+4M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.BannerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BarrierBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.BaseCoralPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseCoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BaseRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BeaconBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+52M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.BrewingStandBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ButtonBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.CactusBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CampfireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.CartographyTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CauldronBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ChorusPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ComparatorBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ConduitBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CoralFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CoralWallFanBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CropBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DaylightDetectorBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DetectorRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DiodeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DispenserBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.DragonEggBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.EnchantmentTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndPortalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndRodBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EnderChestBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FaceAttachedHorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FallingBlock \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.level.block.FenceBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FletchingTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FlowerPotBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FungusBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GlassBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GoldBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrassPathBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.GrindstoneBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.GrowingPlantHeadBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HayBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HopperBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HorizontalDirectionalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.IceBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.IronBarsBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.JukeboxBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.KelpPlantBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LeavesBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.block.LeverBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LiquidBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.RotatedPillarBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SandBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.ScaffoldingBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Seagrass \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ShulkerBoxBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.SignBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SmithingTableBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SnowLayerBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.SnowyDirtBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SoulSandBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.level.block.SpawnerBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SpreadingSnowyDirtBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.StainedGlassPaneBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StemBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.StoneButtonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StructureBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.StructureVoidBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SweetBerryBushBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TallGrassBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TargetBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TorchBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TripWireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TripWireHookBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.TurtleEggBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.TwistingVinesPlant \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallSignBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WallTorchBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WebBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WeepingVinesPlant \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WetSpongeBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WitherSkullBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WoodButtonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.piston.MovingPistonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+1P\u001b[0m",
          "XXX.level.chunk.ChunkGenerator \u001b[2;32m+1P\u001b[0m",
          "XXX.level.levelgen.FlatLevelSource \u001b[2;32m+1M\u001b[0m",
          "XXX.level.levelgen.NoiseBasedChunkGenerator \u001b[2;32m+3M\u001b[0m",
          "XXX.levelgen.feature.NetherForestVegetationFeature \u001b[2;32m+1M\u001b[0m",
          "XXX.loot.functions.EnchantRandomlyFunction \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.Entity",
        "differences": {
          "added": [
            "double getDismountTargetFloorHeight(Level,BlockPos,CollisionContext)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.AnimalMakeLove",
        "differences": {
          "added": [
            "void <init>(EntityType)"
          ],
          "removed": [
            "void <init>(EntityType,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.BehaviorUtils",
        "differences": {
          "added": [
            "void lockGazeAndWalkToEachOther(LivingEntity,LivingEntity)",
            "void setWalkAndLookTargetMemoriesToEachOther(LivingEntity,LivingEntity)",
            "void setWalkAndLookTargetMemories(LivingEntity,Entity,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,BlockPos,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,PositionWrapper,int)"
          ],
          "removed": [
            "void lockGazeAndWalkToEachOther(LivingEntity,LivingEntity,float)",
            "void setWalkAndLookTargetMemoriesToEachOther(LivingEntity,LivingEntity,float)",
            "void setWalkAndLookTargetMemories(LivingEntity,Entity,float,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,BlockPos,float,int)",
            "void setWalkAndLookTargetMemories(LivingEntity,PositionWrapper,float,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.GoToCelebrateLocation",
        "differences": {
          "added": [
            "void <init>(int)"
          ],
          "removed": [
            "void <init>(int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.GoToWantedItem",
        "differences": {
          "added": [
            "void <init>(int,boolean)",
            "void <init>(Predicate,int,boolean)"
          ],
          "removed": [
            "void <init>(float,boolean,int)",
            "void <init>(Predicate,float,boolean,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.fishing.FishingHook",
        "differences": {
          "added": [],
          "removed": [
            "boolean calculateOpenWater(BlockPos)",
            "boolean validOpenWaterBlockAt(BlockPos)",
            "boolean isOpenWaterFishing()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Biome",
        "differences": {
          "added": [
            "Optional getAmbientLoopSoundEvent()",
            "Optional getAmbientMoodSoundEvent()",
            "Optional getAmbientAdditionsSoundEvent()"
          ],
          "removed": [
            "Optional getAmbientLoop()",
            "Optional getAmbientMood()",
            "Optional getAmbientAdditions()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSpecialEffects",
        "differences": {
          "added": [
            "Optional getAmbientMoodSoundEvent()",
            "Optional getAmbientAdditionsSoundEvent()"
          ],
          "removed": [
            "Optional getAmbientMoodSettings()",
            "Optional getAmbientAdditionsSettings()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder",
        "differences": {
          "added": [
            "BiomeSpecialEffects$Builder ambientMoodSound(SoundEvent)",
            "BiomeSpecialEffects$Builder ambientAdditionsSound(SoundEvent)"
          ],
          "removed": [
            "BiomeSpecialEffects$Builder ambientMoodSound(AmbientMoodSettings)",
            "BiomeSpecialEffects$Builder ambientAdditionsSound(AmbientAdditionsSettings)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractBannerBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractFurnaceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getLightEmission(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractSkullBlock",
        "differences": {
          "added": [
            "void <init>(SkullBlock$Type,Block$Properties)"
          ],
          "removed": [
            "void <init>(SkullBlock$Type,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AnvilBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void onLand(Level,BlockPos,BlockState,BlockState)",
            "void onBroken(Level,BlockPos)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void onLand(Level,BlockPos,BlockState,BlockState,FallingBlockEntity)",
            "void onBroken(Level,BlockPos,FallingBlockEntity)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BambooBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "Block$OffsetType getOffsetType()"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "BlockBehaviour$OffsetType getOffsetType()",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BannerBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BarrierBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseCoralWallFanBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseFireBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,float)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseRailBlock",
        "differences": {
          "added": [
            "void <init>(boolean,Block$Properties)"
          ],
          "removed": [
            "void <init>(boolean,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BeaconBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Blocks",
        "differences": {
          "added": [
            "ConfiguredFeature lambda$static$2()",
            "ConfiguredFeature lambda$static$1()",
            "BlockEntityType lambda$static$0()"
          ],
          "removed": [
            "ToIntFunction litBlockEmission(int)",
            "Boolean never(BlockState,BlockGetter,BlockPos,EntityType)",
            "Boolean always(BlockState,BlockGetter,BlockPos,EntityType)",
            "Boolean ocelotOrParrot(BlockState,BlockGetter,BlockPos,EntityType)",
            "BedBlock bed(DyeColor)",
            "RotatedPillarBlock log(MaterialColor,MaterialColor)",
            "Block stem(MaterialColor)",
            "boolean always(BlockState,BlockGetter,BlockPos)",
            "boolean never(BlockState,BlockGetter,BlockPos)",
            "StainedGlassBlock stainedGlass(DyeColor)",
            "LeavesBlock leaves()",
            "ShulkerBoxBlock shulkerBox(DyeColor,BlockBehaviour$Properties)",
            "PistonBaseBlock pistonBase(boolean)",
            "int lambda$static$38(BlockState)",
            "int lambda$static$37(BlockState)",
            "int lambda$static$36(BlockState)",
            "ConfiguredFeature lambda$static$35()",
            "ConfiguredFeature lambda$static$34()",
            "int lambda$static$33(BlockState)",
            "int lambda$static$32(BlockState)",
            "int lambda$static$31(BlockState)",
            "int lambda$static$30(BlockState)",
            "boolean lambda$static$29(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$28(BlockState)",
            "boolean lambda$static$27(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$26(BlockState)",
            "int lambda$static$25(BlockState)",
            "int lambda$static$24(BlockState)",
            "int lambda$static$23(BlockState)",
            "int lambda$static$22(BlockState)",
            "int lambda$static$21(BlockState)",
            "int lambda$static$20(BlockState)",
            "int lambda$static$19(BlockState)",
            "int lambda$static$18(BlockState)",
            "int lambda$static$17(BlockState)",
            "int lambda$static$16(BlockState)",
            "int lambda$static$15(BlockState)",
            "int lambda$static$14(BlockState)",
            "int lambda$static$13(BlockState)",
            "boolean lambda$static$12(BlockState,BlockGetter,BlockPos,EntityType)",
            "BlockEntityType lambda$static$11()",
            "int lambda$static$10(BlockState)",
            "int lambda$static$9(BlockState)",
            "int lambda$static$8(BlockState)",
            "int lambda$static$7(BlockState)",
            "int lambda$static$6(BlockState)",
            "int lambda$static$5(BlockState)",
            "boolean lambda$pistonBase$4(BlockState,BlockGetter,BlockPos)",
            "MaterialColor lambda$stem$3(MaterialColor,BlockState)",
            "MaterialColor lambda$log$2(MaterialColor,MaterialColor,BlockState)",
            "MaterialColor lambda$bed$1(DyeColor,BlockState)",
            "int lambda$litBlockEmission$0(int,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BrewingStandBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ButtonBlock",
        "differences": {
          "added": [
            "void <init>(boolean,Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(boolean,BlockBehaviour$Properties)",
            "int getPressDuration()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CactusBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CampfireBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getLightEmission(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CartographyTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CauldronBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChorusPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ComparatorBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ConduitBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CoralFanBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CoralWallFanBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CropBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DaylightDetectorBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DetectorRailBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DiodeBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DispenserBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DragonEggBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "int getDelayAfterPlace()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnchantmentTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndPortalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndRodBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EnderChestBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FallingBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "int getTickDelay(LevelReader)",
            "void onLand(Level,BlockPos,BlockState,BlockState)",
            "void onBroken(Level,BlockPos)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "int getDelayAfterPlace()",
            "void onLand(Level,BlockPos,BlockState,BlockState,FallingBlockEntity)",
            "void onBroken(Level,BlockPos,FallingBlockEntity)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FenceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FletchingTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FlowerPotBlock",
        "differences": {
          "added": [
            "void <init>(Block,Block$Properties)"
          ],
          "removed": [
            "void <init>(Block,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FungusBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Supplier)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Supplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GlassBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GoldBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrassPathBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isViewBlocking(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrindstoneBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Direction,VoxelShape,boolean)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Direction,VoxelShape,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.GrowingPlantHeadBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,Direction,VoxelShape,boolean,double)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,Direction,VoxelShape,boolean,double)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HayBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HopperBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HorizontalDirectionalBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.IceBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.IronBarsBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.JukeboxBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.KelpPlantBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LeavesBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LeverBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LiquidBlock",
        "differences": {
          "added": [
            "void <init>(FlowingFluid,Block$Properties)",
            "int getTickDelay(LevelReader)"
          ],
          "removed": [
            "void <init>(FlowingFluid,BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.RotatedPillarBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SandBlock",
        "differences": {
          "added": [
            "void <init>(int,Block$Properties)",
            "int getDustColor(BlockState)"
          ],
          "removed": [
            "void <init>(int,BlockBehaviour$Properties)",
            "int getDustColor(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ScaffoldingBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Seagrass",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ShulkerBoxBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SignBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,WoodType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,WoodType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SkullBlock",
        "differences": {
          "added": [
            "void <init>(SkullBlock$Type,Block$Properties)"
          ],
          "removed": [
            "void <init>(SkullBlock$Type,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SmithingTableBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SnowLayerBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SnowyDirtBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SoulSandBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void neighborChanged(BlockState,Level,BlockPos,Block,BlockPos,boolean)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)",
            "int getTickDelay(LevelReader)",
            "boolean isValidSpawn(BlockState,BlockGetter,BlockPos,EntityType)",
            "boolean isViewBlocking(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "VoxelShape getVisualShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "BlockState updateShape(BlockState,Direction,BlockState,LevelAccessor,BlockPos,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SpawnerBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SpreadingSnowyDirtBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StainedGlassPaneBlock",
        "differences": {
          "added": [
            "void <init>(DyeColor,Block$Properties)"
          ],
          "removed": [
            "void <init>(DyeColor,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StemBlock",
        "differences": {
          "added": [
            "void <init>(StemGrownBlock,Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(StemGrownBlock,BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StoneButtonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StructureBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StructureVoidBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SweetBerryBushBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TallGrassBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "Block$OffsetType getOffsetType()"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "BlockBehaviour$OffsetType getOffsetType()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TargetBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TorchBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,ParticleOptions)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,ParticleOptions)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TripWireBlock",
        "differences": {
          "added": [
            "void <init>(TripWireHookBlock,Block$Properties)"
          ],
          "removed": [
            "void <init>(TripWireHookBlock,BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TripWireHookBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TurtleEggBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "void tick(BlockState,ServerLevel,BlockPos,Random)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)",
            "void randomTick(BlockState,ServerLevel,BlockPos,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TwistingVinesPlant",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallSignBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,WoodType)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,WoodType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WallTorchBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties,ParticleOptions)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,ParticleOptions)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WebBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WeepingVinesPlant",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WetSpongeBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WitherSkullBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WoodButtonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.MovingPistonBlock",
        "differences": {
          "added": [
            "void <init>(Block$Properties)",
            "boolean isRedstoneConductor(BlockState,BlockGetter,BlockPos)",
            "boolean isSuffocating(BlockState,BlockGetter,BlockPos)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.FlatLevelSource",
        "differences": {
          "added": [],
          "removed": [
            "BlockGetter getBaseColumn(int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator",
        "differences": {
          "added": [],
          "removed": [
            "BlockGetter getBaseColumn(int,int)",
            "int iterateNoiseColumn(int,int,BlockState[],Predicate)",
            "BlockState generateBaseState(double,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature",
        "differences": {
          "added": [],
          "removed": [
            "boolean place(LevelAccessor,Random,BlockPos,BlockPileConfiguration,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction",
        "differences": {
          "added": [
            "LootItemFunction lambda$randomApplicableEnchantment$0(LootItemCondition[])"
          ],
          "removed": [
            "ItemStack enchantItem(ItemStack,Enchantment,Random)",
            "LootItemFunction lambda$randomApplicableEnchantment$1(LootItemCondition[])",
            "boolean lambda$run$0(boolean,ItemStack,Enchantment)"
          ]
        }
      }
    }
  ]
}