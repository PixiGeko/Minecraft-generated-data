{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "19w40a",
        "currentLabel": "19w41a",
        "values": [
          {
            "key": "World version",
            "previous": "2208",
            "current": "2210"
          },
          {
            "key": "Protocol version",
            "previous": "557",
            "current": "558"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "19w40a",
        "currentLabel": "19w41a",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "block_placer_type.txt",
            "block_state_provider_type.txt",
            "foliage_placer_type.txt",
            "tree_decorator_type.txt"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:beehive",
            "minecraft:honey_block",
            "minecraft:honeycomb_block"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "feature",
        "differences": {
          "added": [
            "minecraft:acacia_tree",
            "minecraft:flower",
            "minecraft:random_patch",
            "minecraft:block_pile"
          ],
          "removed": [
            "minecraft:birch_tree",
            "minecraft:super_birch_tree",
            "minecraft:jungle_tree",
            "minecraft:pine_tree",
            "minecraft:savanna_tree",
            "minecraft:spruce_tree",
            "minecraft:swamp_tree",
            "minecraft:mega_pine_tree",
            "minecraft:default_flower",
            "minecraft:forest_flower",
            "minecraft:plain_flower",
            "minecraft:swamp_flower",
            "minecraft:general_forest_flower",
            "minecraft:jungle_grass",
            "minecraft:taiga_grass",
            "minecraft:grass",
            "minecraft:cactus",
            "minecraft:dead_bush",
            "minecraft:hell_fire",
            "minecraft:melon",
            "minecraft:pumpkin",
            "minecraft:reed",
            "minecraft:waterlily",
            "minecraft:hay_pile",
            "minecraft:snow_pile",
            "minecraft:ice_pile",
            "minecraft:melon_pile",
            "minecraft:pumpkin_pile",
            "minecraft:bush",
            "minecraft:double_plant",
            "minecraft:nether_spring",
            "minecraft:sweet_berry_bush"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:beehive",
            "minecraft:honey_block",
            "minecraft:honeycomb_block"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "point_of_interest_type",
        "differences": {
          "added": [
            "minecraft:beehive"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:block.honey_block.break",
            "minecraft:block.honey_block.fall",
            "minecraft:block.honey_block.hit",
            "minecraft:block.honey_block.place",
            "minecraft:block.honey_block.slide",
            "minecraft:block.honey_block.step",
            "minecraft:entity.iron_golem.damage",
            "minecraft:entity.iron_golem.repair"
          ],
          "removed": [
            "minecraft:entity.parrot.imitate.panda"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "universal_tags/block_placer_type.json",
            "universal_tags/block_state_provider_type.json",
            "universal_tags/foliage_placer_type.json",
            "universal_tags/tree_decorator_type.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_with_drop.json",
        "differences": {
          "added": [
            "minecraft:beehive",
            "minecraft:honeycomb_block",
            "minecraft:honey_block"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:beehive",
            "minecraft:honey_block",
            "minecraft:honeycomb_block"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/feature.json",
        "differences": {
          "added": [
            "minecraft:acacia_tree",
            "minecraft:flower",
            "minecraft:random_patch",
            "minecraft:block_pile"
          ],
          "removed": [
            "minecraft:birch_tree",
            "minecraft:super_birch_tree",
            "minecraft:jungle_tree",
            "minecraft:pine_tree",
            "minecraft:savanna_tree",
            "minecraft:spruce_tree",
            "minecraft:swamp_tree",
            "minecraft:mega_pine_tree",
            "minecraft:default_flower",
            "minecraft:forest_flower",
            "minecraft:plain_flower",
            "minecraft:swamp_flower",
            "minecraft:general_forest_flower",
            "minecraft:jungle_grass",
            "minecraft:taiga_grass",
            "minecraft:grass",
            "minecraft:cactus",
            "minecraft:dead_bush",
            "minecraft:hell_fire",
            "minecraft:melon",
            "minecraft:pumpkin",
            "minecraft:reed",
            "minecraft:waterlily",
            "minecraft:hay_pile",
            "minecraft:snow_pile",
            "minecraft:ice_pile",
            "minecraft:melon_pile",
            "minecraft:pumpkin_pile",
            "minecraft:bush",
            "minecraft:double_plant",
            "minecraft:nether_spring",
            "minecraft:sweet_berry_bush"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:beehive",
            "minecraft:honey_block",
            "minecraft:honeycomb_block"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/point_of_interest_type.json",
        "differences": {
          "added": [
            "minecraft:beehive"
          ],
          "removed": [
            "minecraft:bee_hive"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:block.honey_block.break",
            "minecraft:block.honey_block.fall",
            "minecraft:block.honey_block.hit",
            "minecraft:block.honey_block.place",
            "minecraft:block.honey_block.slide",
            "minecraft:block.honey_block.step",
            "minecraft:entity.iron_golem.damage",
            "minecraft:entity.iron_golem.repair"
          ],
          "removed": [
            "minecraft:entity.parrot.imitate.panda"
          ]
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "beehive.json",
            "honeycomb_block.json",
            "honey_block.json"
          ],
          "removed": [
            "bee_hive.json"
          ]
        }
      }
    }
  ],
  "commands": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "spectate.txt"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "beehive.json",
            "honeycomb_block.json",
            "honey_block.json",
            "stripped_acacia_wood.json",
            "stripped_birch_wood.json",
            "stripped_dark_oak_wood.json",
            "stripped_jungle_wood.json",
            "stripped_oak_wood.json",
            "stripped_spruce_wood.json"
          ],
          "removed": [
            "bee_hive.json"
          ]
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "options.key.toggle: Toggle",
            "options.key.hold: Hold",
            "block.minecraft.beehive: Beehive",
            "block.minecraft.honey_block: Honey Block",
            "block.minecraft.honeycomb_block: Honeycomb Block",
            "subtitles.block.honey_block.slide: Sliding down a honey block",
            "subtitles.entity.iron_golem.damage: Iron Golem breaks",
            "subtitles.entity.iron_golem.repair: Iron Golem repaired",
            "commands.spectate.success.stopped: No longer spectating an entity",
            "commands.spectate.success.started: Now spectating %s",
            "commands.spectate.not_spectator: %s is not in spectator mode",
            "commands.spectate.self: Cannot spectate yourself"
          ],
          "removed": [
            "block.minecraft.bee_hive: Bee hive"
          ]
        }
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/recipes/building_blocks/stripped_acacia_wood.json",
            "minecraft/advancements/recipes/building_blocks/stripped_birch_wood.json",
            "minecraft/advancements/recipes/building_blocks/stripped_dark_oak_wood.json",
            "minecraft/advancements/recipes/building_blocks/stripped_jungle_wood.json",
            "minecraft/advancements/recipes/building_blocks/stripped_oak_wood.json",
            "minecraft/advancements/recipes/building_blocks/stripped_spruce_wood.json",
            "minecraft/advancements/recipes/decorations/beehive.json",
            "minecraft/advancements/recipes/decorations/honeycomb_block.json",
            "minecraft/advancements/recipes/decorations/honey_block.json",
            "minecraft/loot_tables/blocks/beehive.json",
            "minecraft/loot_tables/blocks/honeycomb_block.json",
            "minecraft/loot_tables/blocks/honey_block.json",
            "minecraft/recipes/beehive.json",
            "minecraft/recipes/honeycomb_block.json",
            "minecraft/recipes/honey_block.json",
            "minecraft/recipes/stripped_acacia_wood.json",
            "minecraft/recipes/stripped_birch_wood.json",
            "minecraft/recipes/stripped_dark_oak_wood.json",
            "minecraft/recipes/stripped_jungle_wood.json",
            "minecraft/recipes/stripped_oak_wood.json",
            "minecraft/recipes/stripped_spruce_wood.json"
          ],
          "removed": [
            "minecraft/advancements/recipes/decorations/bee_hive.json",
            "minecraft/loot_tables/blocks/bee_hive.json",
            "minecraft/recipes/bee_hive.json",
            "minecraft/tags/blocks/dirt_like.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/beehive.json",
            "minecraft/blockstates/honeycomb_block.json",
            "minecraft/blockstates/honey_block.json",
            "minecraft/models/block/beehive.json",
            "minecraft/models/block/beehive_honey.json",
            "minecraft/models/block/honeycomb_block.json",
            "minecraft/models/block/honey_block.json",
            "minecraft/models/item/beehive.json",
            "minecraft/models/item/honeycomb_block.json",
            "minecraft/models/item/honey_block.json",
            "minecraft/textures/block/beehive_end.png",
            "minecraft/textures/block/beehive_front.png",
            "minecraft/textures/block/beehive_front_honey.png",
            "minecraft/textures/block/beehive_side.png",
            "minecraft/textures/block/honeycomb_block.png",
            "minecraft/textures/block/honey_block_bottom.png",
            "minecraft/textures/block/honey_block_side.png",
            "minecraft/textures/block/honey_block_top.png",
            "minecraft/textures/entity/iron_golem/iron_golem.png",
            "minecraft/textures/entity/iron_golem/iron_golem_crackiness_high.png",
            "minecraft/textures/entity/iron_golem/iron_golem_crackiness_low.png",
            "minecraft/textures/entity/iron_golem/iron_golem_crackiness_medium.png"
          ],
          "removed": [
            "minecraft/blockstates/bee_hive.json",
            "minecraft/models/block/bee_hive.json",
            "minecraft/models/block/bee_hive_honey.json",
            "minecraft/models/item/bee_hive.json",
            "minecraft/textures/block/bee_hive_end.png",
            "minecraft/textures/block/bee_hive_front.png",
            "minecraft/textures/block/bee_hive_front_honey.png",
            "minecraft/textures/block/bee_hive_side.png",
            "minecraft/textures/entity/iron_golem.png"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugVillagerNameGenerator",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.ai.goal.FollowOwnerFlyingGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillage",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToBlockGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinMoveControl",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.Lantern",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$1",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickableBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.AbstractStateHolder",
            "XXX.block.state.BlockState",
            "XXX.block.state.BlockState$Cache",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPattern$PortalInfo",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AbstractProperty",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkGeneratorFactory",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.NetherDimension$1",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.levelgen.ChunkGeneratorSettings",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.FlatLevelSource$FlatLevelBiomeWrapper",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.NetherLevelSource",
            "XXX.level.levelgen.OverworldGeneratorSettings",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.TheEndGeneratorSettings",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.NoneCarverConfiguration",
            "XXX.levelgen.carver.UnderwaterCaveWorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BigTreeFeature$FoliageCoords",
            "XXX.levelgen.feature.BlockBlobConfiguration",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.BushConfiguration",
            "XXX.levelgen.feature.CactusFeature",
            "XXX.levelgen.feature.CountFeatureConfiguration",
            "XXX.levelgen.feature.DeadBushFeature",
            "XXX.levelgen.feature.DecoratedFeatureConfiguration",
            "XXX.levelgen.feature.DecoratorChanceRange",
            "XXX.levelgen.feature.DecoratorCountRange",
            "XXX.levelgen.feature.DefaultFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DoublePlantFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FeatureConfiguration",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.ForestFlowerFeature",
            "XXX.levelgen.feature.GeneralForestFlowerFeature",
            "XXX.levelgen.feature.GrassConfiguration",
            "XXX.levelgen.feature.HellFireFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.IcePatchFeature",
            "XXX.levelgen.feature.IcebergConfiguration",
            "XXX.levelgen.feature.JungleGrassFeature",
            "XXX.levelgen.feature.JunglePyramidFeature$FeatureStart",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.MelonFeature",
            "XXX.levelgen.feature.MineshaftFeature",
            "XXX.levelgen.feature.MineshaftFeature$Type",
            "XXX.levelgen.feature.NetherFortressFeature",
            "XXX.levelgen.feature.NetherSpringFeature",
            "XXX.levelgen.feature.NoneFeatureConfiguration",
            "XXX.levelgen.feature.OreConfiguration",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.PineFeature",
            "XXX.levelgen.feature.PumpkinBlockPileFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomRandomFeature",
            "XXX.levelgen.feature.ReedsFeature",
            "XXX.levelgen.feature.SavannaVillagePools",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.ShipwreckConfiguration",
            "XXX.levelgen.feature.ShipwreckFeature$FeatureStart",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringConfiguration",
            "XXX.levelgen.feature.SpruceFeature",
            "XXX.levelgen.feature.StrongholdFeature$StrongholdStart",
            "XXX.levelgen.feature.StructureFeature$StructureStartFactory",
            "XXX.levelgen.feature.SwampFlowerFeature",
            "XXX.levelgen.feature.SwamplandHutFeature",
            "XXX.levelgen.feature.TaigaGrassFeature",
            "XXX.levelgen.feature.VillageFeature",
            "XXX.levelgen.feature.VillagePieces",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterlilyFeature",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.feature.structures.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.ChanceHeightmapDecorator",
            "XXX.levelgen.placement.ChancePassthroughDecorator",
            "XXX.levelgen.placement.ChorusPlantPlacementDecorator",
            "XXX.levelgen.placement.CountBiasedRangeDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeighmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeightmap32Decorator",
            "XXX.levelgen.placement.CountTopSolidDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceHeightmapDecorator",
            "XXX.levelgen.placement.DecoratorCarvingMaskConfig",
            "XXX.levelgen.placement.DecoratorFrequency",
            "XXX.levelgen.placement.DecoratorFrequencyWithExtraChance",
            "XXX.levelgen.placement.DecoratorRange",
            "XXX.levelgen.placement.LakeChanceDecoratorConfig",
            "XXX.levelgen.placement.MonsterRoomPlacementDecorator",
            "XXX.levelgen.placement.SimpleFeatureDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapNoiseBasedDecorator",
            "XXX.placement.nether.ChanceRangeDecorator",
            "XXX.placement.nether.HellFireDecorator",
            "XXX.placement.nether.MagmaDecorator",
            "XXX.placement.nether.package-info",
            "XXX.levelgen.structure.BeardedStructureStart",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.levelgen.structure.EndCityPieces",
            "XXX.levelgen.structure.EndCityPieces$2",
            "XXX.levelgen.structure.EndCityPieces$4",
            "XXX.levelgen.structure.EndCityPieces$SectionGenerator",
            "XXX.levelgen.structure.IglooPieces$IglooPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$1",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.MineShaftPieces$1",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCrossing",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftRoom",
            "XXX.levelgen.structure.NetherBridgePieces",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeStraight",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorTBalconyPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorCrossingPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleStalkRoom",
            "XXX.levelgen.structure.NetherBridgePieces$NetherBridgePiece",
            "XXX.levelgen.structure.NetherBridgePieces$RoomCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$StartPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$1",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentBuilding",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$RoomDefinition",
            "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart",
            "XXX.levelgen.structure.OceanRuinPieces",
            "XXX.levelgen.structure.PillagerOutpostPieces",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ShipwreckPieces",
            "XXX.levelgen.structure.StrongholdPieces",
            "XXX.levelgen.structure.StrongholdPieces$2",
            "XXX.levelgen.structure.StrongholdPieces$ChestCorridor",
            "XXX.levelgen.structure.StrongholdPieces$FiveCrossing",
            "XXX.levelgen.structure.StrongholdPieces$Library",
            "XXX.levelgen.structure.StrongholdPieces$PortalRoom",
            "XXX.levelgen.structure.StrongholdPieces$RightTurn",
            "XXX.levelgen.structure.StrongholdPieces$SmoothStoneSelector",
            "XXX.levelgen.structure.StrongholdPieces$StartPiece",
            "XXX.levelgen.structure.StrongholdPieces$StraightStairsDown",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.levelgen.structure.StructureFeatureIO",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureStart$1",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.WoodlandMansionPieces$1",
            "XXX.levelgen.structure.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.levelgen.structure.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.FrozenOceanSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GravellyMountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ShatteredSavanaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderBaseConfiguration",
            "XXX.levelgen.surfacebuilders.SwampSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.package-info",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.FlatDataLayer",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage$1",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.FluidStateImpl",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.Material$Builder",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.newbiome.area.AreaFactory",
            "XXX.newbiome.area.package-info",
            "XXX.newbiome.context.Context",
            "XXX.newbiome.context.package-info",
            "XXX.newbiome.layer.AddEdgeLayer",
            "XXX.newbiome.layer.AddEdgeLayer$HeatIce",
            "XXX.newbiome.layer.AddIslandLayer",
            "XXX.newbiome.layer.AddSnowLayer",
            "XXX.newbiome.layer.BiomeInitLayer",
            "XXX.newbiome.layer.Layer",
            "XXX.newbiome.layer.OceanLayer",
            "XXX.newbiome.layer.RareBiomeLargeLayer",
            "XXX.newbiome.layer.RegionHillsLayer",
            "XXX.newbiome.layer.RiverInitLayer",
            "XXX.newbiome.layer.RiverMixerLayer",
            "XXX.newbiome.layer.SmoothLayer",
            "XXX.newbiome.layer.ZoomLayer$1",
            "XXX.layer.traits.AreaTransformer0",
            "XXX.layer.traits.AreaTransformer2",
            "XXX.layer.traits.C0Transformer",
            "XXX.layer.traits.CastleTransformer",
            "XXX.layer.traits.DimensionOffset1Transformer",
            "XXX.layer.traits.PixelTransformer",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SaveDataDirtyRunnable",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$1",
            "XXX.level.storage.McRegionUpgrader",
            "XXX.storage.loot.BinomialDistributionGenerator",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ConstantIntValue$Serializer",
            "XXX.storage.loot.IntLimiter$1",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootPool$1",
            "XXX.storage.loot.LootPool$Serializer",
            "XXX.storage.loot.LootTable$1",
            "XXX.storage.loot.LootTable$Serializer",
            "XXX.storage.loot.PredicateManager",
            "XXX.storage.loot.RandomIntGenerators",
            "XXX.storage.loot.RandomValueBounds$Serializer",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$1",
            "XXX.loot.entries.CompositeEntryBase$Serializer",
            "XXX.loot.entries.DynamicLoot$1",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EmptyLootItem$Serializer",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootItem$1",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootPoolSingletonContainer$Serializer",
            "XXX.loot.entries.LootTableReference$1",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.TagEntry$Serializer",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaDeserializer",
            "XXX.loot.functions.ApplyBonusCount$Serializer",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.ApplyExplosionDecay$Serializer",
            "XXX.loot.functions.CopyBlockState$1",
            "XXX.loot.functions.CopyBlockState$Serializer",
            "XXX.loot.functions.CopyNameFunction$1",
            "XXX.loot.functions.CopyNameFunction$Serializer",
            "XXX.loot.functions.CopyNbtFunction$1",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Serializer",
            "XXX.loot.functions.EnchantRandomlyFunction$1",
            "XXX.loot.functions.EnchantRandomlyFunction$Serializer",
            "XXX.loot.functions.EnchantWithLevelsFunction$1",
            "XXX.loot.functions.EnchantWithLevelsFunction$Serializer",
            "XXX.loot.functions.ExplorationMapFunction$1",
            "XXX.loot.functions.ExplorationMapFunction$Serializer",
            "XXX.loot.functions.FillPlayerHead$Serializer",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LimitCount$Serializer",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemConditionalFunction$Serializer",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetContainerLootTable$Serializer",
            "XXX.loot.functions.SetItemCountFunction$1",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetItemDamageFunction$Serializer",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetNameFunction$Serializer",
            "XXX.loot.functions.SetNbtFunction$1",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.SmeltItemFunction$Serializer",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AlternativeLootItemCondition",
            "XXX.loot.predicates.AlternativeLootItemCondition$Builder",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.BonusLevelTableCondition$Serializer",
            "XXX.loot.predicates.ConditionReference$Serializer",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.DamageSourceCondition$Serializer",
            "XXX.loot.predicates.EntityHasScoreCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition$Serializer",
            "XXX.loot.predicates.ExplosionCondition$Serializer",
            "XXX.loot.predicates.InvertedLootItemCondition$1",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemCondition$Serializer",
            "XXX.loot.predicates.LootItemConditions$Serializer",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$1",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$1",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.loot.predicates.package-info",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.PosAndRot",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ],
          "removed": [
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquippedItemPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.InteractableDoorsSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LogBlock",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShearableDoublePlantBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulsandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.AbstractStateHolder$1",
            "XXX.block.state.BlockState$1",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGeneratorType",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.Dimension",
            "XXX.level.dimension.NetherDimension",
            "XXX.level.dimension.NormalDimension",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.TheEndDimension",
            "XXX.level.dimension.package-info",
            "XXX.level.levelgen.DebugGeneratorSettings",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.NetherGeneratorSettings",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.OverworldLevelSource",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.TheEndLevelSource",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.HellCaveWorldCarver",
            "XXX.levelgen.carver.UnderwaterCanyonWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.feature.AbstractFlowerFeature",
            "XXX.levelgen.feature.AbstractSmallTreeFeature",
            "XXX.levelgen.feature.AcaciaFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.DarkOakFeature",
            "XXX.levelgen.feature.DecoratedFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.DesertVillagePools",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.FancyTreeFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.JunglePyramidFeature",
            "XXX.levelgen.feature.MineshaftFeature$MineShaftStart",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.ShipwreckFeature",
            "XXX.levelgen.feature.SimulatedFeature",
            "XXX.levelgen.feature.SpikeFeature$1",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.StrongholdFeature",
            "XXX.levelgen.feature.StructureFeature",
            "XXX.levelgen.feature.StructurePieceType",
            "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart",
            "XXX.levelgen.feature.VillageFeature$FeatureStart",
            "XXX.levelgen.feature.VillagePieces$VillagePiece",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.feature.blockplacers.BlockPlacer",
            "XXX.feature.blockplacers.ColumnPlacer",
            "XXX.feature.blockplacers.SimpleBlockPlacer",
            "XXX.feature.configurations.BlockBlobConfiguration",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.ChanceRangeDecoratorConfiguration",
            "XXX.feature.configurations.CountRangeDecoratorConfiguration",
            "XXX.feature.configurations.DecoratorConfiguration",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.FeatureRadiusConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.MegaTreeConfiguration$MegaTreeConfigurationBuilder",
            "XXX.feature.configurations.NoiseDependantDecoratorConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$1",
            "XXX.feature.configurations.RandomRandomFeatureConfiguration",
            "XXX.feature.configurations.SeagrassFeatureConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SmallTreeConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.VillageConfiguration",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.ForestFlowerProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$1",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.StructureTemplatePools",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.placement.CarvingMaskDecorator",
            "XXX.levelgen.placement.ChanceDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.ChanceTopSolidHeightmapDecorator",
            "XXX.levelgen.placement.ConfiguredDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDecorator",
            "XXX.levelgen.placement.CountDepthAverageDecorator",
            "XXX.levelgen.placement.CountHeight64Decorator",
            "XXX.levelgen.placement.CountHeightmapDecorator",
            "XXX.levelgen.placement.CountVeryBiasedRangeDecorator",
            "XXX.levelgen.placement.DarkOakTreePlacementDecorator",
            "XXX.levelgen.placement.FrequencyDecoratorConfiguration",
            "XXX.levelgen.placement.IcebergPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.RangeDecoratorConfiguration",
            "XXX.levelgen.placement.TopSolidHeightMapDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapRangeDecorator",
            "XXX.placement.nether.CountRangeDecorator",
            "XXX.placement.nether.LightGemChanceDecorator",
            "XXX.placement.nether.RandomCountRangeDecorator",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuriedTreasurePieces",
            "XXX.levelgen.structure.DesertPyramidPiece",
            "XXX.levelgen.structure.EndCityPieces$1",
            "XXX.levelgen.structure.EndCityPieces$3",
            "XXX.levelgen.structure.EndCityPieces$EndCityPiece",
            "XXX.levelgen.structure.IglooPieces",
            "XXX.levelgen.structure.JunglePyramidPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$MossStoneSelector",
            "XXX.levelgen.structure.MineShaftPieces",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftPiece",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs",
            "XXX.levelgen.structure.NetherBridgePieces$1",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone",
            "XXX.levelgen.structure.NetherBridgePieces$PieceWeight",
            "XXX.levelgen.structure.NetherBridgePieces$StairsRoom",
            "XXX.levelgen.structure.OceanMonumentPieces",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.levelgen.structure.OceanRuinFeature",
            "XXX.levelgen.structure.OceanRuinFeature$Type",
            "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
            "XXX.levelgen.structure.PillagerOutpostPieces$PillagerOutpostPiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
            "XXX.levelgen.structure.StrongholdPieces$1",
            "XXX.levelgen.structure.StrongholdPieces$3",
            "XXX.levelgen.structure.StrongholdPieces$FillerCorridor",
            "XXX.levelgen.structure.StrongholdPieces$LeftTurn",
            "XXX.levelgen.structure.StrongholdPieces$PieceWeight",
            "XXX.levelgen.structure.StrongholdPieces$PrisonHall",
            "XXX.levelgen.structure.StrongholdPieces$RoomCrossing",
            "XXX.levelgen.structure.StrongholdPieces$StairsDown",
            "XXX.levelgen.structure.StrongholdPieces$Straight",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece",
            "XXX.levelgen.structure.StrongholdPieces$Turn",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.SwamplandHutPiece",
            "XXX.levelgen.structure.WoodlandMansionPieces",
            "XXX.levelgen.structure.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$PlacementData",
            "XXX.levelgen.structure.WoodlandMansionPieces$SimpleGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructureManager",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.package-info",
            "XXX.levelgen.surfacebuilders.ConfiguredSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ErodedBadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GiantTreeTaigaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.MountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NopeSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderConfiguration",
            "XXX.levelgen.surfacebuilders.WoodedBadlandsSurfaceBuilder",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.SurfaceNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$2",
            "XXX.level.lighting.LayerLightEngine",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$1",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.Material",
            "XXX.level.material.MaterialColor",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.newbiome.area.Area",
            "XXX.newbiome.area.LazyArea",
            "XXX.newbiome.context.BigContext",
            "XXX.newbiome.context.LazyAreaContext",
            "XXX.newbiome.layer.AddDeepOceanLayer",
            "XXX.newbiome.layer.AddEdgeLayer$CoolWarm",
            "XXX.newbiome.layer.AddEdgeLayer$IntroduceSpecial",
            "XXX.newbiome.layer.AddMushroomIslandLayer",
            "XXX.newbiome.layer.BiomeEdgeLayer",
            "XXX.newbiome.layer.IslandLayer",
            "XXX.newbiome.layer.Layers",
            "XXX.newbiome.layer.OceanMixerLayer",
            "XXX.newbiome.layer.RareBiomeSpotLayer",
            "XXX.newbiome.layer.RemoveTooMuchOceanLayer",
            "XXX.newbiome.layer.RiverLayer",
            "XXX.newbiome.layer.ShoreLayer",
            "XXX.newbiome.layer.ZoomLayer",
            "XXX.newbiome.layer.package-info",
            "XXX.layer.traits.AreaTransformer1",
            "XXX.layer.traits.BishopTransformer",
            "XXX.layer.traits.C1Transformer",
            "XXX.layer.traits.DimensionOffset0Transformer",
            "XXX.layer.traits.DimensionTransformer",
            "XXX.layer.traits.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.TurtleNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelStorage",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.PlayerIO",
            "XXX.storage.loot.BinomialDistributionGenerator$Serializer",
            "XXX.storage.loot.ConstantIntValue",
            "XXX.storage.loot.IntLimiter",
            "XXX.storage.loot.IntLimiter$Serializer",
            "XXX.storage.loot.LootContext$1",
            "XXX.storage.loot.LootContext$DynamicDrop",
            "XXX.storage.loot.LootContext$EntityTarget$Serializer",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.storage.loot.LootTables",
            "XXX.storage.loot.RandomIntGenerator",
            "XXX.storage.loot.RandomValueBounds",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.DynamicLoot$Serializer",
            "XXX.loot.entries.EmptyLootItem$1",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootItem$Serializer",
            "XXX.loot.entries.LootPoolEntries$Serializer",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryContainer$Serializer",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.LootTableReference$Serializer",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.ApplyExplosionDecay$1",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$DataSource",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LimitCount$1",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunction$Serializer",
            "XXX.loot.functions.LootItemFunctions$Serializer",
            "XXX.loot.functions.LootingEnchantFunction$1",
            "XXX.loot.functions.LootingEnchantFunction$Serializer",
            "XXX.loot.functions.SetAttributesFunction$1",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetAttributesFunction$Serializer",
            "XXX.loot.functions.SetContainerContents$1",
            "XXX.loot.functions.SetContainerContents$Serializer",
            "XXX.loot.functions.SetContainerLootTable$1",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemCountFunction$Serializer",
            "XXX.loot.functions.SetItemDamageFunction$1",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetLoreFunction$Serializer",
            "XXX.loot.functions.SetNameFunction$1",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetNbtFunction$Serializer",
            "XXX.loot.functions.SetStewEffectFunction$1",
            "XXX.loot.functions.SetStewEffectFunction$Serializer",
            "XXX.loot.functions.SmeltItemFunction$1",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$1",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AlternativeLootItemCondition$1",
            "XXX.loot.predicates.AlternativeLootItemCondition$Serializer",
            "XXX.loot.predicates.BonusLevelTableCondition$1",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.DamageSourceCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.InvertedLootItemCondition$Serializer",
            "XXX.loot.predicates.LocationCheck$Serializer",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$1",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceCondition$1",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$Serializer",
            "XXX.loot.predicates.MatchTool$Serializer",
            "XXX.loot.predicates.TimeCheck$1",
            "XXX.loot.predicates.TimeCheck$Serializer",
            "XXX.loot.predicates.WeatherCheck$1",
            "XXX.loot.predicates.WeatherCheck$Serializer",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.IntPointRange",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.WorldRegionIndirectVoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.math.Matrix3f \u001b[2;32m+1M\u001b[0m",
          "XXX.mojang.math.Quaternion \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.mojang.math.Vector3f \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.core.BlockPos \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.core.BlockPos$MutableBlockPos \u001b[2;32m+1M\u001b[0m",
          "XXX.server.level.ServerLevel \u001b[2;32m+5M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.util.datafix.DataFixers \u001b[2;32m+2M\u001b[0m",
          "XXX.world.entity.Entity \u001b[2;32m+18M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.entity.FlyingMob \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.entity.LivingEntity \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.ai.behavior.MoveToSkySeeingSpot \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.ai.behavior.WeightedList \u001b[2;32m+13M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.ai.behavior.WeightedList$WeightedEntry \u001b[2;32m+3M\u001b[0m",
          "XXX.entity.animal.Ocelot \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.Parrot \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.animal.horse.AbstractHorse \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.animal.horse.Llama \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.boss.wither.WitherBoss \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.item.FallingBlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.monster.Creeper \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.monster.MagmaCube \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.biome.BiomeDefaultFeatures \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+119P\u001b[0m",
          "XXX.level.block.BeehiveBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.ChorusPlantFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.DiskReplaceFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.GroundBushFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.levelgen.feature.HugeRedMushroomFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.KelpFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.MegaJungleTreeFeature \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.levelgen.feature.MegaTreeFeature \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;31m-4P\u001b[0m",
          "XXX.levelgen.feature.ReplaceBlockFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.SimpleBlockFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.TreeFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-8M\u001b[0m | \u001b[2;31m-6P\u001b[0m",
          "XXX.levelgen.placement.EmeraldPlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.placement.EndIslandPlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.placement.ForestRockPlacementDecorator \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.levelgen.placement.LakeWaterPlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.placement.NoiseHeightmapDoubleDecorator \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Matrix3f",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(float[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Quaternion",
        "differences": {
          "added": [
            "void <init>()"
          ],
          "removed": [
            "void <init>(float[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Vector3f",
        "differences": {
          "added": [
            "Quaternion rotation(float,boolean)"
          ],
          "removed": [
            "Quaternion rotationDegrees(float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.BlockPos",
        "differences": {
          "added": [],
          "removed": [
            "Stream betweenClosedStream(BoundingBox)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.BlockPos$MutableBlockPos",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ServerLevel",
        "differences": {
          "added": [
            "void lambda$tick$7(Entity)",
            "void lambda$tick$6(ServerPlayer)"
          ],
          "removed": [
            "void wakeUpAllPlayers()",
            "void clearBlockEvents(BoundingBox)",
            "boolean lambda$clearBlockEvents$15(BoundingBox,BlockEventData)",
            "void lambda$wakeUpAllPlayers$7(ServerPlayer)",
            "void lambda$tick$6(Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.datafix.DataFixers",
        "differences": {
          "added": [],
          "removed": [
            "String lambda$addFixers$25(String)",
            "String lambda$addFixers$24(String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.Entity",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "void refreshBoundingBox()",
            "BlockPos getOnPos()",
            "float getJumpFactor()",
            "float getSpeedFactor()",
            "BlockPos getBlockPosBelowThatAffectsMyMovement()",
            "boolean causeFallDamage(float,float)",
            "Component getTypeName()",
            "double getX()",
            "double getX(double)",
            "double getRandomX(double)",
            "double getY()",
            "double getY(double)",
            "double getRandomY()",
            "double getEyeY()",
            "double getZ()",
            "double getZ(double)",
            "double getRandomZ(double)",
            "void setPosRaw(double,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.FlyingMob",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.LivingEntity",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)",
            "int calculateFallDamage(float,float)",
            "void playBlockFallSound()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.MoveToSkySeeingSpot",
        "differences": {
          "added": [
            "boolean hasNoBlocksAbove(ServerLevel,LivingEntity)"
          ],
          "removed": [
            "boolean hasNoBlocksAbove(ServerLevel,LivingEntity,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.WeightedList",
        "differences": {
          "added": [
            "void add(Object,int)",
            "void shuffle()",
            "void lambda$shuffle$0(WeightedList$WeightedEntry)"
          ],
          "removed": [
            "void <init>(Dynamic,Function)",
            "Object serialize(DynamicOps,Function)",
            "WeightedList add(Object,int)",
            "WeightedList shuffle()",
            "WeightedList shuffle(Random)",
            "Stream streamEntries()",
            "Object getOne()",
            "Object getOne(Random)",
            "double lambda$shuffle$4(Object)",
            "void lambda$shuffle$3(Random,WeightedList$WeightedEntry)",
            "Object lambda$serialize$2(DynamicOps,Function,WeightedList$WeightedEntry)",
            "void lambda$new$1(Function,Dynamic)",
            "WeightedList lambda$null$0(Function,Dynamic,Dynamic)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.WeightedList$WeightedEntry",
        "differences": {
          "added": [],
          "removed": [
            "int getWeight()",
            "double access$100(WeightedList$WeightedEntry)",
            "void access$200(WeightedList$WeightedEntry,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Ocelot",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Parrot",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.horse.AbstractHorse",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)",
            "int calculateFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.horse.Llama",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.boss.wither.WitherBoss",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.item.FallingBlockEntity",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Creeper",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.MagmaCube",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeDefaultFeatures",
        "differences": {
          "added": [],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BeehiveBlock",
        "differences": {
          "added": [
            "void releaseBeesAndResetState(Level,BlockState,BlockPos,Player)"
          ],
          "removed": [
            "void releaseBeesAndResetState(Level,BlockState,BlockPos,Player,BeehiveBlockEntity$BeeReleaseStatus)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ChorusPlantFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.DiskReplaceFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,DiskConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,DiskConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.GroundBushFeature",
        "differences": {
          "added": [
            "void <init>(Function,BlockState,BlockState)",
            "boolean doPlace(Set,LevelSimulatedRW,Random,BlockPos,BoundingBox)"
          ],
          "removed": [
            "void <init>(Function)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.HugeRedMushroomFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,HugeMushroomFeatureConfig)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "void makeCap(LevelAccessor,Random,BlockPos,int,BlockPos$MutableBlockPos,HugeMushroomFeatureConfiguration)",
            "int getTreeRadiusForHeight(int,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.KelpFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.MegaJungleTreeFeature",
        "differences": {
          "added": [
            "void <init>(Function,boolean,int,int,BlockState,BlockState)",
            "boolean doPlace(Set,LevelSimulatedRW,Random,BlockPos,BoundingBox)",
            "void placeVine(LevelSimulatedRW,Random,BlockPos,BooleanProperty)",
            "void createCrown(LevelSimulatedRW,BlockPos,int,BoundingBox,Set)"
          ],
          "removed": [
            "void <init>(Function)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,MegaTreeConfiguration)",
            "void createCrown(LevelSimulatedRW,Random,BlockPos,int,Set,BoundingBox,TreeConfiguration)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.MegaTreeFeature",
        "differences": {
          "added": [
            "void <init>(Function,boolean,int,int,BlockState,BlockState)",
            "int calcTreeHeigth(Random)",
            "void placeDoubleTrunkLeaves(LevelSimulatedRW,BlockPos,int,BoundingBox,Set)",
            "void placeSingleTrunkLeaves(LevelSimulatedRW,BlockPos,int,BoundingBox,Set)"
          ],
          "removed": [
            "void <init>(Function)",
            "int calcTreeHeigth(Random,MegaTreeConfiguration)",
            "void placeDoubleTrunkLeaves(LevelSimulatedRW,Random,BlockPos,int,Set,BoundingBox,TreeConfiguration)",
            "void placeSingleTrunkLeaves(LevelSimulatedRW,Random,BlockPos,int,Set,BoundingBox,TreeConfiguration)",
            "void placeTrunk(LevelSimulatedRW,Random,BlockPos,int,Set,BoundingBox,MegaTreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ReplaceBlockFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,ReplaceBlockConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,ReplaceBlockConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SimpleBlockFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,SimpleBlockConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,SimpleBlockConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.TreeFeature",
        "differences": {
          "added": [
            "void <init>(Function,boolean)",
            "void <init>(Function,boolean,int,BlockState,BlockState,boolean)",
            "boolean doPlace(Set,LevelSimulatedRW,Random,BlockPos,BoundingBox)",
            "int getTreeHeight(Random)",
            "void placeCocoa(LevelWriter,int,BlockPos,Direction)",
            "void addVine(LevelWriter,BlockPos,BooleanProperty)",
            "void addHangingVine(LevelSimulatedRW,BlockPos,BooleanProperty)",
            "void <clinit>()"
          ],
          "removed": [
            "void <init>(Function)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,SmallTreeConfiguration)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.EmeraldPlacementDecorator",
        "differences": {
          "added": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.EndIslandPlacementDecorator",
        "differences": {
          "added": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.ForestRockPlacementDecorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorFrequency,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,LevelAccessor,BlockPos,int)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,FrequencyDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,BlockPos,LevelAccessor,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.LakeWaterPlacementDecorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,LakeChanceDecoratorConfig,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,ChanceDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.NoiseHeightmapDoubleDecorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorNoiseDependant,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,LevelAccessor,BlockPos,int)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,NoiseDependantDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,BlockPos,LevelAccessor,int)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.blaze3d.platform.GlStateManager$CullState",
            "XXX.blaze3d.platform.GlStateManager$DestFactor",
            "XXX.blaze3d.platform.GlStateManager$FogMode",
            "XXX.blaze3d.platform.GlStateManager$LogicOp",
            "XXX.blaze3d.platform.GlStateManager$SourceFactor",
            "XXX.blaze3d.platform.GlStateManager$StencilState",
            "XXX.blaze3d.platform.GlStateManager$TexGenCoord",
            "XXX.blaze3d.platform.GlStateManager$TextureState",
            "XXX.blaze3d.platform.GlUtil",
            "XXX.blaze3d.platform.InputConstants$1",
            "XXX.blaze3d.platform.InputConstants$Type",
            "XXX.blaze3d.platform.MemoryTracker",
            "XXX.blaze3d.platform.MonitorCreator",
            "XXX.blaze3d.platform.NativeImage$1",
            "XXX.blaze3d.platform.NativeImage$InternalGlFormat",
            "XXX.blaze3d.platform.PngInfo",
            "XXX.blaze3d.platform.PngInfo$StbReader",
            "XXX.blaze3d.platform.PngInfo$StbReaderSeekableByteChannel",
            "XXX.blaze3d.platform.SnooperAccess",
            "XXX.blaze3d.platform.VideoMode",
            "XXX.blaze3d.platform.WindowEventHandler",
            "XXX.blaze3d.shaders.BlendMode",
            "XXX.blaze3d.shaders.Program",
            "XXX.blaze3d.shaders.ProgramManager",
            "XXX.blaze3d.systems.RenderSystem",
            "XXX.blaze3d.vertex.BreakingTextureGenerator$1",
            "XXX.blaze3d.vertex.BufferBuilder$1",
            "XXX.blaze3d.vertex.BufferBuilder$State",
            "XXX.blaze3d.vertex.BufferVertexConsumer",
            "XXX.blaze3d.vertex.DefaultedVertexConsumer",
            "XXX.blaze3d.vertex.Tesselator",
            "XXX.blaze3d.vertex.VertexConsumer",
            "XXX.blaze3d.vertex.VertexFormatElement",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage",
            "XXX.blaze3d.vertex.VertexMultiConsumer",
            "XXX.mojang.math.Matrix4f",
            "XXX.mojang.math.Transformation",
            "XXX.mojang.math.Vector3f",
            "XXX.mojang.realmsclient.KeyCombo",
            "XXX.mojang.realmsclient.RealmsMainScreen$1",
            "XXX.mojang.realmsclient.RealmsMainScreen$11",
            "XXX.mojang.realmsclient.RealmsMainScreen$2",
            "XXX.mojang.realmsclient.RealmsMainScreen$4",
            "XXX.mojang.realmsclient.RealmsMainScreen$6",
            "XXX.mojang.realmsclient.RealmsMainScreen$8",
            "XXX.mojang.realmsclient.RealmsMainScreen$CloseButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$PendingInvitesButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionListEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$ShowPopupButton",
            "XXX.realmsclient.client.FileDownload$1",
            "XXX.realmsclient.client.FileDownload$ProgressListener",
            "XXX.realmsclient.client.FileUpload",
            "XXX.realmsclient.client.Ping",
            "XXX.realmsclient.client.RealmsClient",
            "XXX.realmsclient.client.RealmsClient$Environment",
            "XXX.realmsclient.client.RealmsError",
            "XXX.realmsclient.client.Request$Delete",
            "XXX.realmsclient.client.Request$Post",
            "XXX.realmsclient.client.UploadStatus",
            "XXX.realmsclient.dto.BackupList",
            "XXX.realmsclient.dto.PendingInvite",
            "XXX.realmsclient.dto.PingResult",
            "XXX.realmsclient.dto.RealmsDescriptionDto",
            "XXX.realmsclient.dto.RealmsServer",
            "XXX.realmsclient.dto.RealmsServer$State",
            "XXX.realmsclient.dto.RealmsServerAddress",
            "XXX.realmsclient.dto.RealmsServerPing",
            "XXX.realmsclient.dto.RealmsServerPlayerLists",
            "XXX.realmsclient.dto.RealmsWorldResetDto",
            "XXX.realmsclient.dto.ServerActivity",
            "XXX.realmsclient.dto.Subscription",
            "XXX.realmsclient.dto.UploadInfo",
            "XXX.realmsclient.dto.WorldDownload",
            "XXX.realmsclient.dto.WorldTemplate$WorldTemplateType",
            "XXX.realmsclient.exception.RealmsDefaultUncaughtExceptionHandler",
            "XXX.realmsclient.exception.RealmsServiceException",
            "XXX.realmsclient.gui.ChatFormatting",
            "XXX.realmsclient.gui.RealmsConstants",
            "XXX.realmsclient.gui.RealmsDataFetcher$1",
            "XXX.realmsclient.gui.RealmsDataFetcher$PendingInviteUpdateTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$Task",
            "XXX.realmsclient.gui.RealmsDataFetcher$UnreadNewsTask",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Action",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$State",
            "XXX.gui.screens.RealmsBackupInfoScreen",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.gui.screens.RealmsBackupScreen$1",
            "XXX.gui.screens.RealmsBackupScreen$3",
            "XXX.gui.screens.RealmsBackupScreen$5",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionListEntry",
            "XXX.gui.screens.RealmsBrokenWorldScreen$1",
            "XXX.gui.screens.RealmsBrokenWorldScreen$DownloadButton",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen$2",
            "XXX.gui.screens.RealmsConfigureWorldScreen$4",
            "XXX.gui.screens.RealmsConfigureWorldScreen$6",
            "XXX.gui.screens.RealmsConfigureWorldScreen$8",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsConfirmScreen$2",
            "XXX.gui.screens.RealmsCreateRealmScreen$1",
            "XXX.gui.screens.RealmsCreateTrialScreen",
            "XXX.gui.screens.RealmsCreateTrialScreen$2",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$1",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsInviteScreen",
            "XXX.gui.screens.RealmsInviteScreen$2",
            "XXX.gui.screens.RealmsLongConfirmationScreen$1",
            "XXX.gui.screens.RealmsLongConfirmationScreen$3",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen$2",
            "XXX.gui.screens.RealmsNotificationsScreen$1",
            "XXX.gui.screens.RealmsParentalConsentScreen$1",
            "XXX.gui.screens.RealmsParentalConsentScreen$3",
            "XXX.gui.screens.RealmsPendingInvitesScreen$1",
            "XXX.gui.screens.RealmsPendingInvitesScreen$3",
            "XXX.gui.screens.RealmsPendingInvitesScreen$5",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionList",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$AcceptRowButton",
            "XXX.gui.screens.RealmsPlayerScreen",
            "XXX.gui.screens.RealmsPlayerScreen$2",
            "XXX.gui.screens.RealmsPlayerScreen$4",
            "XXX.gui.screens.RealmsPlayerScreen$InvitedObjectSelectionListEntry",
            "XXX.gui.screens.RealmsResetNormalWorldScreen$1",
            "XXX.gui.screens.RealmsResetNormalWorldScreen$3",
            "XXX.gui.screens.RealmsResetWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$2",
            "XXX.gui.screens.RealmsResetWorldScreen$4",
            "XXX.gui.screens.RealmsResetWorldScreen$6",
            "XXX.gui.screens.RealmsResetWorldScreen$8",
            "XXX.gui.screens.RealmsResetWorldScreen$FrameButton",
            "XXX.gui.screens.RealmsResetWorldScreen$ResetWorldInfo",
            "XXX.gui.screens.RealmsScreenWithCallback",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$1",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$WorldListEntry",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$2",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$4",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList",
            "XXX.gui.screens.RealmsSettingsScreen",
            "XXX.gui.screens.RealmsSettingsScreen$2",
            "XXX.gui.screens.RealmsSlotOptionsScreen",
            "XXX.gui.screens.RealmsSlotOptionsScreen$10",
            "XXX.gui.screens.RealmsSlotOptionsScreen$3",
            "XXX.gui.screens.RealmsSlotOptionsScreen$5",
            "XXX.gui.screens.RealmsSlotOptionsScreen$7",
            "XXX.gui.screens.RealmsSlotOptionsScreen$9",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$2",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$4",
            "XXX.gui.screens.RealmsTermsScreen$1",
            "XXX.gui.screens.RealmsUploadScreen",
            "XXX.gui.screens.RealmsUploadScreen$2",
            "XXX.gui.screens.UploadResult",
            "XXX.realmsclient.util.JsonUtils",
            "XXX.realmsclient.util.RealmsPersistence$1",
            "XXX.realmsclient.util.RealmsTasks",
            "XXX.realmsclient.util.RealmsTasks$DownloadTask",
            "XXX.realmsclient.util.RealmsTasks$RealmsConnectTask",
            "XXX.realmsclient.util.RealmsTasks$ResettingWorldTask",
            "XXX.realmsclient.util.RealmsTasks$SwitchMinigameTask",
            "XXX.realmsclient.util.RealmsTasks$TrialCreationTask",
            "XXX.realmsclient.util.RealmsTextureManager",
            "XXX.realmsclient.util.RealmsTextureManager$RealmsTexture",
            "XXX.realmsclient.util.RealmsUtil$1",
            "XXX.realmsclient.util.TextRenderingUtils",
            "XXX.realmsclient.util.TextRenderingUtils$LineSegment",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.Util",
            "net.minecraft.Util$IdentityStrategy",
            "net.minecraft.Util$OS$1",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementList$Listener",
            "XXX.minecraft.advancements.AdvancementProgress$Serializer",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.minecraft.advancements.RequirementsStrategy",
            "XXX.advancements.critereon.AbstractCriterionTriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.EntityTypePredicate$TagPredicate",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.client.AttackIndicatorStatus",
            "XXX.minecraft.client.Camera",
            "XXX.minecraft.client.ClientRecipeBook",
            "XXX.minecraft.client.CycleOption",
            "XXX.minecraft.client.FullscreenResolutionProgressOption",
            "XXX.minecraft.client.Game$Metrics",
            "XXX.minecraft.client.HotbarManager",
            "XXX.minecraft.client.KeyMapping$1",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$2",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.ProgressOption",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.Timer",
            "XXX.gui.screens.OutOfMemoryScreen",
            "XXX.gui.screens.PauseScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetInfo",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList$Entry",
            "XXX.gui.screens.ReceivingLevelScreen",
            "XXX.gui.screens.ShareToLanScreen",
            "XXX.gui.screens.SoundOptionsScreen",
            "XXX.gui.screens.VideoSettingsScreen",
            "XXX.screens.achievement.StatsScreen",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRow",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList$MobRow",
            "XXX.screens.achievement.package-info",
            "XXX.screens.advancements.AdvancementTabType",
            "XXX.screens.advancements.AdvancementWidget",
            "XXX.screens.advancements.AdvancementsScreen",
            "XXX.screens.controls.ControlList",
            "XXX.screens.controls.ControlList$CategoryEntry",
            "XXX.screens.controls.ControlList$KeyEntry",
            "XXX.screens.controls.ControlList$KeyEntry$2",
            "XXX.screens.controls.package-info",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$1",
            "XXX.screens.inventory.AbstractContainerScreen",
            "XXX.screens.inventory.AnvilScreen",
            "XXX.screens.inventory.BeaconScreen$1",
            "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton",
            "XXX.screens.inventory.BeaconScreen$BeaconScreenButton",
            "XXX.screens.inventory.BlastFurnaceScreen",
            "XXX.screens.inventory.BookEditScreen$Pos2i",
            "XXX.screens.inventory.BookViewScreen$1",
            "XXX.screens.inventory.BookViewScreen$WritableBookAccess",
            "XXX.screens.inventory.BrewingStandScreen",
            "XXX.screens.inventory.CommandBlockEditScreen",
            "XXX.screens.inventory.ContainerScreen",
            "XXX.screens.inventory.CreativeInventoryListener",
            "XXX.screens.inventory.CreativeModeInventoryScreen$CustomCreativeSlot",
            "XXX.screens.inventory.CreativeModeInventoryScreen$SlotWrapper",
            "XXX.screens.inventory.EffectRenderingInventoryScreen",
            "XXX.screens.inventory.EnchantmentScreen",
            "XXX.screens.inventory.GrindstoneScreen",
            "XXX.screens.inventory.HorseInventoryScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen",
            "XXX.screens.inventory.LecternScreen$1",
            "XXX.screens.inventory.MenuAccess",
            "XXX.screens.inventory.MerchantScreen$TradeOfferButton",
            "XXX.screens.inventory.PageButton",
            "XXX.screens.inventory.SignEditScreen",
            "XXX.screens.inventory.StonecutterScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$1",
            "XXX.screens.inventory.package-info",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.resourcepacks.ResourcePackSelectScreen",
            "XXX.resourcepacks.lists.AvailableResourcePackList",
            "XXX.resourcepacks.lists.ResourcePackList$ResourcePackEntry",
            "XXX.resourcepacks.lists.package-info",
            "XXX.screens.stream.package-info",
            "XXX.screens.worldselection.CreateWorldScreen$1",
            "XXX.screens.worldselection.EditWorldScreen",
            "XXX.screens.worldselection.SelectWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList$WorldListEntry",
            "XXX.gui.spectator.PlayerMenuItem",
            "XXX.gui.spectator.SpectatorMenu",
            "XXX.gui.spectator.SpectatorMenu$CloseSpectatorItem",
            "XXX.gui.spectator.SpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenuListener",
            "XXX.spectator.categories.TeleportToPlayerMenuCategory",
            "XXX.spectator.categories.TeleportToTeamMenuCategory$TeamSelectionItem",
            "XXX.gui.spectator.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$ServerData",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.package-info",
            "XXX.client.map.Map",
            "XXX.client.map.Map$2",
            "XXX.client.map.Map$4",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BoatModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColorableAgeableListModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.PandaModel",
            "XXX.client.model.ParrotModel$1",
            "XXX.client.model.PhantomModel",
            "XXX.client.model.PlayerModel",
            "XXX.client.model.PufferfishBigModel",
            "XXX.client.model.PufferfishSmallModel",
            "XXX.client.model.RabbitModel",
            "XXX.client.model.SalmonModel",
            "XXX.client.model.SheepModel",
            "XXX.client.model.ShulkerBulletModel",
            "XXX.client.model.SilverfishModel",
            "XXX.client.model.SkullModel",
            "XXX.client.model.SnowGolemModel",
            "XXX.client.model.SquidModel",
            "XXX.client.model.TropicalFishModelA",
            "XXX.client.model.TurtleModel",
            "XXX.client.model.VillagerHeadModel",
            "XXX.client.model.WitchModel",
            "XXX.client.model.WolfModel",
            "XXX.client.model.ZombieVillagerModel",
            "XXX.model.dragon.package-info",
            "XXX.model.geom.ModelPart$Cube",
            "XXX.model.geom.ModelPart$Vertex",
            "XXX.client.model.package-info",
            "XXX.client.multiplayer.ClientAdvancements$Listener",
            "XXX.client.multiplayer.ClientChunkCache$1",
            "XXX.client.multiplayer.ClientHandshakePacketListenerImpl",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.client.multiplayer.ServerStatusPinger$2$1",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AttackSweepParticle$1",
            "XXX.client.particle.BarrierParticle",
            "XXX.client.particle.BarrierParticle$Provider",
            "XXX.client.particle.BreakingItemParticle$1",
            "XXX.client.particle.BreakingItemParticle$SlimeProvider",
            "XXX.client.particle.BubbleColumnUpParticle",
            "XXX.client.particle.BubbleColumnUpParticle$Provider",
            "XXX.client.particle.BubbleParticle$1",
            "XXX.client.particle.BubblePopParticle",
            "XXX.client.particle.BubblePopParticle$Provider",
            "XXX.client.particle.CampfireSmokeParticle$1",
            "XXX.client.particle.CampfireSmokeParticle$SignalProvider",
            "XXX.client.particle.CritParticle$1",
            "XXX.client.particle.CritParticle$MagicProvider",
            "XXX.client.particle.DragonBreathParticle",
            "XXX.client.particle.DragonBreathParticle$Provider",
            "XXX.client.particle.DripParticle$1",
            "XXX.client.particle.DripParticle$DripHangParticle",
            "XXX.client.particle.DripParticle$FallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyFallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyHangProvider",
            "XXX.client.particle.DripParticle$LavaFallProvider",
            "XXX.client.particle.DripParticle$LavaLandProvider",
            "XXX.client.particle.DripParticle$WaterFallProvider",
            "XXX.client.particle.DustParticle",
            "XXX.client.particle.DustParticle$Provider",
            "XXX.client.particle.EnchantmentTableParticle$1",
            "XXX.client.particle.EnchantmentTableParticle$Provider",
            "XXX.client.particle.EndRodParticle$1",
            "XXX.client.particle.ExplodeParticle",
            "XXX.client.particle.FallingDustParticle",
            "XXX.client.particle.FallingDustParticle$Provider",
            "XXX.client.particle.FireworkParticles$1",
            "XXX.client.particle.FireworkParticles$OverlayParticle",
            "XXX.client.particle.FireworkParticles$SparkProvider",
            "XXX.client.particle.FlameParticle",
            "XXX.client.particle.FlameParticle$Provider",
            "XXX.client.particle.HeartParticle$1",
            "XXX.client.particle.HeartParticle$Provider",
            "XXX.client.particle.HugeExplosionParticle$1",
            "XXX.client.particle.HugeExplosionSeedParticle",
            "XXX.client.particle.HugeExplosionSeedParticle$Provider",
            "XXX.client.particle.LargeSmokeParticle",
            "XXX.client.particle.LavaParticle",
            "XXX.client.particle.LavaParticle$Provider",
            "XXX.client.particle.MobAppearanceParticle$1",
            "XXX.client.particle.NoRenderParticle",
            "XXX.client.particle.NoteParticle$1",
            "XXX.client.particle.Particle",
            "XXX.client.particle.ParticleEngine",
            "XXX.client.particle.ParticleEngine$MutableSpriteSet",
            "XXX.client.particle.ParticleProvider",
            "XXX.client.particle.ParticleRenderType$1",
            "XXX.client.particle.ParticleRenderType$3",
            "XXX.client.particle.ParticleRenderType$5",
            "XXX.client.particle.PlayerCloudParticle",
            "XXX.client.particle.PlayerCloudParticle$Provider",
            "XXX.client.particle.PortalParticle",
            "XXX.client.particle.PortalParticle$Provider",
            "XXX.client.particle.SingleQuadParticle",
            "XXX.client.particle.SmokeParticle$Provider",
            "XXX.client.particle.SpellParticle$1",
            "XXX.client.particle.SpellParticle$InstantProvider",
            "XXX.client.particle.SpellParticle$Provider",
            "XXX.client.particle.SpitParticle",
            "XXX.client.particle.SpitParticle$Provider",
            "XXX.client.particle.SplashParticle$1",
            "XXX.client.particle.SpriteSet",
            "XXX.client.particle.SquidInkParticle$1",
            "XXX.client.particle.SuspendedParticle",
            "XXX.client.particle.SuspendedParticle$Provider",
            "XXX.client.particle.SuspendedTownParticle$1",
            "XXX.client.particle.SuspendedTownParticle$DolphinSpeedProvider",
            "XXX.client.particle.SuspendedTownParticle$Provider",
            "XXX.client.particle.TerrainParticle$Provider",
            "XXX.client.particle.TotemParticle",
            "XXX.client.particle.TotemParticle$Provider",
            "XXX.client.particle.WakeParticle",
            "XXX.client.particle.WakeParticle$Provider",
            "XXX.client.particle.WaterCurrentDownParticle$1",
            "XXX.client.particle.WaterDropParticle",
            "XXX.client.particle.package-info",
            "XXX.client.player.Input",
            "XXX.client.player.LocalPlayer",
            "XXX.client.player.RemotePlayer",
            "XXX.player.inventory.package-info",
            "XXX.client.renderer.BiomeColors",
            "XXX.client.renderer.ChunkBufferBuilderPack",
            "XXX.client.renderer.EffectInstance",
            "XXX.client.renderer.FaceInfo",
            "XXX.client.renderer.FaceInfo$Constants",
            "XXX.client.renderer.FogRenderer",
            "XXX.client.renderer.GameRenderer",
            "XXX.client.renderer.ItemInHandRenderer$1",
            "XXX.client.renderer.LevelRenderer",
            "XXX.client.renderer.LevelRenderer$RenderChunkInfo",
            "XXX.client.renderer.MultiBufferSource",
            "XXX.client.renderer.OutlineBufferSource",
            "XXX.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
            "XXX.client.renderer.PostChain",
            "XXX.client.renderer.Rect2i",
            "XXX.client.renderer.RenderType$EntityState",
            "XXX.client.renderer.RenderType$SwirlState",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask",
            "XXX.renderer.chunk.RenderChunkRegion",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$1",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$DebugGoal",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.VillageDebugRenderer",
            "XXX.renderer.debug.VillageDebugRenderer$PoiInfo",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AreaEffectCloudRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EnderDragonRenderer$DragonModel",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PigZombieRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$1",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.BaseComponent",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ContextAwareComponent",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.NbtComponent",
            "XXX.network.chat.NbtComponent$EntityNbtComponent",
            "XXX.network.chat.ScoreComponent",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TranslatableComponent",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddGlobalEntityPacket",
            "XXX.protocol.game.ClientboundAddPaintingPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockBreakAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$1",
            "XXX.protocol.game.ClientboundContainerAckPacket",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomPayloadPacket",
            "XXX.protocol.game.ClientboundDisconnectPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundKeepAlivePacket",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$Event",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundRecipePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResourcePackPacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$Type",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.DebugVillagerNameGenerator",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerAckPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundCustomPayloadPacket",
            "XXX.protocol.game.ServerboundEntityTagQuery",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose",
            "XXX.protocol.game.ServerboundResourcePackPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players$Serializer",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$10",
            "XXX.network.syncher.EntityDataSerializers$12",
            "XXX.network.syncher.EntityDataSerializers$14",
            "XXX.network.syncher.EntityDataSerializers$16",
            "XXX.network.syncher.EntityDataSerializers$18",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.EntityDataSerializers$8",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmListEntry",
            "XXX.minecraft.realms.RealmsAbstractButtonProxy",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsButtonProxy",
            "XXX.minecraft.realms.RealmsClickableScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsDefaultVertexFormat",
            "XXX.minecraft.realms.RealmsGuiEventListener",
            "XXX.minecraft.realms.RealmsLabelProxy",
            "XXX.minecraft.realms.RealmsMth",
            "XXX.minecraft.realms.RealmsObjectSelectionListProxy",
            "XXX.minecraft.realms.RealmsScreenProxy",
            "XXX.minecraft.realms.RealmsScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsSharedConstants",
            "XXX.minecraft.realms.RealmsSimpleScrolledSelectionListProxy",
            "XXX.minecraft.realms.RealmsSliderButtonProxy",
            "XXX.minecraft.realms.RealmsVertexFormatElement",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.realms.package-info",
            "XXX.realms.pluginapi.RealmsPlugin",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.ServerPlaceSmeltingRecipe",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.ConsoleInputSource",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.InteractableDoorsSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LadderBlock$1",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LecternBlock$1",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LogBlock",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherPortalBlock$PortalShape",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShearableDoublePlantBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulsandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.AbstractStateHolder$1",
            "XXX.block.state.BlockState$1",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGeneratorType",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.Dimension",
            "XXX.level.dimension.NetherDimension",
            "XXX.level.dimension.NormalDimension",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.TheEndDimension",
            "XXX.level.dimension.package-info",
            "XXX.level.levelgen.DebugGeneratorSettings",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.NetherGeneratorSettings",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.OverworldLevelSource",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.TheEndLevelSource",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.HellCaveWorldCarver",
            "XXX.levelgen.carver.UnderwaterCanyonWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.feature.BigTreeFeature",
            "XXX.levelgen.feature.BirchFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.BuriedTreasureConfiguration",
            "XXX.levelgen.feature.BushFeature",
            "XXX.levelgen.feature.CentralSpikedFeature",
            "XXX.levelgen.feature.DarkOakFeature",
            "XXX.levelgen.feature.DecoratedFlowerFeature",
            "XXX.levelgen.feature.DecoratorConfiguration",
            "XXX.levelgen.feature.DecoratorNoiseDependant",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.DesertVillagePools",
            "XXX.levelgen.feature.DiskConfiguration",
            "XXX.levelgen.feature.DoublePlantConfiguration",
            "XXX.levelgen.feature.EndGatewayConfiguration",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FeatureRadius",
            "XXX.levelgen.feature.FlowerFeature",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GrassFeature",
            "XXX.levelgen.feature.HayBlockPileFeature",
            "XXX.levelgen.feature.HellSpringConfiguration",
            "XXX.levelgen.feature.HugeMushroomFeatureConfig",
            "XXX.levelgen.feature.IceBlockPileFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.JunglePyramidFeature",
            "XXX.levelgen.feature.JungleTreeFeature",
            "XXX.levelgen.feature.LakeConfiguration",
            "XXX.levelgen.feature.LayerConfiguration",
            "XXX.levelgen.feature.MelonBlockPileFeature",
            "XXX.levelgen.feature.MineshaftConfiguration",
            "XXX.levelgen.feature.MineshaftFeature$MineShaftStart",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
            "XXX.levelgen.feature.NoneDecoratorConfiguration",
            "XXX.levelgen.feature.OceanRuinConfiguration",
            "XXX.levelgen.feature.OreConfiguration$Predicates",
            "XXX.levelgen.feature.PillagerOutpostConfiguration",
            "XXX.levelgen.feature.PlainFlowerFeature",
            "XXX.levelgen.feature.ProbabilityFeatureConfiguration",
            "XXX.levelgen.feature.RandomBooleanFeatureConfig",
            "XXX.levelgen.feature.RandomFeatureConfig",
            "XXX.levelgen.feature.RandomRandomFeatureConfig",
            "XXX.levelgen.feature.ReplaceBlockConfiguration",
            "XXX.levelgen.feature.SavannaTreeFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SeagrassFeatureConfiguration",
            "XXX.levelgen.feature.ShipwreckFeature",
            "XXX.levelgen.feature.SimpleBlockConfiguration",
            "XXX.levelgen.feature.SimpleRandomFeatureConfig",
            "XXX.levelgen.feature.SimulatedFeature",
            "XXX.levelgen.feature.SnowBlockPileFeature",
            "XXX.levelgen.feature.SpikeConfiguration",
            "XXX.levelgen.feature.SpikeFeature$1",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.StrongholdFeature",
            "XXX.levelgen.feature.StructureFeature",
            "XXX.levelgen.feature.StructurePieceType",
            "XXX.levelgen.feature.SwampTreeFeature",
            "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart",
            "XXX.levelgen.feature.VillageConfiguration",
            "XXX.levelgen.feature.VillageFeature$FeatureStart",
            "XXX.levelgen.feature.VillagePieces$VillagePiece",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$1",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.StructureTemplatePools",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.placement.CarvingMaskDecorator",
            "XXX.levelgen.placement.ChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.ChanceTopSolidHeightmapDecorator",
            "XXX.levelgen.placement.ConfiguredDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDecorator",
            "XXX.levelgen.placement.CountDepthAverageDecorator",
            "XXX.levelgen.placement.CountHeight64Decorator",
            "XXX.levelgen.placement.CountHeightmapDecorator",
            "XXX.levelgen.placement.CountVeryBiasedRangeDecorator",
            "XXX.levelgen.placement.DarkOakTreePlacementDecorator",
            "XXX.levelgen.placement.DecoratorChance",
            "XXX.levelgen.placement.DecoratorFrequencyChance",
            "XXX.levelgen.placement.DecoratorNoiseCountFactor",
            "XXX.levelgen.placement.IcebergPlacementDecorator",
            "XXX.levelgen.placement.MonsterRoomPlacementConfiguration",
            "XXX.levelgen.placement.TopSolidHeightMapDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapRangeDecorator",
            "XXX.placement.nether.CountRangeDecorator",
            "XXX.placement.nether.LightGemChanceDecorator",
            "XXX.placement.nether.RandomCountRangeDecorator",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuriedTreasurePieces",
            "XXX.levelgen.structure.DesertPyramidPiece",
            "XXX.levelgen.structure.EndCityPieces$1",
            "XXX.levelgen.structure.EndCityPieces$3",
            "XXX.levelgen.structure.EndCityPieces$EndCityPiece",
            "XXX.levelgen.structure.IglooPieces",
            "XXX.levelgen.structure.JunglePyramidPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$MossStoneSelector",
            "XXX.levelgen.structure.MineShaftPieces",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftPiece",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs",
            "XXX.levelgen.structure.NetherBridgePieces$1",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
            "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone",
            "XXX.levelgen.structure.NetherBridgePieces$PieceWeight",
            "XXX.levelgen.structure.NetherBridgePieces$StairsRoom",
            "XXX.levelgen.structure.OceanMonumentPieces",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.levelgen.structure.OceanRuinFeature",
            "XXX.levelgen.structure.OceanRuinFeature$Type",
            "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
            "XXX.levelgen.structure.PillagerOutpostPieces$PillagerOutpostPiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
            "XXX.levelgen.structure.StrongholdPieces$1",
            "XXX.levelgen.structure.StrongholdPieces$3",
            "XXX.levelgen.structure.StrongholdPieces$FillerCorridor",
            "XXX.levelgen.structure.StrongholdPieces$LeftTurn",
            "XXX.levelgen.structure.StrongholdPieces$PieceWeight",
            "XXX.levelgen.structure.StrongholdPieces$PrisonHall",
            "XXX.levelgen.structure.StrongholdPieces$RoomCrossing",
            "XXX.levelgen.structure.StrongholdPieces$StairsDown",
            "XXX.levelgen.structure.StrongholdPieces$Straight",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece",
            "XXX.levelgen.structure.StrongholdPieces$Turn",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.SwamplandHutPiece",
            "XXX.levelgen.structure.WoodlandMansionPieces",
            "XXX.levelgen.structure.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$PlacementData",
            "XXX.levelgen.structure.WoodlandMansionPieces$SimpleGrid",
            "XXX.levelgen.structure.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructureManager",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.package-info",
            "XXX.levelgen.surfacebuilders.ConfiguredSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ErodedBadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GiantTreeTaigaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.MountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NopeSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderConfiguration",
            "XXX.levelgen.surfacebuilders.WoodedBadlandsSurfaceBuilder",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.SurfaceNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$2",
            "XXX.level.lighting.LayerLightEngine",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$1",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FluidState",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.Material",
            "XXX.level.material.MaterialColor",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.newbiome.area.Area",
            "XXX.newbiome.area.LazyArea",
            "XXX.newbiome.context.BigContext",
            "XXX.newbiome.context.LazyAreaContext",
            "XXX.newbiome.layer.AddDeepOceanLayer",
            "XXX.newbiome.layer.AddEdgeLayer$CoolWarm",
            "XXX.newbiome.layer.AddEdgeLayer$IntroduceSpecial",
            "XXX.newbiome.layer.AddMushroomIslandLayer",
            "XXX.newbiome.layer.BiomeEdgeLayer",
            "XXX.newbiome.layer.IslandLayer",
            "XXX.newbiome.layer.Layers",
            "XXX.newbiome.layer.OceanMixerLayer",
            "XXX.newbiome.layer.RareBiomeSpotLayer",
            "XXX.newbiome.layer.RemoveTooMuchOceanLayer",
            "XXX.newbiome.layer.RiverLayer",
            "XXX.newbiome.layer.ShoreLayer",
            "XXX.newbiome.layer.ZoomLayer",
            "XXX.newbiome.layer.package-info",
            "XXX.layer.traits.AreaTransformer1",
            "XXX.layer.traits.BishopTransformer",
            "XXX.layer.traits.C1Transformer",
            "XXX.layer.traits.DimensionOffset0Transformer",
            "XXX.layer.traits.DimensionTransformer",
            "XXX.layer.traits.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.TurtleNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecoration$Type",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelStorage",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.PlayerIO",
            "XXX.storage.loot.BinomialDistributionGenerator$Serializer",
            "XXX.storage.loot.ConstantIntValue",
            "XXX.storage.loot.IntLimiter",
            "XXX.storage.loot.IntLimiter$Serializer",
            "XXX.storage.loot.LootContext$1",
            "XXX.storage.loot.LootContext$DynamicDrop",
            "XXX.storage.loot.LootContext$EntityTarget$Serializer",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.storage.loot.LootTables",
            "XXX.storage.loot.RandomIntGenerator",
            "XXX.storage.loot.RandomValueBounds",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.DynamicLoot$Serializer",
            "XXX.loot.entries.EmptyLootItem$1",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootItem$Serializer",
            "XXX.loot.entries.LootPoolEntries$Serializer",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryContainer$Serializer",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.LootTableReference",
            "XXX.loot.entries.LootTableReference$Serializer",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$1",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.ApplyExplosionDecay$1",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.CopyNbtFunction",
            "XXX.loot.functions.CopyNbtFunction$Builder",
            "XXX.loot.functions.CopyNbtFunction$DataSource",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$3",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.LimitCount$1",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunction$Serializer",
            "XXX.loot.functions.LootItemFunctions$Serializer",
            "XXX.loot.functions.LootingEnchantFunction$1",
            "XXX.loot.functions.LootingEnchantFunction$Serializer",
            "XXX.loot.functions.SetAttributesFunction$1",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetAttributesFunction$Serializer",
            "XXX.loot.functions.SetContainerContents$1",
            "XXX.loot.functions.SetContainerContents$Serializer",
            "XXX.loot.functions.SetContainerLootTable$1",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemCountFunction$Serializer",
            "XXX.loot.functions.SetItemDamageFunction$1",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetLoreFunction$Serializer",
            "XXX.loot.functions.SetNameFunction$1",
            "XXX.loot.functions.SetNbtFunction",
            "XXX.loot.functions.SetNbtFunction$Serializer",
            "XXX.loot.functions.SetStewEffectFunction$1",
            "XXX.loot.functions.SetStewEffectFunction$Serializer",
            "XXX.loot.functions.SmeltItemFunction$1",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParam",
            "XXX.loot.parameters.LootContextParamSet$1",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AlternativeLootItemCondition$1",
            "XXX.loot.predicates.AlternativeLootItemCondition$Serializer",
            "XXX.loot.predicates.BonusLevelTableCondition$1",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.DamageSourceCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.InvertedLootItemCondition$Serializer",
            "XXX.loot.predicates.LocationCheck$Serializer",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$1",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$Serializer",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceCondition$1",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$Serializer",
            "XXX.loot.predicates.MatchTool$Serializer",
            "XXX.loot.predicates.TimeCheck$1",
            "XXX.loot.predicates.TimeCheck$Serializer",
            "XXX.loot.predicates.WeatherCheck$1",
            "XXX.loot.predicates.WeatherCheck$Serializer",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.IntPointRange",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.WorldRegionIndirectVoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ],
          "removed": [
            "XXX.blaze3d.platform.GlStateManager$DepthState",
            "XXX.blaze3d.platform.GlStateManager$FboMode",
            "XXX.blaze3d.platform.GlStateManager$FogState",
            "XXX.blaze3d.platform.GlStateManager$PolygonOffsetState",
            "XXX.blaze3d.platform.GlStateManager$StencilFunc",
            "XXX.blaze3d.platform.GlStateManager$TexGen",
            "XXX.blaze3d.platform.GlStateManager$TexGenState",
            "XXX.blaze3d.platform.GlStateManager$Viewport",
            "XXX.blaze3d.platform.InputConstants",
            "XXX.blaze3d.platform.InputConstants$Key",
            "XXX.blaze3d.platform.Lighting",
            "XXX.blaze3d.platform.Monitor",
            "XXX.blaze3d.platform.NativeImage",
            "XXX.blaze3d.platform.NativeImage$Format",
            "XXX.blaze3d.platform.NativeImage$WriteCallback",
            "XXX.blaze3d.platform.PngInfo$1",
            "XXX.blaze3d.platform.PngInfo$StbReaderBufferedChannel",
            "XXX.blaze3d.platform.ScreenManager",
            "XXX.blaze3d.platform.TextureUtil",
            "XXX.blaze3d.platform.Window",
            "XXX.blaze3d.shaders.AbstractUniform",
            "XXX.blaze3d.shaders.Effect",
            "XXX.blaze3d.shaders.Program$Type",
            "XXX.blaze3d.shaders.Uniform",
            "XXX.blaze3d.vertex.BreakingTextureGenerator",
            "XXX.blaze3d.vertex.BufferBuilder",
            "XXX.blaze3d.vertex.BufferBuilder$DrawState",
            "XXX.blaze3d.vertex.BufferUploader",
            "XXX.blaze3d.vertex.DefaultVertexFormat",
            "XXX.blaze3d.vertex.PoseStack",
            "XXX.blaze3d.vertex.PoseStack$Pose",
            "XXX.blaze3d.vertex.VertexBuffer",
            "XXX.blaze3d.vertex.VertexFormat",
            "XXX.blaze3d.vertex.VertexFormatElement$Type",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage$SetupState",
            "XXX.mojang.math.Matrix3f",
            "XXX.mojang.math.Quaternion",
            "XXX.mojang.math.Vector3d",
            "XXX.mojang.math.Vector4f",
            "XXX.mojang.realmsclient.RealmsMainScreen",
            "XXX.mojang.realmsclient.RealmsMainScreen$10",
            "XXX.mojang.realmsclient.RealmsMainScreen$12",
            "XXX.mojang.realmsclient.RealmsMainScreen$3",
            "XXX.mojang.realmsclient.RealmsMainScreen$5",
            "XXX.mojang.realmsclient.RealmsMainScreen$7",
            "XXX.mojang.realmsclient.RealmsMainScreen$9",
            "XXX.mojang.realmsclient.RealmsMainScreen$NewsButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionList",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionListTrialEntry",
            "XXX.realmsclient.client.FileDownload",
            "XXX.realmsclient.client.FileDownload$DownloadCountingOutputStream",
            "XXX.realmsclient.client.FileDownload$ResourcePackProgressListener",
            "XXX.realmsclient.client.FileUpload$CustomInputStreamEntity",
            "XXX.realmsclient.client.Ping$Region",
            "XXX.realmsclient.client.RealmsClient$CompatibleVersionResponse",
            "XXX.realmsclient.client.RealmsClientConfig",
            "XXX.realmsclient.client.Request",
            "XXX.realmsclient.client.Request$Get",
            "XXX.realmsclient.client.Request$Put",
            "XXX.realmsclient.dto.Backup",
            "XXX.realmsclient.dto.Ops",
            "XXX.realmsclient.dto.PendingInvitesList",
            "XXX.realmsclient.dto.PlayerInfo",
            "XXX.realmsclient.dto.RealmsNews",
            "XXX.realmsclient.dto.RealmsServer$McoServerComparator",
            "XXX.realmsclient.dto.RealmsServer$WorldType",
            "XXX.realmsclient.dto.RealmsServerList",
            "XXX.realmsclient.dto.RealmsServerPlayerList",
            "XXX.realmsclient.dto.RealmsWorldOptions",
            "XXX.realmsclient.dto.RegionPingResult",
            "XXX.realmsclient.dto.ServerActivityList",
            "XXX.realmsclient.dto.Subscription$SubscriptionType",
            "XXX.realmsclient.dto.ValueObject",
            "XXX.realmsclient.dto.WorldTemplate",
            "XXX.realmsclient.dto.WorldTemplatePaginatedList",
            "XXX.realmsclient.exception.RealmsHttpException",
            "XXX.realmsclient.exception.RetryCallException",
            "XXX.realmsclient.gui.LongRunningTask",
            "XXX.realmsclient.gui.RealmsDataFetcher",
            "XXX.realmsclient.gui.RealmsDataFetcher$LiveStatsTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$ServerListUpdateTask",
            "XXX.realmsclient.gui.RealmsDataFetcher$TrialAvailabilityTask",
            "XXX.realmsclient.gui.RealmsWorldSlotButton",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Listener",
            "XXX.realmsclient.gui.RowButton",
            "XXX.gui.screens.RealmsBackupInfoScreen$1",
            "XXX.gui.screens.RealmsBackupScreen",
            "XXX.gui.screens.RealmsBackupScreen$2",
            "XXX.gui.screens.RealmsBackupScreen$4",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsBrokenWorldScreen$2",
            "XXX.gui.screens.RealmsBrokenWorldScreen$PlayButton",
            "XXX.gui.screens.RealmsClientOutdatedScreen$1",
            "XXX.gui.screens.RealmsConfigureWorldScreen$1",
            "XXX.gui.screens.RealmsConfigureWorldScreen$3",
            "XXX.gui.screens.RealmsConfigureWorldScreen$5",
            "XXX.gui.screens.RealmsConfigureWorldScreen$7",
            "XXX.gui.screens.RealmsConfigureWorldScreen$9",
            "XXX.gui.screens.RealmsConfirmScreen$1",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsCreateRealmScreen$2",
            "XXX.gui.screens.RealmsCreateTrialScreen$1",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsGenericErrorScreen$1",
            "XXX.gui.screens.RealmsInviteScreen$1",
            "XXX.gui.screens.RealmsLongConfirmationScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen$2",
            "XXX.gui.screens.RealmsLongConfirmationScreen$Type",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen$1",
            "XXX.gui.screens.RealmsNotificationsScreen",
            "XXX.gui.screens.RealmsParentalConsentScreen",
            "XXX.gui.screens.RealmsParentalConsentScreen$2",
            "XXX.gui.screens.RealmsPendingInvitesScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$2",
            "XXX.gui.screens.RealmsPendingInvitesScreen$4",
            "XXX.gui.screens.RealmsPendingInvitesScreen$6",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$RejectRowButton",
            "XXX.gui.screens.RealmsPlayerScreen$1",
            "XXX.gui.screens.RealmsPlayerScreen$3",
            "XXX.gui.screens.RealmsPlayerScreen$InvitedObjectSelectionList",
            "XXX.gui.screens.RealmsResetNormalWorldScreen",
            "XXX.gui.screens.RealmsResetNormalWorldScreen$2",
            "XXX.gui.screens.RealmsResetNormalWorldScreen$4",
            "XXX.gui.screens.RealmsResetWorldScreen$1",
            "XXX.gui.screens.RealmsResetWorldScreen$3",
            "XXX.gui.screens.RealmsResetWorldScreen$5",
            "XXX.gui.screens.RealmsResetWorldScreen$7",
            "XXX.gui.screens.RealmsResetWorldScreen$9",
            "XXX.gui.screens.RealmsResetWorldScreen$ResetType",
            "XXX.gui.screens.RealmsResourcePackScreen",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$2",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$WorldSelectionList",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$1",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$3",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$5",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry",
            "XXX.gui.screens.RealmsSettingsScreen$1",
            "XXX.gui.screens.RealmsSettingsScreen$3",
            "XXX.gui.screens.RealmsSlotOptionsScreen$1",
            "XXX.gui.screens.RealmsSlotOptionsScreen$2",
            "XXX.gui.screens.RealmsSlotOptionsScreen$4",
            "XXX.gui.screens.RealmsSlotOptionsScreen$6",
            "XXX.gui.screens.RealmsSlotOptionsScreen$8",
            "XXX.gui.screens.RealmsSlotOptionsScreen$SettingsSlider",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$1",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$3",
            "XXX.gui.screens.RealmsTermsScreen",
            "XXX.gui.screens.RealmsTermsScreen$2",
            "XXX.gui.screens.RealmsUploadScreen$1",
            "XXX.gui.screens.RealmsUploadScreen$Unit",
            "XXX.gui.screens.UploadResult$Builder",
            "XXX.realmsclient.util.RealmsPersistence",
            "XXX.realmsclient.util.RealmsPersistence$RealmsPersistenceData",
            "XXX.realmsclient.util.RealmsTasks$CloseServerTask",
            "XXX.realmsclient.util.RealmsTasks$OpenServerTask",
            "XXX.realmsclient.util.RealmsTasks$RealmsGetServerDetailsTask",
            "XXX.realmsclient.util.RealmsTasks$RestoreTask",
            "XXX.realmsclient.util.RealmsTasks$SwitchSlotTask",
            "XXX.realmsclient.util.RealmsTasks$WorldCreationTask",
            "XXX.realmsclient.util.RealmsTextureManager$1",
            "XXX.realmsclient.util.RealmsUtil",
            "XXX.realmsclient.util.SkinProcessor",
            "XXX.realmsclient.util.TextRenderingUtils$Line",
            "XXX.realmsclient.util.UploadTokenCache",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.Util$1",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement$1",
            "XXX.minecraft.advancements.AdvancementList",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementRewards$Deserializer",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntityTypePredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate$TypePredicate",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.client.AmbientOcclusionStatus",
            "XXX.minecraft.client.BooleanOption",
            "XXX.minecraft.client.ClientBrandRetriever",
            "XXX.minecraft.client.CloudStatus",
            "XXX.minecraft.client.DebugQueryHandler",
            "XXX.minecraft.client.Game",
            "XXX.minecraft.client.GuiMessage",
            "XXX.minecraft.client.KeyMapping",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.LogaritmicProgressOption",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.Option",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.ParticleStatus",
            "XXX.minecraft.client.RecipeBookCategories",
            "XXX.minecraft.client.Session",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.gui.screens.OptionsSubScreen",
            "XXX.gui.screens.Overlay",
            "XXX.gui.screens.PresetFlatWorldScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList",
            "XXX.gui.screens.ProgressScreen",
            "XXX.gui.screens.Screen",
            "XXX.gui.screens.SkinCustomizationScreen",
            "XXX.gui.screens.TitleScreen",
            "XXX.gui.screens.WinScreen",
            "XXX.screens.achievement.StatsScreen$1",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList$Entry",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemComparator",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList",
            "XXX.screens.achievement.StatsUpdateListener",
            "XXX.screens.advancements.AdvancementTab",
            "XXX.screens.advancements.AdvancementTabType$1",
            "XXX.screens.advancements.AdvancementWidgetType",
            "XXX.screens.advancements.package-info",
            "XXX.screens.controls.ControlList$1",
            "XXX.screens.controls.ControlList$Entry",
            "XXX.screens.controls.ControlList$KeyEntry$1",
            "XXX.screens.controls.ControlsScreen",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$SuggestionsList",
            "XXX.screens.inventory.AbstractFurnaceScreen",
            "XXX.screens.inventory.BeaconScreen",
            "XXX.screens.inventory.BeaconScreen$BeaconCancelButton",
            "XXX.screens.inventory.BeaconScreen$BeaconPowerButton",
            "XXX.screens.inventory.BeaconScreen$BeaconSpriteScreenButton",
            "XXX.screens.inventory.BookEditScreen",
            "XXX.screens.inventory.BookViewScreen",
            "XXX.screens.inventory.BookViewScreen$BookAccess",
            "XXX.screens.inventory.BookViewScreen$WrittenBookAccess",
            "XXX.screens.inventory.CartographyTableScreen",
            "XXX.screens.inventory.CommandBlockEditScreen$1",
            "XXX.screens.inventory.CraftingScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen$ItemPickerMenu",
            "XXX.screens.inventory.DispenserScreen",
            "XXX.screens.inventory.EnchantmentNames",
            "XXX.screens.inventory.FurnaceScreen",
            "XXX.screens.inventory.HopperScreen",
            "XXX.screens.inventory.InventoryScreen",
            "XXX.screens.inventory.LecternScreen",
            "XXX.screens.inventory.LoomScreen",
            "XXX.screens.inventory.MerchantScreen",
            "XXX.screens.inventory.MinecartCommandBlockEditScreen",
            "XXX.screens.inventory.ShulkerBoxScreen",
            "XXX.screens.inventory.SmokerScreen",
            "XXX.screens.inventory.StructureBlockEditScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$2",
            "XXX.screens.mco.package-info",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.gui.screens.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.resourcepacks.entries.package-info",
            "XXX.resourcepacks.lists.ResourcePackList",
            "XXX.resourcepacks.lists.SelectedResourcePackList",
            "XXX.screens.resourcepacks.package-info",
            "XXX.screens.worldselection.CreateWorldScreen",
            "XXX.screens.worldselection.CreateWorldScreen$2",
            "XXX.screens.worldselection.CreateWorldScreen$4",
            "XXX.screens.worldselection.CreateWorldScreen$6",
            "XXX.screens.worldselection.CreateWorldScreen$SelectedGameMode",
            "XXX.screens.worldselection.OptimizeWorldScreen",
            "XXX.screens.worldselection.WorldSelectionList",
            "XXX.screens.worldselection.package-info",
            "XXX.gui.spectator.RootSpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenu$1",
            "XXX.gui.spectator.SpectatorMenu$ScrollMenuItem",
            "XXX.gui.spectator.SpectatorMenuItem",
            "XXX.spectator.categories.SpectatorPage",
            "XXX.spectator.categories.TeleportToTeamMenuCategory",
            "XXX.spectator.categories.package-info",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.Main$3",
            "XXX.client.map.BiomeMapToolChunkCache",
            "XXX.client.map.Map$1",
            "XXX.client.map.Map$3",
            "XXX.client.map.package-info",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.ChestedHorseModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColorableListModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.HeadedModel",
            "XXX.client.model.HumanoidHeadModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.OcelotModel",
            "XXX.client.model.ParrotModel",
            "XXX.client.model.ParrotModel$State",
            "XXX.client.model.PigModel",
            "XXX.client.model.PolarBearModel",
            "XXX.client.model.PufferfishMidModel",
            "XXX.client.model.QuadrupedModel",
            "XXX.client.model.RavagerModel",
            "XXX.client.model.SheepFurModel",
            "XXX.client.model.ShieldModel",
            "XXX.client.model.ShulkerModel",
            "XXX.client.model.SkeletonModel",
            "XXX.client.model.SlimeModel",
            "XXX.client.model.SpiderModel",
            "XXX.client.model.TridentModel",
            "XXX.client.model.TropicalFishModelB",
            "XXX.client.model.VexModel",
            "XXX.client.model.VillagerModel",
            "XXX.client.model.WitherBossModel",
            "XXX.client.model.ZombieModel",
            "XXX.model.dragon.DragonHeadModel",
            "XXX.model.geom.ModelPart",
            "XXX.model.geom.ModelPart$Polygon",
            "XXX.model.geom.package-info",
            "XXX.client.multiplayer.ClientAdvancements",
            "XXX.client.multiplayer.ClientChunkCache",
            "XXX.client.multiplayer.ClientChunkCache$Storage",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.MultiPlayerLevel",
            "XXX.client.multiplayer.ServerAddress",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.client.multiplayer.package-info",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BarrierParticle$1",
            "XXX.client.particle.BreakingItemParticle",
            "XXX.client.particle.BreakingItemParticle$Provider",
            "XXX.client.particle.BreakingItemParticle$SnowballProvider",
            "XXX.client.particle.BubbleColumnUpParticle$1",
            "XXX.client.particle.BubbleParticle",
            "XXX.client.particle.BubbleParticle$Provider",
            "XXX.client.particle.BubblePopParticle$1",
            "XXX.client.particle.CampfireSmokeParticle",
            "XXX.client.particle.CampfireSmokeParticle$CosyProvider",
            "XXX.client.particle.CritParticle",
            "XXX.client.particle.CritParticle$DamageIndicatorProvider",
            "XXX.client.particle.CritParticle$Provider",
            "XXX.client.particle.DragonBreathParticle$1",
            "XXX.client.particle.DripParticle",
            "XXX.client.particle.DripParticle$CoolingDripHangParticle",
            "XXX.client.particle.DripParticle$DripLandParticle",
            "XXX.client.particle.DripParticle$FallingParticle",
            "XXX.client.particle.DripParticle$HoneyFallProvider",
            "XXX.client.particle.DripParticle$HoneyLandProvider",
            "XXX.client.particle.DripParticle$LavaHangProvider",
            "XXX.client.particle.DripParticle$NectarFallProvider",
            "XXX.client.particle.DripParticle$WaterHangProvider",
            "XXX.client.particle.DustParticle$1",
            "XXX.client.particle.EnchantmentTableParticle",
            "XXX.client.particle.EnchantmentTableParticle$NautilusProvider",
            "XXX.client.particle.EndRodParticle",
            "XXX.client.particle.EndRodParticle$Provider",
            "XXX.client.particle.ExplodeParticle$Provider",
            "XXX.client.particle.FallingDustParticle$1",
            "XXX.client.particle.FireworkParticles",
            "XXX.client.particle.FireworkParticles$FlashProvider",
            "XXX.client.particle.FireworkParticles$SparkParticle",
            "XXX.client.particle.FireworkParticles$Starter",
            "XXX.client.particle.FlameParticle$1",
            "XXX.client.particle.HeartParticle",
            "XXX.client.particle.HeartParticle$AngryVillagerProvider",
            "XXX.client.particle.HugeExplosionParticle",
            "XXX.client.particle.HugeExplosionParticle$Provider",
            "XXX.client.particle.HugeExplosionSeedParticle$1",
            "XXX.client.particle.ItemPickupParticle",
            "XXX.client.particle.LargeSmokeParticle$Provider",
            "XXX.client.particle.LavaParticle$1",
            "XXX.client.particle.MobAppearanceParticle",
            "XXX.client.particle.MobAppearanceParticle$Provider",
            "XXX.client.particle.NoteParticle",
            "XXX.client.particle.NoteParticle$Provider",
            "XXX.client.particle.ParticleDescription",
            "XXX.client.particle.ParticleEngine$1",
            "XXX.client.particle.ParticleEngine$SpriteParticleRegistration",
            "XXX.client.particle.ParticleRenderType",
            "XXX.client.particle.ParticleRenderType$2",
            "XXX.client.particle.ParticleRenderType$4",
            "XXX.client.particle.ParticleRenderType$6",
            "XXX.client.particle.PlayerCloudParticle$1",
            "XXX.client.particle.PlayerCloudParticle$SneezeProvider",
            "XXX.client.particle.PortalParticle$1",
            "XXX.client.particle.SimpleAnimatedParticle",
            "XXX.client.particle.SmokeParticle",
            "XXX.client.particle.SpellParticle",
            "XXX.client.particle.SpellParticle$AmbientMobProvider",
            "XXX.client.particle.SpellParticle$MobProvider",
            "XXX.client.particle.SpellParticle$WitchProvider",
            "XXX.client.particle.SpitParticle$1",
            "XXX.client.particle.SplashParticle",
            "XXX.client.particle.SplashParticle$Provider",
            "XXX.client.particle.SquidInkParticle",
            "XXX.client.particle.SquidInkParticle$Provider",
            "XXX.client.particle.SuspendedParticle$1",
            "XXX.client.particle.SuspendedTownParticle",
            "XXX.client.particle.SuspendedTownParticle$ComposterFillProvider",
            "XXX.client.particle.SuspendedTownParticle$HappyVillagerProvider",
            "XXX.client.particle.TerrainParticle",
            "XXX.client.particle.TextureSheetParticle",
            "XXX.client.particle.TotemParticle$1",
            "XXX.client.particle.TrackingEmitter",
            "XXX.client.particle.WakeParticle$1",
            "XXX.client.particle.WaterCurrentDownParticle",
            "XXX.client.particle.WaterCurrentDownParticle$Provider",
            "XXX.client.particle.WaterDropParticle$Provider",
            "XXX.client.player.AbstractClientPlayer",
            "XXX.client.player.KeyboardInput",
            "XXX.client.player.LocalPlayer$1",
            "XXX.player.inventory.Hotbar",
            "XXX.client.player.package-info",
            "XXX.client.renderer.BiomeColors$ColorResolver",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.EntityBlockRenderer",
            "XXX.client.renderer.FaceInfo$1",
            "XXX.client.renderer.FaceInfo$VertexInfo",
            "XXX.client.renderer.FogRenderer$FogMode",
            "XXX.client.renderer.ItemInHandRenderer",
            "XXX.client.renderer.ItemModelShaper",
            "XXX.client.renderer.LevelRenderer$1",
            "XXX.client.renderer.LightTexture",
            "XXX.client.renderer.MultiBufferSource$BufferSource",
            "XXX.client.renderer.OutlineBufferSource$1",
            "XXX.client.renderer.PanoramaRenderer",
            "XXX.client.renderer.PostPass",
            "XXX.client.renderer.RenderBuffers",
            "XXX.client.renderer.RenderStateShard$AlphaStateShard",
            "XXX.client.renderer.RenderStateShard$CullStateShard",
            "XXX.client.renderer.RenderStateShard$DiffuseLightingStateShard",
            "XXX.client.renderer.RenderStateShard$LayeringStateShard",
            "XXX.client.renderer.RenderStateShard$LineStateShard",
            "XXX.client.renderer.RenderStateShard$OverlayStateShard",
            "XXX.client.renderer.RenderStateShard$ShadeModelStateShard",
            "XXX.client.renderer.RenderStateShard$TextureStateShard",
            "XXX.client.renderer.RenderStateShard$TransparencyStateShard",
            "XXX.client.renderer.RenderType$CompositeRenderType",
            "XXX.client.renderer.RenderType$CompositeState$CompositeStateBuilder",
            "XXX.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk$1",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.CaveDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.VillageDebugRenderer$BrainDump",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChestedHorseRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.AbstractArmorLayer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component$1",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.KeybindComponent",
            "XXX.network.chat.NbtComponent$BlockNbtComponent",
            "XXX.network.chat.NbtComponent$StorageNbtComponent",
            "XXX.network.chat.SelectorComponent",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.TextComponent",
            "XXX.network.chat.TranslatableFormatException",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAddMobPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundChatPacket",
            "XXX.protocol.game.ClientboundChunkBlocksUpdatePacket$BlockUpdate",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomSoundPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatPacket$1",
            "XXX.protocol.game.ClientboundPlayerInfoPacket",
            "XXX.protocol.game.ClientboundPlayerInfoPacket$Action",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument",
            "XXX.protocol.game.ClientboundRecipePacket$State",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetBorderPacket$1",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquippedItemPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesPacket$Type",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundKeepAlivePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundRecipeBookUpdatePacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundResourcePackPacket$Action",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatus$Serializer",
            "XXX.protocol.status.ServerStatus$Version$Serializer",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$11",
            "XXX.network.syncher.EntityDataSerializers$13",
            "XXX.network.syncher.EntityDataSerializers$15",
            "XXX.network.syncher.EntityDataSerializers$17",
            "XXX.network.syncher.EntityDataSerializers$19",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.EntityDataSerializers$9",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.AbstractRealmsButton",
            "XXX.minecraft.realms.DisconnectedRealmsScreen$1",
            "XXX.minecraft.realms.Realms",
            "XXX.minecraft.realms.RealmsAnvilLevelStorageSource",
            "XXX.minecraft.realms.RealmsButton",
            "XXX.minecraft.realms.RealmsClickableScrolledSelectionList",
            "XXX.minecraft.realms.RealmsConfirmResultListener",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsEditBox",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsLevelSummary",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RealmsScrolledSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RealmsSimpleScrolledSelectionList",
            "XXX.minecraft.realms.RealmsSliderButton",
            "XXX.minecraft.realms.RealmsVertexFormat",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.Tezzelator",
            "XXX.realms.pluginapi.LoadedRealmsPlugin",
            "XXX.realms.pluginapi.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$3",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReplaceItemCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillage",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToBlockGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinMoveControl",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HopperBlock$1",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.Lantern",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LeverBlock$1",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.Seagrass",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrass",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$1",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickableBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.AbstractStateHolder",
            "XXX.block.state.BlockState",
            "XXX.block.state.BlockState$Cache",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPattern$PortalInfo",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AbstractProperty",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkGeneratorFactory",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.NetherDimension$1",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.levelgen.ChunkGeneratorSettings",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.FlatLevelSource$FlatLevelBiomeWrapper",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.NetherLevelSource",
            "XXX.level.levelgen.OverworldGeneratorSettings",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.TheEndGeneratorSettings",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.NoneCarverConfiguration",
            "XXX.levelgen.carver.UnderwaterCaveWorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.DefaultFlowerFeature",
            "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FancyTreeFeature$FoliageCoords",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.IcePatchFeature",
            "XXX.levelgen.feature.JunglePyramidFeature$FeatureStart",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.MineshaftFeature",
            "XXX.levelgen.feature.MineshaftFeature$Type",
            "XXX.levelgen.feature.NetherFortressFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomRandomFeature",
            "XXX.levelgen.feature.SavannaVillagePools",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.ShipwreckFeature$FeatureStart",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.StrongholdFeature$StrongholdStart",
            "XXX.levelgen.feature.StructureFeature$StructureStartFactory",
            "XXX.levelgen.feature.SwamplandHutFeature",
            "XXX.levelgen.feature.VillageFeature",
            "XXX.levelgen.feature.VillagePieces",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.feature.blockplacers.BlockPlacerType",
            "XXX.feature.blockplacers.DoublePlantPlacer",
            "XXX.feature.blockplacers.package-info",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.BuriedTreasureConfiguration",
            "XXX.feature.configurations.CountFeatureConfiguration",
            "XXX.feature.configurations.DecoratedFeatureConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.MegaTreeConfiguration",
            "XXX.feature.configurations.MineshaftConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OceanRuinConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration$GrassConfigurationBuilder",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.ShipwreckConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SmallTreeConfiguration$SmallTreeConfigurationBuilder",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.configurations.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.PlainFlowerProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.feature.structures.package-info",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.CarvingMaskDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceHeightmapDecorator",
            "XXX.levelgen.placement.ChancePassthroughDecorator",
            "XXX.levelgen.placement.ChorusPlantPlacementDecorator",
            "XXX.levelgen.placement.CountBiasedRangeDecorator",
            "XXX.levelgen.placement.CountChanceHeightmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeighmapDoubleDecorator",
            "XXX.levelgen.placement.CountHeightmap32Decorator",
            "XXX.levelgen.placement.CountTopSolidDecorator",
            "XXX.levelgen.placement.CountWithExtraChanceHeightmapDecorator",
            "XXX.levelgen.placement.FrequencyChanceDecoratorConfiguration",
            "XXX.levelgen.placement.FrequencyWithExtraChanceDecoratorConfiguration",
            "XXX.levelgen.placement.MonsterRoomPlacementDecorator",
            "XXX.levelgen.placement.SimpleFeatureDecorator",
            "XXX.levelgen.placement.TopSolidHeightMapNoiseBasedDecorator",
            "XXX.placement.nether.ChanceRangeDecorator",
            "XXX.placement.nether.HellFireDecorator",
            "XXX.placement.nether.MagmaDecorator",
            "XXX.placement.nether.package-info",
            "XXX.levelgen.structure.BeardedStructureStart",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.levelgen.structure.EndCityPieces",
            "XXX.levelgen.structure.EndCityPieces$2",
            "XXX.levelgen.structure.EndCityPieces$4",
            "XXX.levelgen.structure.EndCityPieces$SectionGenerator",
            "XXX.levelgen.structure.IglooPieces$IglooPiece",
            "XXX.levelgen.structure.JunglePyramidPiece$1",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.MineShaftPieces$1",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftCrossing",
            "XXX.levelgen.structure.MineShaftPieces$MineShaftRoom",
            "XXX.levelgen.structure.NetherBridgePieces",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$BridgeStraight",
            "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorTBalconyPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorCrossingPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorPiece",
            "XXX.levelgen.structure.NetherBridgePieces$CastleStalkRoom",
            "XXX.levelgen.structure.NetherBridgePieces$NetherBridgePiece",
            "XXX.levelgen.structure.NetherBridgePieces$RoomCrossing",
            "XXX.levelgen.structure.NetherBridgePieces$StartPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$1",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$FitSimpleRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$MonumentBuilding",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.levelgen.structure.OceanMonumentPieces$RoomDefinition",
            "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart",
            "XXX.levelgen.structure.OceanRuinPieces",
            "XXX.levelgen.structure.PillagerOutpostPieces",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ShipwreckPieces",
            "XXX.levelgen.structure.StrongholdPieces",
            "XXX.levelgen.structure.StrongholdPieces$2",
            "XXX.levelgen.structure.StrongholdPieces$ChestCorridor",
            "XXX.levelgen.structure.StrongholdPieces$FiveCrossing",
            "XXX.levelgen.structure.StrongholdPieces$Library",
            "XXX.levelgen.structure.StrongholdPieces$PortalRoom",
            "XXX.levelgen.structure.StrongholdPieces$RightTurn",
            "XXX.levelgen.structure.StrongholdPieces$SmoothStoneSelector",
            "XXX.levelgen.structure.StrongholdPieces$StartPiece",
            "XXX.levelgen.structure.StrongholdPieces$StraightStairsDown",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.levelgen.structure.StructureFeatureIO",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureStart$1",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.WoodlandMansionPieces$1",
            "XXX.levelgen.structure.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.levelgen.structure.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.levelgen.structure.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.FrozenOceanSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.GravellyMountainSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.NetherSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.ShatteredSavanaSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.SurfaceBuilderBaseConfiguration",
            "XXX.levelgen.surfacebuilders.SwampSurfaceBuilder",
            "XXX.levelgen.surfacebuilders.package-info",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.FlatDataLayer",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage$1",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.Fluid",
            "XXX.level.material.FluidStateImpl",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.Material$Builder",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.newbiome.area.AreaFactory",
            "XXX.newbiome.area.package-info",
            "XXX.newbiome.context.Context",
            "XXX.newbiome.context.package-info",
            "XXX.newbiome.layer.AddEdgeLayer",
            "XXX.newbiome.layer.AddEdgeLayer$HeatIce",
            "XXX.newbiome.layer.AddIslandLayer",
            "XXX.newbiome.layer.AddSnowLayer",
            "XXX.newbiome.layer.BiomeInitLayer",
            "XXX.newbiome.layer.Layer",
            "XXX.newbiome.layer.OceanLayer",
            "XXX.newbiome.layer.RareBiomeLargeLayer",
            "XXX.newbiome.layer.RegionHillsLayer",
            "XXX.newbiome.layer.RiverInitLayer",
            "XXX.newbiome.layer.RiverMixerLayer",
            "XXX.newbiome.layer.SmoothLayer",
            "XXX.newbiome.layer.ZoomLayer$1",
            "XXX.layer.traits.AreaTransformer0",
            "XXX.layer.traits.AreaTransformer2",
            "XXX.layer.traits.C0Transformer",
            "XXX.layer.traits.CastleTransformer",
            "XXX.layer.traits.DimensionOffset1Transformer",
            "XXX.layer.traits.PixelTransformer",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BlockPathTypes",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.redstone.Redstone",
            "XXX.level.saveddata.SaveDataDirtyRunnable",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$1",
            "XXX.level.storage.McRegionUpgrader",
            "XXX.storage.loot.BinomialDistributionGenerator",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ConstantIntValue$Serializer",
            "XXX.storage.loot.IntLimiter$1",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootPool$1",
            "XXX.storage.loot.LootPool$Serializer",
            "XXX.storage.loot.LootTable$1",
            "XXX.storage.loot.LootTable$Serializer",
            "XXX.storage.loot.PredicateManager",
            "XXX.storage.loot.RandomIntGenerators",
            "XXX.storage.loot.RandomValueBounds$Serializer",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$1",
            "XXX.loot.entries.CompositeEntryBase$Serializer",
            "XXX.loot.entries.DynamicLoot$1",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EmptyLootItem$Serializer",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootItem$1",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.LootPoolSingletonContainer$Serializer",
            "XXX.loot.entries.LootTableReference$1",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.TagEntry$Serializer",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaDeserializer",
            "XXX.loot.functions.ApplyBonusCount$Serializer",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.ApplyExplosionDecay$Serializer",
            "XXX.loot.functions.CopyBlockState$1",
            "XXX.loot.functions.CopyBlockState$Serializer",
            "XXX.loot.functions.CopyNameFunction$1",
            "XXX.loot.functions.CopyNameFunction$Serializer",
            "XXX.loot.functions.CopyNbtFunction$1",
            "XXX.loot.functions.CopyNbtFunction$CopyOperation",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy",
            "XXX.loot.functions.CopyNbtFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNbtFunction$Serializer",
            "XXX.loot.functions.EnchantRandomlyFunction$1",
            "XXX.loot.functions.EnchantRandomlyFunction$Serializer",
            "XXX.loot.functions.EnchantWithLevelsFunction$1",
            "XXX.loot.functions.EnchantWithLevelsFunction$Serializer",
            "XXX.loot.functions.ExplorationMapFunction$1",
            "XXX.loot.functions.ExplorationMapFunction$Serializer",
            "XXX.loot.functions.FillPlayerHead$Serializer",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.LimitCount$Serializer",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemConditionalFunction$Serializer",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.LootingEnchantFunction",
            "XXX.loot.functions.LootingEnchantFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetContainerLootTable$Serializer",
            "XXX.loot.functions.SetItemCountFunction$1",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetItemDamageFunction$Serializer",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetNameFunction$Serializer",
            "XXX.loot.functions.SetNbtFunction$1",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.SmeltItemFunction$Serializer",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParamSet",
            "XXX.loot.parameters.LootContextParamSet$Builder",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AlternativeLootItemCondition",
            "XXX.loot.predicates.AlternativeLootItemCondition$Builder",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.BonusLevelTableCondition$Serializer",
            "XXX.loot.predicates.ConditionReference$Serializer",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.DamageSourceCondition$Serializer",
            "XXX.loot.predicates.EntityHasScoreCondition$1",
            "XXX.loot.predicates.EntityHasScoreCondition$Serializer",
            "XXX.loot.predicates.ExplosionCondition$Serializer",
            "XXX.loot.predicates.InvertedLootItemCondition$1",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemCondition$Serializer",
            "XXX.loot.predicates.LootItemConditions$Serializer",
            "XXX.loot.predicates.LootItemEntityPropertyCondition$1",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition$Serializer",
            "XXX.loot.predicates.LootItemRandomChanceWithLootingCondition$1",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.loot.predicates.package-info",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.PosAndRot",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.gui.components.AbstractWidget \u001b[2;32m+1M\u001b[0m",
          "XXX.gui.screens.AccessibilityOptionsScreen \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.gui.screens.ChatOptionsScreen \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.gui.screens.LanguageSelectScreen \u001b[2;31m-2P\u001b[0m",
          "XXX.gui.screens.LoadingOverlay \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.MouseSettingsScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.client.renderer.RenderType \u001b[2;32m+34M\u001b[0m \u001b[2;31m-58M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.renderer.block.BlockRenderDispatcher \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.blockentity.BeaconRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.BellRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.BlockEntityRenderer \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.renderer.blockentity.ChestRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.EnchantTableRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.PistonHeadRenderer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.renderer.blockentity.SignRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.StructureBlockRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.TheEndGatewayRenderer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.minecraft.core.BlockPos \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.core.BlockPos$MutableBlockPos \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.sounds.SoundEvents \u001b[2;32m+8P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.tags.BlockTags \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.monster.Blaze \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.npc.Villager \u001b[2;32m+4M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.entity.player.Player \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.vehicle.MinecartTNT \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.Items \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.world.level.BlockEventData \u001b[2;32m+1M\u001b[0m",
          "XXX.level.biome.Biome \u001b[2;32m+9M\u001b[0m \u001b[2;31m-9M\u001b[0m",
          "XXX.level.block.Block \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.Block$Properties \u001b[2;32m+6M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.levelgen.feature.AbstractTreeFeature \u001b[2;32m+16M\u001b[0m \u001b[2;31m-14M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.ConfiguredFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.CoralFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.DecoratedFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.GlowstoneFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.IcebergFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.MegaPineTreeFeature \u001b[2;32m+4M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;31m-4P\u001b[0m",
          "XXX.levelgen.feature.RandomSelectorFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.SpringFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.WeightedConfiguredFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.placement.EndGatewayPlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.placement.FeatureDecorator \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.placement.LakeLavaPlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.placement.NoiseHeightmap32Decorator \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.levelgen.placement.NopePlacementDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.components.AbstractWidget",
        "differences": {
          "added": [],
          "removed": [
            "void queueNarration(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.AccessibilityOptionsScreen",
        "differences": {
          "added": [
            "void removed()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.ChatOptionsScreen",
        "differences": {
          "added": [
            "void removed()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.LoadingOverlay",
        "differences": {
          "added": [
            "void drawProgressBar(int,int,int,int,float,float)"
          ],
          "removed": [
            "void drawProgressBar(int,int,int,int,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.MouseSettingsScreen",
        "differences": {
          "added": [
            "void <init>(Screen)",
            "void removed()"
          ],
          "removed": [
            "void <init>(Screen,Options)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType",
        "differences": {
          "added": [
            "RenderType NEW_ENTITY(ResourceLocation)",
            "RenderType NEW_ENTITY(ResourceLocation,boolean,boolean,boolean)",
            "RenderType NEW_ENTITY(ResourceLocation,boolean,boolean,boolean,float,boolean,boolean)",
            "RenderType EYES(ResourceLocation)",
            "RenderType POWER_SWIRL(ResourceLocation,float,float)",
            "RenderType OUTLINE(ResourceLocation)",
            "RenderType CRUMBLING(int)",
            "RenderType TEXT(ResourceLocation)",
            "RenderType TEXT_SEE_THROUGH(ResourceLocation)",
            "RenderType PORTAL(int)",
            "void <init>(String,VertexFormat,int,int,boolean,Runnable,Runnable)",
            "RenderType getRenderLayer(BlockState)",
            "void setupRenderState()",
            "void clearRenderState()",
            "boolean equals(Object)",
            "int hashCode()",
            "void setupGlint(float)",
            "void clearGlint()",
            "void lambda$static$39(HashMap)",
            "void lambda$static$38(HashMap)",
            "void lambda$static$37()",
            "void lambda$static$36()",
            "void lambda$PORTAL$35(Integer)",
            "void lambda$PORTAL$34(Integer)",
            "void lambda$static$33()",
            "void lambda$static$32()",
            "void lambda$static$31()",
            "void lambda$static$30()",
            "void lambda$TEXT_SEE_THROUGH$29(RenderType,ResourceLocation)",
            "void lambda$TEXT_SEE_THROUGH$28(RenderType,ResourceLocation)",
            "void lambda$TEXT$27(ResourceLocation)",
            "void lambda$TEXT$26(ResourceLocation)",
            "void lambda$CRUMBLING$25(Integer)",
            "void lambda$CRUMBLING$24(Integer)",
            "void lambda$static$23()",
            "void lambda$static$22()",
            "void lambda$static$21()",
            "void lambda$static$20()",
            "void lambda$OUTLINE$19(ResourceLocation)",
            "void lambda$OUTLINE$18(ResourceLocation)",
            "void lambda$static$17()",
            "void lambda$static$16()",
            "void lambda$static$15()",
            "void lambda$static$14()",
            "void lambda$POWER_SWIRL$13(RenderType,RenderType$SwirlState)",
            "void lambda$POWER_SWIRL$12(RenderType,RenderType$SwirlState)",
            "void lambda$EYES$11(ResourceLocation)",
            "void lambda$EYES$10(ResourceLocation)",
            "void lambda$NEW_ENTITY$9(RenderType$EntityState)",
            "void lambda$NEW_ENTITY$8(RenderType$EntityState)",
            "void lambda$static$7()",
            "void lambda$static$6()",
            "void lambda$static$5()",
            "void lambda$static$4()",
            "void lambda$static$3()",
            "void lambda$static$2()",
            "void lambda$static$1()",
            "void lambda$static$0()"
          ],
          "removed": [
            "RenderType solid()",
            "RenderType cutoutMipped()",
            "RenderType cutout()",
            "RenderType translucent()",
            "RenderType translucentNoCrumbling()",
            "RenderType entitySolid(ResourceLocation)",
            "RenderType entityCutout(ResourceLocation)",
            "RenderType entityCutoutNoCull(ResourceLocation)",
            "RenderType entityTranslucent(ResourceLocation)",
            "RenderType entityForceTranslucent(ResourceLocation)",
            "RenderType entitySmoothCutout(ResourceLocation)",
            "RenderType entityDecal(ResourceLocation)",
            "RenderType entityNoOutline(ResourceLocation)",
            "RenderType entityAlpha(ResourceLocation,float)",
            "RenderType eyes(ResourceLocation)",
            "RenderType powerSwirl(ResourceLocation,float,float)",
            "RenderType leash()",
            "RenderType waterMask()",
            "RenderType outline(ResourceLocation)",
            "RenderType glint()",
            "RenderType entityGlint()",
            "RenderType crumbling(int)",
            "RenderType text(ResourceLocation)",
            "RenderType textSeeThrough(ResourceLocation)",
            "RenderType beaconBeam()",
            "RenderType lightning()",
            "RenderType endPortal(int)",
            "RenderType lines()",
            "void <init>(String,VertexFormat,int,int,boolean,boolean,Runnable,Runnable)",
            "RenderType getChunkRenderType(BlockState)",
            "RenderType getRenderType(BlockState)",
            "RenderType getRenderType(ItemStack)",
            "void lambda$static$1(HashMap)",
            "void lambda$static$0(HashMap)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.BlockRenderDispatcher",
        "differences": {
          "added": [
            "void renderSingleBlock(BlockState,PoseStack,MultiBufferSource,int,int,int)"
          ],
          "removed": [
            "void renderSingleBlock(BlockState,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BeaconRenderer",
        "differences": {
          "added": [
            "void render(BeaconBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(BeaconBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BellRenderer",
        "differences": {
          "added": [
            "void render(BellBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(BellBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.ChestRenderer",
        "differences": {
          "added": [
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(PoseStack,VertexConsumer,ModelPart,ModelPart,ModelPart,float,int,TextureAtlasSprite)"
          ],
          "removed": [
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(PoseStack,VertexConsumer,ModelPart,ModelPart,ModelPart,float,int,int,TextureAtlasSprite)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.EnchantTableRenderer",
        "differences": {
          "added": [
            "void render(EnchantmentTableBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(EnchantmentTableBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.PistonHeadRenderer",
        "differences": {
          "added": [
            "void render(PistonMovingBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void renderBlock(BlockPos,BlockState,PoseStack,MultiBufferSource,Level,boolean)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(PistonMovingBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void renderBlock(BlockPos,BlockState,PoseStack,MultiBufferSource,Level,boolean,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.SignRenderer",
        "differences": {
          "added": [
            "void render(SignBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(SignBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.StructureBlockRenderer",
        "differences": {
          "added": [
            "void render(StructureBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(StructureBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.TheEndGatewayRenderer",
        "differences": {
          "added": [
            "void render(TheEndGatewayBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(TheEndPortalBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int)"
          ],
          "removed": [
            "void render(TheEndGatewayBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(TheEndPortalBlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)",
            "void render(BlockEntity,double,double,double,float,PoseStack,MultiBufferSource,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.BlockPos",
        "differences": {
          "added": [],
          "removed": [
            "Stream betweenClosedStream(BoundingBox)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.BlockPos$MutableBlockPos",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Blaze",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.npc.Villager",
        "differences": {
          "added": [
            "Component getDisplayName()",
            "void lambda$spawnGolemIfNeeded$11(long,Villager)",
            "boolean lambda$spawnGolemIfNeeded$10(long,Villager)",
            "int lambda$countFoodPointsInInventory$9(SimpleContainer,Map$Entry)",
            "void lambda$getDisplayName$8(Style)",
            "void lambda$getDisplayName$7(Style)"
          ],
          "removed": [
            "Component getTypeName()",
            "void lambda$spawnGolemIfNeeded$9(long,Villager)",
            "boolean lambda$spawnGolemIfNeeded$8(long,Villager)",
            "int lambda$countFoodPointsInInventory$7(SimpleContainer,Map$Entry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.Player",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.vehicle.MinecartTNT",
        "differences": {
          "added": [
            "void causeFallDamage(float,float)"
          ],
          "removed": [
            "boolean causeFallDamage(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.BlockEventData",
        "differences": {
          "added": [],
          "removed": [
            "int hashCode()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Biome",
        "differences": {
          "added": [
            "ConfiguredFeature makeComposite(Feature,FeatureConfiguration,FeatureDecorator,DecoratorConfiguration)",
            "void addStructureStart(StructureFeature,FeatureConfiguration)",
            "FeatureConfiguration getStructureConfiguration(StructureFeature)",
            "Pair lambda$serialize$10(DynamicOps,Map$Entry)",
            "Object lambda$null$9(DynamicOps,Biome$SpawnerData)",
            "Pair lambda$serialize$7(DynamicOps,Map$Entry)",
            "Object lambda$null$6(DynamicOps,ConfiguredFeature)",
            "Pair lambda$serialize$5(DynamicOps,Map$Entry)",
            "Object lambda$null$4(DynamicOps,ConfiguredWorldCarver)"
          ],
          "removed": [
            "void addStructureStart(ConfiguredFeature)",
            "FeatureConfiguration getStructureConfiguration(StructureFeature)",
            "Pair lambda$serialize$11(DynamicOps,Map$Entry)",
            "Object lambda$null$10(DynamicOps,Biome$SpawnerData)",
            "Pair lambda$serialize$9(DynamicOps,Map$Entry)",
            "Object lambda$null$7(DynamicOps,ConfiguredFeature)",
            "Pair lambda$serialize$6(DynamicOps,Map$Entry)",
            "Object lambda$null$5(DynamicOps,ConfiguredWorldCarver)",
            "String lambda$generate$4(ConfiguredFeature)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Block",
        "differences": {
          "added": [
            "boolean equalsStone(Block)",
            "boolean equalsDirt(Block)",
            "boolean access$1200(Block)",
            "boolean access$1300(Block)"
          ],
          "removed": [
            "float getSpeedFactor()",
            "float getJumpFactor()",
            "boolean access$1400(Block)",
            "boolean access$1500(Block)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Block$Properties",
        "differences": {
          "added": [
            "boolean access$900(Block$Properties)",
            "ResourceLocation access$1000(Block$Properties)"
          ],
          "removed": [
            "Block$Properties speedFactor(float)",
            "Block$Properties jumpFactor(float)",
            "float access$900(Block$Properties)",
            "float access$1000(Block$Properties)",
            "ResourceLocation access$1200(Block$Properties)",
            "boolean access$1300(Block$Properties)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.AbstractTreeFeature",
        "differences": {
          "added": [
            "void <init>(Function,boolean)",
            "boolean isFluidWater(LevelSimulatedReader,BlockPos)",
            "boolean isLeaves(LevelSimulatedReader,BlockPos)",
            "void setBlock(Set,LevelWriter,BlockPos,BlockState,BoundingBox)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration,boolean)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)",
            "void spawnBeehive(LevelAccessor,Random,BlockPos,BoundingBox,List,Biome)",
            "void simulate(FeatureSimulator,Random,BlockPos,FeatureConfiguration)",
            "boolean lambda$isReplaceablePlant$8(BlockState)",
            "boolean lambda$isGrassOrDirtOrFarmland$7(BlockState)",
            "boolean lambda$isGrassOrDirt$6(BlockState)",
            "boolean lambda$isAirOrLeaves$5(BlockState)",
            "boolean lambda$isLeaves$4(BlockState)",
            "boolean lambda$isFluidWater$2(FluidState)"
          ],
          "removed": [
            "void <init>(Function)",
            "boolean isVine(LevelSimulatedReader,BlockPos)",
            "boolean placeLog(LevelSimulatedRW,Random,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "boolean placeLeaf(LevelSimulatedRW,Random,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "void setBlock(LevelWriter,BlockPos,BlockState,BoundingBox)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,TreeConfiguration)",
            "DiscreteVoxelShape updateLeaves(LevelAccessor,BoundingBox,Set,Set)",
            "void simulate(FeatureSimulator,Random,BlockPos,TreeConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)",
            "void simulate(FeatureSimulator,Random,BlockPos,FeatureConfiguration)",
            "void lambda$place$8(LevelAccessor,Random,List,List,Set,BoundingBox,TreeDecorator)",
            "boolean lambda$isReplaceablePlant$7(BlockState)",
            "boolean lambda$isGrassOrDirtOrFarmland$6(BlockState)",
            "boolean lambda$isGrassOrDirt$5(BlockState)",
            "boolean lambda$isAirOrLeaves$4(BlockState)",
            "boolean lambda$isVine$2(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ConfiguredFeature",
        "differences": {
          "added": [
            "void <init>(Feature,FeatureConfiguration)"
          ],
          "removed": [
            "void <init>(Feature,FeatureConfiguration)",
            "ConfiguredFeature decorated(ConfiguredDecorator)",
            "WeightedConfiguredFeature weighted(float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.CoralFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.DecoratedFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,DecoratedFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,DecoratedFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.GlowstoneFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,NoneFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.IcebergFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,IcebergConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,BlockStateConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.MegaPineTreeFeature",
        "differences": {
          "added": [
            "void <init>(Function,boolean,boolean)",
            "boolean doPlace(Set,LevelSimulatedRW,Random,BlockPos,BoundingBox)",
            "void createCrown(LevelSimulatedRW,int,int,int,int,Random,BoundingBox,Set)",
            "void postPlaceTree(LevelSimulatedRW,Random,BlockPos)",
            "void placePodzolCircle(LevelSimulatedRW,BlockPos)",
            "void placePodzolAt(LevelSimulatedRW,BlockPos)",
            "void <clinit>()"
          ],
          "removed": [
            "void <init>(Function)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,MegaTreeConfiguration)",
            "void createCrown(LevelSimulatedRW,Random,int,int,int,int,Set,BoundingBox,MegaTreeConfiguration)",
            "boolean doPlace(LevelSimulatedRW,Random,BlockPos,Set,Set,BoundingBox,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.RandomSelectorFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,RandomFeatureConfig)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,RandomFeatureConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SpringFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,SpringConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ],
          "removed": [
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,SpringConfiguration)",
            "boolean place(LevelAccessor,ChunkGenerator,Random,BlockPos,FeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.WeightedConfiguredFeature",
        "differences": {
          "added": [
            "void <init>(Feature,FeatureConfiguration,Float)",
            "void <init>(Feature,Dynamic,float)"
          ],
          "removed": [
            "void <init>(ConfiguredFeature,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.EndGatewayPlacementDecorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.FeatureDecorator",
        "differences": {
          "added": [
            "DecoratorConfiguration createSettings(Dynamic)",
            "boolean placeFeature(LevelAccessor,ChunkGenerator,Random,BlockPos,DecoratorConfiguration,ConfiguredFeature)"
          ],
          "removed": [
            "DecoratorConfiguration createSettings(Dynamic)",
            "ConfiguredDecorator configured(DecoratorConfiguration)",
            "boolean placeFeature(LevelAccessor,ChunkGenerator,Random,BlockPos,DecoratorConfiguration,ConfiguredFeature)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.LakeLavaPlacementDecorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,LakeChanceDecoratorConfig,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,ChanceDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.NoiseHeightmap32Decorator",
        "differences": {
          "added": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorNoiseDependant,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,LevelAccessor,BlockPos,int)"
          ],
          "removed": [
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,NoiseDependantDecoratorConfiguration,BlockPos)",
            "Stream getPositions(LevelAccessor,ChunkGenerator,Random,DecoratorConfiguration,BlockPos)",
            "BlockPos lambda$getPositions$0(Random,BlockPos,LevelAccessor,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.placement.NopePlacementDecorator",
        "differences": {
          "added": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ],
          "removed": [
            "Stream place(Random,NoneDecoratorConfiguration,BlockPos)",
            "Stream place(Random,DecoratorConfiguration,BlockPos)"
          ]
        }
      }
    }
  ]
}