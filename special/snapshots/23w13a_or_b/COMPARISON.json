{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "23w13a",
        "currentLabel": "23w13a_or_b",
        "values": [
          {
            "key": "World version",
            "previous": "3443",
            "current": "3444"
          },
          {
            "key": "Protocol version",
            "previous": "1073741952",
            "current": "1073741953"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "rules.txt"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "attribute",
        "differences": {
          "added": [
            "minecraft:generic.scale"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "banner_pattern",
        "differences": {
          "added": [
            "minecraft:m"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:cheese",
            "minecraft:copper_sink",
            "minecraft:copper_spleaves",
            "minecraft:filled_copper_sink",
            "minecraft:other_portal",
            "minecraft:packed_air",
            "minecraft:pickaxe_block",
            "minecraft:place_block"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "custom_stat",
        "differences": {
          "added": [
            "minecraft:votes"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "entity_type",
        "differences": {
          "added": [
            "minecraft:moon_cow",
            "minecraft:ray_tracing",
            "minecraft:stencil_display"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:air_block",
            "minecraft:bit",
            "minecraft:bottle_of_entity",
            "minecraft:bottle_of_void",
            "minecraft:byte_tag",
            "minecraft:cheese",
            "minecraft:compound_tag",
            "minecraft:copper_sink",
            "minecraft:copper_spleaves",
            "minecraft:double_tag",
            "minecraft:dupe_hack",
            "minecraft:float_tag",
            "minecraft:int_tag",
            "minecraft:la_baguette",
            "minecraft:le_tricolore",
            "minecraft:left_curly",
            "minecraft:left_square",
            "minecraft:list_tag",
            "minecraft:long_tag",
            "minecraft:m_banner_pattern",
            "minecraft:moon_cow_spawn_egg",
            "minecraft:name",
            "minecraft:packed_air",
            "minecraft:pickaxe_block",
            "minecraft:place_block",
            "minecraft:right_curly",
            "minecraft:right_square",
            "minecraft:short_tag",
            "minecraft:splash_bottle_of_entity",
            "minecraft:string2",
            "minecraft:string_tag",
            "minecraft:syntax_error",
            "minecraft:tag"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "mob_effect",
        "differences": {
          "added": [
            "minecraft:big",
            "minecraft:small"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "particle_type",
        "differences": {
          "added": [
            "minecraft:footstep"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "potion",
        "differences": {
          "added": [
            "minecraft:big",
            "minecraft:long_big",
            "minecraft:long_small",
            "minecraft:small",
            "minecraft:strong_big",
            "minecraft:strong_small"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "recipe_serializer",
        "differences": {
          "added": [
            "minecraft:crafting_special_dupehack",
            "minecraft:nbt_crafting_recipe"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:the_joke"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "worldgen/biome_source",
        "differences": {
          "added": [
            "minecraft:the_moon"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "worldgen/feature",
        "differences": {
          "added": [
            "minecraft:crater",
            "minecraft:lunar_base"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "universal_tags/rules.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_without_drop.json",
        "differences": {
          "added": [
            "minecraft:copper_spleaves",
            "minecraft:other_portal",
            "minecraft:packed_air"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_with_drop.json",
        "differences": {
          "added": [
            "minecraft:cheese",
            "minecraft:copper_sink",
            "minecraft:filled_copper_sink",
            "minecraft:pickaxe_block",
            "minecraft:place_block"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:ray_tracing",
            "minecraft:stencil_display"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_entities_with_drop.json",
        "differences": {
          "added": [
            "minecraft:moon_cow"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_living_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:ray_tracing"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_survival_blocks_without_drop.json",
        "differences": {
          "added": [
            "minecraft:copper_spleaves",
            "minecraft:other_portal"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/attribute.json",
        "differences": {
          "added": [
            "minecraft:generic.scale"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/banner_pattern.json",
        "differences": {
          "added": [
            "minecraft:m"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:cheese",
            "minecraft:copper_sink",
            "minecraft:copper_spleaves",
            "minecraft:filled_copper_sink",
            "minecraft:other_portal",
            "minecraft:packed_air",
            "minecraft:pickaxe_block",
            "minecraft:place_block"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/custom_stat.json",
        "differences": {
          "added": [
            "minecraft:votes"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/entity_type.json",
        "differences": {
          "added": [
            "minecraft:moon_cow",
            "minecraft:ray_tracing",
            "minecraft:stencil_display"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:air_block",
            "minecraft:bit",
            "minecraft:bottle_of_entity",
            "minecraft:bottle_of_void",
            "minecraft:byte_tag",
            "minecraft:cheese",
            "minecraft:compound_tag",
            "minecraft:copper_sink",
            "minecraft:copper_spleaves",
            "minecraft:double_tag",
            "minecraft:dupe_hack",
            "minecraft:float_tag",
            "minecraft:int_tag",
            "minecraft:la_baguette",
            "minecraft:le_tricolore",
            "minecraft:left_curly",
            "minecraft:left_square",
            "minecraft:list_tag",
            "minecraft:long_tag",
            "minecraft:m_banner_pattern",
            "minecraft:moon_cow_spawn_egg",
            "minecraft:name",
            "minecraft:packed_air",
            "minecraft:pickaxe_block",
            "minecraft:place_block",
            "minecraft:right_curly",
            "minecraft:right_square",
            "minecraft:short_tag",
            "minecraft:splash_bottle_of_entity",
            "minecraft:string2",
            "minecraft:string_tag",
            "minecraft:syntax_error",
            "minecraft:tag"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/mob_effect.json",
        "differences": {
          "added": [
            "minecraft:big",
            "minecraft:small"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/particle_type.json",
        "differences": {
          "added": [
            "minecraft:footstep"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/potion.json",
        "differences": {
          "added": [
            "minecraft:big",
            "minecraft:long_big",
            "minecraft:long_small",
            "minecraft:small",
            "minecraft:strong_big",
            "minecraft:strong_small"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/recipe_serializer.json",
        "differences": {
          "added": [
            "minecraft:crafting_special_dupehack",
            "minecraft:nbt_crafting_recipe"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:the_joke"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/worldgen/biome_source.json",
        "differences": {
          "added": [
            "minecraft:the_moon"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/worldgen/feature.json",
        "differences": {
          "added": [
            "minecraft:crater",
            "minecraft:lunar_base"
          ],
          "removed": []
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "cheese.json",
            "copper_sink.json",
            "copper_spleaves.json",
            "filled_copper_sink.json",
            "other_portal.json",
            "packed_air.json",
            "pickaxe_block.json",
            "place_block.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "commands": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "transform.txt",
            "vote.txt"
          ],
          "removed": []
        }
      }
    }
  ],
  "recipes": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "air_block.json",
            "bit_from_name_stonecutting.json",
            "bit_from_tag_stonecutting.json",
            "copper_sink.json",
            "diamond_drows.json",
            "dupe_hack.json",
            "left_curly.json",
            "left_square.json",
            "m_banner_pattern.json",
            "name_from_name_tag_stonecutting.json",
            "nbt_crafting.json",
            "packed_air.json",
            "pickaxe_block.json",
            "place_block.json",
            "right_curly.json",
            "right_square.json",
            "string_concatenation.json",
            "tag_from_name_tag_stonecutting.json",
            "wob.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "action.repeal: Repeal \"%s\"",
            "action.approve: Approve \"%s\"",
            "advancements.adventure.vote_1.title: I Voted!",
            "advancements.adventure.vote_1.description: Voted for the first time",
            "advancements.adventure.vote_256.title: Pro Voter",
            "advancements.adventure.vote_256.description: Voted 256 times",
            "attribute.name.generic.scale: Entity Scale",
            "block.minecraft.pickaxe_block: Pickaxe Block",
            "block.minecraft.place_block: Place Block",
            "block.minecraft.banner.m.black: Black New Thing",
            "block.minecraft.banner.m.blue: Blue New Thing",
            "block.minecraft.banner.m.brown: Brown New Thing",
            "block.minecraft.banner.m.cyan: Cyan New Thing",
            "block.minecraft.banner.m.gray: Gray New Thing",
            "block.minecraft.banner.m.green: Green New Thing",
            "block.minecraft.banner.m.light_blue: Light Blue New Thing",
            "block.minecraft.banner.m.light_gray: Light Gray New Thing",
            "block.minecraft.banner.m.lime: Lime New Thing",
            "block.minecraft.banner.m.magenta: Magenta New Thing",
            "block.minecraft.banner.m.orange: Orange New Thing",
            "block.minecraft.banner.m.pink: Pink New Thing",
            "block.minecraft.banner.m.purple: Purple New Thing",
            "block.minecraft.banner.m.red: Red New Thing",
            "block.minecraft.banner.m.white: White New Thing",
            "block.minecraft.banner.m.yellow: Yellow New Thing",
            "block.minecraft.bed.no_sleep_v2: You can sleep only at day or during thunderstorms",
            "block.minecraft.copper_sink: Copper Sink",
            "block.minecraft.copper_spleaves: Copper Spleaves",
            "block.minecraft.filled_copper_sink: Filled Copper Sink",
            "block.minecraft.cheese: Cheese",
            "block.minecraft.chest.moon: Moon Mission Resupply Crate",
            "block.minecraft.chest.lab: Lunar Laboratory Equipment",
            "block.minecraft.dropper.lunar: ACME Self-Building Lunar Base",
            "block.minecraft.other_portal: Other Portal",
            "block.minecraft.packed_air: Packed Air",
            "death.attack.onMoon: %1$s experienced the dark side of the moon",
            "death.midas.turned_into_gold: %1$s was turned into gold",
            "effect.minecraft.big: Big",
            "effect.minecraft.small: Small",
            "entity.minecraft.stencil_display: Stencil Display",
            "entity.minecraft.moon_cow: Moon Cow",
            "entity.minecraft.ray_tracing: Ray Tracing",
            "gui.pending_votes.title: Pending Votes",
            "gui.voting.title: Voting",
            "gui.voting.next: Next Vote",
            "gui.voting.prev: Previous Vote",
            "gui.voting.do_it: Vote!",
            "rule.item.disabled: Disabled item: you haven't voted for this!",
            "item.minecraft.air_block: Air",
            "item.minecraft.bottle_of_void: Bottle of Void",
            "item.minecraft.bottle_of_entity: Bottle of Entity",
            "item.minecraft.bottle_of_entity.specific: Bottle of %s",
            "item.minecraft.splash_bottle_of_entity: Splash Bottle of Entity",
            "item.minecraft.splash_bottle_of_entity.specific: Splash Bottle of %s",
            "item.minecraft.ruby: Ruby",
            "item.minecraft.glass_bottle_air: Glass Bottle filled with Air",
            "item.minecraft.lingering_potion.effect.big: Lingering Potion of Big",
            "item.minecraft.lingering_potion.effect.small: Lingering Potion of Small",
            "item.minecraft.m_banner_pattern: Banner Pattern",
            "item.minecraft.m_banner_pattern.desc: New Thing",
            "item.minecraft.moon_cow_spawn_egg: Moon Cow Spawn Egg",
            "item.minecraft.potion.effect.big: Potion of Big",
            "item.minecraft.potion.effect.small: Potion of Small",
            "item.minecraft.splash_potion.effect.big: Splash Potion of Big",
            "item.minecraft.splash_potion.effect.small: Splash Potion of Small",
            "item.minecraft.string2: Longer String",
            "item.minecraft.tipped_arrow.effect.big: Arrow of Big",
            "item.minecraft.tipped_arrow.effect.small: Arrow of Small",
            "item.minecraft.dupe_hack: minecraft:dupe_hack",
            "item.minecraft.name: Name",
            "item.minecraft.tag: Tag",
            "item.minecraft.string_tag: String Tag",
            "item.minecraft.byte_tag: Byte Tag",
            "item.minecraft.short_tag: Short Tag",
            "item.minecraft.int_tag: Int Tag",
            "item.minecraft.long_tag: Long Tag",
            "item.minecraft.float_tag: Float Tag",
            "item.minecraft.double_tag: Double Tag",
            "item.minecraft.compound_tag: Compound Tag",
            "item.minecraft.list_tag: List Tag",
            "item.minecraft.left_square: Left Square",
            "item.minecraft.right_square: Right Square",
            "item.minecraft.left_curly: Left Curly",
            "item.minecraft.right_curly: Right Curly",
            "item.minecraft.syntax_error: Sssyntax Error",
            "item.minecraft.bit: Bit",
            "item.minecraft.le_tricolore: Le Tricolore",
            "item.minecraft.la_baguette: La Baguette",
            "key.voting: Voting",
            "rule.nothing: Do Nothing",
            "rule.connector: %s, but %s",
            "rule.proposal: Proposal #%s",
            "rule.optimize.set: Set optimization level to %s",
            "rule.optimize.change: Change optimization level from %s to %s",
            "rule.optimize_light_engine.none: De-optimize light engine",
            "rule.optimize_light_engine.loadshedding: Implement loadshedding to improve light engine performance",
            "rule.optimize_light_engine.always_light: Turn on light everywhere to improve light engine  performance",
            "rule.optimize_light_engine.never_light: Turn off light everywhere to improve light engine performance",
            "rule.explosion_power.set: Set extra explosion power to %s",
            "rule.explosion_power.change: Change extra explosion power from %s to %s",
            "rule.swap_skies: Swap overworld and The End sky",
            "rule.disable_item_tooltips: Disable item tooltips",
            "rule.flammability.low: Change flammability of %s to low",
            "rule.flammability.medium: Change flammability of %s to medium",
            "rule.flammability.high: Change flammability of %s to high",
            "rule.flammability.very_high: Change flammability of %s to 'literally dry grass'",
            "rule.pot_gems: Decorated pots drop gems when broken",
            "rule.infinite_cakes: Infinite cakes",
            "rule.give_effect: Give every player infinite %s",
            "rule.spawn_egg_chance: Set chance of entity dropping spawn egg to %s%%",
            "rule.disable_shield: Disable shield blocking",
            "rule.item_use_speed: Multiply tool speed by %s%%",
            "rule.attack_knockback: Multiply knockback by %s%%",
            "rule.global_pitch: Change pitch of every sound by %s%%",
            "rule.other_portal: Enable Other Portal",
            "rule.other_portal.oops: Error 404 Terrain Not Found",
            "rule.anonymize_skins: Anonymize player skins",
            "rule.replace_item_model: Replace item model for %s with %s",
            "rule.replace_block_model: Replace block model for %s with %s",
            "rule.weather.rain.default: Default rain rules",
            "rule.weather.rain.always: Always rain",
            "rule.weather.rain.never: Never rain",
            "rule.weather.thunder.default: Default thunder rules",
            "rule.weather.thunder.always: Always thunder",
            "rule.weather.thunder.never: Never thunder",
            "rule.minecart_lies: Expose Minecart LIES!",
            "rule.lava_water_replace: Spawn %s instead of %s when lava interacts with water",
            "rule.lava_blue_ice_replace: Spawn %s instead of %s when lava interacts with blue ice",
            "rule.recipe.minecraft.wob: Enable wob recipe",
            "rule.recipe.minecraft.m_banner_pattern: Enable suspicious banner pattern",
            "rule.recipe.minecraft.string_concatenation: Enable string concatenation",
            "rule.recipe.minecraft.diamond_drows: Enable diamond drows",
            "rule.minecart_collisions.none: Disable minecarts breaking on collision",
            "rule.minecart_collisions.break: Minecarts break on high-speed collisions",
            "rule.minecart_collisions.explode: Minecarts explode on high-speed collisions",
            "rule.boat_collisions.none: Disable boats breaking on collision",
            "rule.boat_collisions.break: Boats break on high-speed collisions",
            "rule.boat_collisions.explode: Boats explode on high-speed collisions",
            "rule.the_joke: Keep ignoring Mobbo",
            "rule.natural_spawn_disable: Never naturally spawn %s",
            "rule.natural_spawn_replace: Replace natural spawns of %s with %s",
            "rule.footprint: Advance Project Footprint status from '%s' to '%s'",
            "rule.footprint.0: Footprints? What footprints?",
            "rule.footprint.1: Start process for restoring footprint particles",
            "rule.footprint.2: Re-evaluate footprint principles",
            "rule.footprint.3: Pre-estimate footprint timeline",
            "rule.footprint.4: Research existing footprint solutions in competing products",
            "rule.footprint.5: Acquire buy-in from parties relevant to footprint initiative",
            "rule.footprint.6: Research results from footprint focus groups",
            "rule.footprint.7: Iterate on footprint look and feel",
            "rule.footprint.8: Ask on wider forum about gameplay impact of footprints",
            "rule.footprint.9: Q&A footprint pass",
            "rule.footprint.10: Go-no go meeting",
            "rule.footprint.11: Enable footprints",
            "rule.invisible_armor: Make armor invisible",
            "rule.new_vote_chance_per_tick: Set chance to start new vote on every tick to 1/%s",
            "rule.new_vote_approve_option_count: Set maximum number of options per new approval vote to %s",
            "rule.new_vote_repeal_option_count: Set maximum number of options per new repeal vote to %s",
            "rule.new_vote_duration_minutes: Set duration of new votes to %s minutes",
            "rule.new_vote_extra_effect_chance: Set probability of creating combined votes to %s%%",
            "rule.new_vote_repeal_vote_chance: Set chance of a new vote being a repeal vote to %s%%",
            "rule.new_vote_extra_effect_max_count: Set maximum number of extra effects for new combined votes to %s",
            "rule.new_vote_disable_opt_out: Don't opt-out option to new votes with multiple choices",
            "rule.new_vote_max_approve_vote_count: Set maximum number of approval votes to %s",
            "rule.new_vote_max_repeal_vote_count: Set maximum number of repeal votes to %s",
            "rule.new_vote_cost: Set voting cost and/or limits to: %s",
            "rule.obfuscate_player_names: Obfuscate player names",
            "rule.beta_entity_ids: Show id above every entity",
            "rule.nbt_crafting: Enable NBT crafting",
            "rule.recipe_flip.normal_only: Shaped recipes accept only exact recipes",
            "rule.recipe_flip.flipped_only: Shaped recipes accept only mirrored recipes",
            "rule.recipe_flip.both: Shaped recipes accept all orientations",
            "rule.change_world_shape: Change Overworld shape",
            "rule.normal_name_visibility: Set normal entity name display to: %s",
            "rule.sneaking_name_visibility: Set sneaking entity name display to: %s",
            "rule.name_visibility.none: Never show entity names",
            "rule.name_visibility.normal: Hide entity names behind blocks",
            "rule.name_visibility.see_through: Always show entity names from behind blocks",
            "rule.dinnerbonize: Dinnerbonize %s",
            "rule.grummize: Grummize %s",
            "rule.rideable_entities: Make all %s entities rideable",
            "rule.flip_binary_gamerule: Flip game rule '%s'",
            "rule.change_integer_gamerule: Change value of game rule '%s' to %s",
            "rule.flintsploder: Flint and Steel can explode any block",
            "rule.beds_on_banners: Beds on Banners",
            "rule.player_head_drop: Players can drop head when exploded by charged creeper",
            "rule.charged_creepers: All creepers are charged",
            "rule.phantom_phantom: Phantom Phantoms",
            "rule.fix_piston: Pistons explode when powered",
            "rule.codepoint_replace: Replace '%s' with '%s'",
            "rule.potions_of_big: Brew Potion of Big with Bottle O' Enchanting",
            "rule.potions_of_small: Brew Potion of Small with Rabbit Hide",
            "rule.keep_friends_close: Keep your friends close",
            "rule.ai_attack: Replace player %s with advanced AI bot",
            "rule.ai_attack.decorate: [BOT] %s",
            "rule.president: %s for president",
            "rule.president.tag: President %s",
            "rule.item_despawn.despawn_none: Never despawn items on ground",
            "rule.item_despawn.keep_player_drops: Don't despawn items dropped by player",
            "rule.item_despawn.despawn_all: Despawn all items on ground",
            "rule.item_despawn_time.set: Set item despawn timer to %s",
            "rule.item_despawn_time.change: Change item despawn timer from %s to %s",
            "rule.text_style.hide: Change '%s' to never render",
            "rule.text_style.blank: Blank '%s'",
            "rule.replace_sound: Replace sound %s with %s",
            "rule.text_style.black: Change '%s' to always render as black",
            "rule.text_style.dark_blue: Change '%s' to always render as dark blue",
            "rule.text_style.dark_green: Change '%s' to always render as dark green",
            "rule.text_style.dark_aqua: Change '%s' to always render as dark aqua",
            "rule.text_style.dark_red: Change '%s' to always render as dark red",
            "rule.text_style.dark_purple: Change '%s' to always render as dark purple",
            "rule.text_style.gold: Change '%s' to always render as gold",
            "rule.text_style.gray: Change '%s' to always render as gray",
            "rule.text_style.dark_gray: Change '%s' to always render as dark gray",
            "rule.text_style.blue: Change '%s' to always render as blue",
            "rule.text_style.green: Change '%s' to always render as green",
            "rule.text_style.aqua: Change '%s' to always render as aqua",
            "rule.text_style.red: Change '%s' to always render as red",
            "rule.text_style.light_purple: Change '%s' to always render as light purple",
            "rule.text_style.yellow: Change '%s' to always render as yellow",
            "rule.text_style.white: Change '%s' to always render as white",
            "rule.text_style.obfuscated: Change '%s' to a mess of pixels",
            "rule.text_style.bold: Change '%s' to be thick",
            "rule.text_style.strikethrough: Strike '%s' through",
            "rule.text_style.underline: Strike '%s' under",
            "rule.text_style.italic: Skew '%s'",
            "rule.text_style.thin: Change '%s' to be thin",
            "rule.text_style.sga: Change '%s' to be magic",
            "rule.text_style.illager: Send '%s' to dungeons",
            "rule.give_items: Give every online player %s of %s",
            "rule.tnt_tennis: Primed TNT can be knocked back",
            "rule.random_tnt_fuse: TNT fuse timer is random",
            "rule.prevent_floating_trees: Prevent floating trees",
            "rule.exploding_phantoms: Phantoms explode on contact",
            "rule.undead_players: Players are Undead",
            "rule.unstable_tnt: All newly placed TNT blocks are unstable",
            "rule.decrease_scale: Decrease player scale by %sx",
            "rule.default_sheep_color: Set spawn sheep color to %s",
            "rule.biome_color.foliage: Set foliage color in %s to %s",
            "rule.biome_color.grass: Set grass color in %s to %s",
            "rule.biome_color.sky: Set sky color in %s to %s",
            "rule.biome_color.water: Set water color in %s to %s",
            "rule.biome_color.fog: Set fog color in %s to %s",
            "rule.biome_color.water_fog: Set water fog color in %s to %s",
            "rule.haunted_world: The World is Haunted",
            "rule.increase_scale: Increase player scale by %sx",
            "rule.morrowind_power_player_movement: Move like a Morrowind powergamer",
            "rule.evil_eye: Get evil eyes",
            "rule.reset_entity_transform: Clear every player's entity transform",
            "rule.reset_scale: Reset every player's scale",
            "rule.rowing_up_that_hill: Acknowledge boats as the superior way of transportation",
            "rule.god_of_lightning: Aquire more than just the power of thunder",
            "rule.transform_entity: Transform every player into a %s",
            "rule.endermen_block_update: Teach Endermen how to place blocks correctly",
            "rule.autojump.off: Auto jump off",
            "rule.autoJump.yes: Auto jump? Yes",
            "rule.autoJump.on: Auto jump on",
            "rule.autoJump.true: Auto jump: true",
            "rule.autoJump.of_course: Auto jump? Of course",
            "rule.autoJump.also_default_vanilla_to_true: Auto jump on. Also set default value of auto jump in vanilla to true",
            "rule.midas_touch: Claim the power of the mighty Midas",
            "rule.lava_spread_tick_delay: Lava spread tick delay set to: %s",
            "rule.uncontrolable_lave: Uncontrollable lava",
            "rule.replace_loot_drop: Replace loot drop %s with %s",
            "rule.loot_double_or_half: Multiply loot drops of %s by %s",
            "rule.replace_recipe_output: Replace recipe output %s with %s",
            "rule.recipe_double_or_half: Multiply recipe output of %s by %s",
            "rule.stack_size_double_or_half: Multiply maximum stack size of %s by %s",
            "rule.damage_modifier: Multiply damage type '%s' by %s",
            "rule.voting_fireworks: Celebrate voting!",
            "rule.snitch: Announce player votes in chat",
            "rule.snitch.msg: %s voted for %s. %s",
            "rule.flailing.none: Stop all that flailing",
            "rule.flailing.normal: Normal flailing levels",
            "rule.flailing.mild: Mild flailing",
            "rule.flailing.wild: Wild flailing",
            "rule.flailing.extreme: Limbs all over the place",
            "rule.flailing.windmill: WINDMILL MODE ON!!!",
            "rule.food_restriction.any: A Balanced Diet",
            "rule.food_restriction.apple: An Apple Party Diet",
            "rule.food_restriction.baked_potato: A Get Baked Diet",
            "rule.food_restriction.beef: A Cow Sushi Diet",
            "rule.food_restriction.beetroot: A Beeter Diet",
            "rule.food_restriction.beetroot_soup: A Soup Kitchen Diet",
            "rule.food_restriction.bread: A Toasty Diet",
            "rule.food_restriction.cake: A Birthday Diet",
            "rule.food_restriction.carrot: A Rabbit Diet",
            "rule.food_restriction.chicken: A Salmonella Diet",
            "rule.food_restriction.chorus_fruit: A Nomportation Diet",
            "rule.food_restriction.cod: A Fishy Diet",
            "rule.food_restriction.cooked_beef: A Meat Lovers Diet",
            "rule.food_restriction.cooked_chicken: A Nugget Time Diet",
            "rule.food_restriction.cooked_cod: A Fish Without Chips Diet",
            "rule.food_restriction.cooked_mutton: A Woolsome Diet",
            "rule.food_restriction.cooked_porkchop: Bringing Home the Bacon Diet",
            "rule.food_restriction.cooked_rabbit: A Bingo Diet",
            "rule.food_restriction.cooked_salmon: A River Diet",
            "rule.food_restriction.cookie: An Unhealthy Diet",
            "rule.food_restriction.dried_kelp: A Weedy Food Diet",
            "rule.food_restriction.enchanted_golden_apple: Michellin Level Expensive Diet",
            "rule.food_restriction.glow_berries: An X-Ray Diet",
            "rule.food_restriction.golden_apple: A Healthy Diet",
            "rule.food_restriction.golden_carrot: Expensive Rabbit Food Diet",
            "rule.food_restriction.honey_bottle: A Sugar Drink Diet",
            "rule.food_restriction.melon_slice: sliceddiet",
            "rule.food_restriction.mushroom_stew: Shrooms! Only Shrooms!",
            "rule.food_restriction.mutton: A Raw And Wooly Diet",
            "rule.food_restriction.poisonous_potato: A Dubious Spud Diet",
            "rule.food_restriction.porkchop: A Pork Belly Diet",
            "rule.food_restriction.potato: Unboiled, Unmashed, Unstewed Diet",
            "rule.food_restriction.pufferfish: A Killer Diet",
            "rule.food_restriction.pumpkin_pie: Mmmm, Pie. Pie! Only Pie!",
            "rule.food_restriction.rabbit: Raw Jumpers Only",
            "rule.food_restriction.rabbit_stew: An Auto-Jump Diet",
            "rule.food_restriction.rotten_flesh: A Rotten Diet",
            "rule.food_restriction.salmon: A Sushi Diet",
            "rule.food_restriction.spider_eye: A Witching Diet",
            "rule.food_restriction.suspicious_stew: A Sus Diet",
            "rule.food_restriction.sweet_berries: A Sweet, Sweet Diet",
            "rule.food_restriction.tropical_fish: Only Eating Nemo",
            "rule.food_restriction.inedible.apple: Oak Tree Nut",
            "rule.food_restriction.inedible.baked_potato: Baked Bump from the Dirt",
            "rule.food_restriction.inedible.beef: Cut Cow",
            "rule.food_restriction.inedible.beetroot: Red Dirtbump",
            "rule.food_restriction.inedible.beetroot_soup: Blood in a Bowl?",
            "rule.food_restriction.inedible.bread: Dried Porridge",
            "rule.food_restriction.inedible.cake: Lies",
            "rule.food_restriction.inedible.carrot: Rabbit Feed",
            "rule.food_restriction.inedible.chicken: Birdbits",
            "rule.food_restriction.inedible.chorus_fruit: Purple Alien Orb",
            "rule.food_restriction.inedible.cod: Slimy Water Thing",
            "rule.food_restriction.inedible.cooked_beef: Cremated Cow",
            "rule.food_restriction.inedible.cooked_chicken: Burnt Bird",
            "rule.food_restriction.inedible.cooked_cod: Ruined Sushi",
            "rule.food_restriction.inedible.cooked_mutton: Disgusting Burnt Sheep Piece",
            "rule.food_restriction.inedible.cooked_porkchop: Charred Pig Part",
            "rule.food_restriction.inedible.cooked_rabbit: It Liked Jumping Around You Murderer",
            "rule.food_restriction.inedible.cooked_salmon: Slimy Fish Goop",
            "rule.food_restriction.inedible.cookie: Yucky Yellow Thing",
            "rule.food_restriction.inedible.dried_kelp: Dried But Somehow Also Slimy",
            "rule.food_restriction.inedible.enchanted_golden_apple: Inedible Shining Blob",
            "rule.food_restriction.inedible.glow_berries: Light Bulbs",
            "rule.food_restriction.inedible.golden_apple: Inedible Yellow Blob",
            "rule.food_restriction.inedible.golden_carrot: Rabbit Food",
            "rule.food_restriction.inedible.honey_bottle: Too Much Sugar",
            "rule.food_restriction.inedible.melon_slice: Mostly Seeds",
            "rule.food_restriction.inedible.mushroom_stew: Fungal Goop",
            "rule.food_restriction.inedible.mutton: Sheet of Sheep",
            "rule.food_restriction.inedible.poisonous_potato: Useless Knob",
            "rule.food_restriction.inedible.porkchop: Piece of Pig",
            "rule.food_restriction.inedible.potato: Root Thing?",
            "rule.food_restriction.inedible.pufferfish: The Terror of the Deep",
            "rule.food_restriction.inedible.pumpkin_pie: It's Not a Pie You Didn't Even Bake It",
            "rule.food_restriction.inedible.rabbit: Bunneh :(",
            "rule.food_restriction.inedible.rabbit_stew: Who Stewed Roger Rabbit?",
            "rule.food_restriction.inedible.rotten_flesh: Unhealthy Thing",
            "rule.food_restriction.inedible.salmon: Red Slimy Water Thing",
            "rule.food_restriction.inedible.spider_eye: Arcachneous Orb",
            "rule.food_restriction.inedible.suspicious_stew: Sus",
            "rule.food_restriction.inedible.sweet_berries: Stick Blobs",
            "rule.food_restriction.inedible.tropical_fish: Nemo",
            "rule.food_restriction.edible: Food",
            "rule.food_restriction.maybe_edible: Food (May Have Side Effects)",
            "rule.big_heads: Big Head Mode",
            "rule.transparent_players: Ghost Mode",
            "rule.floating_heads: Floating Head Mode",
            "rule.mbe: Minecraft Bedrock Edition (aka Movable Block Entities)",
            "rule.sticky: Realistic piston block sticking rules. It now makes sense now!",
            "rule.wheels_on_minecarts: Wheels-4-Minecarts!",
            "rule.fire_sponge: Sponges can be used to remove lave",
            "rule.fog_off: Remove fog from the game where there was fog before. Anv vice versa.",
            "rule.fast_hoppers: Fast Hoppers, but hopper minecarts are now slow",
            "rule.less_gravity: Flip gravity rules. Earth feels like moon now",
            "rule.air_blocks: Unlock edible Air Blocks, Packed Air to survive on moon and rideable baloon cows to get there",
            "rule.bouncy_castle: Super bouncy Slime blocks",
            "rule.drink_air: Bottle of Void: obtained by drinking from empty Bottles. May have side-effects.",
            "rule.dupe_hack_occurrence_chance: Set chance of dupe hack occurring to %s%%",
            "rule.dupe_hack_break_chance: Set chance of dupe hack breaking to %s%%",
            "rule.persistent_parrots: Persistent Parrots. They will NEVER leave you.",
            "rule.less_interaction_updates: Less block updates from player interactions. Actually none at all...",
            "rule.dead_bush_renewability: Dead Bushes are now renewable, but saplings need much more water not to dry out",
            "rule.fix_qc: Quasi-fix Connectivity",
            "rule.buttons_on_things: You can place buttons (and much more stuff), on much more stuff",
            "rule.push_limit: Piston Push Limit: %s",
            "rule.mini_players: Mini Player Mode",
            "rule.milk_every_mob: Every mob can be milked",
            "rule.day_beds: Bed skip days instead nights",
            "rule.caep.awesom: Give everyone an awesom caep",
            "rule.caep.squid: Give everyone a squid cape squid",
            "rule.caep.veterinarian: Give all the animal lovers a veterinarian cape",
            "rule.caep.nyan: Nya, nya, nya! UwU!",
            "rule.caep.no_circle: NO ROUND SHAPES ALLOWED!",
            "rule.world_of_giants: A World of Giants",
            "rule.egg_free.item: Chickens lay %s",
            "rule.egg_free.seed: Chickens lay randomly assigned item",
            "rule.egg_free.seed_reshuffle: Chicken lay random assigned item (reshuffle)",
            "rule.payment.item: Villagers accept %s instead of gems",
            "rule.payment.seed: Villagers accept randomly assigned item instead of gems",
            "rule.payment.seed_reshuffle: Villagers accept randomly assigned item instead of gems (reshuffle)",
            "rule.rubies: Replace emerald item with ruby (and only that - we are too lazy to do it properly)",
            "rule.ultra_realistic_mode: Ultra Realistic Mode",
            "rule.endermen_pick_up_anything: Endermen Pick Up Anything",
            "rule.beeloons: Enable Beeloons",
            "rule.trails_and_tails: Get the Trails & Tails Update",
            "rule.moon.0: Just the normal Moon",
            "rule.moon.1: Big Romantic Moon. Be careful what you wish for, our scientists have warned us about unintended consequences.",
            "rule.moon.2: Buff the Moon to be even bigger and stronger!",
            "rule.moon.3: MOON TO THE MAX!",
            "rule.grappling_fishing_rods: Grappling Fishing Rods",
            "rule.buff_fishing: Buff fishing",
            "rule.fish_anything: Polluted Oceans: Fish Anything!",
            "rule.entity_collisions: Entities collide with each other",
            "rule.pickaxe_block: Add Pickaxe Block",
            "rule.place_block: Add Place Block",
            "rule.copper_sink: Add Copper Sink",
            "rule.parent_trap: Parent Trap",
            "rule.glow_bees: Glow Bees",
            "rule.always_flying: According to all known laws of aviation, there is no way a mob should be able to walk",
            "rule.remove_phantoms: Remove Phantoms",
            "rule.day_length.set: Set day length %s",
            "rule.day_length.change: Change day length from %s to %s",
            "rule.dream_mode: Life's a Dream",
            "rule.instacheese: Instacheese from Buckets",
            "rule.replace_items: Replace all %s with %s in player inventories",
            "rule.copy_skin: Everyone Copies %s!",
            "rule.reset_skin: Reset all player skins",
            "rule.only_mending_trades: Villagers only trade Mending",
            "rule.bed_pvp: Bed PVP",
            "rule.bed_pvp.tooltip: Highly explosive!",
            "rule.universal_jeb: The universal jeb_ experience‚Ñ¢",
            "rule.colored_light: Add %s colored light",
            "rule.glowing_glow_squids: Make Glow Squids actually glow",
            "rule.bedrock_shadows: Minecraft Bedrock Edition style entity shadows",
            "rule.ray_tracing: Add Ray Tracing. Note: Ray Tracing requires additional processing resources.",
            "rule.vote_result_pass_without_voters: Pass vote even if it has no players voting for it",
            "rule.vote_result_pass_without_votes: Also apply options that have received no votes",
            "rule.vote_result_show_options: Don't show final vote counts",
            "rule.vote_result_show_voters: Reveal voters at the end of vote",
            "rule.vote_result_pick_random_if_vote_fails: Pass random options if vote fails",
            "rule.quorum_percent: Set number of players needed for a vote to pass to %s%% of online players",
            "rule.votes_to_win_percent: Require passing votes to receive at least %s%% of all cast votes",
            "rule.vote_max_results: Pass up to %s rules per vote",
            "rule.vote_result_reverse_counts: Pass lowest-voted option instead of highest-voted ones",
            "rule.tie_strategy.pick_low: On tie pick option with lower number",
            "rule.tie_strategy.pick_high: On tie pick option with higher number",
            "rule.tie_strategy.pick_random: On tie pick random option",
            "rule.tie_strategy.pick_all: On tie pick all options",
            "rule.tie_strategy.pick_none: On tie remove tied option",
            "rule.tie_strategy.fail: On tie fail vote",
            "rule.silent_vote: Don't display voting output",
            "rule.zombie_apocalypse: It's the zombie apocalypse! Watch out for mushrooms. And zombies.",
            "rule.french_mode: French Mode",
            "selectWorld.edit.resetVotes: Reset All Vote Data :(",
            "selectWorld.edit.resetVotes.msg: Proceeding will remove all voting data, including all pending and/or approved proposals.\nUse only when you can't live with consequences of your own actions and/or your world is otherwise unrecoverable.",
            "stat.minecraft.votes: Votes Cast",
            "vote.no_resources: Missing resources",
            "vote.started: Started voting for %s (%s)",
            "vote.finished: Voting finished for %s",
            "vote.failed: Failed to vote: %s",
            "vote.total_count: Received %s vote(s) from %s voter(s)",
            "vote.option_count: Option #%s '%s' received %s vote(s) from %s player(s)",
            "vote.option_no_count: Option #%s '%s' voter(s):",
            "vote.no_change: No change",
            "vote.no_option: No option passed",
            "vote.no_option.random: No option passed, picking random option(s)",
            "vote.quorum.passed: Quorum passed: %s out of %s",
            "vote.quorum.not_reached: Quorum (%s) not reached",
            "vote.vote_count.minimum: Passing option needs at least %s votes",
            "vote.voters: Voters:",
            "vote.voter:     %s: %s",
            "vote.option_won: Option #%s '%s' won",
            "vote.option_won.no_effect: Option #%s '%s' won, but has no effects",
            "vote.option_display: %s. %s",
            "vote.option_vote_title: %s: option %s/%s",
            "vote.no_more_votes: No more votes",
            "vote.cost_diplay: %s √ó %s",
            "vote.count_per_proposal.description: votes per proposal",
            "vote.count_per_proposal.limit: %s/%s votes for this proposal",
            "vote.count_per_proposal.no_limit: %s votes for this proposal",
            "vote.count_per_option.description: votes per option",
            "vote.count_per_option.limit: %s/%s votes for this option",
            "vote.count_per_option.no_limit: %s votes for this option",
            "vote.cost: Cost:",
            "vote.cost.xp: Enchantment Points",
            "vote.cost.health: Health",
            "vote.tie: Voting tie, using strategy '%s'",
            "vote.voted: ‚Ø™ I Voted! ‚Ø´",
            "vote.show_current_rules: Show applied proposals",
            "vote.current_rules: All approved rules (so far)",
            "tooltip.too_long: Tooltip too long, press ctrl-click to show all",
            "tooltip.more_like_cooltip: The Long Tooltip Screen"
          ],
          "removed": []
        }
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/adventure/vote_1.json",
            "minecraft/advancements/adventure/vote_256.json",
            "minecraft/advancements/recipes/brewing/copper_sink.json",
            "minecraft/advancements/recipes/building_blocks/air_block.json",
            "minecraft/advancements/recipes/building_blocks/packed_air.json",
            "minecraft/advancements/recipes/combat/diamond_drows.json",
            "minecraft/advancements/recipes/combat/wob.json",
            "minecraft/advancements/recipes/misc/m_banner_pattern.json",
            "minecraft/advancements/recipes/misc/string_concatenation.json",
            "minecraft/advancements/recipes/redstone/bit_from_name_stonecutting.json",
            "minecraft/advancements/recipes/redstone/bit_from_tag_stonecutting.json",
            "minecraft/advancements/recipes/redstone/left_curly.json",
            "minecraft/advancements/recipes/redstone/left_square.json",
            "minecraft/advancements/recipes/redstone/name_from_name_tag_stonecutting.json",
            "minecraft/advancements/recipes/redstone/pickaxe_block.json",
            "minecraft/advancements/recipes/redstone/place_block.json",
            "minecraft/advancements/recipes/redstone/right_curly.json",
            "minecraft/advancements/recipes/redstone/right_square.json",
            "minecraft/advancements/recipes/redstone/tag_from_name_tag_stonecutting.json",
            "minecraft/damage_type/midas_curse.json",
            "minecraft/damage_type/on_moon.json",
            "minecraft/dimension_type/the_moon.json",
            "minecraft/loot_tables/blocks/cheese.json",
            "minecraft/loot_tables/blocks/copper_sink.json",
            "minecraft/loot_tables/blocks/copper_spleaves.json",
            "minecraft/loot_tables/blocks/filled_copper_sink.json",
            "minecraft/loot_tables/blocks/other_portal.json",
            "minecraft/loot_tables/blocks/pickaxe_block.json",
            "minecraft/loot_tables/blocks/place_block.json",
            "minecraft/loot_tables/chests/moon_lab.json",
            "minecraft/loot_tables/chests/moon_resuply.json",
            "minecraft/loot_tables/entities/moon_cow.json",
            "minecraft/loot_tables/entities/ray_tracing.json",
            "minecraft/loot_tables/gameplay/dream_piglin_bartering.json",
            "minecraft/recipes/air_block.json",
            "minecraft/recipes/bit_from_name_stonecutting.json",
            "minecraft/recipes/bit_from_tag_stonecutting.json",
            "minecraft/recipes/copper_sink.json",
            "minecraft/recipes/diamond_drows.json",
            "minecraft/recipes/dupe_hack.json",
            "minecraft/recipes/left_curly.json",
            "minecraft/recipes/left_square.json",
            "minecraft/recipes/m_banner_pattern.json",
            "minecraft/recipes/name_from_name_tag_stonecutting.json",
            "minecraft/recipes/nbt_crafting.json",
            "minecraft/recipes/packed_air.json",
            "minecraft/recipes/pickaxe_block.json",
            "minecraft/recipes/place_block.json",
            "minecraft/recipes/right_curly.json",
            "minecraft/recipes/right_square.json",
            "minecraft/recipes/string_concatenation.json",
            "minecraft/recipes/tag_from_name_tag_stonecutting.json",
            "minecraft/recipes/wob.json",
            "minecraft/tags/banner_pattern/pattern_item/m.json",
            "minecraft/tags/blocks/cordycep_block.json",
            "minecraft/tags/items/copper.json",
            "minecraft/tags/items/heavy.json",
            "minecraft/worldgen/biome/the_moon.json",
            "minecraft/worldgen/configured_feature/large_crater.json",
            "minecraft/worldgen/configured_feature/lunar_base.json",
            "minecraft/worldgen/configured_feature/mega_crater.json",
            "minecraft/worldgen/configured_feature/small_crater.json",
            "minecraft/worldgen/noise_settings/moon.json",
            "minecraft/worldgen/placed_feature/crater_large.json",
            "minecraft/worldgen/placed_feature/crater_mega.json",
            "minecraft/worldgen/placed_feature/crater_small.json",
            "minecraft/worldgen/placed_feature/lunar_base.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/cheese.json",
            "minecraft/blockstates/copper_sink.json",
            "minecraft/blockstates/copper_spleaves.json",
            "minecraft/blockstates/filled_copper_sink.json",
            "minecraft/blockstates/other_portal.json",
            "minecraft/blockstates/packed_air.json",
            "minecraft/blockstates/pickaxe_block.json",
            "minecraft/blockstates/place_block.json",
            "minecraft/models/block/cheese_1.json",
            "minecraft/models/block/cheese_10.json",
            "minecraft/models/block/cheese_100.json",
            "minecraft/models/block/cheese_1000.json",
            "minecraft/models/block/cheese_10000.json",
            "minecraft/models/block/cheese_100000.json",
            "minecraft/models/block/cheese_1000000.json",
            "minecraft/models/block/cheese_10000000.json",
            "minecraft/models/block/cheese_10000001.json",
            "minecraft/models/block/cheese_1000001.json",
            "minecraft/models/block/cheese_10000010.json",
            "minecraft/models/block/cheese_10000011.json",
            "minecraft/models/block/cheese_100001.json",
            "minecraft/models/block/cheese_1000010.json",
            "minecraft/models/block/cheese_10000100.json",
            "minecraft/models/block/cheese_10000101.json",
            "minecraft/models/block/cheese_1000011.json",
            "minecraft/models/block/cheese_10000110.json",
            "minecraft/models/block/cheese_10000111.json",
            "minecraft/models/block/cheese_10001.json",
            "minecraft/models/block/cheese_100010.json",
            "minecraft/models/block/cheese_1000100.json",
            "minecraft/models/block/cheese_10001000.json",
            "minecraft/models/block/cheese_10001001.json",
            "minecraft/models/block/cheese_1000101.json",
            "minecraft/models/block/cheese_10001010.json",
            "minecraft/models/block/cheese_10001011.json",
            "minecraft/models/block/cheese_100011.json",
            "minecraft/models/block/cheese_1000110.json",
            "minecraft/models/block/cheese_10001100.json",
            "minecraft/models/block/cheese_10001101.json",
            "minecraft/models/block/cheese_1000111.json",
            "minecraft/models/block/cheese_10001110.json",
            "minecraft/models/block/cheese_10001111.json",
            "minecraft/models/block/cheese_1001.json",
            "minecraft/models/block/cheese_10010.json",
            "minecraft/models/block/cheese_100100.json",
            "minecraft/models/block/cheese_1001000.json",
            "minecraft/models/block/cheese_10010000.json",
            "minecraft/models/block/cheese_10010001.json",
            "minecraft/models/block/cheese_1001001.json",
            "minecraft/models/block/cheese_10010010.json",
            "minecraft/models/block/cheese_10010011.json",
            "minecraft/models/block/cheese_100101.json",
            "minecraft/models/block/cheese_1001010.json",
            "minecraft/models/block/cheese_10010100.json",
            "minecraft/models/block/cheese_10010101.json",
            "minecraft/models/block/cheese_1001011.json",
            "minecraft/models/block/cheese_10010110.json",
            "minecraft/models/block/cheese_10010111.json",
            "minecraft/models/block/cheese_10011.json",
            "minecraft/models/block/cheese_100110.json",
            "minecraft/models/block/cheese_1001100.json",
            "minecraft/models/block/cheese_10011000.json",
            "minecraft/models/block/cheese_10011001.json",
            "minecraft/models/block/cheese_1001101.json",
            "minecraft/models/block/cheese_10011010.json",
            "minecraft/models/block/cheese_10011011.json",
            "minecraft/models/block/cheese_100111.json",
            "minecraft/models/block/cheese_1001110.json",
            "minecraft/models/block/cheese_10011100.json",
            "minecraft/models/block/cheese_10011101.json",
            "minecraft/models/block/cheese_1001111.json",
            "minecraft/models/block/cheese_10011110.json",
            "minecraft/models/block/cheese_10011111.json",
            "minecraft/models/block/cheese_101.json",
            "minecraft/models/block/cheese_1010.json",
            "minecraft/models/block/cheese_10100.json",
            "minecraft/models/block/cheese_101000.json",
            "minecraft/models/block/cheese_1010000.json",
            "minecraft/models/block/cheese_10100000.json",
            "minecraft/models/block/cheese_10100001.json",
            "minecraft/models/block/cheese_1010001.json",
            "minecraft/models/block/cheese_10100010.json",
            "minecraft/models/block/cheese_10100011.json",
            "minecraft/models/block/cheese_101001.json",
            "minecraft/models/block/cheese_1010010.json",
            "minecraft/models/block/cheese_10100100.json",
            "minecraft/models/block/cheese_10100101.json",
            "minecraft/models/block/cheese_1010011.json",
            "minecraft/models/block/cheese_10100110.json",
            "minecraft/models/block/cheese_10100111.json",
            "minecraft/models/block/cheese_10101.json",
            "minecraft/models/block/cheese_101010.json",
            "minecraft/models/block/cheese_1010100.json",
            "minecraft/models/block/cheese_10101000.json",
            "minecraft/models/block/cheese_10101001.json",
            "minecraft/models/block/cheese_1010101.json",
            "minecraft/models/block/cheese_10101010.json",
            "minecraft/models/block/cheese_10101011.json",
            "minecraft/models/block/cheese_101011.json",
            "minecraft/models/block/cheese_1010110.json",
            "minecraft/models/block/cheese_10101100.json",
            "minecraft/models/block/cheese_10101101.json",
            "minecraft/models/block/cheese_1010111.json",
            "minecraft/models/block/cheese_10101110.json",
            "minecraft/models/block/cheese_10101111.json",
            "minecraft/models/block/cheese_1011.json",
            "minecraft/models/block/cheese_10110.json",
            "minecraft/models/block/cheese_101100.json",
            "minecraft/models/block/cheese_1011000.json",
            "minecraft/models/block/cheese_10110000.json",
            "minecraft/models/block/cheese_10110001.json",
            "minecraft/models/block/cheese_1011001.json",
            "minecraft/models/block/cheese_10110010.json",
            "minecraft/models/block/cheese_10110011.json",
            "minecraft/models/block/cheese_101101.json",
            "minecraft/models/block/cheese_1011010.json",
            "minecraft/models/block/cheese_10110100.json",
            "minecraft/models/block/cheese_10110101.json",
            "minecraft/models/block/cheese_1011011.json",
            "minecraft/models/block/cheese_10110110.json",
            "minecraft/models/block/cheese_10110111.json",
            "minecraft/models/block/cheese_10111.json",
            "minecraft/models/block/cheese_101110.json",
            "minecraft/models/block/cheese_1011100.json",
            "minecraft/models/block/cheese_10111000.json",
            "minecraft/models/block/cheese_10111001.json",
            "minecraft/models/block/cheese_1011101.json",
            "minecraft/models/block/cheese_10111010.json",
            "minecraft/models/block/cheese_10111011.json",
            "minecraft/models/block/cheese_101111.json",
            "minecraft/models/block/cheese_1011110.json",
            "minecraft/models/block/cheese_10111100.json",
            "minecraft/models/block/cheese_10111101.json",
            "minecraft/models/block/cheese_1011111.json",
            "minecraft/models/block/cheese_10111110.json",
            "minecraft/models/block/cheese_10111111.json",
            "minecraft/models/block/cheese_11.json",
            "minecraft/models/block/cheese_110.json",
            "minecraft/models/block/cheese_1100.json",
            "minecraft/models/block/cheese_11000.json",
            "minecraft/models/block/cheese_110000.json",
            "minecraft/models/block/cheese_1100000.json",
            "minecraft/models/block/cheese_11000000.json",
            "minecraft/models/block/cheese_11000001.json",
            "minecraft/models/block/cheese_1100001.json",
            "minecraft/models/block/cheese_11000010.json",
            "minecraft/models/block/cheese_11000011.json",
            "minecraft/models/block/cheese_110001.json",
            "minecraft/models/block/cheese_1100010.json",
            "minecraft/models/block/cheese_11000100.json",
            "minecraft/models/block/cheese_11000101.json",
            "minecraft/models/block/cheese_1100011.json",
            "minecraft/models/block/cheese_11000110.json",
            "minecraft/models/block/cheese_11000111.json",
            "minecraft/models/block/cheese_11001.json",
            "minecraft/models/block/cheese_110010.json",
            "minecraft/models/block/cheese_1100100.json",
            "minecraft/models/block/cheese_11001000.json",
            "minecraft/models/block/cheese_11001001.json",
            "minecraft/models/block/cheese_1100101.json",
            "minecraft/models/block/cheese_11001010.json",
            "minecraft/models/block/cheese_11001011.json",
            "minecraft/models/block/cheese_110011.json",
            "minecraft/models/block/cheese_1100110.json",
            "minecraft/models/block/cheese_11001100.json",
            "minecraft/models/block/cheese_11001101.json",
            "minecraft/models/block/cheese_1100111.json",
            "minecraft/models/block/cheese_11001110.json",
            "minecraft/models/block/cheese_11001111.json",
            "minecraft/models/block/cheese_1101.json",
            "minecraft/models/block/cheese_11010.json",
            "minecraft/models/block/cheese_110100.json",
            "minecraft/models/block/cheese_1101000.json",
            "minecraft/models/block/cheese_11010000.json",
            "minecraft/models/block/cheese_11010001.json",
            "minecraft/models/block/cheese_1101001.json",
            "minecraft/models/block/cheese_11010010.json",
            "minecraft/models/block/cheese_11010011.json",
            "minecraft/models/block/cheese_110101.json",
            "minecraft/models/block/cheese_1101010.json",
            "minecraft/models/block/cheese_11010100.json",
            "minecraft/models/block/cheese_11010101.json",
            "minecraft/models/block/cheese_1101011.json",
            "minecraft/models/block/cheese_11010110.json",
            "minecraft/models/block/cheese_11010111.json",
            "minecraft/models/block/cheese_11011.json",
            "minecraft/models/block/cheese_110110.json",
            "minecraft/models/block/cheese_1101100.json",
            "minecraft/models/block/cheese_11011000.json",
            "minecraft/models/block/cheese_11011001.json",
            "minecraft/models/block/cheese_1101101.json",
            "minecraft/models/block/cheese_11011010.json",
            "minecraft/models/block/cheese_11011011.json",
            "minecraft/models/block/cheese_110111.json",
            "minecraft/models/block/cheese_1101110.json",
            "minecraft/models/block/cheese_11011100.json",
            "minecraft/models/block/cheese_11011101.json",
            "minecraft/models/block/cheese_1101111.json",
            "minecraft/models/block/cheese_11011110.json",
            "minecraft/models/block/cheese_11011111.json",
            "minecraft/models/block/cheese_111.json",
            "minecraft/models/block/cheese_1110.json",
            "minecraft/models/block/cheese_11100.json",
            "minecraft/models/block/cheese_111000.json",
            "minecraft/models/block/cheese_1110000.json",
            "minecraft/models/block/cheese_11100000.json",
            "minecraft/models/block/cheese_11100001.json",
            "minecraft/models/block/cheese_1110001.json",
            "minecraft/models/block/cheese_11100010.json",
            "minecraft/models/block/cheese_11100011.json",
            "minecraft/models/block/cheese_111001.json",
            "minecraft/models/block/cheese_1110010.json",
            "minecraft/models/block/cheese_11100100.json",
            "minecraft/models/block/cheese_11100101.json",
            "minecraft/models/block/cheese_1110011.json",
            "minecraft/models/block/cheese_11100110.json",
            "minecraft/models/block/cheese_11100111.json",
            "minecraft/models/block/cheese_11101.json",
            "minecraft/models/block/cheese_111010.json",
            "minecraft/models/block/cheese_1110100.json",
            "minecraft/models/block/cheese_11101000.json",
            "minecraft/models/block/cheese_11101001.json",
            "minecraft/models/block/cheese_1110101.json",
            "minecraft/models/block/cheese_11101010.json",
            "minecraft/models/block/cheese_11101011.json",
            "minecraft/models/block/cheese_111011.json",
            "minecraft/models/block/cheese_1110110.json",
            "minecraft/models/block/cheese_11101100.json",
            "minecraft/models/block/cheese_11101101.json",
            "minecraft/models/block/cheese_1110111.json",
            "minecraft/models/block/cheese_11101110.json",
            "minecraft/models/block/cheese_11101111.json",
            "minecraft/models/block/cheese_1111.json",
            "minecraft/models/block/cheese_11110.json",
            "minecraft/models/block/cheese_111100.json",
            "minecraft/models/block/cheese_1111000.json",
            "minecraft/models/block/cheese_11110000.json",
            "minecraft/models/block/cheese_11110001.json",
            "minecraft/models/block/cheese_1111001.json",
            "minecraft/models/block/cheese_11110010.json",
            "minecraft/models/block/cheese_11110011.json",
            "minecraft/models/block/cheese_111101.json",
            "minecraft/models/block/cheese_1111010.json",
            "minecraft/models/block/cheese_11110100.json",
            "minecraft/models/block/cheese_11110101.json",
            "minecraft/models/block/cheese_1111011.json",
            "minecraft/models/block/cheese_11110110.json",
            "minecraft/models/block/cheese_11110111.json",
            "minecraft/models/block/cheese_11111.json",
            "minecraft/models/block/cheese_111110.json",
            "minecraft/models/block/cheese_1111100.json",
            "minecraft/models/block/cheese_11111000.json",
            "minecraft/models/block/cheese_11111001.json",
            "minecraft/models/block/cheese_1111101.json",
            "minecraft/models/block/cheese_11111010.json",
            "minecraft/models/block/cheese_11111011.json",
            "minecraft/models/block/cheese_111111.json",
            "minecraft/models/block/cheese_1111110.json",
            "minecraft/models/block/cheese_11111100.json",
            "minecraft/models/block/cheese_11111101.json",
            "minecraft/models/block/cheese_1111111.json",
            "minecraft/models/block/cheese_11111110.json",
            "minecraft/models/block/cheese_11111111.json",
            "minecraft/models/block/copper_sink.json",
            "minecraft/models/block/copper_spleaves.json",
            "minecraft/models/block/copper_spleaves_broken.json",
            "minecraft/models/block/filled_copper_sink.json",
            "minecraft/models/block/other_portal_ew.json",
            "minecraft/models/block/other_portal_ns.json",
            "minecraft/models/block/packed_air.json",
            "minecraft/models/block/pickaxe_block.json",
            "minecraft/models/block/place_block.json",
            "minecraft/models/block/spleaves.json",
            "minecraft/models/block/template_copper_sink_full.json",
            "minecraft/models/item/air_block.json",
            "minecraft/models/item/bit.json",
            "minecraft/models/item/bottle_of_entity.json",
            "minecraft/models/item/bottle_of_void.json",
            "minecraft/models/item/byte_tag.json",
            "minecraft/models/item/cheese.json",
            "minecraft/models/item/compound_tag.json",
            "minecraft/models/item/copper_sink.json",
            "minecraft/models/item/copper_spleaves.json",
            "minecraft/models/item/double_tag.json",
            "minecraft/models/item/dupe_hack.json",
            "minecraft/models/item/float_tag.json",
            "minecraft/models/item/int_tag.json",
            "minecraft/models/item/la_baguette.json",
            "minecraft/models/item/left_curly.json",
            "minecraft/models/item/left_square.json",
            "minecraft/models/item/le_tricolore.json",
            "minecraft/models/item/list_tag.json",
            "minecraft/models/item/long_tag.json",
            "minecraft/models/item/moon_cow_spawn_egg.json",
            "minecraft/models/item/m_banner_pattern.json",
            "minecraft/models/item/name.json",
            "minecraft/models/item/packed_air.json",
            "minecraft/models/item/pickaxe_block.json",
            "minecraft/models/item/place_block.json",
            "minecraft/models/item/right_curly.json",
            "minecraft/models/item/right_square.json",
            "minecraft/models/item/ruby.json",
            "minecraft/models/item/short_tag.json",
            "minecraft/models/item/splash_bottle_of_entity.json",
            "minecraft/models/item/string2.json",
            "minecraft/models/item/string_tag.json",
            "minecraft/models/item/syntax_error.json",
            "minecraft/models/item/tag.json",
            "minecraft/particles/footstep.json",
            "minecraft/shaders/core/position_tex_funky.fsh",
            "minecraft/shaders/core/position_tex_funky.json",
            "minecraft/shaders/post/bloom.json",
            "minecraft/shaders/program/brightness_threshold.fsh",
            "minecraft/shaders/program/brightness_threshold.json",
            "minecraft/shaders/program/merge_bloom.fsh",
            "minecraft/shaders/program/merge_bloom.json",
            "minecraft/textures/block/cheese.png",
            "minecraft/textures/block/copper_sink_bottom.png",
            "minecraft/textures/block/copper_sink_inner.png",
            "minecraft/textures/block/copper_sink_side.png",
            "minecraft/textures/block/copper_sink_top.png",
            "minecraft/textures/block/copper_spleaves.png",
            "minecraft/textures/block/copper_spleaves_broken.png",
            "minecraft/textures/block/other_portal.png",
            "minecraft/textures/block/other_portal.png.mcmeta",
            "minecraft/textures/block/packed_air.png",
            "minecraft/textures/block/packed_air_alt.png",
            "minecraft/textures/block/pickaxe_block_back.png",
            "minecraft/textures/block/pickaxe_block_front.png",
            "minecraft/textures/block/pickaxe_block_side.png",
            "minecraft/textures/block/place_block_back.png",
            "minecraft/textures/block/place_block_front.png",
            "minecraft/textures/block/place_block_side.png",
            "minecraft/textures/effect/crown.png",
            "minecraft/textures/effect/mustache.png",
            "minecraft/textures/entity/banner/m.png",
            "minecraft/textures/entity/chest/gold.png",
            "minecraft/textures/entity/cow/moon_cow.png",
            "minecraft/textures/entity/player/caeps/awesom.png",
            "minecraft/textures/entity/player/caeps/blonk.png",
            "minecraft/textures/entity/player/caeps/no_circle.png",
            "minecraft/textures/entity/player/caeps/nyan.png",
            "minecraft/textures/entity/player/caeps/squid.png",
            "minecraft/textures/entity/player/caeps/veterinarian.png",
            "minecraft/textures/entity/player/tails/alex.png",
            "minecraft/textures/entity/player/tails/ari.png",
            "minecraft/textures/entity/player/tails/black_fox.png",
            "minecraft/textures/entity/player/tails/brown_bear.png",
            "minecraft/textures/entity/player/tails/earthern.png",
            "minecraft/textures/entity/player/tails/efe.png",
            "minecraft/textures/entity/player/tails/fire_fox.png",
            "minecraft/textures/entity/player/tails/kai.png",
            "minecraft/textures/entity/player/tails/makena.png",
            "minecraft/textures/entity/player/tails/noor.png",
            "minecraft/textures/entity/player/tails/red_fox.png",
            "minecraft/textures/entity/player/tails/snow_fox.png",
            "minecraft/textures/entity/player/tails/steve.png",
            "minecraft/textures/entity/player/tails/striped.png",
            "minecraft/textures/entity/player/tails/sunny.png",
            "minecraft/textures/entity/player/tails/zuri.png",
            "minecraft/textures/entity/player/wide/ray.png",
            "minecraft/textures/entity/shield/m.png",
            "minecraft/textures/environment/earth.png",
            "minecraft/textures/environment/earth_1.png",
            "minecraft/textures/environment/earth_a.png",
            "minecraft/textures/environment/earth_prime.png",
            "minecraft/textures/font/checkmark.png",
            "minecraft/textures/gui/tvpi.png",
            "minecraft/textures/gui/votes.png",
            "minecraft/textures/gui/voting.png",
            "minecraft/textures/item/air_block.png",
            "minecraft/textures/item/bit.png",
            "minecraft/textures/item/bottle_of_entity.png",
            "minecraft/textures/item/bottle_of_void.png",
            "minecraft/textures/item/byte_tag.png",
            "minecraft/textures/item/compound_tag.png",
            "minecraft/textures/item/double_tag.png",
            "minecraft/textures/item/end_tag.png",
            "minecraft/textures/item/float_tag.png",
            "minecraft/textures/item/int_tag.png",
            "minecraft/textures/item/la_baguette.png",
            "minecraft/textures/item/left_curly.png",
            "minecraft/textures/item/left_square.png",
            "minecraft/textures/item/le_tricolore.png",
            "minecraft/textures/item/list_tag.png",
            "minecraft/textures/item/long_tag.png",
            "minecraft/textures/item/m_banner_pattern.png",
            "minecraft/textures/item/name.png",
            "minecraft/textures/item/right_curly.png",
            "minecraft/textures/item/right_square.png",
            "minecraft/textures/item/ruby.png",
            "minecraft/textures/item/short_tag.png",
            "minecraft/textures/item/skis.png",
            "minecraft/textures/item/splash_bottle_of_entity.png",
            "minecraft/textures/item/string2.png",
            "minecraft/textures/item/string_tag.png",
            "minecraft/textures/item/syntax_error.png",
            "minecraft/textures/item/tag.png",
            "minecraft/textures/misc/enchanted_glint_gold.png",
            "minecraft/textures/mob_effect/big.png",
            "minecraft/textures/mob_effect/small.png",
            "minecraft/textures/models/armor/beret.png",
            "minecraft/textures/particle/footprint.png",
            "nothingtoseeheremovealong/lang/fr_fr.json",
            "nothingtoseeheremovealong/sounds/the_joke/sad1.ogg",
            "nothingtoseeheremovealong/sounds/the_joke/sad2.ogg",
            "nothingtoseeheremovealong/sounds/the_joke/sad3.ogg",
            "nothingtoseeheremovealong/sounds/the_joke/sad4.ogg",
            "nothingtoseeheremovealong/sounds.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "misc": [
    {
      "type": "entries",
      "value": {
        "name": "splashes",
        "differences": {
          "added": [
            "Choose Your Own Adventure!",
            "Choice Edition!",
            "Democratic!",
            "People's Choice!",
            "Vote!",
            "I Voted!",
            "Picking and Choosing!",
            "Freedom of Choice!",
            "Make Your Voice Heard!",
            "Choose Wisely!",
            "As You Wish!",
            "Community Choice!",
            "Vote-Driven Development!",
            "Mob Votes! Biome Votes! Food Votes! Moon Votes!",
            "The Chosen Challenge!",
            "To the Moon!",
            "The Golden Vote!",
            "Voted Game of the Year!",
            "By Popular Vote!",
            "A/B Voting!",
            "Fair Votes Guaranteed!",
            "Multiple Choice Gaming!",
            "Vote With Your Gaming!",
            "Game-Changing Votes!",
            "Your Call!",
            "You Decide!",
            "I Demand a Recount!",
            "Vox Populi, Vox Dei!",
            "Machine Voting!",
            "Online Voting!",
            "Voting About Voting!",
            "Can't Blame The Developers For Your Choices!",
            "‚úÖ",
            "‚ùé"
          ],
          "removed": [
            "As seen on TV!",
            "Awesome!",
            "100% pure!",
            "May contain nuts!",
            "More polygons!",
            "Moderately attractive!",
            "Limited edition!",
            "Flashing letters!",
            "It's here!",
            "Best in class!",
            "It's finished!",
            "Kind of dragon free!",
            "Excitement!",
            "More than 500 sold!",
            "One of a kind!",
            "Heaps of hits on YouTube!",
            "Indev!",
            "Spiders everywhere!",
            "Check it out!",
            "Holy cow, man!",
            "It's a game!",
            "Made in Sweden!",
            "Uses LWJGL!",
            "Reticulating splines!",
            "Minecraft!",
            "Yaaay!",
            "Singleplayer!",
            "Keyboard compatible!",
            "Ingots!",
            "Exploding creepers!",
            "That's no moon!",
            "l33t!",
            "Create!",
            "Survive!",
            "Dungeon!",
            "Exclusive!",
            "The bee's knees!",
            "Closed source!",
            "Classy!",
            "Wow!",
            "Not on steam!",
            "Oh man!",
            "Awesome community!",
            "Pixels!",
            "Teetsuuuuoooo!",
            "Kaaneeeedaaaa!",
            "Now with difficulty!",
            "Enhanced!",
            "90% bug free!",
            "Pretty!",
            "12 herbs and spices!",
            "Fat free!",
            "Absolutely no memes!",
            "Free dental!",
            "Ask your doctor!",
            "Minors welcome!",
            "Cloud computing!",
            "Legal in Finland!",
            "Hard to label!",
            "Technically good!",
            "Bringing home the bacon!",
            "Indie!",
            "GOTY!",
            "Ceci n'est pas une title screen!",
            "Euclidian!",
            "Now in 3D!",
            "Inspirational!",
            "Herregud!",
            "Complex cellular automata!",
            "Yes, sir!",
            "Played by cowboys!",
            "Now on OpenGL 3.2 core profile!",
            "Thousands of colors!",
            "Try it!",
            "Age of Wonders is better!",
            "Try the mushroom stew!",
            "Sensational!",
            "Hot tamale, hot hot tamale!",
            "Play him off, keyboard cat!",
            "Guaranteed!",
            "Macroscopic!",
            "Bring it on!",
            "Random splash!",
            "Call your mother!",
            "Monster infighting!",
            "Loved by millions!",
            "Ultimate edition!",
            "Freaky!",
            "You've got a brand new key!",
            "Water proof!",
            "Uninflammable!",
            "Whoa, dude!",
            "All inclusive!",
            "Tell your friends!",
            "NP is not in P!",
            "Music by C418!",
            "Livestreamed!",
            "Haunted!",
            "Polynomial!",
            "Terrestrial!",
            "All is full of love!",
            "Full of stars!",
            "Scientific!",
            "Not as cool as Spock!",
            "Collaborate and listen!",
            "Never dig down!",
            "Take frequent breaks!",
            "Not linear!",
            "Han shot first!",
            "Nice to meet you!",
            "Buckets of lava!",
            "Ride the pig!",
            "Larger than Earth!",
            "sqrt(-1) love you!",
            "Phobos anomaly!",
            "Punching wood!",
            "Falling off cliffs!",
            "1% sugar!",
            "150% hyperbole!",
            "Synecdoche!",
            "Let's danec!",
            "Seecret Friday update!",
            "Reference implementation!",
            "Kiss the sky!",
            "20 GOTO 10!",
            "Verlet intregration!",
            "Peter Griffin!",
            "Do not distribute!",
            "Cogito ergo sum!",
            "4815162342 lines of code!",
            "A skeleton popped out!",
            "The sum of its parts!",
            "BTAF used to be good!",
            "I miss ADOM!",
            "umop-apisdn!",
            "OICU812!",
            "Bring me Ray Cokes!",
            "Finger-licking!",
            "Thematic!",
            "Pneumatic!",
            "Sublime!",
            "Octagonal!",
            "Une baguette!",
            "Gargamel plays it!",
            "Rita is the new top dog!",
            "SWM forever!",
            "Representing Edsbyn!",
            "Matt Damon!",
            "Supercalifragilisticexpialidocious!",
            "Consummate V's!",
            "Cow Tools!",
            "Double buffered!",
            "Fan fiction!",
            "Flaxkikare!",
            "Jason! Jason! Jason!",
            "Hotter than the sun!",
            "Internet enabled!",
            "Autonomous!",
            "Engage!",
            "Fantasy!",
            "DRR! DRR! DRR!",
            "Kick it root down!",
            "Regional resources!",
            "Woo, facepunch!",
            "Woo, somethingawful!",
            "Woo, tigsource!",
            "Woo, worldofminecraft!",
            "Woo, reddit!",
            "Woo, 2pp!",
            "Google anlyticsed!",
            "Now supports √•√§√∂!",
            "Give us Gordon!",
            "Tip your waiter!",
            "Very fun!",
            "12345 is a bad password!",
            "Vote for net neutrality!",
            "Lives in a pineapple under the sea!",
            "MAP11 has two names!",
            "Omnipotent!",
            "Gasp!",
            "...!",
            "Bees, bees, bees, bees!",
            "Jag k√§nner en bot!",
            "This text is hard to read if you play the game at the default resolution, but at 1080p it's fine!",
            "Haha, LOL!",
            "Hampsterdance!",
            "Menger sponge!",
            "idspispopd!",
            "Eple (original edit)!",
            "So fresh, so clean!",
            "Slow acting portals!",
            "Try the Nether!",
            "Don't look directly at the bugs!",
            "Oh, ok, Pigmen!",
            "Finally with ladders!",
            "Scary!",
            "Play Minecraft, Watch Topgear, Get Pig!",
            "Twittered about!",
            "Jump up, jump up, and get down!",
            "Joel is neat!",
            "A riddle, wrapped in a mystery!",
            "This parrot is no more! It has ceased to be!",
            "Welcome to your Doom!",
            "Stay a while, stay forever!",
            "Stay a while and listen!",
            "Treatment for your rash!",
            "\"Autological\" is!",
            "Information wants to be free!",
            "\"Almost never\" is an interesting concept!",
            "Lots of truthiness!",
            "The creeper is a spy!",
            "Turing complete!",
            "It's groundbreaking!",
            "Let our battle's begin!",
            "The sky is the limit!",
            "Jeb has amazing hair!",
            "Ryan also has amazing hair!",
            "Casual gaming!",
            "Undefeated!",
            "Kinda like Lemmings!",
            "Follow the train, CJ!",
            "Leveraging synergy!",
            "This message will never appear on the splash screen, isn't that weird?",
            "DungeonQuest is unfair!",
            "90210!",
            "Check out the far lands!",
            "Tyrion would love it!",
            "Also try VVVVVV!",
            "Also try Super Meat Boy!",
            "Also try Terraria!",
            "Also try Mount And Blade!",
            "Also try Project Zomboid!",
            "Also try World of Goo!",
            "Also try Limbo!",
            "Also try Pixeljunk Shooter!",
            "Also try Braid!",
            "That's super!",
            "Bread is pain!",
            "Read more books!",
            "Khaaaaaaaaan!",
            "Less addictive than TV Tropes!",
            "More addictive than lemonade!",
            "Bigger than a bread box!",
            "Millions of peaches!",
            "Fnord!",
            "This is my true form!",
            "Don't bother with the clones!",
            "Pumpkinhead!",
            "Made by Jeb!",
            "Has an ending!",
            "Finally complete!",
            "Feature packed!",
            "Boots with the fur!",
            "Stop, hammertime!",
            "Testificates!",
            "Conventional!",
            "Homeomorphic to a 3-sphere!",
            "Doesn't avoid double negatives!",
            "Place ALL the blocks!",
            "Does barrel rolls!",
            "Meeting expectations!",
            "PC gaming since 1873!",
            "Ghoughpteighbteau tchoghs!",
            "D√©j√† vu!",
            "D√©j√† vu!",
            "Got your nose!",
            "Haley loves Elan!",
            "Afraid of the big, black bat!",
            "Doesn't use the U-word!",
            "Child's play!",
            "See you next Friday or so!",
            "From the streets of S√∂dermalm!",
            "150 bpm for 400000 minutes!",
            "Technologic!",
            "Funk soul brother!",
            "Pumpa kungen!",
            "Êó•Êú¨„Éè„É≠„ÉºÔºÅ",
            "ÌïúÍµ≠ ÏïàÎÖïÌïòÏÑ∏Ïöî!",
            "Helo Cymru!",
            "Cze≈õƒá Polsko!",
            "‰Ω†Â•Ω‰∏≠ÂõΩÔºÅ",
            "ŒìŒµŒπŒ± œÉŒøœÖ ŒïŒªŒªŒ¨Œ¥Œ±!",
            "My life for Aiur!",
            "Lennart lennart = new Lennart();",
            "I see your vocabulary has improved!",
            "Who put it there?",
            "You can't explain that!",
            "if not ok then return end",
            "¬ß1C¬ß2o¬ß3l¬ß4o¬ß5r¬ß6m¬ß7a¬ß8t¬ß9i¬ßac",
            "¬ßkFUNKY LOL",
            "Big Pointy Teeth!",
            "Bekarton guards the gate!",
            "Mmmph, mmph!",
            "Don't feed avocados to parrots!",
            "Swords for everyone!",
            "Plz reply to my tweet!",
            ".party()!",
            "Take her pillow!",
            "Put that cookie down!",
            "Pretty scary!",
            "I have a suggestion.",
            "Now with extra hugs!",
            "Java 16 + 1 = 17!",
            "Woah.",
            "HURNERJSGER?",
            "What's up, Doc?",
            "Now contains 32 random daily cats!",
            "That's Numberwang!",
            "pls rt",
            "Do you want to join my server?",
            "Put a little fence around it!",
            "Throw a blanket over it!",
            "One day, somewhere in the future, my work will be quoted!",
            "Now with additional stuff!",
            "Extra things!",
            "Yay, puppies for everyone!",
            "So sweet, like a nice bon bon!",
            "Very influential in its circle!",
            "Now With Multiplayer!",
            "Rise from your grave!",
            "Warning! A huge battleship \"STEVE\" is approaching fast!",
            "Blue warrior shot the food!",
            "Run, coward! I hunger!",
            "Flavor with no seasoning!",
            "Strange, but not a stranger!",
            "Tougher than diamonds, rich like cream!",
            "It swings, it jives!",
            "Cruising streets for gold!",
            "Take an eggbeater and beat it against a skillet!",
            "Make me a table, a funky table!",
            "Take the elevator to the mezzanine!",
            "Stop being reasonable, this is the Internet!",
            "/give @a hugs 64",
            "This is good for Realms.",
            "Any computer is a laptop if you're brave enough!",
            "Do it all, everything!",
            "Where there is not light, there can spider!",
            "GNU Terry Pratchett",
            "More Digital!",
            "doot doot",
            "Falling with style!",
            "There's no stopping the Trollmaso",
            "Throw yourself at the ground and miss",
            "Rule #1: it's never my fault",
            "Replaced molten cheese with blood?",
            "Absolutely fixed relatively broken coordinates",
            "Boats FTW",
            "Javalicious edition",
            "Should not be played while driving",
            "You're going too fast!",
            "Don't feed chocolate to parrots!",
            "The true meaning of covfefe",
            "An illusion! What are you hiding?",
            "Something's not quite right...",
            "Thank you for the fish!",
            "All rumors are true!",
            "Truly gone fishing!",
            "Rainbow turtle?",
            "Something funny!",
            "I need more context.",
            "Ahhhhhh!",
            "Don't worry, be happy!",
            "Water bottle!",
            "What's the question?",
            "Plant a tree!",
            "Go to the dentist!",
            "What do you expect?",
            "Look mum, I'm in a splash!",
            "It came from space.",
            "Awesome game design right there!",
            "Ph1lza had a good run!",
            "10 years of Mining and Crafting!",
            "Ping the human!",
            "In case it isn't obvious, foxes aren't players.",
            "Buzzy Bees!",
            "Minecraft Java Edition presents: Disgusting Bugs",
            "Wash your hands!",
            "Soap and water!",
            "Support local businesses!",
            "Stay home and play games!",
            "Stay safe!",
            "Stay strong!",
            "Cough or sneeze into your elbow!",
            "Don‚Äôt touch your face!",
            "Support elderly relatives and friends!",
            "Prepare, but don‚Äôt hoard!",
            "Gamers unite ‚Äì separately in your own homes!",
            "Save the world ‚Äì stay inside!",
            "Shop for your elders!",
            "Hang out with your friends online!",
            "Honey, I grew the bees!",
            "Find your claw!",
            "Everybody do the Leif!",
            "<3 Max & 99 & Ducky!",
            "Bushy eyebrows!",
            "Edit is a name!",
            "From free range developers!",
            "Music by Lena Raine!",
            "Aww man!",
            "#minecraftfarms",
            "And my pickaxe!",
            "Envision! Create! Share!",
            "Fabulous graphics!",
            "Also try Minecraft Dungeons!",
            "Vanilla!",
            "May contain traces of citrus!",
            "Zoglin!?",
            "Black lives matter!",
            "Be anti-racist!",
            "Learn about allyship!",
            "Speak OUT against injustice and UP for equality!",
            "Amplify and listen to BIPOC voices!",
            "Educate your friends on anti-racism!",
            "Support the BIPOC community and creators!",
            "Stand up for equality in your community!",
            "[this splash text is now available]",
            "Contains simulated goats!",
            "Home-made!",
            "There's <<a cat on ,my keyboard!~",
            "The cutest predator you'll ever meet!",
            "Now you are thinking with pistons!",
            "Get to the coppah!",
            "Board game version also available!",
            "Honey, I waxed the copper!",
            "Plant-based light sources!",
            "Made by \"real\" people!",
            "Shriek like a Sculk Shrieker!",
            "Who let the frogs out?",
            "RIBBIT!",
            "Croak team!",
            "Nooooooooooooo!",
            "Flower forest TM perfume",
            "Hat Fridays!",
            "Technoblade never dies!",
            "You are valid!",
            "I'm glad you're here!",
            "You are welcome here!",
            "Your gender is valid!",
            "Contains infinite genders!",
            "Made with lave!"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.FriendlyByteBuf$1",
            "XXX.minecraft.network.FriendlyByteBuf$Writer",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$1",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ItemStackInfo",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.LiteralContents",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$2",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.FileToIdConverter",
            "XXX.minecraft.resources.RegistryDataLoader",
            "XXX.minecraft.resources.RegistryDataLoader$Loader",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryOps",
            "XXX.minecraft.resources.RegistryOps$2",
            "XXX.minecraft.resources.RegistryOps$RegistryInfoLookup",
            "XXX.minecraft.resources.ResourceKey$InternKey",
            "XXX.minecraft.resources.ResourceLocation$Dummy",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.chase.ChaseClient",
            "XXX.server.chase.ChaseServer",
            "XXX.server.chase.package-info",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.CloneCommands$DimensionAndPosition",
            "XXX.server.commands.DamageCommand",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillBiomeCommand",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PlaceCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ResetChunksCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties$WorldDimensionData",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimeStamped",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.world.entity.Display$LinearFloatInterpolator",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.VariantHolder",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.monster.warden.AngerManagement",
            "XXX.monster.warden.AngerManagement$Sorter",
            "XXX.monster.warden.Warden$1",
            "XXX.monster.warden.Warden$2",
            "XXX.monster.warden.WardenSpawnTracker",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$1",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModeCheck",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorItem$Type",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.Equipable",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack$TooltipPart",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.item.context.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer$Factory",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.SwiftSneakEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.Level$2",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureManager",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeGenerationSettings$PlainBuilder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$2",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.Climate",
            "XXX.level.biome.Climate$Parameter",
            "XXX.level.biome.Climate$ParameterPoint",
            "XXX.level.biome.Climate$RTree$Leaf",
            "XXX.level.biome.Climate$RTree$SubTree",
            "XXX.level.biome.Climate$SpawnFinder",
            "XXX.level.biome.Climate$TargetPoint",
            "XXX.level.biome.FeatureSorter$1FeatureData",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.MobSpawnSettings$Builder",
            "XXX.level.biome.MobSpawnSettings$SpawnerData",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider",
            "XXX.level.biome.OverworldBiomeBuilder",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChiseledBookShelfBlock",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PowderSnowCauldronBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkBehaviour",
            "XXX.level.block.SculkBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SculkSpreader",
            "XXX.level.block.SculkVeinBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$1",
            "XXX.level.levelgen.NoiseChunk$BlendAlpha",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$CacheAllInCell",
            "XXX.level.levelgen.NoiseChunk$FlatCache",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseRouter",
            "XXX.level.levelgen.NoiseRouterData$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.OreVeinifier$VeinType",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomState",
            "XXX.level.levelgen.RandomState$1NoiseWiringHelper",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.ThreadSafeLegacyRandomSource",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldDimensions$1Entry",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldOptions",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.Blender$BlendingOutput",
            "XXX.levelgen.blending.Blender$DistanceGetter",
            "XXX.levelgen.blending.BlendingData$BiomeConsumer",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.AllOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicate",
            "XXX.levelgen.blockpredicates.CombiningPredicate",
            "XXX.levelgen.blockpredicates.InsideWorldBoundsPredicate",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.blockpredicates.TrueBlockPredicate",
            "XXX.levelgen.blockpredicates.package-info",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.carver.WorldCarver$CarveSkipChecker",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BasaltColumnsFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.ScatteredOreFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.TreeFeature$1",
            "XXX.levelgen.feature.UnderwaterMagmaFeature",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterloggedVegetationPatchFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.BlockColumnConfiguration$Layer",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.CountConfiguration"
          ],
          "removed": [
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.gametest.framework.AfterBatch",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.FriendlyByteBuf$Reader",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatType$BoundNetwork",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents$1",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$2$1",
            "XXX.network.protocol.BundlerInfo$Provider",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.ClientboundVoteFinishPacket",
            "XXX.protocol.game.ClientboundVoteStartPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$1",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.SynchedEntityData$DataValue",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.HolderSetCodec",
            "XXX.minecraft.resources.RegistryDataLoader$1",
            "XXX.minecraft.resources.RegistryDataLoader$RegistryData",
            "XXX.minecraft.resources.RegistryFixedCodec",
            "XXX.minecraft.resources.RegistryOps$1",
            "XXX.minecraft.resources.RegistryOps$RegistryInfo",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext",
            "XXX.minecraft.server.ServerFunctionManager$TraceCallbacks",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.chase.ChaseClient$TeleportTarget",
            "XXX.server.chase.ChaseServer$PlayerPosition",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ChaseCommand",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$CommandFunction",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugCommand$Tracer",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.JfrCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PerfCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.RideCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpawnArmorTrimsCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WardenSpawnTrackerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$ChunkAndHolder",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel$1",
            "XXX.minecraft.util.RgbTxt",
            "XXX.datafix.schemas.V3444",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.voting.VoteCommand$1",
            "XXX.voting.rules.BooleanRule",
            "XXX.voting.rules.CounterRule",
            "XXX.voting.rules.CounterRule$CounterRuleChange",
            "XXX.voting.rules.DoubleOrHalfMapRule",
            "XXX.voting.rules.EnumRule",
            "XXX.voting.rules.EnumRule$EnumRuleChange",
            "XXX.voting.rules.FixedOrRandomKeyRule$1",
            "XXX.voting.rules.MapRule",
            "XXX.voting.rules.MapRule$MapRuleChange",
            "XXX.voting.rules.OneShotRule$1",
            "XXX.voting.rules.OneShotRule$Resettable",
            "XXX.voting.rules.RandomNumberRule",
            "XXX.voting.rules.RandomNumberRule$RandomFloat",
            "XXX.voting.rules.RandomNumberRule$RandomNumberRuleChange",
            "XXX.voting.rules.ResourceKeySetRule",
            "XXX.voting.rules.ResourceKeySingleRule$1",
            "XXX.voting.rules.Rule",
            "XXX.voting.rules.RuleChange",
            "XXX.voting.rules.RuleChange$Simple",
            "XXX.voting.rules.Rules$1",
            "XXX.voting.rules.Rules$11",
            "XXX.voting.rules.Rules$13",
            "XXX.voting.rules.Rules$15",
            "XXX.voting.rules.Rules$17",
            "XXX.voting.rules.Rules$19",
            "XXX.voting.rules.Rules$20",
            "XXX.voting.rules.Rules$22",
            "XXX.voting.rules.Rules$24",
            "XXX.voting.rules.Rules$26",
            "XXX.voting.rules.Rules$28",
            "XXX.voting.rules.Rules$3",
            "XXX.voting.rules.Rules$31",
            "XXX.voting.rules.Rules$33",
            "XXX.voting.rules.Rules$35",
            "XXX.voting.rules.Rules$37",
            "XXX.voting.rules.Rules$39",
            "XXX.voting.rules.Rules$40",
            "XXX.voting.rules.Rules$42",
            "XXX.voting.rules.Rules$5",
            "XXX.voting.rules.Rules$7",
            "XXX.voting.rules.Rules$9",
            "XXX.voting.rules.SetRule$SetRuleChange",
            "XXX.voting.rules.UniformIntRule$1",
            "XXX.voting.rules.VotingCostRule",
            "XXX.voting.rules.VotingCostRule$Change",
            "XXX.rules.actual.BinaryGameRuleRule",
            "XXX.rules.actual.BiomeColorRule",
            "XXX.rules.actual.BlockFlammabilityRule$Flammability",
            "XXX.rules.actual.BlockModelReplacementRule",
            "XXX.rules.actual.BlockModelReplacementRule$Replacements",
            "XXX.rules.actual.CaepType",
            "XXX.rules.actual.CodepointReplaceRule",
            "XXX.rules.actual.CodepointStyleRule$CodepointChange",
            "XXX.rules.actual.CopySkinRule",
            "XXX.rules.actual.DayLengthRule",
            "XXX.rules.actual.DoubleOrHalfItemMapRule",
            "XXX.rules.actual.FlailingLevel",
            "XXX.rules.actual.FootprintRule",
            "XXX.rules.actual.GiveEffectRule$MobEffectEntry",
            "XXX.rules.actual.Goldifier$1",
            "XXX.rules.actual.IntegerGameRuleRule$RuleRuleChange",
            "XXX.rules.actual.ItemEntityDespawn",
            "XXX.rules.actual.ItemGiveRule$GiveItemRule",
            "XXX.rules.actual.ItemReplacementRule",
            "XXX.rules.actual.LightEngineMode",
            "XXX.rules.actual.MoonRule",
            "XXX.rules.actual.NaturalSpawnReplaceRule",
            "XXX.rules.actual.ParentTrapRule",
            "XXX.rules.actual.PlayerEntry",
            "XXX.rules.actual.RecipeEnableRule",
            "XXX.rules.actual.ReplaceItemsRule",
            "XXX.rules.actual.ReplaceItemsRule$ReplaceRuleChange",
            "XXX.rules.actual.SoundEventReplacementRule",
            "XXX.rules.actual.TheJokeRule$1",
            "XXX.rules.actual.ThreadedAnvilChunkStorage$1",
            "XXX.rules.actual.TransformEntityRule",
            "XXX.rules.actual.TransformScaleRule",
            "XXX.rules.actual.VehicleCollisionRule",
            "XXX.rules.actual.WeatherOption",
            "XXX.rules.actual.package-info",
            "XXX.voting.votes.ClientVote",
            "XXX.voting.votes.CommonVoteData",
            "XXX.voting.votes.FinishedVote$1",
            "XXX.voting.votes.FinishedVote$UnpackOptions",
            "XXX.voting.votes.OptionVoteStorage",
            "XXX.voting.votes.ServerVote",
            "XXX.voting.votes.ServerVote$Option",
            "XXX.voting.votes.ServerVoteStorage",
            "XXX.voting.votes.ServerVoteStorage$VoteResult",
            "XXX.voting.votes.VoteResults",
            "XXX.voting.votes.VoteResults$VoteCounts",
            "XXX.voting.votes.Voter",
            "XXX.voting.votes.VotingMaterial",
            "XXX.voting.votes.VotingMaterial$2",
            "XXX.voting.votes.VotingMaterial$CustomCost",
            "XXX.voting.votes.VotingMaterial$Type$1",
            "XXX.voting.votes.VotingMaterial$Type$3",
            "XXX.voting.votes.VotingMaterial$Type$5",
            "XXX.voting.votes.VotingMaterial$VotingResource",
            "XXX.voting.votes.VotingMaterial$VotingResource$2",
            "XXX.world.entity.Display$KeyFrame",
            "XXX.world.entity.Display$LinearIntInterpolator",
            "XXX.world.entity.Display$StencilDisplay$StencilRenderState",
            "XXX.world.entity.Entity$InPortal",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.RelativeMovement",
            "XXX.world.entity.RiderShieldingMount",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.TraceableEntity",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Bee$FloatDownGoal",
            "XXX.entity.animal.MoonCow",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.RayTracing",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.monster.warden.AngerLevel",
            "XXX.monster.warden.AngerManagement$1",
            "XXX.monster.warden.Warden",
            "XXX.monster.warden.Warden$1$1",
            "XXX.monster.warden.WardenAi",
            "XXX.monster.warden.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.transform.EntityTransform",
            "XXX.entity.transform.EntityTransformType$TypeModifier",
            "XXX.entity.transform.package-info",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BottleOfVoidItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DupeHackItem",
            "XXX.world.item.EmeraldItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.NameItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.Level$ExplosionInteraction",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SignalGetter",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldDataConfiguration",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeResolver",
            "XXX.level.biome.BiomeSources",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$1",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$3",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.Climate$DistanceMetric",
            "XXX.level.biome.Climate$ParameterList",
            "XXX.level.biome.Climate$RTree",
            "XXX.level.biome.Climate$RTree$Node",
            "XXX.level.biome.Climate$Sampler",
            "XXX.level.biome.Climate$SpawnFinder$Result",
            "XXX.level.biome.FeatureSorter",
            "XXX.level.biome.FeatureSorter$StepFeatureData",
            "XXX.level.biome.MobSpawnSettings",
            "XXX.level.biome.MobSpawnSettings$MobSpawnCost",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$2",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterLists",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.block.CherryLeavesBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChiseledBookShelfBlock$1",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.Fallable",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FilledCopperSinkBlock",
            "XXX.level.block.PackedAirBlock",
            "XXX.level.block.PlaceBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PointedDripstoneBlock$FluidInfo",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SculkBehaviour$1",
            "XXX.level.block.SculkCatalystBlock",
            "XXX.level.block.SculkShriekerBlock",
            "XXX.level.block.SculkSpreader$ChargeCursor",
            "XXX.level.block.SculkVeinBlock$SculkVeinSpreaderConfig",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnifferEggBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpleavesBlock",
            "XXX.level.levelgen.MoonBaseBuilder",
            "XXX.level.levelgen.MoonBaseBuilder$Branch",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$2",
            "XXX.level.levelgen.NoiseChunk$BlendOffset",
            "XXX.level.levelgen.NoiseChunk$Cache2D",
            "XXX.level.levelgen.NoiseChunk$CacheOnce",
            "XXX.level.levelgen.NoiseChunk$NoiseChunkDensityFunction",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseRouterData",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.OreVeinifier",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomState$1",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldDimensions",
            "XXX.level.levelgen.WorldDimensions$Complete",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$CellValueGetter",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.package-info",
            "XXX.levelgen.blockpredicates.AnyOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicateType",
            "XXX.levelgen.blockpredicates.HasSturdyFacePredicate",
            "XXX.levelgen.blockpredicates.MatchingBlockTagPredicate",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.blockpredicates.StateTestingPredicate",
            "XXX.levelgen.blockpredicates.WouldSurvivePredicate",
            "XXX.levelgen.carver.CanyonCarverConfiguration",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockColumnFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.CraterFeature",
            "XXX.levelgen.feature.LunarBaseFeature",
            "XXX.levelgen.feature.MultifaceGrowthFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.PointedDripstoneFeature",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RootSystemFeature",
            "XXX.levelgen.feature.SculkPatchFeature",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.TwistingVinesFeature",
            "XXX.levelgen.feature.VegetationPatchFeature",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.feature.configurations.BlockColumnConfiguration",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.ColumnFeatureConfiguration",
            "XXX.feature.configurations.CraterFeatureConfiguration"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "net.minecraft.ChatFormatting \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "net.minecraft.SharedConstants \u001b[2;32m+1P\u001b[0m",
          "net.minecraft.Util \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.PlayerTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.core.Direction \u001b[2;32m+3P\u001b[0m",
          "XXX.minecraft.core.Direction$Axis \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.core.Direction$Axis$2 \u001b[2;32m+1M\u001b[0m",
          "XXX.core.particles.ParticleTypes \u001b[2;32m+1P\u001b[0m",
          "XXX.loot.packs.VanillaBlockLoot \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.models.BlockModelGenerators \u001b[2;32m+11M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.models.model.ModelTemplates \u001b[2;32m+2P\u001b[0m",
          "XXX.data.recipes.ShapedRecipeBuilder$Result \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.data.worldgen.SurfaceRuleData \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.server.level.ServerPlayer \u001b[2;32m+19M\u001b[0m \u001b[2;31m-12M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.server.players.PlayerList \u001b[2;32m+5M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.minecraft.stats.Stats \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.util.ExtraCodecs \u001b[2;32m+40M\u001b[0m \u001b[2;31m-38M\u001b[0m",
          "XXX.world.damagesource.DamageSources \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.world.damagesource.DamageTypes \u001b[2;32m+2P\u001b[0m",
          "XXX.world.effect.MobEffects \u001b[2;32m+2P\u001b[0m",
          "XXX.world.entity.Entity \u001b[2;32m+18M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+7P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.animal.Chicken \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Cow \u001b[2;32m+18M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.animal.IronGolem \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.Parrot \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.Pig \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.animal.Sheep \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.animal.Wolf \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.animal.axolotl.Axolotl \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.animal.horse.AbstractChestedHorse \u001b[2;32m+1M\u001b[0m",
          "XXX.animal.horse.AbstractHorse \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.boss.enderdragon.EndCrystal \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.decoration.ArmorStand \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.item.ItemEntity \u001b[2;32m+4M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Silverfish \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.monster.Vex \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.monster.Zombie \u001b[2;32m+6M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.vehicle.MinecartTNT \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.food.FoodProperties \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.world.food.Foods \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.item.alchemy.Potions \u001b[2;32m+6P\u001b[0m",
          "XXX.item.crafting.FireworkRocketRecipe \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.item.crafting.FireworkStarRecipe \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.item.crafting.MapExtendingRecipe \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.AbstractCandleBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.AirBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.ChainBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.CrossCollisionBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.DoorBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.EndRodBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.LevelEvent \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.MudBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.TrapDoorBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.block.entity.BannerPatterns \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.HopperBlockEntity \u001b[2;32m+1P\u001b[0m",
          "XXX.block.piston.MovingPistonBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.chunk.ChunkAccess \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.dimension.BuiltinDimensionTypes \u001b[2;32m+2P\u001b[0m",
          "XXX.level.dimension.LevelStem \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.presets.WorldPresets$Bootstrap \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.LevelStorageSource$LevelStorageAccess \u001b[2;32m+2M\u001b[0m",
          "XXX.storage.loot.BuiltInLootTables \u001b[2;32m+3P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.ChatFormatting",
        "differences": {
          "added": [],
          "removed": [
            "boolean lambda$static$2(ChatFormatting)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.Util",
        "differences": {
          "added": [
            "void shuffle(ObjectArrayList,RandomSource)"
          ],
          "removed": [
            "void shuffle(List,RandomSource)",
            "int calculatePrefixSize(Iterable)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerTrigger$TriggerInstance",
        "differences": {
          "added": [],
          "removed": [
            "PlayerTrigger$TriggerInstance vote(MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.Direction$Axis$2",
        "differences": {
          "added": [],
          "removed": [
            "Direction[] getOrthogonalDirections()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.loot.packs.VanillaBlockLoot",
        "differences": {
          "added": [
            "LootPoolEntryContainer$Builder lambda$createPitcherCropLoot$238(Integer)"
          ],
          "removed": [
            "LootPoolEntryContainer$Builder lambda$createPitcherCropLoot$239(Integer)",
            "LootTable$Builder lambda$generate$238(Block)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.models.BlockModelGenerators",
        "differences": {
          "added": [
            "void createNetherPortalBlock()"
          ],
          "removed": [
            "void createPackedAir()",
            "void createNetherPortalBlock(Block)",
            "void createSpleaves(Block)",
            "void createFacing(Block)",
            "void createCheeseBlock()",
            "JsonObject buildModelFromShape(ResourceLocation,VoxelShape)",
            "boolean isOnEdge(double,double,double,double,double,double,Direction)",
            "void lambda$buildModelFromShape$61(JsonArray,double,double,double,double,double,double)",
            "void lambda$buildModelFromShape$60(double,double,double,JsonArray)",
            "void lambda$buildModelFromShape$59(double,double,double,JsonArray)",
            "JsonElement lambda$createCheeseBlock$58(ResourceLocation,VoxelShape)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.ShapedRecipeBuilder$Result",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Item,int,String,CraftingBookCategory,List,Map,Advancement$Builder,ResourceLocation,boolean)"
          ],
          "removed": [
            "void <init>(ResourceLocation,Item,int,String,CraftingBookCategory,List,Map,Advancement$Builder,ResourceLocation,boolean,boolean,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.SurfaceRuleData",
        "differences": {
          "added": [],
          "removed": [
            "SurfaceRules$RuleSource moon()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ServerPlayer",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)",
            "boolean teleportTo(ServerLevel,double,double,double,Set,float,float)",
            "void lambda$drop$12(Inventory,int)",
            "Packet lambda$sendSystemMessage$11(Component)",
            "void lambda$awardStat$10(int,Score)",
            "void lambda$startSleepInBed$9(Unit)",
            "boolean lambda$startSleepInBed$8(Monster)",
            "void lambda$tellNeutralMobsThatIDied$7(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$6(Mob)",
            "Packet lambda$die$5(Component)",
            "Style lambda$die$4(Component,Style)",
            "void lambda$updateScoreForCriteria$3(int,Score)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)",
            "void stepOnBlock(BlockPos,BlockState,Block)",
            "Entity teleportTo(ServerLevel,double,double,double,Set,float,float)",
            "void summonLightning(Vec3)",
            "MobType getMobType()",
            "boolean isInvertedHealAndHarm()",
            "void turnIntoGold()",
            "void lambda$drop$14(Inventory,int)",
            "Packet lambda$sendSystemMessage$13(Component)",
            "void lambda$awardStat$12(int,Score)",
            "void lambda$startSleepInBed$11(Unit)",
            "boolean lambda$startSleepInBed$10(Monster)",
            "void lambda$tellNeutralMobsThatIDied$9(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$8(Mob)",
            "Packet lambda$die$7(Component)",
            "Style lambda$die$6(Component,Style)",
            "void lambda$updateScoreForCriteria$5(int,Score)",
            "double lambda$tick$4(ServerPlayer)",
            "boolean lambda$tick$3(ServerPlayer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.players.PlayerList",
        "differences": {
          "added": [
            "Component lambda$broadcastSystemMessage$3(Component,ServerPlayer)",
            "void lambda$remove$2(Entity)"
          ],
          "removed": [
            "ClientboundBulkVoteInfoPacket createVoteReloadPacket(UUID)",
            "Component lambda$broadcastSystemMessage$5(Component,ServerPlayer)",
            "void lambda$remove$4(Entity)",
            "void lambda$createVoteReloadPacket$3(Map,UUID,OptionId,Voter)",
            "void lambda$createVoteReloadPacket$2(Map,UUID,ServerVote)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.ExtraCodecs",
        "differences": {
          "added": [
            "DataResult lambda$sizeLimitedString$88(int,int,String)",
            "String lambda$sizeLimitedString$86(String,int,int,int)",
            "DataResult lambda$static$85(String)",
            "String lambda$static$84()",
            "App lambda$static$83(RecordCodecBuilder$Instance)",
            "GameProfile lambda$static$82(GameProfile,PropertyMap)",
            "void lambda$static$81(GameProfile,String,Property)",
            "String lambda$static$80(Optional)",
            "UUID lambda$static$79(Optional)",
            "Either lambda$static$78(PropertyMap)",
            "PropertyMap lambda$static$77(Either)",
            "void lambda$static$76(PropertyMap,List)",
            "void lambda$static$75(PropertyMap,Map)",
            "void lambda$static$74(PropertyMap,String,List)",
            "App lambda$static$73(RecordCodecBuilder$Instance)",
            "Property lambda$static$72(String,String,Optional)",
            "Optional lambda$static$71(Property)",
            "LongStream lambda$static$70(BitSet)",
            "BitSet lambda$static$69(LongStream)",
            "Optional lambda$static$68(OptionalLong)",
            "OptionalLong lambda$static$67(Optional)",
            "DataResult lambda$static$66(String)",
            "ExtraCodecs$TagOrElementLocation lambda$static$64(ResourceLocation)",
            "String lambda$static$63(byte[])",
            "DataResult lambda$static$62(String)",
            "String lambda$static$61()",
            "DataResult lambda$instantCodec$60(DateTimeFormatter,String)",
            "DataResult lambda$static$59(String)",
            "String lambda$static$58(String,PatternSyntaxException)",
            "DataResult lambda$ensureHomogenous$57(Function,Collection)",
            "String lambda$ensureHomogenous$56(Object,Object,Object)",
            "DataResult lambda$nonEmptyHolderSet$55(HolderSet)",
            "String lambda$nonEmptyHolderSet$54()",
            "DataResult lambda$nonEmptyList$53(List)",
            "String lambda$nonEmptyList$52()",
            "String lambda$static$51(Float)",
            "DataResult lambda$floatRangeMinExclusiveWithMessage$50(float,float,Function,Float)",
            "String lambda$floatRangeMinExclusiveWithMessage$49(Function,Float)"
          ],
          "removed": [
            "Codec floatRange(float,float)",
            "DataResult lambda$sizeLimitedString$89(int,int,String)",
            "String lambda$sizeLimitedString$88(String,int,int,int)",
            "DataResult lambda$static$86(String)",
            "String lambda$static$85()",
            "App lambda$static$84(RecordCodecBuilder$Instance)",
            "GameProfile lambda$static$83(GameProfile,PropertyMap)",
            "void lambda$static$82(GameProfile,String,Property)",
            "String lambda$static$81(Optional)",
            "UUID lambda$static$80(Optional)",
            "Either lambda$static$79(PropertyMap)",
            "PropertyMap lambda$static$78(Either)",
            "void lambda$static$77(PropertyMap,List)",
            "void lambda$static$76(PropertyMap,Map)",
            "void lambda$static$75(PropertyMap,String,List)",
            "App lambda$static$74(RecordCodecBuilder$Instance)",
            "Property lambda$static$73(String,String,Optional)",
            "Optional lambda$static$72(Property)",
            "LongStream lambda$static$71(BitSet)",
            "BitSet lambda$static$70(LongStream)",
            "Optional lambda$static$69(OptionalLong)",
            "OptionalLong lambda$static$68(Optional)",
            "DataResult lambda$static$67(String)",
            "ExtraCodecs$TagOrElementLocation lambda$static$66(ResourceLocation)",
            "String lambda$static$64(byte[])",
            "DataResult lambda$static$63(String)",
            "String lambda$static$62()",
            "DataResult lambda$instantCodec$61(DateTimeFormatter,String)",
            "DataResult lambda$static$60(String)",
            "String lambda$static$59(String,PatternSyntaxException)",
            "DataResult lambda$ensureHomogenous$58(Function,Collection)",
            "String lambda$ensureHomogenous$57(Object,Object,Object)",
            "DataResult lambda$nonEmptyHolderSet$56(HolderSet)",
            "String lambda$nonEmptyHolderSet$55()",
            "DataResult lambda$nonEmptyList$54(List)",
            "String lambda$nonEmptyList$53()",
            "String lambda$static$52(Float)",
            "DataResult lambda$floatRangeMinExclusiveWithMessage$51(float,float,Function,Float)",
            "String lambda$floatRangeMinExclusiveWithMessage$50(Function,Float)",
            "String lambda$floatRange$49(float,float,Float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.damagesource.DamageSources",
        "differences": {
          "added": [],
          "removed": [
            "DamageSource onMoon()",
            "DamageSource midasTouch()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.Entity",
        "differences": {
          "added": [
            "void handleInsidePortal(BlockPos)",
            "boolean teleportTo(ServerLevel,double,double,double,Set,float,float)"
          ],
          "removed": [
            "EntityDimensions getCurrentDimensions()",
            "void postTick()",
            "void transformedTick(EntityTransform,LivingEntity)",
            "void stepOnBlock(BlockPos,BlockState,Block)",
            "Entity effectiveEntity()",
            "float getGravity()",
            "float getEffectiveGravity()",
            "boolean canSpawnFootprintParticle()",
            "void spawnFootprintParticle()",
            "boolean hurtInternal(DamageSource,float)",
            "void turnIntoGold()",
            "void handleInsidePortal(BlockPos,boolean)",
            "Entity teleportTo(ServerLevel,double,double,double,Set,float,float)",
            "boolean noCulling()",
            "void setNoCulling(boolean)",
            "boolean canTransformFly()",
            "String getSkinName()",
            "void copyTransformedProperties(LivingEntity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Chicken",
        "differences": {
          "added": [],
          "removed": [
            "void transformedTick(EntityTransform,LivingEntity)",
            "void tickFlapping()",
            "void lambda$aiStep$0(Holder$Reference)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Cow",
        "differences": {
          "added": [],
          "removed": [
            "boolean isBaloonCowEnabled()",
            "int getBloatLevel()",
            "void setBloatLevel(int)",
            "void addAdditionalSaveData(CompoundTag)",
            "void readAdditionalSaveData(CompoundTag)",
            "void defineSynchedData()",
            "void onDonePathing()",
            "void liftOff()",
            "void aiStep()",
            "void onSyncedDataUpdated(EntityDataAccessor)",
            "double getPassengersRidingOffset()",
            "float getBloatScale()",
            "LivingEntity getControllingPassenger()",
            "EntityDimensions getDimensions(Pose)",
            "void explode()",
            "void dropAllDeathLoot(DamageSource)",
            "boolean lambda$registerGoals$0()",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.IronGolem",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Parrot",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean canTransformFly()",
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Pig",
        "differences": {
          "added": [],
          "removed": [
            "InteractionResult transformInteract(Player,LivingEntity,InteractionHand)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Sheep",
        "differences": {
          "added": [],
          "removed": [
            "DyeColor shiftColor(DyeColor,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Wolf",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.axolotl.Axolotl",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.horse.AbstractChestedHorse",
        "differences": {
          "added": [],
          "removed": [
            "void dropCustomDeathLoot(DamageSource,int,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.horse.AbstractHorse",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)",
            "InteractionResult transformInteract(Player,LivingEntity,InteractionHand)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.boss.enderdragon.EndCrystal",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.ArmorStand",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.item.ItemEntity",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)",
            "void setThrower(UUID)"
          ],
          "removed": [
            "boolean isThrownIntentionally()",
            "boolean hurtInternal(DamageSource,float)",
            "void setThrower(UUID,boolean)",
            "void turnIntoGold()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Silverfish",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Vex",
        "differences": {
          "added": [],
          "removed": [
            "boolean canTransformFly()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Zombie",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "float getSpeed()",
            "void transformedTick(EntityTransform,LivingEntity)",
            "void burnInSun(LivingEntity)",
            "boolean hurtInternal(DamageSource,float)",
            "float adjustDamage(float)",
            "boolean lambda$addBehaviourGoals$1(Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.vehicle.MinecartTNT",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.food.FoodProperties",
        "differences": {
          "added": [
            "void <init>(int,float,boolean,boolean,boolean,List)"
          ],
          "removed": [
            "void <init>(int,float,boolean,boolean,boolean,List,BiConsumer)",
            "BiConsumer getOnEaten()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.food.Foods",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$static$0(ItemStack,LivingEntity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.FireworkRocketRecipe",
        "differences": {
          "added": [
            "ItemStack assemble(CraftingContainer,RegistryAccess)",
            "ItemStack getResultItem(RegistryAccess)",
            "ItemStack assemble(Container,RegistryAccess)"
          ],
          "removed": [
            "ItemStack assembleRaw(CraftingContainer,RegistryAccess)",
            "ItemStack getResultItemRaw(RegistryAccess)",
            "ItemStack assembleRaw(Container,RegistryAccess)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.FireworkStarRecipe",
        "differences": {
          "added": [
            "ItemStack assemble(CraftingContainer,RegistryAccess)",
            "ItemStack getResultItem(RegistryAccess)",
            "ItemStack assemble(Container,RegistryAccess)"
          ],
          "removed": [
            "ItemStack assembleRaw(CraftingContainer,RegistryAccess)",
            "ItemStack getResultItemRaw(RegistryAccess)",
            "ItemStack assembleRaw(Container,RegistryAccess)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.MapExtendingRecipe",
        "differences": {
          "added": [
            "ItemStack assemble(CraftingContainer,RegistryAccess)",
            "ItemStack assemble(Container,RegistryAccess)"
          ],
          "removed": [
            "ItemStack assembleRaw(CraftingContainer,RegistryAccess)",
            "ItemStack assembleRaw(Container,RegistryAccess)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractCandleBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AirBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canStickToStuff(BlockState)",
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ChainBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CrossCollisionBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DoorBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndRodBlock",
        "differences": {
          "added": [],
          "removed": [
            "void spawnAfterBreak(BlockState,ServerLevel,BlockPos,ItemStack,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.MudBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TrapDoorBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.MovingPistonBlock",
        "differences": {
          "added": [
            "BlockEntity newMovingBlockEntity(BlockPos,BlockState,BlockState,Direction,boolean,boolean)"
          ],
          "removed": [
            "PistonMovingBlockEntity newMovingBlockEntity(BlockPos,BlockState,BlockState,Direction,boolean,boolean)",
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.ChunkAccess",
        "differences": {
          "added": [],
          "removed": [
            "void setLightsOut(boolean)",
            "boolean isLightsOut()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
        "differences": {
          "added": [],
          "removed": [
            "VoteStorage loadVotes()",
            "void saveVotes(VoteStorage)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.client.gui.Font$StringRenderOutput",
            "XXX.client.gui.Gui$HeartType",
            "XXX.client.gui.GuiComponent$ScissorStack",
            "XXX.client.gui.MapRenderer$MapInstance",
            "XXX.gui.components.AbstractOptionSliderButton",
            "XXX.gui.components.AbstractSelectionList",
            "XXX.gui.components.AbstractSelectionList$Entry",
            "XXX.gui.components.AbstractSliderButton",
            "XXX.gui.components.AbstractWidget",
            "XXX.gui.components.BossHealthOverlay",
            "XXX.gui.components.Button",
            "XXX.gui.components.Button$CreateNarration",
            "XXX.gui.components.ChatComponent",
            "XXX.gui.components.Checkbox",
            "XXX.gui.components.CommandSuggestions$SuggestionsList",
            "XXX.gui.components.ComponentRenderUtils",
            "XXX.gui.components.ContainerObjectSelectionList$1",
            "XXX.gui.components.CycleButton",
            "XXX.gui.components.CycleButton$OnValueChange",
            "XXX.gui.components.CycleButton$ValueListSupplier$1",
            "XXX.gui.components.DebugScreenOverlay",
            "XXX.gui.components.DebugScreenOverlay$AllocationRateCalculator",
            "XXX.gui.components.ImageButton",
            "XXX.gui.components.LerpingBossEvent",
            "XXX.gui.components.LockIconButton$Icon",
            "XXX.gui.components.MultiLineEditBox",
            "XXX.gui.components.MultiLineLabel$1",
            "XXX.gui.components.MultiLineLabel$TextWithWidth",
            "XXX.gui.components.MultiLineTextWidget$CacheKey",
            "XXX.gui.components.MultilineTextField$1",
            "XXX.gui.components.ObjectSelectionList",
            "XXX.gui.components.OptionsList",
            "XXX.gui.components.PlainTextButton",
            "XXX.gui.components.PlayerTabOverlay",
            "XXX.gui.components.Renderable",
            "XXX.gui.components.StringWidget",
            "XXX.gui.components.SubtitleOverlay$Subtitle",
            "XXX.gui.components.TabOrderedElement",
            "XXX.gui.components.TextAndImageButton$Builder",
            "XXX.gui.components.Whence",
            "XXX.components.events.ContainerEventHandler",
            "XXX.components.events.package-info",
            "XXX.components.spectator.SpectatorGui",
            "XXX.components.tabs.GridLayoutTab",
            "XXX.components.tabs.TabManager",
            "XXX.components.tabs.TabNavigationBar$Builder",
            "XXX.components.toasts.AdvancementToast",
            "XXX.components.toasts.SystemToast",
            "XXX.components.toasts.Toast",
            "XXX.components.toasts.ToastComponent",
            "XXX.components.toasts.TutorialToast",
            "XXX.components.toasts.package-info",
            "XXX.gui.font.FontManager",
            "XXX.gui.font.FontSet",
            "XXX.gui.font.FontTexture",
            "XXX.gui.font.TextFieldHelper",
            "XXX.gui.font.TextFieldHelper$CursorStep",
            "XXX.font.glyphs.BakedGlyph$1",
            "XXX.font.glyphs.EmptyGlyph",
            "XXX.font.glyphs.SpecialGlyphs$1",
            "XXX.font.glyphs.package-info",
            "XXX.font.providers.BitmapProvider",
            "XXX.font.providers.BitmapProvider$Glyph",
            "XXX.font.providers.GlyphProviderBuilder",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Glyph",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Sheet",
            "XXX.font.providers.package-info",
            "XXX.gui.layouts.AbstractLayout$AbstractChildWrapper",
            "XXX.gui.layouts.FrameLayout$ChildContainer",
            "XXX.gui.layouts.GridLayout$CellInhabitant",
            "XXX.gui.layouts.HeaderAndFooterLayout",
            "XXX.gui.layouts.LayoutElement",
            "XXX.gui.layouts.LayoutSettings$LayoutSettingsImpl",
            "XXX.gui.layouts.LinearLayout$1",
            "XXX.gui.layouts.LinearLayout$Orientation",
            "XXX.gui.layouts.package-info",
            "XXX.gui.narration.NarratableEntry$NarrationPriority",
            "XXX.gui.narration.NarrationElementOutput",
            "XXX.gui.narration.NarrationThunk",
            "XXX.gui.narration.ScreenNarrationCollector$1",
            "XXX.gui.narration.ScreenNarrationCollector$NarrationEntry",
            "XXX.gui.narration.package-info",
            "XXX.gui.navigation.FocusNavigationEvent$ArrowNavigation",
            "XXX.gui.navigation.FocusNavigationEvent$TabNavigation",
            "XXX.gui.navigation.ScreenAxis$1",
            "XXX.gui.navigation.ScreenDirection$1",
            "XXX.gui.navigation.ScreenPosition$1",
            "XXX.gui.navigation.ScreenRectangle$1",
            "XXX.client.gui.package-info",
            "XXX.gui.screens.AccessibilityOptionsScreen",
            "XXX.gui.screens.BackupConfirmScreen",
            "XXX.gui.screens.BanNoticeScreen",
            "XXX.gui.screens.ChatScreen",
            "XXX.gui.screens.ConfirmLinkScreen",
            "XXX.gui.screens.ConnectScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList",
            "XXX.gui.screens.CreditsAndAttributionScreen",
            "XXX.gui.screens.DeathScreen",
            "XXX.gui.screens.DemoIntroScreen",
            "XXX.gui.screens.DisconnectedScreen",
            "XXX.gui.screens.ErrorScreen",
            "XXX.gui.screens.GenericWaitingScreen",
            "XXX.gui.screens.LanguageSelectScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList$Entry",
            "XXX.gui.screens.LoadingDotsText",
            "XXX.gui.screens.LoadingOverlay$LogoTexture",
            "XXX.gui.screens.MenuScreens$ScreenConstructor",
            "XXX.gui.screens.OnlineOptionsScreen",
            "XXX.gui.screens.OptionsSubScreen",
            "XXX.gui.screens.Overlay",
            "XXX.gui.screens.PopupScreen",
            "XXX.gui.screens.PresetFlatWorldScreen",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList$Entry",
            "XXX.gui.screens.ReceivingLevelScreen",
            "XXX.gui.screens.Screen$DeferredTooltipRendering",
            "XXX.gui.screens.ShareToLanScreen",
            "XXX.gui.screens.SkinCustomizationScreen",
            "XXX.gui.screens.TitleScreen",
            "XXX.gui.screens.VideoSettingsScreen",
            "XXX.gui.screens.WinScreen$CreditsReader",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRowComparator",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList$MobRow",
            "XXX.screens.achievement.package-info",
            "XXX.screens.advancements.AdvancementTabType",
            "XXX.screens.advancements.AdvancementWidget",
            "XXX.screens.advancements.AdvancementsScreen",
            "XXX.screens.controls.ControlsScreen",
            "XXX.screens.controls.KeyBindsList$CategoryEntry",
            "XXX.screens.controls.KeyBindsList$Entry",
            "XXX.screens.controls.KeyBindsScreen",
            "XXX.screens.debug.GameModeSwitcherScreen",
            "XXX.screens.debug.GameModeSwitcherScreen$GameModeIcon",
            "XXX.screens.debug.package-info",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen$1",
            "XXX.screens.inventory.AbstractFurnaceScreen",
            "XXX.screens.inventory.AnvilScreen",
            "XXX.screens.inventory.BeaconScreen$1",
            "XXX.screens.inventory.BeaconScreen$BeaconCancelButton",
            "XXX.screens.inventory.BeaconScreen$BeaconPowerButton",
            "XXX.screens.inventory.BeaconScreen$BeaconSpriteScreenButton",
            "XXX.screens.inventory.BlastFurnaceScreen",
            "XXX.screens.inventory.BookEditScreen$DisplayCache",
            "XXX.screens.inventory.BookEditScreen$Pos2i",
            "XXX.screens.inventory.BookViewScreen$1",
            "XXX.screens.inventory.BookViewScreen$WritableBookAccess",
            "XXX.screens.inventory.BrewingStandScreen",
            "XXX.screens.inventory.CommandBlockEditScreen",
            "XXX.screens.inventory.ContainerScreen",
            "XXX.screens.inventory.CreativeInventoryListener",
            "XXX.screens.inventory.CreativeModeInventoryScreen$CustomCreativeSlot",
            "XXX.screens.inventory.CreativeModeInventoryScreen$SlotWrapper",
            "XXX.screens.inventory.DispenserScreen",
            "XXX.screens.inventory.EnchantmentNames",
            "XXX.screens.inventory.FurnaceScreen",
            "XXX.screens.inventory.HangingSignEditScreen",
            "XXX.screens.inventory.HorseInventoryScreen",
            "XXX.screens.inventory.ItemCombinerScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen$1",
            "XXX.screens.inventory.LecternScreen$1",
            "XXX.screens.inventory.MenuAccess",
            "XXX.screens.inventory.MerchantScreen$TradeOfferButton",
            "XXX.screens.inventory.PageButton",
            "XXX.screens.inventory.SignEditScreen",
            "XXX.screens.inventory.SmokerScreen",
            "XXX.screens.inventory.StructureBlockEditScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$2",
            "XXX.inventory.tooltip.BelowOrAboveWidgetTooltipPositioner",
            "XXX.inventory.tooltip.ClientBundleTooltip$Texture",
            "XXX.inventory.tooltip.ClientTooltipComponent",
            "XXX.inventory.tooltip.DefaultTooltipPositioner",
            "XXX.inventory.tooltip.TooltipRenderUtil",
            "XXX.inventory.tooltip.package-info",
            "XXX.screens.multiplayer.Realms32bitWarningScreen",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.packs.PackSelectionModel",
            "XXX.screens.packs.PackSelectionModel$EntryBase",
            "XXX.screens.packs.PackSelectionModel$UnselectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen$Watcher",
            "XXX.screens.packs.TransferableSelectionList$PackEntry",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.reporting.ChatReportScreen",
            "XXX.screens.reporting.ChatSelectionLogFiller",
            "XXX.screens.reporting.ChatSelectionScreen",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$DividerEntry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$Heading",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry",
            "XXX.screens.reporting.ReportReasonSelectionScreen",
            "XXX.screens.reporting.ReportReasonSelectionScreen$ReasonSelectionList$Entry",
            "XXX.screens.social.PlayerEntry",
            "XXX.screens.social.PlayerEntry$2",
            "XXX.screens.social.PlayerSocialManager",
            "XXX.screens.social.SocialInteractionsScreen",
            "XXX.screens.social.SocialInteractionsScreen$2",
            "XXX.screens.social.package-info",
            "XXX.screens.telemetry.TelemetryEventWidget$Content",
            "XXX.screens.telemetry.TelemetryInfoScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList",
            "XXX.screens.worldselection.CreateWorldScreen",
            "XXX.screens.worldselection.CreateWorldScreen$GameTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab$2",
            "XXX.screens.worldselection.EditGameRulesScreen$BooleanRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$CategoryRuleEntry$1",
            "XXX.screens.worldselection.EditGameRulesScreen$GameRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleList$1",
            "XXX.screens.worldselection.ExperimentsScreen",
            "XXX.screens.worldselection.PresetEditor",
            "XXX.screens.worldselection.SwitchGrid",
            "XXX.screens.worldselection.SwitchGrid$InfoUnderneathSettings",
            "XXX.screens.worldselection.SwitchGrid$SwitchBuilder",
            "XXX.screens.worldselection.WorldCreationContext$DimensionsUpdater",
            "XXX.screens.worldselection.WorldCreationUiState",
            "XXX.screens.worldselection.WorldCreationUiState$WorldTypeEntry",
            "XXX.screens.worldselection.WorldOpenFlows$1Data",
            "XXX.screens.worldselection.WorldSelectionList$Entry",
            "XXX.screens.worldselection.WorldSelectionList$WorldListEntry",
            "XXX.gui.spectator.PlayerMenuItem",
            "XXX.gui.spectator.SpectatorMenu",
            "XXX.gui.spectator.SpectatorMenu$CloseSpectatorItem",
            "XXX.gui.spectator.SpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenuListener",
            "XXX.spectator.categories.TeleportToPlayerMenuCategory",
            "XXX.spectator.categories.TeleportToTeamMenuCategory$TeamSelectionItem",
            "XXX.gui.spectator.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$ServerData",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.SilentInitException",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.AxolotlModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GoatModel",
            "XXX.client.model.HeadedModel",
            "XXX.client.model.HoglinModel",
            "XXX.client.model.HumanoidArmorModel",
            "XXX.client.model.HumanoidModel$1",
            "XXX.client.model.IllagerModel",
            "XXX.client.model.LavaSlimeModel",
            "XXX.client.model.ListModel",
            "XXX.client.model.LlamaSpitModel",
            "XXX.client.model.Model",
            "XXX.client.model.TropicalFishModelA",
            "XXX.client.model.TurtleModel",
            "XXX.client.model.VillagerHeadModel",
            "XXX.client.model.WardenModel",
            "XXX.client.model.WitchModel",
            "XXX.client.model.WolfModel",
            "XXX.client.model.ZombieVillagerModel",
            "XXX.model.dragon.package-info",
            "XXX.model.geom.LayerDefinitions",
            "XXX.model.geom.ModelLayers",
            "XXX.model.geom.ModelPart$Cube",
            "XXX.model.geom.ModelPart$Vertex",
            "XXX.model.geom.PartNames",
            "XXX.geom.builders.CubeDefinition",
            "XXX.geom.builders.CubeListBuilder",
            "XXX.geom.builders.MaterialDefinition",
            "XXX.geom.builders.PartDefinition",
            "XXX.geom.builders.package-info",
            "XXX.client.model.package-info",
            "XXX.client.multiplayer.ClientAdvancements",
            "XXX.client.multiplayer.ClientChunkCache",
            "XXX.client.multiplayer.ClientHandshakePacketListenerImpl",
            "XXX.client.multiplayer.ClientLevel$1",
            "XXX.client.multiplayer.ClientLevel$EntityCallbacks",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.ClientRegistryLayer",
            "XXX.client.multiplayer.ClientSuggestionProvider$1",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ProfileKeyPairManager$1",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.multiplayer.chat.ChatListener",
            "XXX.multiplayer.chat.ChatLog",
            "XXX.multiplayer.chat.ChatTrustLevel$1",
            "XXX.multiplayer.chat.LoggedChatEvent$Type",
            "XXX.multiplayer.chat.LoggedChatMessage$Player",
            "XXX.multiplayer.chat.package-info",
            "XXX.chat.report.AbuseReportSender$1",
            "XXX.chat.report.AbuseReportSender$Services",
            "XXX.chat.report.ChatReportBuilder",
            "XXX.chat.report.ChatReportBuilder$ChatReport",
            "XXX.chat.report.ChatReportContextBuilder",
            "XXX.chat.report.ChatReportContextBuilder$Handler",
            "XXX.chat.report.ReportEnvironment$Server",
            "XXX.chat.report.ReportEnvironment$Server$ThirdParty",
            "XXX.chat.report.ReportingContext",
            "XXX.client.multiplayer.package-info",
            "XXX.multiplayer.prediction.BlockStatePredictionHandler$ServerVerifiedState",
            "XXX.multiplayer.prediction.package-info",
            "XXX.multiplayer.resolver.AddressCheck$1",
            "XXX.multiplayer.resolver.ResolvedServerAddress$1",
            "XXX.multiplayer.resolver.ServerAddressResolver",
            "XXX.multiplayer.resolver.ServerRedirectHandler",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AshParticle$Provider",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BlockMarker",
            "XXX.client.particle.BreakingItemParticle",
            "XXX.client.particle.BreakingItemParticle$SlimeProvider",
            "XXX.client.particle.BubbleColumnUpParticle",
            "XXX.client.particle.BubbleParticle",
            "XXX.client.particle.BubblePopParticle",
            "XXX.client.particle.CampfireSmokeParticle",
            "XXX.client.particle.CampfireSmokeParticle$SignalProvider",
            "XXX.client.particle.CritParticle",
            "XXX.client.particle.CritParticle$MagicProvider",
            "XXX.client.particle.DragonBreathParticle",
            "XXX.client.particle.DripParticle",
            "XXX.client.particle.DripParticle$DripHangParticle",
            "XXX.client.particle.DripParticle$DripstoneFallAndLandParticle",
            "XXX.client.particle.DripParticle$FallingParticle",
            "XXX.client.particle.DustColorTransitionParticle",
            "XXX.client.particle.DustParticle",
            "XXX.client.particle.DustParticleBase",
            "XXX.client.particle.EnchantmentTableParticle$NautilusProvider",
            "XXX.client.particle.EndRodParticle",
            "XXX.client.particle.ExplodeParticle",
            "XXX.client.particle.FallingDustParticle",
            "XXX.client.particle.FireworkParticles",
            "XXX.client.particle.FireworkParticles$FlashProvider",
            "XXX.client.particle.FireworkParticles$SparkParticle",
            "XXX.client.particle.FireworkParticles$Starter",
            "XXX.client.particle.FlameParticle$Provider",
            "XXX.client.particle.GlowParticle",
            "XXX.client.particle.GlowParticle$GlowSquidProvider",
            "XXX.client.particle.GlowParticle$WaxOffProvider",
            "XXX.client.particle.HeartParticle",
            "XXX.client.particle.HeartParticle$Provider",
            "XXX.client.particle.HugeExplosionParticle$Provider",
            "XXX.client.particle.HugeExplosionSeedParticle$Provider",
            "XXX.client.particle.LargeSmokeParticle",
            "XXX.client.particle.LavaParticle",
            "XXX.client.particle.MobAppearanceParticle",
            "XXX.client.particle.NoRenderParticle",
            "XXX.client.particle.NoteParticle$Provider",
            "XXX.client.particle.ParticleDescription",
            "XXX.client.particle.ParticleEngine$1ParticleDefinition",
            "XXX.client.particle.ParticleEngine$SpriteParticleRegistration",
            "XXX.client.particle.ParticleProvider$Sprite",
            "XXX.client.particle.ParticleRenderType$1",
            "XXX.client.particle.ParticleRenderType$3",
            "XXX.client.particle.ParticleRenderType$5",
            "XXX.client.particle.PlayerCloudParticle",
            "XXX.client.particle.PlayerCloudParticle$SneezeProvider",
            "XXX.client.particle.PortalParticle$Provider",
            "XXX.client.particle.ReversePortalParticle$ReversePortalProvider",
            "XXX.client.particle.SculkChargeParticle",
            "XXX.client.particle.SculkChargePopParticle",
            "XXX.client.particle.ShriekParticle",
            "XXX.client.particle.SimpleAnimatedParticle",
            "XXX.client.particle.SmokeParticle",
            "XXX.client.particle.SnowflakeParticle",
            "XXX.client.particle.SonicBoomParticle",
            "XXX.client.particle.SoulParticle",
            "XXX.client.particle.SoulParticle$Provider",
            "XXX.client.particle.SpellParticle$AmbientMobProvider",
            "XXX.client.particle.SpellParticle$MobProvider",
            "XXX.client.particle.SpellParticle$WitchProvider",
            "XXX.client.particle.SpitParticle$Provider",
            "XXX.client.particle.SplashParticle$Provider",
            "XXX.client.particle.SquidInkParticle",
            "XXX.client.particle.SquidInkParticle$Provider",
            "XXX.client.particle.SuspendedParticle$CrimsonSporeProvider",
            "XXX.client.particle.SuspendedParticle$SporeBlossomAirProvider$1",
            "XXX.client.particle.SuspendedParticle$WarpedSporeProvider",
            "XXX.client.particle.SuspendedTownParticle$ComposterFillProvider",
            "XXX.client.particle.SuspendedTownParticle$EggCrackProvider",
            "XXX.client.particle.SuspendedTownParticle$Provider",
            "XXX.client.particle.TerrainParticle$Provider",
            "XXX.client.particle.TotemParticle",
            "XXX.client.particle.TrackingEmitter",
            "XXX.client.particle.VibrationSignalParticle$Provider",
            "XXX.client.particle.WakeParticle$Provider",
            "XXX.client.particle.WaterCurrentDownParticle$Provider",
            "XXX.client.particle.WaterDropParticle$Provider",
            "XXX.client.particle.WhiteAshParticle$Provider",
            "XXX.client.player.AbstractClientPlayer",
            "XXX.client.player.KeyboardInput",
            "XXX.client.renderer.DimensionSpecialEffects$NetherEffects",
            "XXX.client.renderer.DimensionSpecialEffects$SkyType",
            "XXX.client.renderer.FaceInfo",
            "XXX.client.renderer.FaceInfo$VertexInfo",
            "XXX.client.renderer.FogRenderer$BlindnessFogFunction",
            "XXX.client.renderer.FogRenderer$FogData",
            "XXX.client.renderer.FogRenderer$MobEffectFogFunction",
            "XXX.client.renderer.GameRenderer$1",
            "XXX.client.renderer.GpuWarnlistManager",
            "XXX.client.renderer.ItemBlockRenderTypes",
            "XXX.client.renderer.ItemInHandRenderer$1",
            "XXX.client.renderer.ItemModelShaper",
            "XXX.client.renderer.LevelRenderer$RenderChunkInfo",
            "XXX.client.renderer.LevelRenderer$RenderInfoMap",
            "XXX.client.renderer.LightTexture",
            "XXX.client.renderer.MultiBufferSource$BufferSource",
            "XXX.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
            "XXX.client.renderer.PostChain",
            "XXX.client.renderer.Rect2i",
            "XXX.client.renderer.RenderStateShard",
            "XXX.client.renderer.RenderStateShard$CullStateShard",
            "XXX.client.renderer.RenderStateShard$EmptyTextureStateShard",
            "XXX.client.renderer.RenderStateShard$LightmapStateShard",
            "XXX.client.renderer.RenderStateShard$MultiTextureStateShard",
            "XXX.client.renderer.RenderStateShard$OffsetTexturingStateShard",
            "XXX.client.renderer.RenderStateShard$OverlayStateShard",
            "XXX.client.renderer.RenderStateShard$TextureStateShard",
            "XXX.client.renderer.RenderStateShard$TransparencyStateShard",
            "XXX.client.renderer.RenderType",
            "XXX.client.renderer.RenderType$CompositeState",
            "XXX.client.renderer.RenderType$OutlineProperty",
            "XXX.client.renderer.ScreenEffectRenderer",
            "XXX.client.renderer.ShaderInstance$1",
            "XXX.client.renderer.Sheets$1",
            "XXX.client.renderer.ViewArea",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.BlockRenderDispatcher$1",
            "XXX.renderer.block.LiquidBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionFace",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$1",
            "XXX.block.model.BlockElementFace",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockFaceUV$Deserializer",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModel$LoopException",
            "XXX.block.model.BlockModelDefinition$Context",
            "XXX.block.model.BlockModelDefinition$MissingVariantException",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$1",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemOverride$Deserializer",
            "XXX.block.model.ItemOverrides",
            "XXX.block.model.ItemOverrides$PropertyMatcher",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.MultiVariant",
            "XXX.block.model.Variant",
            "XXX.model.multipart.AndCondition",
            "XXX.model.multipart.KeyValueCondition",
            "XXX.model.multipart.MultiPart$Deserializer",
            "XXX.model.multipart.Selector",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.blockentity.BeaconRenderer",
            "XXX.renderer.blockentity.BellRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderer",
            "XXX.renderer.blockentity.BlockEntityRendererProvider$Context",
            "XXX.renderer.blockentity.BrightnessCombiner",
            "XXX.renderer.blockentity.BrushableBlockRenderer$1",
            "XXX.renderer.blockentity.ChestRenderer",
            "XXX.renderer.blockentity.DecoratedPotRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer",
            "XXX.renderer.blockentity.LecternRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer",
            "XXX.renderer.blockentity.SignRenderer$SignModel",
            "XXX.renderer.blockentity.SpawnerRenderer",
            "XXX.renderer.blockentity.StructureBlockRenderer$1",
            "XXX.renderer.blockentity.TheEndPortalRenderer",
            "XXX.renderer.chunk.ChunkRenderDispatcher",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask",
            "XXX.renderer.chunk.RenderChunkRegion",
            "XXX.renderer.chunk.RenderRegionCache$ChunkInfo",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$BeeInfo",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedGameEvent",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AllayRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.CamelRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.DisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$BlockDisplayRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.ParrotRenderer$1",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RabbitRenderer$1",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.player.package-info",
            "XXX.renderer.item.CompassItemPropertyFunction",
            "XXX.renderer.item.CompassItemPropertyFunction$CompassWobble",
            "XXX.renderer.item.ItemProperties$1",
            "XXX.renderer.item.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.SpriteContents",
            "XXX.renderer.texture.SpriteContents$FrameInfo",
            "XXX.renderer.texture.SpriteContents$Ticker",
            "XXX.renderer.texture.SpriteLoader$Preparations",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureManager",
            "XXX.texture.atlas.SpriteResourceLoader",
            "XXX.texture.atlas.SpriteSource",
            "XXX.texture.atlas.SpriteSource$SpriteSupplier",
            "XXX.texture.atlas.SpriteSources",
            "XXX.atlas.sources.DirectoryLister",
            "XXX.atlas.sources.PalettedPermutations",
            "XXX.atlas.sources.SingleFile",
            "XXX.atlas.sources.Unstitcher",
            "XXX.atlas.sources.Unstitcher$RegionInstance",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.DefaultPlayerSkin$SkinType",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.IndexedAssetSource",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$2",
            "XXX.client.resources.SplashManager",
            "XXX.resources.language.ClientLanguage",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.AtlasSet",
            "XXX.resources.model.AtlasSet$StitchResult",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelBakery$ModelBakerImpl",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.client.resources.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.SnifferSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.IdSearchTree",
            "XXX.client.searchtree.MergingUniqueIterator",
            "XXX.client.searchtree.RefreshableSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$1",
            "XXX.client.searchtree.SearchRegistry",
            "XXX.client.searchtree.SearchRegistry$TreeBuilderSupplier",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngine$DeviceCheckState",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.telemetry.TelemetryEventInstance",
            "XXX.client.telemetry.TelemetryEventLogger",
            "XXX.client.telemetry.TelemetryEventType",
            "XXX.client.telemetry.TelemetryLogManager",
            "XXX.client.telemetry.TelemetryProperty$Exporter",
            "XXX.client.telemetry.TelemetryProperty$ServerType",
            "XXX.client.telemetry.TelemetryPropertyMap$1",
            "XXX.client.telemetry.WorldSessionTelemetryManager",
            "XXX.telemetry.events.PerformanceMetricsEvent",
            "XXX.telemetry.events.WorldLoadEvent$1",
            "XXX.telemetry.events.WorldUnloadEvent",
            "XXX.client.telemetry.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BeforeBatch",
            "XXX.gametest.framework.GameTest",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchRunner",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestClassNameArgument",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestFunctionArgument",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.ConnectionProtocol$ProtocolBuilder",
            "XXX.minecraft.network.FriendlyByteBuf$1",
            "XXX.minecraft.network.FriendlyByteBuf$Writer",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$1",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ItemStackInfo",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.LiteralContents",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.network.chat.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$2",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketUtils",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAddPlayerPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundGameProfilePacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.package-info",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundPingRequestPacket",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.EntityDataSerializers$5",
            "XXX.network.syncher.EntityDataSerializers$7",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.HolderSetCodec",
            "XXX.minecraft.resources.RegistryDataLoader$1",
            "XXX.minecraft.resources.RegistryDataLoader$RegistryData",
            "XXX.minecraft.resources.RegistryFixedCodec",
            "XXX.minecraft.resources.RegistryOps$1",
            "XXX.minecraft.resources.RegistryOps$RegistryInfo",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$ExecutionContext",
            "XXX.minecraft.server.ServerFunctionManager$TraceCallbacks",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.chase.ChaseClient$TeleportTarget",
            "XXX.server.chase.ChaseServer$PlayerPosition",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ChaseCommand",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$CommandFunction",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugCommand$Tracer",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.JfrCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PerfCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.RideCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpawnArmorTrimsCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WardenSpawnTrackerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$ChunkAndHolder",
            "XXX.server.level.ServerEntity",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.world.entity.Display$LinearIntInterpolator",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.RelativeMovement",
            "XXX.world.entity.RiderShieldingMount",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.TraceableEntity",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.monster.warden.AngerLevel",
            "XXX.monster.warden.AngerManagement$1",
            "XXX.monster.warden.Warden",
            "XXX.monster.warden.Warden$1$1",
            "XXX.monster.warden.WardenAi",
            "XXX.monster.warden.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.Level$ExplosionInteraction",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SignalGetter",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldDataConfiguration",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeResolver",
            "XXX.level.biome.BiomeSources",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$1",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$3",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.Climate$DistanceMetric",
            "XXX.level.biome.Climate$ParameterList",
            "XXX.level.biome.Climate$RTree",
            "XXX.level.biome.Climate$RTree$Node",
            "XXX.level.biome.Climate$Sampler",
            "XXX.level.biome.Climate$SpawnFinder$Result",
            "XXX.level.biome.FeatureSorter",
            "XXX.level.biome.FeatureSorter$StepFeatureData",
            "XXX.level.biome.MobSpawnSettings",
            "XXX.level.biome.MobSpawnSettings$MobSpawnCost",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$2",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterLists",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.block.CherryLeavesBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChiseledBookShelfBlock$1",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.CocoaBlock$1",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.Fallable",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PointedDripstoneBlock$FluidInfo",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SculkBehaviour$1",
            "XXX.level.block.SculkCatalystBlock",
            "XXX.level.block.SculkShriekerBlock",
            "XXX.level.block.SculkSpreader$ChargeCursor",
            "XXX.level.block.SculkVeinBlock$SculkVeinSpreaderConfig",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnifferEggBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$2",
            "XXX.level.levelgen.NoiseChunk$BlendOffset",
            "XXX.level.levelgen.NoiseChunk$Cache2D",
            "XXX.level.levelgen.NoiseChunk$CacheOnce",
            "XXX.level.levelgen.NoiseChunk$NoiseChunkDensityFunction",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseRouterData",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.OreVeinifier",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomState$1",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldDimensions",
            "XXX.level.levelgen.WorldDimensions$Complete",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$CellValueGetter",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.package-info",
            "XXX.levelgen.blockpredicates.AnyOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicateType",
            "XXX.levelgen.blockpredicates.HasSturdyFacePredicate",
            "XXX.levelgen.blockpredicates.MatchingBlockTagPredicate",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.blockpredicates.StateTestingPredicate",
            "XXX.levelgen.blockpredicates.WouldSurvivePredicate",
            "XXX.levelgen.carver.CanyonCarverConfiguration",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockColumnFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.MultifaceGrowthFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.PointedDripstoneFeature",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RootSystemFeature",
            "XXX.levelgen.feature.SculkPatchFeature",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.TwistingVinesFeature",
            "XXX.levelgen.feature.VegetationPatchFeature",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.feature.configurations.BlockColumnConfiguration",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.ColumnFeatureConfiguration"
          ],
          "removed": [
            "XXX.client.gui.Font$DisplayMode",
            "XXX.client.gui.Gui",
            "XXX.client.gui.GuiComponent",
            "XXX.client.gui.MapRenderer",
            "XXX.gui.components.AbstractButton",
            "XXX.gui.components.AbstractScrollWidget",
            "XXX.gui.components.AbstractSelectionList$1",
            "XXX.gui.components.AbstractSelectionList$TrackedList",
            "XXX.gui.components.AbstractStringWidget",
            "XXX.gui.components.AccessibilityOnboardingTextWidget",
            "XXX.gui.components.BossHealthOverlay$1",
            "XXX.gui.components.Button$Builder",
            "XXX.gui.components.Button$OnPress",
            "XXX.gui.components.ChatComponent$DelayedMessageDeletion",
            "XXX.gui.components.CommandSuggestions",
            "XXX.gui.components.CommonButtons",
            "XXX.gui.components.ContainerObjectSelectionList",
            "XXX.gui.components.ContainerObjectSelectionList$Entry",
            "XXX.gui.components.CycleButton$Builder",
            "XXX.gui.components.CycleButton$ValueListSupplier",
            "XXX.gui.components.CycleButton$ValueListSupplier$2",
            "XXX.gui.components.DebugScreenOverlay$1",
            "XXX.gui.components.EditBox",
            "XXX.gui.components.ImageWidget",
            "XXX.gui.components.LockIconButton",
            "XXX.gui.components.LogoRenderer",
            "XXX.gui.components.MultiLineLabel",
            "XXX.gui.components.MultiLineLabel$2",
            "XXX.gui.components.MultiLineTextWidget",
            "XXX.gui.components.MultilineTextField",
            "XXX.gui.components.MultilineTextField$StringView",
            "XXX.gui.components.ObjectSelectionList$Entry",
            "XXX.gui.components.OptionsList$Entry",
            "XXX.gui.components.PlayerFaceRenderer",
            "XXX.gui.components.PlayerTabOverlay$HealthState",
            "XXX.gui.components.StateSwitchingButton",
            "XXX.gui.components.SubtitleOverlay",
            "XXX.gui.components.TabButton",
            "XXX.gui.components.TextAndImageButton",
            "XXX.gui.components.Tooltip",
            "XXX.components.events.AbstractContainerEventHandler",
            "XXX.components.events.GuiEventListener",
            "XXX.gui.components.package-info",
            "XXX.components.spectator.package-info",
            "XXX.components.tabs.Tab",
            "XXX.components.tabs.TabNavigationBar",
            "XXX.components.tabs.package-info",
            "XXX.components.toasts.RecipeToast",
            "XXX.components.toasts.SystemToast$SystemToastIds",
            "XXX.components.toasts.Toast$Visibility",
            "XXX.components.toasts.ToastComponent$ToastInstance",
            "XXX.components.toasts.TutorialToast$Icons",
            "XXX.components.toasts.VoteNagToast$Urgency",
            "XXX.gui.font.AllMissingGlyphProvider",
            "XXX.gui.font.FontManager$1",
            "XXX.gui.font.FontSet$GlyphInfoFilter",
            "XXX.gui.font.FontTexture$Node",
            "XXX.gui.font.TextFieldHelper$1",
            "XXX.font.glyphs.BakedGlyph",
            "XXX.font.glyphs.BakedGlyph$Effect",
            "XXX.font.glyphs.SpecialGlyphs",
            "XXX.font.glyphs.SpecialGlyphs$PixelProvider",
            "XXX.gui.font.package-info",
            "XXX.font.providers.BitmapProvider$Builder",
            "XXX.font.providers.BitmapProvider$Glyph$1",
            "XXX.font.providers.GlyphProviderBuilderType",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Builder",
            "XXX.font.providers.LegacyUnicodeBitmapsProvider$Glyph$1",
            "XXX.font.providers.TrueTypeGlyphProviderBuilder",
            "XXX.gui.layouts.AbstractLayout",
            "XXX.gui.layouts.FrameLayout",
            "XXX.gui.layouts.GridLayout",
            "XXX.gui.layouts.GridLayout$RowHelper",
            "XXX.gui.layouts.Layout",
            "XXX.gui.layouts.LayoutSettings",
            "XXX.gui.layouts.LinearLayout",
            "XXX.gui.layouts.LinearLayout$ChildContainer",
            "XXX.gui.layouts.SpacerElement",
            "XXX.gui.narration.NarratableEntry",
            "XXX.gui.narration.NarratedElementType",
            "XXX.gui.narration.NarrationSupplier",
            "XXX.gui.narration.ScreenNarrationCollector",
            "XXX.gui.narration.ScreenNarrationCollector$EntryKey",
            "XXX.gui.narration.ScreenNarrationCollector$Output",
            "XXX.gui.navigation.FocusNavigationEvent",
            "XXX.gui.navigation.FocusNavigationEvent$InitialFocus",
            "XXX.gui.navigation.ScreenAxis",
            "XXX.gui.navigation.ScreenDirection",
            "XXX.gui.navigation.ScreenPosition",
            "XXX.gui.navigation.ScreenRectangle",
            "XXX.gui.navigation.package-info",
            "XXX.gui.screens.AccessibilityOnboardingScreen",
            "XXX.gui.screens.AlertScreen",
            "XXX.gui.screens.BackupConfirmScreen$Listener",
            "XXX.gui.screens.ChatOptionsScreen",
            "XXX.gui.screens.ChatScreen$1",
            "XXX.gui.screens.ConfirmScreen",
            "XXX.gui.screens.ConnectScreen$1",
            "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList",
            "XXX.gui.screens.CreateFlatWorldScreen",
            "XXX.gui.screens.CreateFlatWorldScreen$DetailsList$Entry",
            "XXX.gui.screens.DatapackLoadFailureScreen",
            "XXX.gui.screens.DeathScreen$TitleConfirmScreen",
            "XXX.gui.screens.DirectJoinServerScreen",
            "XXX.gui.screens.EditServerScreen",
            "XXX.gui.screens.GenericDirtMessageScreen",
            "XXX.gui.screens.InBedChatScreen",
            "XXX.gui.screens.LanguageSelectScreen$LanguageSelectionList",
            "XXX.gui.screens.LevelLoadingScreen",
            "XXX.gui.screens.LoadingOverlay",
            "XXX.gui.screens.MenuScreens",
            "XXX.gui.screens.MouseSettingsScreen",
            "XXX.gui.screens.OptionsScreen",
            "XXX.gui.screens.OutOfMemoryScreen",
            "XXX.gui.screens.PauseScreen",
            "XXX.gui.screens.PopupScreen$ButtonOption",
            "XXX.gui.screens.PresetFlatWorldScreen$PresetsList",
            "XXX.gui.screens.ProgressScreen",
            "XXX.gui.screens.Screen",
            "XXX.gui.screens.Screen$NarratableSearchResult",
            "XXX.gui.screens.SimpleOptionsSubScreen",
            "XXX.gui.screens.SoundOptionsScreen",
            "XXX.gui.screens.SuperSimpleTextScreen",
            "XXX.gui.screens.SuperSimpleTextScreen$SimpleTextList$Entry",
            "XXX.gui.screens.TitleScreen$WarningLabel",
            "XXX.gui.screens.WinScreen",
            "XXX.screens.achievement.StatsScreen",
            "XXX.screens.achievement.StatsScreen$GeneralStatisticsList$Entry",
            "XXX.screens.achievement.StatsScreen$ItemStatisticsList$ItemRow",
            "XXX.screens.achievement.StatsScreen$MobsStatisticsList",
            "XXX.screens.achievement.StatsUpdateListener",
            "XXX.screens.advancements.AdvancementTab",
            "XXX.screens.advancements.AdvancementTabType$1",
            "XXX.screens.advancements.AdvancementWidgetType",
            "XXX.screens.advancements.package-info",
            "XXX.screens.controls.KeyBindsList",
            "XXX.screens.controls.KeyBindsList$CategoryEntry$1",
            "XXX.screens.controls.KeyBindsList$KeyEntry",
            "XXX.screens.controls.package-info",
            "XXX.screens.debug.GameModeSwitcherScreen$1",
            "XXX.screens.debug.GameModeSwitcherScreen$GameModeSlot",
            "XXX.screens.inventory.AbstractCommandBlockEditScreen",
            "XXX.screens.inventory.AbstractContainerScreen",
            "XXX.screens.inventory.AbstractSignEditScreen",
            "XXX.screens.inventory.BeaconScreen",
            "XXX.screens.inventory.BeaconScreen$BeaconButton",
            "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton",
            "XXX.screens.inventory.BeaconScreen$BeaconScreenButton",
            "XXX.screens.inventory.BeaconScreen$BeaconUpgradePowerButton",
            "XXX.screens.inventory.BookEditScreen",
            "XXX.screens.inventory.BookEditScreen$LineInfo",
            "XXX.screens.inventory.BookViewScreen",
            "XXX.screens.inventory.BookViewScreen$BookAccess",
            "XXX.screens.inventory.BookViewScreen$WrittenBookAccess",
            "XXX.screens.inventory.CartographyTableScreen",
            "XXX.screens.inventory.CommandBlockEditScreen$1",
            "XXX.screens.inventory.CraftingScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen",
            "XXX.screens.inventory.CreativeModeInventoryScreen$ItemPickerMenu",
            "XXX.screens.inventory.CyclingSlotBackground",
            "XXX.screens.inventory.EffectRenderingInventoryScreen",
            "XXX.screens.inventory.EnchantmentScreen",
            "XXX.screens.inventory.GrindstoneScreen",
            "XXX.screens.inventory.HopperScreen",
            "XXX.screens.inventory.InventoryScreen",
            "XXX.screens.inventory.JigsawBlockEditScreen",
            "XXX.screens.inventory.LecternScreen",
            "XXX.screens.inventory.LoomScreen",
            "XXX.screens.inventory.MerchantScreen",
            "XXX.screens.inventory.MinecartCommandBlockEditScreen",
            "XXX.screens.inventory.ShulkerBoxScreen",
            "XXX.screens.inventory.SmithingScreen",
            "XXX.screens.inventory.StonecutterScreen",
            "XXX.screens.inventory.StructureBlockEditScreen$1",
            "XXX.screens.inventory.package-info",
            "XXX.inventory.tooltip.ClientBundleTooltip",
            "XXX.inventory.tooltip.ClientTextTooltip",
            "XXX.inventory.tooltip.ClientTooltipPositioner",
            "XXX.inventory.tooltip.MenuTooltipPositioner",
            "XXX.inventory.tooltip.TooltipRenderUtil$BlitPainter",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.SafetyScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.WarningScreen",
            "XXX.gui.screens.package-info",
            "XXX.screens.packs.PackSelectionModel$Entry",
            "XXX.screens.packs.PackSelectionModel$SelectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen",
            "XXX.screens.packs.TransferableSelectionList",
            "XXX.screens.packs.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.screens.reporting.ChatReportScreen$DiscardReportWarningScreen",
            "XXX.screens.reporting.ChatSelectionLogFiller$Output",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$Entry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageEntry",
            "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$PaddingEntry",
            "XXX.screens.reporting.ReportReasonSelectionScreen$ReasonSelectionList",
            "XXX.screens.reporting.package-info",
            "XXX.screens.social.PlayerEntry$1",
            "XXX.screens.social.PlayerEntry$3",
            "XXX.screens.social.SocialInteractionsPlayerList",
            "XXX.screens.social.SocialInteractionsScreen$1",
            "XXX.screens.social.SocialInteractionsScreen$Page",
            "XXX.screens.telemetry.TelemetryEventWidget",
            "XXX.screens.telemetry.TelemetryEventWidget$ContentBuilder",
            "XXX.screens.telemetry.package-info",
            "XXX.screens.voting.VoteSelectionEntry",
            "XXX.screens.voting.VoteSelectionScreen",
            "XXX.screens.voting.VotingScreen$1",
            "XXX.screens.voting.VotingScreen$3",
            "XXX.screens.voting.VotingScreen$FakeAndTerrible",
            "XXX.screens.voting.VotingScreen$OptionSelectButton",
            "XXX.screens.voting.package-info",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen",
            "XXX.screens.worldselection.ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry",
            "XXX.screens.worldselection.CreateWorldScreen$DataPackReloadCookie",
            "XXX.screens.worldselection.CreateWorldScreen$MoreTab",
            "XXX.screens.worldselection.CreateWorldScreen$WorldTab$1",
            "XXX.screens.worldselection.EditGameRulesScreen",
            "XXX.screens.worldselection.EditGameRulesScreen$CategoryRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$EntryFactory",
            "XXX.screens.worldselection.EditGameRulesScreen$IntegerRuleEntry",
            "XXX.screens.worldselection.EditGameRulesScreen$RuleList",
            "XXX.screens.worldselection.EditWorldScreen",
            "XXX.screens.worldselection.OptimizeWorldScreen",
            "XXX.screens.worldselection.SelectWorldScreen",
            "XXX.screens.worldselection.SwitchGrid$Builder",
            "XXX.screens.worldselection.SwitchGrid$LabeledSwitch",
            "XXX.screens.worldselection.WorldCreationContext",
            "XXX.screens.worldselection.WorldCreationContext$OptionsModifier",
            "XXX.screens.worldselection.WorldCreationUiState$SelectedGameMode",
            "XXX.screens.worldselection.WorldOpenFlows",
            "XXX.screens.worldselection.WorldSelectionList",
            "XXX.screens.worldselection.WorldSelectionList$LoadingHeader",
            "XXX.screens.worldselection.package-info",
            "XXX.gui.spectator.RootSpectatorMenuCategory",
            "XXX.gui.spectator.SpectatorMenu$1",
            "XXX.gui.spectator.SpectatorMenu$ScrollMenuItem",
            "XXX.gui.spectator.SpectatorMenuItem",
            "XXX.spectator.categories.SpectatorPage",
            "XXX.spectator.categories.TeleportToTeamMenuCategory",
            "XXX.spectator.categories.package-info",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.Main$3",
            "XXX.client.main.package-info",
            "XXX.client.model.AgeableHierarchicalModel",
            "XXX.client.model.AllayModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BeretModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.FrogModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.model.HierarchicalModel",
            "XXX.client.model.HorseModel",
            "XXX.client.model.HumanoidModel",
            "XXX.client.model.HumanoidModel$ArmPose",
            "XXX.client.model.IronGolemModel",
            "XXX.client.model.LeashKnotModel",
            "XXX.client.model.LlamaModel",
            "XXX.client.model.MinecartModel",
            "XXX.client.model.ModelUtils",
            "XXX.client.model.TridentModel",
            "XXX.client.model.TropicalFishModelB",
            "XXX.client.model.VexModel",
            "XXX.client.model.VillagerModel",
            "XXX.client.model.WaterPatchModel",
            "XXX.client.model.WitherBossModel",
            "XXX.client.model.ZombieModel",
            "XXX.model.dragon.DragonHeadModel",
            "XXX.model.geom.EntityModelSet",
            "XXX.model.geom.ModelLayerLocation",
            "XXX.model.geom.ModelPart",
            "XXX.model.geom.ModelPart$Polygon",
            "XXX.model.geom.ModelPart$Visitor",
            "XXX.model.geom.PartPose",
            "XXX.geom.builders.CubeDeformation",
            "XXX.geom.builders.LayerDefinition",
            "XXX.geom.builders.MeshDefinition",
            "XXX.geom.builders.UVPair",
            "XXX.model.geom.package-info",
            "XXX.client.multiplayer.AccountProfileKeyPairManager",
            "XXX.client.multiplayer.ClientAdvancements$Listener",
            "XXX.client.multiplayer.ClientChunkCache$Storage",
            "XXX.client.multiplayer.ClientLevel",
            "XXX.client.multiplayer.ClientLevel$ClientLevelData",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientPacketListener$DeferredPacket",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.ProfileKeyPairManager",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.client.multiplayer.ServerStatusPinger$2$1",
            "XXX.multiplayer.chat.ChatListener$Message",
            "XXX.multiplayer.chat.ChatTrustLevel",
            "XXX.multiplayer.chat.LoggedChatEvent",
            "XXX.multiplayer.chat.LoggedChatMessage",
            "XXX.multiplayer.chat.LoggedChatMessage$System",
            "XXX.chat.report.AbuseReportSender",
            "XXX.chat.report.AbuseReportSender$SendException",
            "XXX.chat.report.BanReason",
            "XXX.chat.report.ChatReportBuilder$CannotBuildReason",
            "XXX.chat.report.ChatReportBuilder$Result",
            "XXX.chat.report.ChatReportContextBuilder$Collector",
            "XXX.chat.report.ReportEnvironment",
            "XXX.chat.report.ReportEnvironment$Server$Realm",
            "XXX.chat.report.ReportReason",
            "XXX.chat.report.package-info",
            "XXX.multiplayer.prediction.BlockStatePredictionHandler",
            "XXX.multiplayer.prediction.PredictiveAction",
            "XXX.multiplayer.resolver.AddressCheck",
            "XXX.multiplayer.resolver.ResolvedServerAddress",
            "XXX.multiplayer.resolver.ServerAddress",
            "XXX.multiplayer.resolver.ServerNameResolver",
            "XXX.multiplayer.resolver.package-info",
            "XXX.client.particle.AshParticle",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.BaseAshSmokeParticle",
            "XXX.client.particle.BlockMarker$Provider",
            "XXX.client.particle.BreakingItemParticle$Provider",
            "XXX.client.particle.BreakingItemParticle$SnowballProvider",
            "XXX.client.particle.BubbleColumnUpParticle$Provider",
            "XXX.client.particle.BubbleParticle$Provider",
            "XXX.client.particle.BubblePopParticle$Provider",
            "XXX.client.particle.CampfireSmokeParticle$CosyProvider",
            "XXX.client.particle.CherryParticle",
            "XXX.client.particle.CritParticle$DamageIndicatorProvider",
            "XXX.client.particle.CritParticle$Provider",
            "XXX.client.particle.DragonBreathParticle$Provider",
            "XXX.client.particle.DripParticle$CoolingDripHangParticle",
            "XXX.client.particle.DripParticle$DripLandParticle",
            "XXX.client.particle.DripParticle$FallAndLandParticle",
            "XXX.client.particle.DripParticle$HoneyFallAndLandParticle",
            "XXX.client.particle.DustColorTransitionParticle$Provider",
            "XXX.client.particle.DustParticle$Provider",
            "XXX.client.particle.EnchantmentTableParticle",
            "XXX.client.particle.EnchantmentTableParticle$Provider",
            "XXX.client.particle.EndRodParticle$Provider",
            "XXX.client.particle.ExplodeParticle$Provider",
            "XXX.client.particle.FallingDustParticle$Provider",
            "XXX.client.particle.FireworkParticles$1",
            "XXX.client.particle.FireworkParticles$OverlayParticle",
            "XXX.client.particle.FireworkParticles$SparkProvider",
            "XXX.client.particle.FlameParticle",
            "XXX.client.particle.FlameParticle$SmallFlameProvider",
            "XXX.client.particle.FootprintParticle$Provider",
            "XXX.client.particle.GlowParticle$ElectricSparkProvider",
            "XXX.client.particle.GlowParticle$ScrapeProvider",
            "XXX.client.particle.GlowParticle$WaxOnProvider",
            "XXX.client.particle.HeartParticle$AngryVillagerProvider",
            "XXX.client.particle.HugeExplosionParticle",
            "XXX.client.particle.HugeExplosionSeedParticle",
            "XXX.client.particle.ItemPickupParticle",
            "XXX.client.particle.LargeSmokeParticle$Provider",
            "XXX.client.particle.LavaParticle$Provider",
            "XXX.client.particle.MobAppearanceParticle$Provider",
            "XXX.client.particle.NoteParticle",
            "XXX.client.particle.Particle",
            "XXX.client.particle.ParticleEngine",
            "XXX.client.particle.ParticleEngine$MutableSpriteSet",
            "XXX.client.particle.ParticleProvider",
            "XXX.client.particle.ParticleRenderType",
            "XXX.client.particle.ParticleRenderType$2",
            "XXX.client.particle.ParticleRenderType$4",
            "XXX.client.particle.ParticleRenderType$6",
            "XXX.client.particle.PlayerCloudParticle$Provider",
            "XXX.client.particle.PortalParticle",
            "XXX.client.particle.ReversePortalParticle",
            "XXX.client.particle.RisingParticle",
            "XXX.client.particle.SculkChargeParticle$Provider",
            "XXX.client.particle.SculkChargePopParticle$Provider",
            "XXX.client.particle.ShriekParticle$Provider",
            "XXX.client.particle.SingleQuadParticle",
            "XXX.client.particle.SmokeParticle$Provider",
            "XXX.client.particle.SnowflakeParticle$Provider",
            "XXX.client.particle.SonicBoomParticle$Provider",
            "XXX.client.particle.SoulParticle$EmissiveProvider",
            "XXX.client.particle.SpellParticle",
            "XXX.client.particle.SpellParticle$InstantProvider",
            "XXX.client.particle.SpellParticle$Provider",
            "XXX.client.particle.SpitParticle",
            "XXX.client.particle.SplashParticle",
            "XXX.client.particle.SpriteSet",
            "XXX.client.particle.SquidInkParticle$GlowInkProvider",
            "XXX.client.particle.SuspendedParticle",
            "XXX.client.particle.SuspendedParticle$SporeBlossomAirProvider",
            "XXX.client.particle.SuspendedParticle$UnderwaterProvider",
            "XXX.client.particle.SuspendedTownParticle",
            "XXX.client.particle.SuspendedTownParticle$DolphinSpeedProvider",
            "XXX.client.particle.SuspendedTownParticle$HappyVillagerProvider",
            "XXX.client.particle.TerrainParticle",
            "XXX.client.particle.TextureSheetParticle",
            "XXX.client.particle.TotemParticle$Provider",
            "XXX.client.particle.VibrationSignalParticle",
            "XXX.client.particle.WakeParticle",
            "XXX.client.particle.WaterCurrentDownParticle",
            "XXX.client.particle.WaterDropParticle",
            "XXX.client.particle.WhiteAshParticle",
            "XXX.client.particle.package-info",
            "XXX.client.player.Input",
            "XXX.client.player.LocalPlayer",
            "XXX.client.renderer.DimensionSpecialEffects$MoonEffects",
            "XXX.client.renderer.DimensionSpecialEffects$OverworldEffects",
            "XXX.client.renderer.EffectInstance",
            "XXX.client.renderer.FaceInfo$Constants",
            "XXX.client.renderer.FogRenderer",
            "XXX.client.renderer.FogRenderer$DarknessFogFunction",
            "XXX.client.renderer.FogRenderer$FogMode",
            "XXX.client.renderer.GameRenderer",
            "XXX.client.renderer.GameRenderer$ResourceCache",
            "XXX.client.renderer.GpuWarnlistManager$Preparations",
            "XXX.client.renderer.ItemInHandRenderer",
            "XXX.client.renderer.ItemInHandRenderer$HandRenderSelection",
            "XXX.client.renderer.LevelRenderer",
            "XXX.client.renderer.LevelRenderer$RenderChunkStorage",
            "XXX.client.renderer.LevelRenderer$TransparencyShaderException",
            "XXX.client.renderer.MultiBufferSource",
            "XXX.client.renderer.OutlineBufferSource",
            "XXX.client.renderer.PanoramaRenderer",
            "XXX.client.renderer.PostPass",
            "XXX.client.renderer.RenderBuffers",
            "XXX.client.renderer.RenderStateShard$BooleanStateShard",
            "XXX.client.renderer.RenderStateShard$DepthTestStateShard",
            "XXX.client.renderer.RenderStateShard$LayeringStateShard",
            "XXX.client.renderer.RenderStateShard$LineStateShard",
            "XXX.client.renderer.RenderStateShard$MultiTextureStateShard$Builder",
            "XXX.client.renderer.RenderStateShard$OutputStateShard",
            "XXX.client.renderer.RenderStateShard$ShaderStateShard",
            "XXX.client.renderer.RenderStateShard$TexturingStateShard",
            "XXX.client.renderer.RenderStateShard$WriteMaskStateShard",
            "XXX.client.renderer.RenderType$CompositeRenderType",
            "XXX.client.renderer.RenderType$CompositeState$CompositeStateBuilder",
            "XXX.client.renderer.RunningTrimmedMean",
            "XXX.client.renderer.ShaderInstance",
            "XXX.client.renderer.Sheets",
            "XXX.client.renderer.SpriteCoordinateExpander",
            "XXX.client.renderer.VirtualScreen",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElement$Deserializer",
            "XXX.block.model.BlockElementFace$Deserializer",
            "XXX.block.model.BlockFaceUV",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModel$GuiLight",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockModelDefinition$Deserializer",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemOverride",
            "XXX.block.model.ItemOverride$Predicate",
            "XXX.block.model.ItemOverrides$BakedOverride",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.MultiVariant$Deserializer",
            "XXX.block.model.Variant$Deserializer",
            "XXX.model.multipart.Condition",
            "XXX.model.multipart.MultiPart",
            "XXX.model.multipart.OrCondition",
            "XXX.model.multipart.Selector$Deserializer",
            "XXX.block.model.package-info",
            "XXX.renderer.blockentity.BannerRenderer",
            "XXX.renderer.blockentity.BedRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderDispatcher",
            "XXX.renderer.blockentity.BlockEntityRendererProvider",
            "XXX.renderer.blockentity.BlockEntityRenderers",
            "XXX.renderer.blockentity.BrushableBlockRenderer",
            "XXX.renderer.blockentity.CampfireRenderer",
            "XXX.renderer.blockentity.ConduitRenderer",
            "XXX.renderer.blockentity.EnchantTableRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$HangingSignModel",
            "XXX.renderer.blockentity.PistonHeadRenderer",
            "XXX.renderer.blockentity.SignRenderer",
            "XXX.renderer.blockentity.SkullBlockRenderer",
            "XXX.renderer.blockentity.StructureBlockRenderer",
            "XXX.renderer.blockentity.TheEndGatewayRenderer",
            "XXX.renderer.blockentity.package-info",
            "XXX.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult",
            "XXX.renderer.chunk.ChunkRenderDispatcher$CompiledChunk$1",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask",
            "XXX.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults",
            "XXX.renderer.chunk.RenderChunk",
            "XXX.renderer.chunk.RenderRegionCache",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BeeDebugRenderer$HiveInfo",
            "XXX.renderer.debug.BrainDebugRenderer$BrainDump",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedListener",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$DebugGoal",
            "XXX.renderer.debug.HeightMapRenderer$1",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.AxolotlRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChestedHorseRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DisplayRenderer$1",
            "XXX.renderer.entity.DisplayRenderer$ItemDisplayRenderer",
            "XXX.renderer.entity.MoonCowRenderer",
            "XXX.renderer.entity.NoopRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.StencilRenderer$Triangle",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.MustacheLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.SaddleLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.player.PlayerRenderer$PlayerArmorModel",
            "XXX.renderer.item.ClampedItemPropertyFunction",
            "XXX.renderer.item.CompassItemPropertyFunction$CompassTarget",
            "XXX.renderer.item.ItemProperties",
            "XXX.renderer.item.ItemPropertyFunction",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.Dumpable",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.SpriteContents$AnimatedTexture",
            "XXX.renderer.texture.SpriteContents$InterpolationData",
            "XXX.renderer.texture.SpriteLoader",
            "XXX.renderer.texture.SpriteTicker",
            "XXX.renderer.texture.Stitcher$Entry",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Ticker",
            "XXX.renderer.texture.Tickable",
            "XXX.texture.atlas.SpriteResourceLoader$1",
            "XXX.texture.atlas.SpriteSource$Output",
            "XXX.texture.atlas.SpriteSourceType",
            "XXX.texture.atlas.package-info",
            "XXX.atlas.sources.LazyLoadedImage",
            "XXX.atlas.sources.PalettedPermutations$PalettedSpriteSupplier",
            "XXX.atlas.sources.SourceFilter",
            "XXX.atlas.sources.Unstitcher$Region",
            "XXX.atlas.sources.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.DefaultPlayerSkin$ModelType",
            "XXX.client.resources.DownloadedPackSource",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SkinManager$SkinTextureCallback",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.FormattedBidiReorder",
            "XXX.resources.language.LanguageInfo",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSection$FrameOutput",
            "XXX.metadata.animation.FrameSize",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.AtlasSet$AtlasEntry",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBaker",
            "XXX.resources.model.ModelBakery$BakedCacheKey",
            "XXX.resources.model.ModelBakery$LoadedJson",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelManager$ReloadState",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.package-info",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.FullTextSearchTree",
            "XXX.client.searchtree.IntersectionIterator",
            "XXX.client.searchtree.PlainTextSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$2",
            "XXX.client.searchtree.SearchRegistry$Key",
            "XXX.client.searchtree.SearchRegistry$TreeEntry",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.telemetry.ClientTelemetryManager",
            "XXX.client.telemetry.TelemetryEventLog",
            "XXX.client.telemetry.TelemetryEventSender",
            "XXX.client.telemetry.TelemetryEventType$Builder",
            "XXX.client.telemetry.TelemetryProperty",
            "XXX.client.telemetry.TelemetryProperty$GameMode",
            "XXX.client.telemetry.TelemetryPropertyMap",
            "XXX.client.telemetry.TelemetryPropertyMap$Builder",
            "XXX.telemetry.events.AggregatedTelemetryEvent",
            "XXX.telemetry.events.WorldLoadEvent",
            "XXX.telemetry.events.WorldLoadTimesEvent",
            "XXX.telemetry.events.package-info",
            "XXX.client.tutorial.BundleTutorial",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.Tutorial$TimedToast",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.client.voting.ClientVoteStorage",
            "XXX.client.voting.ClientVoteStorage$CountAndLimit",
            "XXX.client.voting.ClientVoteStorage$VoteInfo",
            "XXX.client.voting.package-info",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.gametest.framework.AfterBatch",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchRunner$1",
            "XXX.gametest.framework.GameTestGenerator",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestRegistry",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TeamcityTestReporter",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestFunction",
            "XXX.gametest.framework.TestReporter",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounter$1",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$PacketHolder",
            "XXX.minecraft.network.ConnectionProtocol$PacketSet",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.FriendlyByteBuf$Reader",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatType$BoundNetwork",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents$1",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$2$1",
            "XXX.network.protocol.BundlerInfo$Provider",
            "XXX.network.protocol.PacketFlow",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAddExperienceOrbPacket",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetCarriedItemPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.ClientboundUpdateTagsPacket",
            "XXX.protocol.game.ClientboundVoteFinishPacket",
            "XXX.protocol.game.ClientboundVoteStartPacket",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQuery",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientInformationPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.ServerboundCustomQueryPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.network.protocol.package-info",
            "XXX.protocol.status.ClientboundPongResponsePacket",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$1",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.EntityDataSerializers$6",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.SynchedEntityData$DataValue",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.FileToIdConverter",
            "XXX.minecraft.resources.RegistryDataLoader",
            "XXX.minecraft.resources.RegistryDataLoader$Loader",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryOps",
            "XXX.minecraft.resources.RegistryOps$2",
            "XXX.minecraft.resources.RegistryOps$RegistryInfoLookup",
            "XXX.minecraft.resources.ResourceKey$InternKey",
            "XXX.minecraft.resources.ResourceLocation$Dummy",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.chase.ChaseClient",
            "XXX.server.chase.ChaseServer",
            "XXX.server.chase.package-info",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.CloneCommands$DimensionAndPosition",
            "XXX.server.commands.DamageCommand",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillBiomeCommand",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PlaceCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ResetChunksCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties$WorldDimensionData",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.minecraft.util.RgbTxt$Entry",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimeStamped",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.voting.VoteCommand",
            "XXX.minecraft.voting.package-info",
            "XXX.voting.rules.BooleanRule$BooleanRuleChange",
            "XXX.voting.rules.CounterRule$1",
            "XXX.voting.rules.CounterRule$Simple",
            "XXX.voting.rules.DoubleOrHalfRule",
            "XXX.voting.rules.EnumRule$1",
            "XXX.voting.rules.FixedOrRandomKeyRule",
            "XXX.voting.rules.FixedOrRandomKeyRule$Change",
            "XXX.voting.rules.MapRule$1",
            "XXX.voting.rules.OneShotRule",
            "XXX.voting.rules.OneShotRule$OneShotRuleChange",
            "XXX.voting.rules.OneShotRule$Simple",
            "XXX.voting.rules.RandomNumberRule$1",
            "XXX.voting.rules.RandomNumberRule$RandomInt",
            "XXX.voting.rules.ResourceKeyReplacementRule",
            "XXX.voting.rules.ResourceKeySingleRule",
            "XXX.voting.rules.ResourceKeySingleRule$Change",
            "XXX.voting.rules.RuleAction",
            "XXX.voting.rules.RuleChange$1",
            "XXX.voting.rules.Rules",
            "XXX.voting.rules.Rules$10",
            "XXX.voting.rules.Rules$12",
            "XXX.voting.rules.Rules$14",
            "XXX.voting.rules.Rules$16",
            "XXX.voting.rules.Rules$18",
            "XXX.voting.rules.Rules$2",
            "XXX.voting.rules.Rules$21",
            "XXX.voting.rules.Rules$23",
            "XXX.voting.rules.Rules$25",
            "XXX.voting.rules.Rules$27",
            "XXX.voting.rules.Rules$29",
            "XXX.voting.rules.Rules$30",
            "XXX.voting.rules.Rules$32",
            "XXX.voting.rules.Rules$34",
            "XXX.voting.rules.Rules$36",
            "XXX.voting.rules.Rules$38",
            "XXX.voting.rules.Rules$4",
            "XXX.voting.rules.Rules$41",
            "XXX.voting.rules.Rules$43",
            "XXX.voting.rules.Rules$6",
            "XXX.voting.rules.Rules$8",
            "XXX.voting.rules.SetRule",
            "XXX.voting.rules.UniformIntRule",
            "XXX.voting.rules.UniformIntRule$Change",
            "XXX.voting.rules.VotingCostRule$1",
            "XXX.rules.actual.AutoJumpAlternatives",
            "XXX.rules.actual.BinaryGameRuleRule$RuleRuleChange",
            "XXX.rules.actual.BlockFlammabilityRule",
            "XXX.rules.actual.BlockMapRule",
            "XXX.rules.actual.BlockModelReplacementRule$PotentialEntry",
            "XXX.rules.actual.BlockReplaceSingleRule",
            "XXX.rules.actual.ChickenEggRule",
            "XXX.rules.actual.CodepointStyleRule",
            "XXX.rules.actual.ColorRule",
            "XXX.rules.actual.CopySkinRule$CopySkinRuleChange",
            "XXX.rules.actual.DoubleOrHalfDamageTypeMapRule",
            "XXX.rules.actual.ExplosionExtraPowerRule",
            "XXX.rules.actual.FoodType",
            "XXX.rules.actual.GiveEffectRule",
            "XXX.rules.actual.Goldifier",
            "XXX.rules.actual.IntegerGameRuleRule",
            "XXX.rules.actual.ItemDespawnTime",
            "XXX.rules.actual.ItemGiveRule",
            "XXX.rules.actual.ItemModelReplacementRule",
            "XXX.rules.actual.LavaReplaceRule",
            "XXX.rules.actual.LightEngineMode$1",
            "XXX.rules.actual.NameVisiblity",
            "XXX.rules.actual.OptimizationRule",
            "XXX.rules.actual.ParentTrapRule$ParentTrapRuleChange",
            "XXX.rules.actual.PlayerSetRule",
            "XXX.rules.actual.RecipeFlip",
            "XXX.rules.actual.ReplaceItemsRule$ItemGenerator",
            "XXX.rules.actual.RuleFeatureToggles",
            "XXX.rules.actual.TheJokeRule",
            "XXX.rules.actual.ThreadedAnvilChunkStorage",
            "XXX.rules.actual.ThreadedAnvilChunkStorage$Change",
            "XXX.rules.actual.TransformEntityRule$TransformRuleChange",
            "XXX.rules.actual.TransformScaleRule$ScaleRuleChange",
            "XXX.rules.actual.VillagerPaymentRule",
            "XXX.rules.actual.WorldShape",
            "XXX.voting.rules.package-info",
            "XXX.voting.votes.ClientVote$ClientOption",
            "XXX.voting.votes.FinishedVote",
            "XXX.voting.votes.FinishedVote$1ResultPair",
            "XXX.voting.votes.OptionId",
            "XXX.voting.votes.OptionVotes",
            "XXX.voting.votes.ServerVote$Effect",
            "XXX.voting.votes.ServerVote$VoteGenerationOptions",
            "XXX.voting.votes.ServerVoteStorage$OptionAccess",
            "XXX.voting.votes.TieResolutionStrategy",
            "XXX.voting.votes.VoteResults$OptionResult",
            "XXX.voting.votes.VoteStorage",
            "XXX.voting.votes.VoterMap",
            "XXX.voting.votes.VotingMaterial$1",
            "XXX.voting.votes.VotingMaterial$Cost",
            "XXX.voting.votes.VotingMaterial$Type",
            "XXX.voting.votes.VotingMaterial$Type$2",
            "XXX.voting.votes.VotingMaterial$Type$4",
            "XXX.voting.votes.VotingMaterial$VotingItem",
            "XXX.voting.votes.VotingMaterial$VotingResource$1",
            "XXX.voting.votes.package-info",
            "XXX.world.entity.Display$LinearFloatInterpolator",
            "XXX.world.entity.Display$LinearlyInterpolatedBlockAnimator",
            "XXX.world.entity.Display$StencilDisplay",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.VariantHolder",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bee$BeelooningGoal",
            "XXX.entity.animal.Bee$MoveWithoutPathfindingGoal",
            "XXX.entity.animal.MoonCow$MoonWalkControl",
            "XXX.entity.item.ItemEntity$1",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Zombie$1",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.monster.warden.AngerManagement",
            "XXX.monster.warden.AngerManagement$Sorter",
            "XXX.monster.warden.Warden$1",
            "XXX.monster.warden.Warden$2",
            "XXX.monster.warden.WardenSpawnTracker",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$1",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.transform.EntityTransformType",
            "XXX.entity.transform.TransformCommand",
            "XXX.world.food.Thirst",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModeCheck",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorItem$Type",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BottleOfEntityItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.Equipable",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack$TooltipPart",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.SplashBottleOfEntityItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.TagContainerItem",
            "XXX.item.context.PlaceBlockBlockPlaceContext",
            "XXX.item.context.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.DupeHackRecipe",
            "XXX.item.crafting.NbtCraftingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SimpleCraftingRecipeSerializer$Factory",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.SwiftSneakEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.Level$2",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureManager",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeGenerationSettings$PlainBuilder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$2",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.Climate",
            "XXX.level.biome.Climate$Parameter",
            "XXX.level.biome.Climate$ParameterPoint",
            "XXX.level.biome.Climate$RTree$Leaf",
            "XXX.level.biome.Climate$RTree$SubTree",
            "XXX.level.biome.Climate$SpawnFinder",
            "XXX.level.biome.Climate$TargetPoint",
            "XXX.level.biome.FeatureSorter$1FeatureData",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.MobSpawnSettings$Builder",
            "XXX.level.biome.MobSpawnSettings$SpawnerData",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider",
            "XXX.level.biome.OverworldBiomeBuilder",
            "XXX.level.biome.TheMoonBiomeSource",
            "XXX.level.block.CheeseBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChiseledBookShelfBlock",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CopperSinkBlock",
            "XXX.level.block.FacingTriggerableBlock",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.PickaxeBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PowderSnowCauldronBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkBehaviour",
            "XXX.level.block.SculkBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SculkSpreader",
            "XXX.level.block.SculkVeinBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.levelgen.MoonBaseBuilder$1",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$1",
            "XXX.level.levelgen.NoiseChunk$BlendAlpha",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$CacheAllInCell",
            "XXX.level.levelgen.NoiseChunk$FlatCache",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseRouter",
            "XXX.level.levelgen.NoiseRouterData$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.OreVeinifier$VeinType",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomState",
            "XXX.level.levelgen.RandomState$1NoiseWiringHelper",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.ThreadSafeLegacyRandomSource",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldDimensions$1Entry",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldOptions",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.Blender$BlendingOutput",
            "XXX.levelgen.blending.Blender$DistanceGetter",
            "XXX.levelgen.blending.BlendingData$BiomeConsumer",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.AllOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicate",
            "XXX.levelgen.blockpredicates.CombiningPredicate",
            "XXX.levelgen.blockpredicates.InsideWorldBoundsPredicate",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.blockpredicates.TrueBlockPredicate",
            "XXX.levelgen.blockpredicates.package-info",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.carver.WorldCarver$CarveSkipChecker",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BasaltColumnsFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.ScatteredOreFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.TreeFeature$1",
            "XXX.levelgen.feature.UnderwaterMagmaFeature",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterloggedVegetationPatchFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.BlockColumnConfiguration$Layer",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.CountConfiguration"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.blaze3d.platform.GlConst \u001b[2;32m+6P\u001b[0m",
          "XXX.blaze3d.systems.RenderSystem \u001b[2;32m+65M\u001b[0m \u001b[2;31m-63M\u001b[0m",
          "net.minecraft.ChatFormatting \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "net.minecraft.SharedConstants \u001b[2;32m+1P\u001b[0m",
          "net.minecraft.Util \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.advancements.critereon.PlayerTrigger$TriggerInstance \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.client.Options \u001b[2;32m+2P\u001b[0m",
          "XXX.client.gui.Font \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.model.PiglinModel \u001b[2;32m+1M\u001b[0m",
          "XXX.client.player.RemotePlayer \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.renderer.BiomeColors \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.entity.EntityRenderDispatcher \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.entity.GlowSquidRenderer \u001b[2;32m+4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.entity.LivingEntityRenderer \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.core.Direction \u001b[2;32m+3P\u001b[0m",
          "XXX.minecraft.core.Direction$Axis \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.core.Direction$Axis$2 \u001b[2;32m+1M\u001b[0m",
          "XXX.core.particles.ParticleTypes \u001b[2;32m+1P\u001b[0m",
          "XXX.loot.packs.VanillaBlockLoot \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.models.BlockModelGenerators \u001b[2;32m+11M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.models.model.ModelTemplates \u001b[2;32m+2P\u001b[0m",
          "XXX.data.recipes.ShapedRecipeBuilder$Result \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.data.worldgen.SurfaceRuleData \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.server.network.ServerGamePacketListenerImpl \u001b[2;32m+6M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.sounds.SoundEvents \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.tags.BannerPatternTags \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.tags.BlockTags \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.tags.ItemTags \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.util.StringUtil \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.damagesource.DeathMessageType \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Panda \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.Squid \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.animal.WaterAnimal \u001b[2;32m+1M\u001b[0m",
          "XXX.animal.allay.Allay \u001b[2;32m+4M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.animal.camel.Camel \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.boss.EnderDragonPart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.boss.enderdragon.EnderDragon \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.boss.wither.WitherBoss \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.decoration.HangingEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.decoration.ItemFrame \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.monster.Shulker \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.monster.Strider \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.monster.Witch \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.monster.Zoglin \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.vehicle.AbstractMinecart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.vehicle.Boat \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.vehicle.MinecartHopper \u001b[2;32m+2P\u001b[0m",
          "XXX.world.food.FoodProperties$Builder \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.DyeColor \u001b[2;32m+1P\u001b[0m",
          "XXX.item.crafting.FireworkStarFadeRecipe \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.item.crafting.MapCloningRecipe \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.block.Block \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+10M\u001b[0m \u001b[2;31m-8M\u001b[0m | \u001b[2;32m+8P\u001b[0m",
          "XXX.level.block.ButtonBlock \u001b[2;32m+4M\u001b[0m",
          "XXX.level.block.CarpetBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.HoneyBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.IronBarsBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.LeverBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.LiquidBlock \u001b[2;32m+2M\u001b[0m",
          "XXX.level.block.NetherPortalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.StainedGlassPaneBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.TntBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WeightedPressurePlateBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.block.entity.ChestBlockEntity \u001b[2;32m+5M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.DropperBlockEntity \u001b[2;32m+4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.piston.PistonBaseBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.block.piston.PistonMovingBlockEntity \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.piston.PistonStructureResolver \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour \u001b[2;32m+3M\u001b[0m",
          "XXX.block.state.BlockBehaviour$BlockStateBase \u001b[2;32m+3M\u001b[0m",
          "XXX.levelgen.feature.Feature \u001b[2;32m+2P\u001b[0m",
          "XXX.level.portal.PortalShape \u001b[2;32m+7M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.storage.LevelResource \u001b[2;32m+2P\u001b[0m",
          "XXX.world.phys.AABB \u001b[2;32m+1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.systems.RenderSystem",
        "differences": {
          "added": [
            "void lambda$setShaderGameTime$72(float)",
            "void lambda$restoreProjectionMatrix$71()",
            "void lambda$backupProjectionMatrix$70()",
            "void lambda$applyModelViewMatrix$69(Matrix4f)",
            "void lambda$resetTextureMatrix$68()",
            "void lambda$setTextureMatrix$67(Matrix4f)",
            "void lambda$setInverseViewRotationMatrix$66(Matrix3f)",
            "void lambda$setProjectionMatrix$65(Matrix4f,VertexSorting)",
            "void lambda$setShaderTexture$64(int,int)",
            "void lambda$setShaderTexture$63(int,ResourceLocation)",
            "void lambda$setShader$62(Supplier)",
            "void lambda$glGenVertexArrays$61(Consumer)",
            "void lambda$glGenBuffers$60(Consumer)",
            "void lambda$setupGui3DDiffuseLighting$59(Vector3f,Vector3f)",
            "void lambda$setupGuiFlatDiffuseLighting$58(Vector3f,Vector3f)",
            "void lambda$setupLevelDiffuseLighting$57(Vector3f,Vector3f,Matrix4f)",
            "void lambda$teardownOverlayColor$56()",
            "void lambda$setupOverlayColor$55(IntSupplier)",
            "void lambda$glUniformMatrix4$54(int,boolean,FloatBuffer)",
            "void lambda$glUniformMatrix3$53(int,boolean,FloatBuffer)",
            "void lambda$glUniformMatrix2$52(int,boolean,FloatBuffer)",
            "void lambda$glUniform4$51(int,FloatBuffer)",
            "void lambda$glUniform3$50(int,FloatBuffer)",
            "void lambda$glUniform2$49(int,FloatBuffer)",
            "void lambda$glUniform1$48(int,FloatBuffer)",
            "void lambda$glUniform4$47(int,IntBuffer)",
            "void lambda$glUniform3$46(int,IntBuffer)",
            "void lambda$glUniform2$45(int,IntBuffer)",
            "void lambda$glUniform1$44(int,IntBuffer)",
            "void lambda$glUniform1i$43(int,int)",
            "void lambda$glDeleteVertexArrays$42(int)",
            "void lambda$glDeleteBuffers$41(int)",
            "void lambda$glBindVertexArray$40(Supplier)",
            "void lambda$glBindBuffer$39(int,IntSupplier)",
            "void lambda$renderCrosshair$38(int)",
            "void lambda$getString$37(int,Consumer)",
            "void lambda$readPixels$36(int,int,int,int,int,int,ByteBuffer)",
            "void lambda$pixelStore$35(int,int)",
            "void lambda$lineWidth$34(float)",
            "void lambda$drawElements$33(int,int,int)",
            "void lambda$setShaderColor$32(float,float,float,float)",
            "void lambda$setShaderLights$31(Vector3f,Vector3f)",
            "void lambda$setShaderFogShape$30(FogShape)",
            "void lambda$setShaderFogColor$29(float,float,float,float)",
            "void lambda$setShaderFogEnd$28(float)",
            "void lambda$setShaderGlintAlpha$27(float)",
            "void lambda$setShaderFogStart$26(float)",
            "void lambda$clear$25(int,boolean)",
            "void lambda$clearStencil$24(int)",
            "void lambda$clearColor$23(float,float,float,float)",
            "void lambda$clearDepth$22(double)",
            "void lambda$stencilOp$21(int,int,int)",
            "void lambda$stencilMask$20(int)",
            "void lambda$stencilFunc$19(int,int,int)",
            "void lambda$colorMask$18(boolean,boolean,boolean,boolean)",
            "void lambda$viewport$17(int,int,int,int)",
            "void lambda$bindTexture$16(int)",
            "void lambda$deleteTexture$15(int)",
            "void lambda$texParameter$14(int,int,int)",
            "void lambda$activeTexture$13(int)",
            "void lambda$logicOp$12(GlStateManager$LogicOp)",
            "void lambda$polygonOffset$11(float,float)",
            "void lambda$polygonMode$10(int,int)"
          ],
          "removed": [
            "void cullFace(int)",
            "void lambda$setShaderGameTime$73(float)",
            "void lambda$restoreProjectionMatrix$72()",
            "void lambda$backupProjectionMatrix$71()",
            "void lambda$applyModelViewMatrix$70(Matrix4f)",
            "void lambda$resetTextureMatrix$69()",
            "void lambda$setTextureMatrix$68(Matrix4f)",
            "void lambda$setInverseViewRotationMatrix$67(Matrix3f)",
            "void lambda$setProjectionMatrix$66(Matrix4f,VertexSorting)",
            "void lambda$setShaderTexture$65(int,int)",
            "void lambda$setShaderTexture$64(int,ResourceLocation)",
            "void lambda$setShader$63(Supplier)",
            "void lambda$glGenVertexArrays$62(Consumer)",
            "void lambda$glGenBuffers$61(Consumer)",
            "void lambda$setupGui3DDiffuseLighting$60(Vector3f,Vector3f)",
            "void lambda$setupGuiFlatDiffuseLighting$59(Vector3f,Vector3f)",
            "void lambda$setupLevelDiffuseLighting$58(Vector3f,Vector3f,Matrix4f)",
            "void lambda$teardownOverlayColor$57()",
            "void lambda$setupOverlayColor$56(IntSupplier)",
            "void lambda$glUniformMatrix4$55(int,boolean,FloatBuffer)",
            "void lambda$glUniformMatrix3$54(int,boolean,FloatBuffer)",
            "void lambda$glUniformMatrix2$53(int,boolean,FloatBuffer)",
            "void lambda$glUniform4$52(int,FloatBuffer)",
            "void lambda$glUniform3$51(int,FloatBuffer)",
            "void lambda$glUniform2$50(int,FloatBuffer)",
            "void lambda$glUniform1$49(int,FloatBuffer)",
            "void lambda$glUniform4$48(int,IntBuffer)",
            "void lambda$glUniform3$47(int,IntBuffer)",
            "void lambda$glUniform2$46(int,IntBuffer)",
            "void lambda$glUniform1$45(int,IntBuffer)",
            "void lambda$glUniform1i$44(int,int)",
            "void lambda$glDeleteVertexArrays$43(int)",
            "void lambda$glDeleteBuffers$42(int)",
            "void lambda$glBindVertexArray$41(Supplier)",
            "void lambda$glBindBuffer$40(int,IntSupplier)",
            "void lambda$renderCrosshair$39(int)",
            "void lambda$getString$38(int,Consumer)",
            "void lambda$readPixels$37(int,int,int,int,int,int,ByteBuffer)",
            "void lambda$pixelStore$36(int,int)",
            "void lambda$lineWidth$35(float)",
            "void lambda$drawElements$34(int,int,int)",
            "void lambda$setShaderColor$33(float,float,float,float)",
            "void lambda$setShaderLights$32(Vector3f,Vector3f)",
            "void lambda$setShaderFogShape$31(FogShape)",
            "void lambda$setShaderFogColor$30(float,float,float,float)",
            "void lambda$setShaderFogEnd$29(float)",
            "void lambda$setShaderGlintAlpha$28(float)",
            "void lambda$setShaderFogStart$27(float)",
            "void lambda$clear$26(int,boolean)",
            "void lambda$clearStencil$25(int)",
            "void lambda$clearColor$24(float,float,float,float)",
            "void lambda$clearDepth$23(double)",
            "void lambda$stencilOp$22(int,int,int)",
            "void lambda$stencilMask$21(int)",
            "void lambda$stencilFunc$20(int,int,int)",
            "void lambda$colorMask$19(boolean,boolean,boolean,boolean)",
            "void lambda$viewport$18(int,int,int,int)",
            "void lambda$bindTexture$17(int)",
            "void lambda$deleteTexture$16(int)",
            "void lambda$texParameter$15(int,int,int)",
            "void lambda$activeTexture$14(int)",
            "void lambda$logicOp$13(GlStateManager$LogicOp)",
            "void lambda$polygonOffset$12(float,float)",
            "void lambda$polygonMode$11(int,int)",
            "void lambda$cullFace$10(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.ChatFormatting",
        "differences": {
          "added": [],
          "removed": [
            "boolean lambda$static$2(ChatFormatting)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.Util",
        "differences": {
          "added": [
            "void shuffle(ObjectArrayList,RandomSource)"
          ],
          "removed": [
            "void shuffle(List,RandomSource)",
            "int calculatePrefixSize(Iterable)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.PlayerTrigger$TriggerInstance",
        "differences": {
          "added": [],
          "removed": [
            "PlayerTrigger$TriggerInstance vote(MinMaxBounds$Ints)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.Font",
        "differences": {
          "added": [
            "void renderChar(BakedGlyph,boolean,boolean,float,float,float,Matrix4f,VertexConsumer,float,float,float,float,int)"
          ],
          "removed": [
            "void renderChar(BakedGlyph,boolean,boolean,boolean,float,float,float,Matrix4f,VertexConsumer,float,float,float,float,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.PiglinModel",
        "differences": {
          "added": [],
          "removed": [
            "boolean miniMe()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.player.RemotePlayer",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.BiomeColors",
        "differences": {
          "added": [
            "int lambda$static$1(Biome,double,double)",
            "int lambda$static$0(Biome,double,double)"
          ],
          "removed": [
            "int lambda$static$2(Holder,double,double)",
            "int lambda$static$1(Holder,double,double)",
            "int lambda$static$0(Holder,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "differences": {
          "added": [],
          "removed": [
            "boolean shouldRender0(Entity,Frustum,double,double,double)",
            "void render0(Entity,float,double,double,double,float,float,PoseStack,MultiBufferSource,int)",
            "void renderDynamicShadow(PoseStack,MultiBufferSource,float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.entity.GlowSquidRenderer",
        "differences": {
          "added": [],
          "removed": [
            "void render(GlowSquid,float,float,PoseStack,MultiBufferSource,int)",
            "void render(Mob,float,float,PoseStack,MultiBufferSource,int)",
            "void render(LivingEntity,float,float,PoseStack,MultiBufferSource,int)",
            "void render(Entity,float,float,PoseStack,MultiBufferSource,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.entity.LivingEntityRenderer",
        "differences": {
          "added": [],
          "removed": [
            "VertexConsumer getVertexConsumer(LivingEntity,PoseStack,MultiBufferSource,boolean,boolean,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.Direction$Axis$2",
        "differences": {
          "added": [],
          "removed": [
            "Direction[] getOrthogonalDirections()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.loot.packs.VanillaBlockLoot",
        "differences": {
          "added": [
            "LootPoolEntryContainer$Builder lambda$createPitcherCropLoot$238(Integer)"
          ],
          "removed": [
            "LootPoolEntryContainer$Builder lambda$createPitcherCropLoot$239(Integer)",
            "LootTable$Builder lambda$generate$238(Block)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.models.BlockModelGenerators",
        "differences": {
          "added": [
            "void createNetherPortalBlock()"
          ],
          "removed": [
            "void createPackedAir()",
            "void createNetherPortalBlock(Block)",
            "void createSpleaves(Block)",
            "void createFacing(Block)",
            "void createCheeseBlock()",
            "JsonObject buildModelFromShape(ResourceLocation,VoxelShape)",
            "boolean isOnEdge(double,double,double,double,double,double,Direction)",
            "void lambda$buildModelFromShape$61(JsonArray,double,double,double,double,double,double)",
            "void lambda$buildModelFromShape$60(double,double,double,JsonArray)",
            "void lambda$buildModelFromShape$59(double,double,double,JsonArray)",
            "JsonElement lambda$createCheeseBlock$58(ResourceLocation,VoxelShape)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.recipes.ShapedRecipeBuilder$Result",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Item,int,String,CraftingBookCategory,List,Map,Advancement$Builder,ResourceLocation,boolean)"
          ],
          "removed": [
            "void <init>(ResourceLocation,Item,int,String,CraftingBookCategory,List,Map,Advancement$Builder,ResourceLocation,boolean,boolean,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.SurfaceRuleData",
        "differences": {
          "added": [],
          "removed": [
            "SurfaceRules$RuleSource moon()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.network.ServerGamePacketListenerImpl",
        "differences": {
          "added": [
            "CompletableFuture lambda$resetPlayerChatState$15(RemoteChatSession,Executor)"
          ],
          "removed": [
            "float maxInteractionDistanceSq()",
            "void handleVoteCast(ServerboundVoteCastPacket)",
            "void fireworksYay()",
            "void handleCrashVehicle(ServerboundCrashVehiclePacket)",
            "CompletableFuture lambda$resetPlayerChatState$16(RemoteChatSession,Executor)",
            "int lambda$fireworksYay$15(RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.StringUtil",
        "differences": {
          "added": [
            "String formatTickDuration(int)"
          ],
          "removed": [
            "String formatTickDuration(long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Panda",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Squid",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "void transformedTick(EntityTransform,LivingEntity)",
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.WaterAnimal",
        "differences": {
          "added": [],
          "removed": [
            "boolean canTransformBreatheInAir()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.allay.Allay",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)",
            "void transformedTick(EntityTransform,LivingEntity)",
            "void tickAnimation()",
            "boolean canTransformFly()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.camel.Camel",
        "differences": {
          "added": [],
          "removed": [
            "InteractionResult transformInteract(Player,LivingEntity,InteractionHand)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.boss.EnderDragonPart",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.boss.enderdragon.EnderDragon",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "void transformedTick(EntityTransform,LivingEntity)",
            "boolean canTransformFly()",
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.boss.wither.WitherBoss",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.HangingEntity",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.ItemFrame",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Shulker",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Strider",
        "differences": {
          "added": [],
          "removed": [
            "InteractionResult transformInteract(Player,LivingEntity,InteractionHand)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Witch",
        "differences": {
          "added": [],
          "removed": [
            "boolean isItAwkwardToMilk()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Zoglin",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.vehicle.AbstractMinecart",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "boolean hurtInternal(DamageSource,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.vehicle.Boat",
        "differences": {
          "added": [
            "boolean hurt(DamageSource,float)"
          ],
          "removed": [
            "float maxUpStep()",
            "boolean hurtInternal(DamageSource,float)",
            "void handleCrash(float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.food.FoodProperties$Builder",
        "differences": {
          "added": [],
          "removed": [
            "FoodProperties$Builder withMagic(BiConsumer)",
            "void lambda$new$0(ItemStack,LivingEntity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.FireworkStarFadeRecipe",
        "differences": {
          "added": [
            "ItemStack assemble(CraftingContainer,RegistryAccess)",
            "ItemStack assemble(Container,RegistryAccess)"
          ],
          "removed": [
            "ItemStack assembleRaw(CraftingContainer,RegistryAccess)",
            "ItemStack assembleRaw(Container,RegistryAccess)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.MapCloningRecipe",
        "differences": {
          "added": [
            "ItemStack assemble(CraftingContainer,RegistryAccess)",
            "ItemStack assemble(Container,RegistryAccess)"
          ],
          "removed": [
            "ItemStack assembleRaw(CraftingContainer,RegistryAccess)",
            "ItemStack assembleRaw(Container,RegistryAccess)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Block",
        "differences": {
          "added": [],
          "removed": [
            "void playerStepOn(Level,BlockPos,BlockState,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.Blocks",
        "differences": {
          "added": [
            "int lambda$static$53(BlockState)",
            "boolean lambda$static$51(BlockState,BlockGetter,BlockPos)",
            "int lambda$static$39(BlockState)",
            "boolean lambda$static$38(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$37(BlockState)",
            "boolean lambda$static$36(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$25(BlockState)",
            "Item lambda$static$21()"
          ],
          "removed": [
            "int lambda$static$57(BlockState)",
            "int lambda$static$56(BlockState)",
            "boolean lambda$static$53(BlockState,BlockGetter,BlockPos)",
            "int lambda$static$51(BlockState)",
            "boolean lambda$static$39(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$38(BlockState)",
            "boolean lambda$static$37(BlockState,BlockGetter,BlockPos,EntityType)",
            "int lambda$static$36(BlockState)",
            "Item lambda$static$25()",
            "int lambda$static$21(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ButtonBlock",
        "differences": {
          "added": [],
          "removed": [
            "VoxelShape getCollisionShape(BlockState,BlockGetter,BlockPos,CollisionContext)",
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,RandomSource)",
            "BlockState getValidAttachedState(BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CarpetBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HoneyBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canStickToStuff(BlockState)",
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.IronBarsBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)",
            "boolean canAirPassThroughGlassPane(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LeverBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isRandomlyTicking(BlockState)",
            "void randomTick(BlockState,ServerLevel,BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LiquidBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canStickToStuff(BlockState)",
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.NetherPortalBlock",
        "differences": {
          "added": [
            "void <init>(BlockBehaviour$Properties)"
          ],
          "removed": [
            "void <init>(BlockBehaviour$Properties,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.StainedGlassPaneBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TntBlock",
        "differences": {
          "added": [
            "void explode(Level,BlockPos,LivingEntity)"
          ],
          "removed": [
            "BlockState getStateForPlacement(BlockPlaceContext)",
            "void explode(Level,BlockPos,BlockState)",
            "void explode(Level,BlockPos,LivingEntity,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WeightedPressurePlateBlock",
        "differences": {
          "added": [],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.ChestBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "ClientboundBlockEntityDataPacket getUpdatePacket()",
            "CompoundTag getUpdateTag()",
            "boolean isGold()",
            "void setGold(boolean)",
            "Packet getUpdatePacket()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.DropperBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "void load(CompoundTag)",
            "void setLunar()",
            "boolean isLunar()",
            "void saveAdditional(CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.PistonBaseBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "BlockEntity getRenderBlockEntity()",
            "void setCarriedBlockEntity(BlockEntity,Level)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.piston.PistonStructureResolver",
        "differences": {
          "added": [
            "boolean canStickToEachOther(BlockState,BlockState)"
          ],
          "removed": [
            "boolean canStickToEachOther(BlockPos,BlockState,BlockPos,BlockState,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour",
        "differences": {
          "added": [],
          "removed": [
            "boolean canStickToStuff(BlockState)",
            "boolean isStickyToNeighbour(Level,BlockPos,BlockState,BlockPos,BlockState,Direction,Direction)",
            "boolean canAirPass(BlockState,ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "differences": {
          "added": [],
          "removed": [
            "boolean canStickToStuff()",
            "boolean isStickyToNeighbour(Level,BlockPos,BlockPos,BlockState,Direction,Direction)",
            "boolean canAirPass(ServerLevel,BlockPos,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.portal.PortalShape",
        "differences": {
          "added": [
            "Optional findEmptyPortalShape(LevelAccessor,BlockPos,Direction$Axis)",
            "Optional findPortalShape(LevelAccessor,BlockPos,Predicate,Direction$Axis)",
            "void <init>(LevelAccessor,BlockPos,Direction$Axis)",
            "Vec3 lambda$findCollisionFreePosition$3(double,Vec3)",
            "void lambda$createPortalBlocks$2(BlockState,BlockPos)",
            "boolean lambda$findEmptyPortalShape$1(PortalShape)"
          ],
          "removed": [
            "Optional findEmptyPortalShape(LevelAccessor,BlockPos,Direction$Axis,boolean)",
            "Optional findPortalShape(LevelAccessor,BlockPos,Predicate,Direction$Axis,boolean)",
            "void <init>(LevelAccessor,BlockPos,Direction$Axis,boolean)",
            "Vec3 lambda$findCollisionFreePosition$4(double,Vec3)",
            "void lambda$createPortalBlocks$3(BlockState,BlockPos)",
            "boolean lambda$findEmptyPortalShape$2(PortalShape)",
            "boolean lambda$static$1(BlockState,BlockGetter,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.AABB",
        "differences": {
          "added": [],
          "removed": [
            "AABB scale(float)"
          ]
        }
      }
    }
  ]
}