{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "21w11a",
        "currentLabel": "21w13a",
        "values": [
          {
            "key": "World version",
            "previous": "2703",
            "current": "2705"
          },
          {
            "key": "Protocol version",
            "previous": "1073741843",
            "current": "1073741844"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "21w11a",
        "currentLabel": "21w13a",
        "values": [
          {
            "key": "com.mojang:brigadier",
            "previous": "1.0.17",
            "current": "1.0.18"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "float_provider_type.txt",
            "height_provider_type.txt",
            "int_provider_type.txt"
          ],
          "removed": [
            "worldgen/float_provider_type.txt"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "activity",
        "differences": {
          "added": [
            "minecraft:long_jump"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block",
        "differences": {
          "added": [
            "minecraft:light"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "entity_type",
        "differences": {
          "added": [
            "minecraft:goat"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "item",
        "differences": {
          "added": [
            "minecraft:light",
            "minecraft:goat_spawn_egg"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "memory_module_type",
        "differences": {
          "added": [
            "minecraft:nearest_attackable",
            "minecraft:long_jump_cooling_down",
            "minecraft:long_jump_mid_jump",
            "minecraft:has_hunting_cooldown"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "particle_type",
        "differences": {
          "added": [
            "minecraft:light"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sensor_type",
        "differences": {
          "added": [
            "minecraft:axolotl_attackables",
            "minecraft:goat_temptations"
          ],
          "removed": [
            "minecraft:axolotl_hostiles"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "sound_event",
        "differences": {
          "added": [
            "minecraft:entity.goat.ambient",
            "minecraft:entity.goat.death",
            "minecraft:entity.goat.hurt",
            "minecraft:entity.goat.milk",
            "minecraft:entity.goat.prepare_ram",
            "minecraft:entity.goat.screaming.ambient",
            "minecraft:entity.goat.screaming.death",
            "minecraft:entity.goat.screaming.hurt",
            "minecraft:entity.goat.screaming.milk",
            "minecraft:entity.goat.screaming.ram",
            "minecraft:entity.goat.step"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "universal_tags/float_provider_type.json",
            "universal_tags/height_provider_type.json",
            "universal_tags/int_provider_type.json"
          ],
          "removed": [
            "universal_tags/worldgen/float_provider_type.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_blocks_without_drop.json",
        "differences": {
          "added": [
            "minecraft:light"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:goat"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_living_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:goat"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/activity.json",
        "differences": {
          "added": [
            "minecraft:long_jump"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block.json",
        "differences": {
          "added": [
            "minecraft:light"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/entity_type.json",
        "differences": {
          "added": [
            "minecraft:goat"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/item.json",
        "differences": {
          "added": [
            "minecraft:light",
            "minecraft:goat_spawn_egg"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/memory_module_type.json",
        "differences": {
          "added": [
            "minecraft:nearest_attackable",
            "minecraft:long_jump_cooling_down",
            "minecraft:long_jump_mid_jump",
            "minecraft:has_hunting_cooldown"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/particle_type.json",
        "differences": {
          "added": [
            "minecraft:light"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sensor_type.json",
        "differences": {
          "added": [
            "minecraft:axolotl_attackables",
            "minecraft:goat_temptations"
          ],
          "removed": [
            "minecraft:axolotl_hostiles"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/sound_event.json",
        "differences": {
          "added": [
            "minecraft:entity.goat.ambient",
            "minecraft:entity.goat.death",
            "minecraft:entity.goat.hurt",
            "minecraft:entity.goat.milk",
            "minecraft:entity.goat.prepare_ram",
            "minecraft:entity.goat.screaming.ambient",
            "minecraft:entity.goat.screaming.death",
            "minecraft:entity.goat.screaming.hurt",
            "minecraft:entity.goat.screaming.milk",
            "minecraft:entity.goat.screaming.ram",
            "minecraft:entity.goat.step"
          ],
          "removed": []
        }
      }
    }
  ],
  "blocks": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "light.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "options.darkMojangStudiosBackgroundColor: Monochrome Logo",
            "options.darkMojangStudiosBackgroundColor.tooltip: Changes the Mojang Studios loading screen background color to black.",
            "block.minecraft.light: Light",
            "item.minecraft.goat_spawn_egg: Goat Spawn Egg",
            "entity.minecraft.goat: Goat"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "build.tooHigh",
            "previous": "Height limit for building is %s blocks",
            "current": "Height limit for building is %s"
          },
          {
            "key": "advancements.story.shiny_gear.title",
            "previous": "Cover Me With Diamonds",
            "current": "Cover Me with Diamonds"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/loot_tables/entities/goat.json",
            "minecraft/tags/blocks/dirt.json",
            "minecraft/tags/blocks/snow.json",
            "minecraft/tags/entity_types/axolotl_hunt_targets.json",
            "minecraft/tags/entity_types/freeze_hurts_extra_types.json",
            "minecraft/tags/entity_types/freeze_immune_entity_types.json"
          ],
          "removed": [
            "minecraft/tags/entity_types/axolotl_tempted_hostiles.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/blockstates/light.json",
            "minecraft/models/block/light.json",
            "minecraft/models/item/goat_spawn_egg.json",
            "minecraft/models/item/light.json",
            "minecraft/models/item/light_00.json",
            "minecraft/models/item/light_01.json",
            "minecraft/models/item/light_02.json",
            "minecraft/models/item/light_03.json",
            "minecraft/models/item/light_04.json",
            "minecraft/models/item/light_05.json",
            "minecraft/models/item/light_06.json",
            "minecraft/models/item/light_07.json",
            "minecraft/models/item/light_08.json",
            "minecraft/models/item/light_09.json",
            "minecraft/models/item/light_10.json",
            "minecraft/models/item/light_11.json",
            "minecraft/models/item/light_12.json",
            "minecraft/models/item/light_13.json",
            "minecraft/models/item/light_14.json",
            "minecraft/models/item/light_15.json",
            "minecraft/particles/light.json",
            "minecraft/textures/entity/goat/goat.png",
            "minecraft/textures/item/light.png",
            "minecraft/textures/item/light_00.png",
            "minecraft/textures/item/light_01.png",
            "minecraft/textures/item/light_02.png",
            "minecraft/textures/item/light_03.png",
            "minecraft/textures/item/light_04.png",
            "minecraft/textures/item/light_05.png",
            "minecraft/textures/item/light_06.png",
            "minecraft/textures/item/light_07.png",
            "minecraft/textures/item/light_08.png",
            "minecraft/textures/item/light_09.png",
            "minecraft/textures/item/light_10.png",
            "minecraft/textures/item/light_11.png",
            "minecraft/textures/item/light_12.png",
            "minecraft/textures/item/light_13.png",
            "minecraft/textures/item/light_14.png",
            "minecraft/textures/item/light_15.png"
          ],
          "removed": [
            "minecraft/textures/block/calibrated_sculk_sensor_side.png",
            "minecraft/textures/block/calibrated_sculk_sensor_top.png",
            "minecraft/textures/entity/arrow.png",
            "minecraft/textures/entity/zombie/zombie_villager.png",
            "minecraft/textures/item/ruby.png",
            "minecraft/textures/models/armor/piglin_leather_layer_1.png",
            "minecraft/textures/models/armor/piglin_leather_layer_1_overlay.png",
            "minecraft/textures/particle/footprint.png"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.mojang.math.OctahedralGroup",
            "XXX.mojang.math.Quaternion",
            "XXX.mojang.math.Transformation",
            "net.minecraft.BlockUtil$FoundRectangle",
            "net.minecraft.CharPredicate",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.Util$1",
            "net.minecraft.Util$4",
            "net.minecraft.Util$6",
            "net.minecraft.Util$8",
            "net.minecraft.Util$IdentityStrategy",
            "net.minecraft.Util$OS$1",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementList$Listener",
            "XXX.minecraft.advancements.AdvancementProgress$Serializer",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.FrameType",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DeserializationContext",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$1",
            "XXX.advancements.critereon.EntityPredicate$Composite",
            "XXX.advancements.critereon.EntityTypePredicate$1",
            "XXX.advancements.critereon.EntityTypePredicate$TypePredicate",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPickedUpByEntityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger",
            "XXX.advancements.critereon.KilledByCrossbowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LootTableTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Floats",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.NetherTravelTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlacedBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerInteractTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$1",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$1",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactPropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedPropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TickTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$1",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.exceptions.package-info",
            "XXX.minecraft.obfuscate.KeepAfterObfuscation",
            "net.minecraft.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryReadOps",
            "XXX.minecraft.resources.RegistryReadOps$ReadCache",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$1",
            "XXX.minecraft.resources.RegistryWriteOps",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerLevel$EntityCallbacks",
            "XXX.server.level.ServerPlayer$1",
            "XXX.server.level.ServerPlayer$3",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.TextFilter$1",
            "XXX.server.network.TextFilterClient",
            "XXX.server.network.TextFilterClient$IgnoreStrategy",
            "XXX.server.network.TextFilterClient$RequestFailedException",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.server.packs.VanillaPackResources$1",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.SerializationTags",
            "XXX.minecraft.tags.StaticTagHelper",
            "XXX.minecraft.tags.StaticTagHelper$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$ElementEntry",
            "XXX.minecraft.tags.Tag$Named",
            "XXX.minecraft.tags.Tag$OptionalTagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagCollection$NetworkPayload",
            "XXX.minecraft.tags.TagContainer$1",
            "XXX.minecraft.tags.TagContainer$CollectionConsumer",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.TagManager$LoaderInfo",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.FloatProviderType",
            "XXX.minecraft.util.GlslPreprocessor",
            "XXX.minecraft.util.GlslPreprocessor$Context",
            "XXX.minecraft.util.HeapDumper",
            "XXX.minecraft.util.IntRange",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.UniformInt",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.registry.MeasuredMetric",
            "XXX.profiling.registry.MeasurementRegistry",
            "XXX.profiling.registry.ProfilerMeasured",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$1",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.WeightedList",
            "XXX.ai.behavior.WeightedList$WeightedEntry",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$1",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$1",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$1",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.level.block.LightningRodBlock",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MossBlock",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVinesBlock",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeatheringCopper$WeatherState",
            "XXX.level.block.WeatheringCopperSlabBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlantBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BarrelBlockEntity$1",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityTicker",
            "XXX.block.entity.BlockEntityType$BlockEntitySupplier",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.ChestBlockEntity$1",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickingBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.BlockBehaviour",
            "XXX.block.state.BlockBehaviour$BlockStateBase",
            "XXX.block.state.BlockBehaviour$OffsetType",
            "XXX.block.state.BlockBehaviour$StateArgumentPredicate",
            "XXX.block.state.BlockState",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$1",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SculkSensorPhase",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.Tilt",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.EmptyLevelChunk$EmptyChunkBiomeContainer",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$1",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.EntityStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
            "XXX.levelgen.structure.RuinedPortalPiece",
            "XXX.levelgen.structure.RuinedPortalPiece$VerticalPlacement",
            "XXX.levelgen.structure.ShipwreckPieces",
            "XXX.levelgen.structure.StrongholdPieces",
            "XXX.levelgen.structure.StrongholdPieces$2",
            "XXX.levelgen.structure.StrongholdPieces$ChestCorridor",
            "XXX.levelgen.structure.StrongholdPieces$FiveCrossing",
            "XXX.levelgen.structure.StrongholdPieces$Library",
            "XXX.levelgen.structure.StrongholdPieces$PortalRoom",
            "XXX.levelgen.structure.StrongholdPieces$RightTurn",
            "XXX.levelgen.structure.StrongholdPieces$SmoothStoneSelector",
            "XXX.levelgen.structure.StrongholdPieces$StartPiece",
            "XXX.levelgen.structure.StrongholdPieces$StraightStairsDown",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.storage.threaded.package-info",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ],
          "removed": [
            "XXX.mojang.math.Constants",
            "XXX.mojang.math.MethodsReturnNonnullByDefault",
            "XXX.mojang.math.OctahedralGroup$1",
            "XXX.mojang.math.SymmetricGroup3",
            "XXX.mojang.math.Vector3d",
            "net.minecraft.BlockUtil",
            "net.minecraft.BlockUtil$IntBounds",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.Util",
            "net.minecraft.Util$3",
            "net.minecraft.Util$5",
            "net.minecraft.Util$7",
            "net.minecraft.Util$9",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement$1",
            "XXX.minecraft.advancements.AdvancementList",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.minecraft.advancements.RequirementsStrategy",
            "XXX.advancements.critereon.AbstractCriterionTriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.EntityTypePredicate$TagPredicate",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPickedUpByEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$1",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationTrigger",
            "XXX.advancements.critereon.LootTableTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NetherTravelTrigger",
            "XXX.advancements.critereon.PlacedBlockTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerInteractTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.SerializationContext",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TickTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.RegistryDataPackCodec",
            "XXX.minecraft.resources.RegistryLookupCodec",
            "XXX.minecraft.resources.RegistryReadOps$1",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$MemoryMap",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerResources",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$1",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel$1",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ServerPlayer$2",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.TextFilter",
            "XXX.server.network.TextFilter$FilteredText",
            "XXX.server.network.TextFilterClient$1",
            "XXX.server.network.TextFilterClient$PlayerContext",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.FolderPackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack$PackConstructor",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SetTag",
            "XXX.minecraft.tags.StaticTagHelper$1",
            "XXX.minecraft.tags.StaticTags",
            "XXX.minecraft.tags.Tag$1",
            "XXX.minecraft.tags.Tag$BuilderEntry",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$OptionalElementEntry",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection$1",
            "XXX.minecraft.tags.TagContainer",
            "XXX.minecraft.tags.TagContainer$Builder",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagManager$1",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.SavedDataVillageCropFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.SwimStatsRenameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_7",
            "XXX.datafix.schemas.V1460$1",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$1",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.package-info",
            "XXX.profiling.registry.MeasurementCategory",
            "XXX.profiling.registry.Metric",
            "XXX.profiling.registry.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.package-info",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$AxolotlPathNavigation",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.goat.Goat",
            "XXX.animal.goat.package-info",
            "XXX.level.block.LightBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MultifaceBlock",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SporeBlossomBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.SupportType$1",
            "XXX.level.block.SupportType$3",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrassBlock",
            "XXX.level.block.TintedGlassBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlantBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WeatheringCopper",
            "XXX.level.block.WeatheringCopperFullBlock",
            "XXX.level.block.WeatheringCopperStairBlock",
            "XXX.level.block.WeepingVinesBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BellBlockEntity$ResonationEndAction",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.ChestLidController",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.ContainerOpenersCounter",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity$1",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.SculkSensorBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.StateHolder$1",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.DripstoneThickness",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunk$BoundTickingBlockEntity",
            "XXX.level.chunk.LevelChunk$RebindableTickingBlockEntityWrapper",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.OldChunkStorage$1",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.structure.OceanRuinPieces$1",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.RuinedPortalPiece$Properties",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
            "XXX.levelgen.structure.StrongholdPieces$1",
            "XXX.levelgen.structure.StrongholdPieces$3",
            "XXX.levelgen.structure.StrongholdPieces$FillerCorridor",
            "XXX.levelgen.structure.StrongholdPieces$LeftTurn",
            "XXX.levelgen.structure.StrongholdPieces$PieceWeight",
            "XXX.levelgen.structure.StrongholdPieces$PrisonHall",
            "XXX.levelgen.structure.StrongholdPieces$RoomCrossing",
            "XXX.levelgen.structure.StrongholdPieces$StairsDown",
            "XXX.levelgen.structure.StrongholdPieces$Straight",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece",
            "XXX.levelgen.structure.StrongholdPieces$Turn",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.math.Matrix3f \u001b[2;32m+17M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.mojang.math.Vector4f \u001b[2;32m+11M\u001b[0m",
          "XXX.minecraft.core.Cursor3D \u001b[2;32m+4P\u001b[0m",
          "XXX.minecraft.core.IdMapper \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.core.QuartPos \u001b[2;32m+3P\u001b[0m",
          "XXX.minecraft.core.SectionPos \u001b[2;32m+17P\u001b[0m",
          "XXX.core.particles.ParticleTypes \u001b[2;32m+1P\u001b[0m",
          "XXX.data.models.BlockModelGenerators \u001b[2;32m+1M\u001b[0m",
          "XXX.data.worldgen.BiomeDefaultFeatures \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.worldgen.Features$States \u001b[2;32m+1P\u001b[0m",
          "XXX.gametest.framework.GameTestServer \u001b[2;32m+1P\u001b[0m",
          "XXX.gametest.framework.StructureUtils \u001b[2;32m+2P\u001b[0m",
          "XXX.gametest.framework.TestCommand \u001b[2;32m+9P\u001b[0m",
          "XXX.minecraft.locale.Language \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.ListTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.LongArrayTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.LongTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.LongTag$Cache \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.nbt.SnbtPrinterTagVisitor \u001b[2;32m+7P\u001b[0m",
          "XXX.minecraft.nbt.Tag \u001b[2;32m+19P\u001b[0m",
          "XXX.minecraft.nbt.TextComponentTagVisitor \u001b[2;32m+8P\u001b[0m",
          "XXX.minecraft.network.Varint21LengthFieldPrepender \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundBossEventPacket \u001b[2;32m+3P\u001b[0m",
          "XXX.protocol.game.ClientboundCommandsPacket \u001b[2;32m+7P\u001b[0m",
          "XXX.protocol.game.ClientboundContainerSetSlotPacket \u001b[2;32m+2P\u001b[0m",
          "XXX.protocol.game.ClientboundCustomPayloadPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundGameEventPacket \u001b[2;32m+5P\u001b[0m",
          "XXX.protocol.game.ClientboundMoveEntityPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundSetObjectivePacket \u001b[2;32m+3P\u001b[0m",
          "XXX.protocol.game.ClientboundSetPlayerTeamPacket \u001b[2;32m+7P\u001b[0m",
          "XXX.protocol.game.ClientboundStopSoundPacket \u001b[2;32m+2P\u001b[0m",
          "XXX.protocol.game.ClientboundUpdateMobEffectPacket \u001b[2;32m+3P\u001b[0m",
          "XXX.protocol.game.ServerboundClientInformationPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ServerboundPlayerInputPacket \u001b[2;32m+2P\u001b[0m",
          "XXX.protocol.game.ServerboundSignUpdatePacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.handshake.ClientIntentionPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.login.ClientboundCustomQueryPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.login.ServerboundCustomQueryPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.status.ServerStatus \u001b[2;32m+2P\u001b[0m",
          "XXX.network.syncher.SynchedEntityData \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.util.LinearCongruentialGenerator \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.util.ParticleUtils \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.minecraft.util.StringDecomposer \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.util.TimeUtil \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.world.Container \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.world.Snooper \u001b[2;32m+3P\u001b[0m",
          "XXX.world.damagesource.CombatTracker \u001b[2;32m+2P\u001b[0m",
          "XXX.world.entity.AgeableMob \u001b[2;32m+2P\u001b[0m",
          "XXX.world.entity.AreaEffectCloud \u001b[2;32m+2P\u001b[0m",
          "XXX.world.entity.EntityType \u001b[2;32m+3P\u001b[0m",
          "XXX.world.entity.ExperienceOrb \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+5P\u001b[0m",
          "XXX.world.entity.ItemBasedSteering \u001b[2;32m+2P\u001b[0m",
          "XXX.world.entity.LightningBolt \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.Pose \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.AcquirePoi \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.behavior.AnimalMakeLove \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.behavior.PlayTagWithOtherKids \u001b[2;32m+6P\u001b[0m",
          "XXX.ai.behavior.RingBell \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.SetClosestHomeAsWalkTarget \u001b[2;32m+4P\u001b[0m",
          "XXX.ai.behavior.SetHiddenState \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.SleepInBed \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.StopAttackingIfTargetInvalid \u001b[2;32m+6M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.StrollAroundPoi \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.behavior.TradeWithVillager \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.ValidateNearbyPoi \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.VillageBoundRandomStroll \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.VillagerGoalPackages \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.control.BodyRotationControl \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.goal.EatBlockGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.FollowFlockLeaderGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.FollowOwnerGoal \u001b[2;32m+4P\u001b[0m",
          "XXX.ai.goal.GoalSelector \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.LlamaFollowCaravanGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.MoveBackToVillageGoal \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.sensing.NearestItemSensor \u001b[2;32m+3P\u001b[0m",
          "XXX.animal.horse.Llama \u001b[2;32m+2P\u001b[0m",
          "XXX.enderdragon.phases.DragonSittingAttackingPhase \u001b[2;32m+1P\u001b[0m",
          "XXX.enderdragon.phases.DragonSittingScanningPhase \u001b[2;32m+4P\u001b[0m",
          "XXX.entity.decoration.ArmorStand \u001b[2;32m+12P\u001b[0m",
          "XXX.entity.decoration.LeashFenceKnotEntity \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.item.PrimedTnt \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Drowned \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.EnderMan \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.monster.Enemy \u001b[2;32m+6P\u001b[0m",
          "XXX.entity.monster.Illusioner \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.monster.Phantom \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Shulker \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+8P\u001b[0m",
          "XXX.entity.monster.Skeleton \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Strider \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.monster.Vex \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.monster.Zombie \u001b[2;32m+5P\u001b[0m",
          "XXX.entity.monster.ZombifiedPiglin \u001b[2;32m+4P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.monster.hoglin.HoglinAi \u001b[2;32m+15P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.monster.piglin.AbstractPiglin \u001b[2;32m+1P\u001b[0m",
          "XXX.monster.piglin.PiglinAi \u001b[2;32m+35P\u001b[0m \u001b[2;31m-6P\u001b[0m",
          "XXX.monster.piglin.PiglinBrute \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.npc.CatSpawner \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.npc.Villager \u001b[2;32m+10P\u001b[0m",
          "XXX.entity.npc.VillagerTrades \u001b[2;32m+14P\u001b[0m",
          "XXX.entity.player.Inventory \u001b[2;32m+5P\u001b[0m",
          "XXX.entity.projectile.AbstractArrow \u001b[2;32m+4P\u001b[0m",
          "XXX.entity.projectile.Arrow \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.projectile.EvokerFangs \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.projectile.FishingHook \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.projectile.ThrownPotion \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.raid.Raid \u001b[2;32m+21P\u001b[0m",
          "XXX.entity.vehicle.AbstractMinecart \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.vehicle.MinecartCommandBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.vehicle.MinecartTNT \u001b[2;32m+1P\u001b[0m",
          "XXX.world.food.FoodConstants \u001b[2;32m+26P\u001b[0m",
          "XXX.world.inventory.AnvilMenu \u001b[2;32m+9P\u001b[0m",
          "XXX.world.inventory.BeaconMenu \u001b[2;32m+7P\u001b[0m",
          "XXX.world.inventory.BrewingStandMenu \u001b[2;32m+10P\u001b[0m",
          "XXX.world.inventory.CartographyTableMenu \u001b[2;32m+7P\u001b[0m",
          "XXX.world.inventory.ChestMenu \u001b[2;32m+1P\u001b[0m",
          "XXX.world.inventory.CraftingMenu \u001b[2;32m+7P\u001b[0m",
          "XXX.world.inventory.HopperMenu \u001b[2;32m+1P\u001b[0m",
          "XXX.world.inventory.InventoryMenu \u001b[2;32m+11P\u001b[0m",
          "XXX.world.inventory.LecternMenu \u001b[2;32m+6P\u001b[0m",
          "XXX.world.inventory.LoomMenu \u001b[2;32m+4P\u001b[0m",
          "XXX.world.inventory.StonecutterMenu \u001b[2;32m+6P\u001b[0m",
          "XXX.world.item.BlockItem \u001b[2;32m+2P\u001b[0m",
          "XXX.world.item.BoneMealItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.BundleItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.CompassItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.DyeableLeatherItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.EnchantedBookItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.HoneyBottleItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.HorseArmorItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.Items \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.world.item.MapItem \u001b[2;32m+4P\u001b[0m",
          "XXX.world.item.PickaxeItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.PotionItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.ShieldItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.TridentItem \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.WrittenBookItem \u001b[2;32m+13P\u001b[0m",
          "XXX.item.alchemy.PotionBrewing \u001b[2;32m+1P\u001b[0m",
          "XXX.item.alchemy.PotionUtils \u001b[2;32m+4P\u001b[0m",
          "XXX.item.crafting.ShapedRecipe \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.item.enchantment.DamageEnchantment \u001b[2;32m+3P\u001b[0m",
          "XXX.world.level.BlockGetter \u001b[2;32m+1M\u001b[0m",
          "XXX.world.level.CommonLevelAccessor \u001b[2;32m+1M\u001b[0m",
          "XXX.world.level.GameRules \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.GameType \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.LevelSimulatedReader \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.NaturalSpawner \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.world.level.SpawnData \u001b[2;32m+2P\u001b[0m",
          "XXX.level.biome.FuzzyOffsetBiomeZoomer \u001b[2;32m+3P\u001b[0m",
          "XXX.level.biome.MobSpawnSettings \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.level.biome.MobSpawnSettings$Builder \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.biome.MobSpawnSettings$SpawnerData \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.biome.TheEndBiomeSource \u001b[2;32m+3P\u001b[0m",
          "XXX.level.block.AbstractCauldronBlock \u001b[2;32m+5P\u001b[0m",
          "XXX.level.block.AttachedStemBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BambooBlock \u001b[2;32m+8P\u001b[0m",
          "XXX.level.block.BaseCoralPlantBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.BedBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.BeehiveBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.BellBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BigDripleafBlock \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+6P\u001b[0m",
          "XXX.level.block.Block \u001b[2;32m+15P\u001b[0m",
          "XXX.level.block.Blocks \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CakeBlock \u001b[2;32m+3P\u001b[0m",
          "XXX.level.block.CandleBlock \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.CaveVinesBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.ChainBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.ChangeOverTimeBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.ConduitBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CropBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.DetectorRailBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.DoorBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.FarmBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.FireBlock \u001b[2;32m+9P\u001b[0m",
          "XXX.level.block.FlowerBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.FrostedIceBlock \u001b[2;32m+3P\u001b[0m",
          "XXX.level.block.LeavesBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.LeverBlock \u001b[2;32m+3P\u001b[0m",
          "XXX.level.dimension.DimensionType \u001b[2;32m+1P\u001b[0m",
          "XXX.dimension.end.EndDragonFight \u001b[2;32m+8P\u001b[0m",
          "XXX.level.gameevent.GameEvent \u001b[2;32m+1P\u001b[0m",
          "XXX.level.levelgen.Aquifer \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+11P\u001b[0m",
          "XXX.level.levelgen.Beardifier \u001b[2;32m+2P\u001b[0m",
          "XXX.level.levelgen.Decoratable \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.levelgen.NoiseBasedChunkGenerator \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.levelgen.NoiseSampler \u001b[2;32m+1P\u001b[0m",
          "XXX.level.levelgen.VerticalAnchor$AboveBottom \u001b[2;32m+1M\u001b[0m",
          "XXX.level.levelgen.VerticalAnchor$BelowTop \u001b[2;32m+1M\u001b[0m",
          "XXX.levelgen.carver.CanyonCarverConfiguration \u001b[2;32m+6M\u001b[0m \u001b[2;31m-13M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-10P\u001b[0m",
          "XXX.levelgen.feature.BasaltColumnsFeature \u001b[2;32m+4P\u001b[0m",
          "XXX.levelgen.feature.BuriedTreasureFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.EndCityFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.EndPodiumFeature \u001b[2;32m+4P\u001b[0m",
          "XXX.levelgen.feature.HugeFungusFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.IglooFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.JigsawFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.JunglePyramidFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.LargeDripstoneFeature$WindOffsetter \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.MineshaftFeature$MineShaftStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.NetherFortressFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.RuinedPortalFeature \u001b[2;32m+7P\u001b[0m",
          "XXX.levelgen.feature.SpikeFeature \u001b[2;32m+2P\u001b[0m",
          "XXX.levelgen.feature.StrongholdFeature$StrongholdStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.StructureFeature$StructureStartFactory \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.SwamplandHutFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.levelgen.feature.TreeFeature \u001b[2;32m+7M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.VoidStartPlatformFeature \u001b[2;32m+2P\u001b[0m",
          "XXX.feature.configurations.CountConfiguration \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.DiskConfiguration \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.GrowingPlantConfiguration \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.LargeDripstoneConfiguration \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-5P\u001b[0m",
          "XXX.feature.foliageplacers.AcaciaFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.BushFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.FancyFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.foliageplacers.MegaJungleFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.PineFoliagePlacer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.foliageplacers.SpruceFoliagePlacer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.stateproviders.WeightedStateProvider \u001b[2;32m+4M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.treedecorators.AlterGroundDecorator \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.feature.treedecorators.CocoaDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.treedecorators.TreeDecorator \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.treedecorators.TrunkVineDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.trunkplacers.BendingTrunkPlacer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.trunkplacers.FancyTrunkPlacer \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+4P\u001b[0m",
          "XXX.feature.trunkplacers.ForkingTrunkPlacer \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.trunkplacers.MegaJungleTrunkPlacer \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.trunkplacers.TrunkPlacer \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.structure.EndCityPieces \u001b[2;32m+8M\u001b[0m \u001b[2;31m-10M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.levelgen.structure.IglooPieces$IglooPiece \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftCrossing \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftRoom \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$BridgeCrossing \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$BridgeStraight \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorTBalconyPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorCrossingPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleStalkRoom \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$NetherBridgePiece \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$RoomCrossing \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherFossilFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NetherFossilPieces$NetherFossilPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.levelgen.structure.StructureStart \u001b[2;32m+10M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.structure.WoodlandMansionPieces$MansionGrid \u001b[2;32m+16P\u001b[0m",
          "XXX.levelgen.structure.WoodlandMansionPieces$WoodlandMansionPiece \u001b[2;32m+4M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.structure.templatesystem.StructureManager \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.surfacebuilders.DefaultSurfaceBuilder \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.synth.PerlinNoise \u001b[2;32m+1P\u001b[0m",
          "XXX.level.lighting.DataLayerStorageMap \u001b[2;32m+1P\u001b[0m",
          "XXX.level.lighting.FlatDataLayer \u001b[2;32m+1P\u001b[0m",
          "XXX.level.lighting.LayerLightSectionStorage \u001b[2;32m+3P\u001b[0m",
          "XXX.level.lighting.LevelLightEngine \u001b[2;32m+2P\u001b[0m",
          "XXX.level.material.FlowingFluid \u001b[2;32m+1P\u001b[0m",
          "XXX.level.material.LavaFluid \u001b[2;32m+1P\u001b[0m",
          "XXX.newbiome.layer.Layers \u001b[2;32m+6P\u001b[0m",
          "XXX.level.pathfinder.WalkNodeEvaluator \u001b[2;32m+1P\u001b[0m",
          "XXX.level.portal.PortalForcer \u001b[2;32m+13P\u001b[0m",
          "XXX.level.portal.PortalShape \u001b[2;32m+4P\u001b[0m",
          "XXX.level.redstone.Redstone \u001b[2;32m+3P\u001b[0m",
          "XXX.saveddata.maps.MapIndex \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.McRegionUpgrader \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.PrimaryLevelData \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.WorldData \u001b[2;32m+2P\u001b[0m",
          "XXX.providers.nbt.ContextNbtProvider \u001b[2;32m+1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Matrix3f",
        "differences": {
          "added": [],
          "removed": [
            "Matrix3f createScaleMatrix(float,float,float)",
            "void sortSingularValues(Matrix3f,Quaternion)",
            "int bufferIndex(int,int)",
            "void load(FloatBuffer)",
            "void loadTransposed(FloatBuffer)",
            "void load(FloatBuffer,boolean)",
            "void store(FloatBuffer)",
            "void storeTransposed(FloatBuffer)",
            "void store(FloatBuffer,boolean)",
            "float adjugateAndDet()",
            "float determinant()",
            "boolean invert()",
            "void mul(Quaternion)",
            "void mul(float)",
            "void add(Matrix3f)",
            "void sub(Matrix3f)",
            "float trace()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Vector4f",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(Vector3f)",
            "float w()",
            "void mul(float)",
            "void mul(Vector3f)",
            "void set(float,float,float,float)",
            "void add(float,float,float,float)",
            "float dot(Vector4f)",
            "boolean normalize()",
            "void transform(Quaternion)",
            "void perspectiveDivide()",
            "void lerp(Vector4f,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.models.BlockModelGenerators",
        "differences": {
          "added": [],
          "removed": [
            "void createLightBlockItems()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.BiomeDefaultFeatures",
        "differences": {
          "added": [
            "void ambientSpawns(MobSpawnSettings$Builder)"
          ],
          "removed": [
            "void caveSpawns(MobSpawnSettings$Builder)",
            "void caveWaterSpawns(MobSpawnSettings$Builder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.ParticleUtils",
        "differences": {
          "added": [
            "void spawnParticlesOnBlockFaces(Level,BlockPos,ParticleOptions,IntRange)",
            "void spawnParticlesAlongAxis(Direction$Axis,Level,BlockPos,double,ParticleOptions,IntRange)"
          ],
          "removed": [
            "void spawnParticlesOnBlockFaces(Level,BlockPos,ParticleOptions,UniformInt)",
            "void spawnParticlesAlongAxis(Direction$Axis,Level,BlockPos,double,ParticleOptions,UniformInt)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.TimeUtil",
        "differences": {
          "added": [
            "IntRange rangeOfSeconds(int,int)"
          ],
          "removed": [
            "UniformInt rangeOfSeconds(int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ExperienceOrb",
        "differences": {
          "added": [],
          "removed": [
            "int repairPlayerItems(Player,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.StopAttackingIfTargetInvalid",
        "differences": {
          "added": [
            "boolean lambda$new$0(LivingEntity)"
          ],
          "removed": [
            "void <init>(Predicate,Consumer)",
            "void <init>(Consumer)",
            "void lambda$new$3(Mob)",
            "boolean lambda$new$2(LivingEntity)",
            "boolean lambda$new$1(LivingEntity)",
            "void lambda$new$0(Mob)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Shulker",
        "differences": {
          "added": [],
          "removed": [
            "void setAttachFace(Direction)",
            "void onSyncedDataUpdated(EntityDataAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.Skeleton",
        "differences": {
          "added": [],
          "removed": [
            "boolean isShaking()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.Items",
        "differences": {
          "added": [],
          "removed": [
            "Item registerBlock(Block,CreativeModeTab,Block[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.ShapedRecipe",
        "differences": {
          "added": [
            "ItemStack itemFromJson(JsonObject)"
          ],
          "removed": [
            "ItemStack itemStackFromJson(JsonObject)",
            "Item itemFromJson(JsonObject)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.BlockGetter",
        "differences": {
          "added": [],
          "removed": [
            "Optional getBlockEntity(BlockPos,BlockEntityType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.CommonLevelAccessor",
        "differences": {
          "added": [],
          "removed": [
            "Optional getBlockEntity(BlockPos,BlockEntityType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.NaturalSpawner",
        "differences": {
          "added": [
            "List mobsAt(ServerLevel,StructureFeatureManager,ChunkGenerator,MobCategory,BlockPos,Biome)"
          ],
          "removed": [
            "WeightedRandomList mobsAt(ServerLevel,StructureFeatureManager,ChunkGenerator,MobCategory,BlockPos,Biome)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MobSpawnSettings",
        "differences": {
          "added": [
            "List getMobs(MobCategory)",
            "List lambda$static$1(MobCategory)"
          ],
          "removed": [
            "WeightedRandomList getMobs(MobCategory)",
            "WeightedRandomList lambda$static$1(MobCategory)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MobSpawnSettings$Builder",
        "differences": {
          "added": [
            "List lambda$build$2(Map$Entry)"
          ],
          "removed": [
            "WeightedRandomList lambda$build$2(Map$Entry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MobSpawnSettings$SpawnerData",
        "differences": {
          "added": [
            "App lambda$static$4(RecordCodecBuilder$Instance)",
            "Integer lambda$null$3(MobSpawnSettings$SpawnerData)"
          ],
          "removed": [
            "void <init>(EntityType,Weight,int,int)",
            "App lambda$static$3(RecordCodecBuilder$Instance)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BigDripleafBlock",
        "differences": {
          "added": [
            "VoxelShape getStemShape(BlockState)",
            "VoxelShape getLeafShape(BlockState)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CandleBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean canBeLit(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.Aquifer",
        "differences": {
          "added": [],
          "removed": [
            "boolean isLavaLevel(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.Decoratable",
        "differences": {
          "added": [
            "Object count(UniformInt)"
          ],
          "removed": [
            "Object count(IntProvider)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator",
        "differences": {
          "added": [
            "List getMobsAt(Biome,StructureFeatureManager,MobCategory,BlockPos)"
          ],
          "removed": [
            "WeightedRandomList getMobsAt(Biome,StructureFeatureManager,MobCategory,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.VerticalAnchor$AboveBottom",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.VerticalAnchor$BelowTop",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration",
        "differences": {
          "added": [
            "void <init>(float,CarverDebugSettings,VerticalAnchor,VerticalAnchor,UniformInt,FloatProvider,FloatProvider,FloatProvider,int,FloatProvider,float,float)",
            "VerticalAnchor getBottomInclusive()",
            "VerticalAnchor getTopInclusive()",
            "UniformInt getYScale()",
            "FloatProvider getDistanceFactor()",
            "FloatProvider getVerticalRotation()",
            "FloatProvider getThickness()",
            "int getWidthSmoothness()",
            "FloatProvider getHorizontalRadiusFactor()",
            "float getVerticalRadiusDefaultFactor()",
            "float getVerticalRadiusCenterFactor()",
            "App lambda$static$1(RecordCodecBuilder$Instance)",
            "Float lambda$null$0(CanyonCarverConfiguration)"
          ],
          "removed": [
            "void <init>(float,HeightProvider,FloatProvider,VerticalAnchor,CarverDebugSettings,FloatProvider,CanyonCarverConfiguration$CanyonShapeConfiguration)",
            "void <init>(CarverConfiguration,FloatProvider,CanyonCarverConfiguration$CanyonShapeConfiguration)",
            "App lambda$static$3(RecordCodecBuilder$Instance)",
            "CanyonCarverConfiguration$CanyonShapeConfiguration lambda$null$2(CanyonCarverConfiguration)",
            "FloatProvider lambda$null$1(CanyonCarverConfiguration)",
            "CarverConfiguration lambda$null$0(CanyonCarverConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.IglooFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.JigsawFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(JigsawFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(JigsawFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.JunglePyramidFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.LargeDripstoneFeature$WindOffsetter",
        "differences": {
          "added": [
            "void <init>(int,Random,FloatProvider)",
            "void <init>(int,Random,FloatProvider,LargeDripstoneFeature$1)"
          ],
          "removed": [
            "void <init>(int,Random,FloatProvider)",
            "void <init>(int,Random,FloatProvider,LargeDripstoneFeature$1)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.MineshaftFeature$MineShaftStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherFortressFeature",
        "differences": {
          "added": [
            "List getSpecialEnemies()"
          ],
          "removed": [
            "WeightedRandomList getSpecialEnemies()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature",
        "differences": {
          "added": [
            "List getSpecialEnemies()"
          ],
          "removed": [
            "WeightedRandomList getSpecialEnemies()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.StrongholdFeature$StrongholdStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SwamplandHutFeature",
        "differences": {
          "added": [
            "List getSpecialEnemies()",
            "List getSpecialAnimals()"
          ],
          "removed": [
            "WeightedRandomList getSpecialEnemies()",
            "WeightedRandomList getSpecialAnimals()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.TreeFeature",
        "differences": {
          "added": [
            "boolean doPlace(WorldGenLevel,Random,BlockPos,Set,Set,BoundingBox,TreeConfiguration)",
            "void lambda$place$7(WorldGenLevel,Random,List,List,Set,BoundingBox,TreeDecorator)",
            "void lambda$doPlace$6(TreeConfiguration,WorldGenLevel,Random,int,int,int,Set,BoundingBox,FoliagePlacer$FoliageAttachment)"
          ],
          "removed": [
            "boolean doPlace(WorldGenLevel,Random,BlockPos,BiConsumer,BiConsumer,TreeConfiguration)",
            "Boolean lambda$place$11(WorldGenLevel,Set,Set,BoundingBox)",
            "void lambda$place$10(WorldGenLevel,BiConsumer,Random,List,List,TreeDecorator)",
            "void lambda$place$9(Set,WorldGenLevel,BlockPos,BlockState)",
            "void lambda$place$8(Set,WorldGenLevel,BlockPos,BlockState)",
            "void lambda$place$7(Set,WorldGenLevel,BlockPos,BlockState)",
            "void lambda$doPlace$6(TreeConfiguration,WorldGenLevel,BiConsumer,Random,int,int,int,FoliagePlacer$FoliageAttachment)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration",
        "differences": {
          "added": [
            "void <init>(UniformInt)",
            "UniformInt count()"
          ],
          "removed": [
            "void <init>(IntProvider)",
            "IntProvider count()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration",
        "differences": {
          "added": [
            "void <init>(BlockState,UniformInt,int,List)",
            "UniformInt lambda$null$1(DiskConfiguration)"
          ],
          "removed": [
            "void <init>(BlockState,IntProvider,int,List)",
            "IntProvider lambda$null$1(DiskConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.GrowingPlantConfiguration",
        "differences": {
          "added": [
            "void <init>(WeightedList,Direction,BlockStateProvider,BlockStateProvider,boolean)",
            "void <init>(UniformInt,Direction,BlockStateProvider,BlockStateProvider,boolean)",
            "WeightedList lambda$null$0(GrowingPlantConfiguration)"
          ],
          "removed": [
            "void <init>(SimpleWeightedRandomList,Direction,BlockStateProvider,BlockStateProvider,boolean)",
            "SimpleWeightedRandomList lambda$null$0(GrowingPlantConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration",
        "differences": {
          "added": [
            "void <init>(int,UniformInt,FloatProvider,float,FloatProvider,FloatProvider,FloatProvider,int,float)",
            "FloatProvider lambda$null$6(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$5(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$4(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$2(LargeDripstoneConfiguration)",
            "UniformInt lambda$null$1(LargeDripstoneConfiguration)"
          ],
          "removed": [
            "void <init>(int,IntProvider,FloatProvider,float,FloatProvider,FloatProvider,FloatProvider,int,float)",
            "FloatProvider lambda$null$6(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$5(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$4(LargeDripstoneConfiguration)",
            "FloatProvider lambda$null$2(LargeDripstoneConfiguration)",
            "IntProvider lambda$null$1(LargeDripstoneConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,int)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,int)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,int)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,int)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
        "differences": {
          "added": [
            "BlockPos foliagePos()"
          ],
          "removed": [
            "BlockPos pos()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,int)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,int)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)",
            "UniformInt lambda$null$0(PineFoliagePlacer)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)",
            "IntProvider lambda$null$0(PineFoliagePlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)",
            "UniformInt lambda$null$0(SpruceFoliagePlacer)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)",
            "IntProvider lambda$null$0(SpruceFoliagePlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider",
        "differences": {
          "added": [
            "DataResult create(WeightedList)",
            "void <init>(WeightedList)",
            "void <init>()",
            "WeightedStateProvider add(BlockState,int)",
            "WeightedList lambda$static$0(WeightedStateProvider)"
          ],
          "removed": [
            "DataResult create(SimpleWeightedRandomList)",
            "void <init>(SimpleWeightedRandomList)",
            "void <init>(SimpleWeightedRandomList$Builder)",
            "SimpleWeightedRandomList lambda$static$0(WeightedStateProvider)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator",
        "differences": {
          "added": [
            "void place(WorldGenLevel,Random,List,List,Set,BoundingBox)",
            "void placeCircle(LevelSimulatedRW,Random,BlockPos)",
            "void placeBlockAt(LevelSimulatedRW,Random,BlockPos)",
            "void lambda$place$2(WorldGenLevel,Random,BlockPos)"
          ],
          "removed": [
            "void place(LevelSimulatedReader,BiConsumer,Random,List,List)",
            "void placeCircle(LevelSimulatedReader,BiConsumer,Random,BlockPos)",
            "void placeBlockAt(LevelSimulatedReader,BiConsumer,Random,BlockPos)",
            "void lambda$place$2(LevelSimulatedReader,BiConsumer,Random,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator",
        "differences": {
          "added": [
            "void place(WorldGenLevel,Random,List,List,Set,BoundingBox)",
            "void lambda$place$2(Random,WorldGenLevel,Set,BoundingBox,BlockPos)"
          ],
          "removed": [
            "void place(LevelSimulatedReader,BiConsumer,Random,List,List)",
            "void lambda$place$2(Random,LevelSimulatedReader,BiConsumer,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator",
        "differences": {
          "added": [
            "void placeVine(LevelWriter,BlockPos,BooleanProperty,Set,BoundingBox)",
            "void setBlock(LevelWriter,BlockPos,BlockState,Set,BoundingBox)"
          ],
          "removed": [
            "void placeVine(BiConsumer,BlockPos,BooleanProperty)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator",
        "differences": {
          "added": [
            "void place(WorldGenLevel,Random,List,List,Set,BoundingBox)",
            "void lambda$place$1(Random,WorldGenLevel,Set,BoundingBox,BlockPos)"
          ],
          "removed": [
            "void place(LevelSimulatedReader,BiConsumer,Random,List,List)",
            "void lambda$place$1(Random,LevelSimulatedReader,BiConsumer,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer",
        "differences": {
          "added": [
            "void <init>(int,int,int,int,UniformInt)",
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "UniformInt lambda$null$1(BendingTrunkPlacer)"
          ],
          "removed": [
            "void <init>(int,int,int,int,IntProvider)",
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)",
            "IntProvider lambda$null$1(BendingTrunkPlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "boolean makeLimb(LevelSimulatedRW,Random,BlockPos,BlockPos,boolean,Set,BoundingBox,TreeConfiguration)",
            "void makeBranches(LevelSimulatedRW,Random,int,BlockPos,List,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)",
            "boolean makeLimb(LevelSimulatedReader,BiConsumer,Random,BlockPos,BlockPos,boolean,TreeConfiguration)",
            "void makeBranches(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,List,TreeConfiguration)",
            "BlockState lambda$makeLimb$1(BlockPos,BlockPos,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer",
        "differences": {
          "added": [
            "void setBlock(LevelWriter,BlockPos,BlockState,BoundingBox)",
            "void setDirtAt(LevelSimulatedRW,Random,BlockPos,TreeConfiguration)",
            "boolean placeLog(LevelSimulatedRW,Random,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "void placeLogIfFree(LevelSimulatedRW,Random,BlockPos$MutableBlockPos,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "void setDirtAt(LevelSimulatedReader,BiConsumer,Random,BlockPos,TreeConfiguration)",
            "boolean placeLog(LevelSimulatedReader,BiConsumer,Random,BlockPos,TreeConfiguration)",
            "boolean placeLog(LevelSimulatedReader,BiConsumer,Random,BlockPos,TreeConfiguration,Function)",
            "void placeLogIfFree(LevelSimulatedReader,BiConsumer,Random,BlockPos$MutableBlockPos,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.EndCityPieces",
        "differences": {
          "added": [
            "StructurePlaceSettings access$000()",
            "StructurePlaceSettings access$100()",
            "EndCityPieces$EndCityPiece access$200(StructureManager,EndCityPieces$EndCityPiece,BlockPos,String,Rotation,boolean)",
            "EndCityPieces$EndCityPiece access$300(List,EndCityPieces$EndCityPiece)",
            "EndCityPieces$SectionGenerator access$400()",
            "boolean access$500(StructureManager,EndCityPieces$SectionGenerator,int,EndCityPieces$EndCityPiece,BlockPos,List,Random)",
            "List access$600()",
            "EndCityPieces$SectionGenerator access$800()",
            "EndCityPieces$SectionGenerator access$900()",
            "List access$1000()"
          ],
          "removed": [
            "EndCityPieces$EndCityPiece access$000(StructureManager,EndCityPieces$EndCityPiece,BlockPos,String,Rotation,boolean)",
            "EndCityPieces$EndCityPiece access$100(List,EndCityPieces$EndCityPiece)",
            "EndCityPieces$SectionGenerator access$200()",
            "boolean access$300(StructureManager,EndCityPieces$SectionGenerator,int,EndCityPieces$EndCityPiece,BlockPos,List,Random)",
            "List access$400()",
            "EndCityPieces$SectionGenerator access$500()",
            "EndCityPieces$SectionGenerator access$600()",
            "List access$800()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.IglooPieces$IglooPiece",
        "differences": {
          "added": [
            "void loadTemplate(StructureManager)"
          ],
          "removed": [
            "StructurePlaceSettings makeSettings(Rotation,ResourceLocation)",
            "BlockPos makePosition(ResourceLocation,BlockPos,int)",
            "StructurePlaceSettings lambda$new$0(CompoundTag,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftCrossing",
        "differences": {
          "added": [
            "BoundingBox findCrossing(List,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,List,Random)"
          ],
          "removed": [
            "BoundingBox findCrossing(StructurePieceAccessor,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftRoom",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces",
        "differences": {
          "added": [
            "NetherBridgePieces$NetherBridgePiece findAndCreateBridgePieceFactory(NetherBridgePieces$PieceWeight,List,Random,int,int,int,Direction,int)",
            "NetherBridgePieces$NetherBridgePiece access$000(NetherBridgePieces$PieceWeight,List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "NetherBridgePieces$NetherBridgePiece findAndCreateBridgePieceFactory(NetherBridgePieces$PieceWeight,StructurePieceAccessor,Random,int,int,int,Direction,int)",
            "NetherBridgePieces$NetherBridgePiece access$000(NetherBridgePieces$PieceWeight,StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$BridgeCrossing",
        "differences": {
          "added": [
            "void <init>(Random,int,int)",
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$BridgeCrossing createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void <init>(int,int,Direction)",
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$BridgeCrossing createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$BridgeStraight",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$BridgeStraight createPiece(List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$BridgeStraight createPiece(StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleCorridorTBalconyPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleCorridorTBalconyPiece createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleCorridorTBalconyPiece createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorCrossingPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleSmallCorridorCrossingPiece createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleSmallCorridorCrossingPiece createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleSmallCorridorPiece createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleSmallCorridorPiece createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleStalkRoom",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleStalkRoom createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleStalkRoom createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$NetherBridgePiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,int)",
            "NetherBridgePieces$NetherBridgePiece generatePiece(NetherBridgePieces$StartPiece,List,List,Random,int,int,int,Direction,int)",
            "StructurePiece generateAndAddPiece(NetherBridgePieces$StartPiece,List,Random,int,int,int,Direction,int,boolean)",
            "StructurePiece generateChildForward(NetherBridgePieces$StartPiece,List,Random,int,int,boolean)",
            "StructurePiece generateChildLeft(NetherBridgePieces$StartPiece,List,Random,int,int,boolean)",
            "StructurePiece generateChildRight(NetherBridgePieces$StartPiece,List,Random,int,int,boolean)"
          ],
          "removed": [
            "void <init>(StructurePieceType,int,BoundingBox)",
            "NetherBridgePieces$NetherBridgePiece generatePiece(NetherBridgePieces$StartPiece,List,StructurePieceAccessor,Random,int,int,int,Direction,int)",
            "StructurePiece generateAndAddPiece(NetherBridgePieces$StartPiece,StructurePieceAccessor,Random,int,int,int,Direction,int,boolean)",
            "StructurePiece generateChildForward(NetherBridgePieces$StartPiece,StructurePieceAccessor,Random,int,int,boolean)",
            "StructurePiece generateChildLeft(NetherBridgePieces$StartPiece,StructurePieceAccessor,Random,int,int,boolean)",
            "StructurePiece generateChildRight(NetherBridgePieces$StartPiece,StructurePieceAccessor,Random,int,int,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$RoomCrossing",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$RoomCrossing createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$RoomCrossing createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherFossilFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherFossilPieces$NetherFossilPiece",
        "differences": {
          "added": [
            "void loadTemplate(StructureManager)"
          ],
          "removed": [
            "StructurePlaceSettings makeSettings(Rotation)",
            "StructurePlaceSettings lambda$new$0(CompoundTag,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StructureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)",
            "void calculateBoundingBox()",
            "void lambda$createTag$0(CompoundTag,Tag)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)",
            "void offsetPiecesVertically(int)",
            "void invalidateCache()",
            "void addPiece(StructurePiece)",
            "StructurePiece findCollisionPiece(BoundingBox)",
            "void clearPieces()",
            "boolean hasNoPieces()",
            "StructurePiece findCollisionPiece(List,BoundingBox)",
            "boolean isInsidePiece(BlockPos)",
            "IllegalStateException lambda$getBoundingBox$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.WoodlandMansionPieces$WoodlandMansionPiece",
        "differences": {
          "added": [
            "void loadTemplate(StructureManager)"
          ],
          "removed": [
            "ResourceLocation makeTemplateLocation()",
            "ResourceLocation makeLocation(String)",
            "StructurePlaceSettings makeSettings(Mirror,Rotation)",
            "StructurePlaceSettings lambda$new$0(CompoundTag,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.blaze3d.audio.Library",
            "XXX.blaze3d.audio.Library$ChannelPool",
            "XXX.blaze3d.audio.Library$Pool",
            "XXX.blaze3d.audio.OggAudioStream",
            "XXX.blaze3d.audio.OpenAlUtil",
            "XXX.blaze3d.platform.DebugMemoryUntracker",
            "XXX.blaze3d.platform.GLX",
            "XXX.blaze3d.shaders.AbstractUniform",
            "XXX.blaze3d.shaders.Effect",
            "XXX.blaze3d.shaders.EffectProgram$1",
            "XXX.blaze3d.shaders.Program$Type",
            "XXX.blaze3d.shaders.Shader",
            "XXX.blaze3d.vertex.BufferBuilder",
            "XXX.blaze3d.vertex.BufferBuilder$DrawState",
            "XXX.blaze3d.vertex.BufferUploader",
            "XXX.blaze3d.vertex.DefaultVertexFormat",
            "XXX.blaze3d.vertex.PoseStack",
            "XXX.blaze3d.vertex.PoseStack$Pose",
            "XXX.blaze3d.vertex.Tesselator",
            "XXX.blaze3d.vertex.VertexConsumer",
            "XXX.blaze3d.vertex.VertexFormat$1",
            "XXX.blaze3d.vertex.VertexFormat$Mode",
            "XXX.blaze3d.vertex.VertexFormatElement$Type",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage$ClearState",
            "XXX.blaze3d.vertex.VertexMultiConsumer",
            "XXX.mojang.math.Matrix3f",
            "XXX.mojang.realmsclient.KeyCombo",
            "XXX.mojang.realmsclient.RealmsMainScreen$1",
            "XXX.mojang.realmsclient.RealmsMainScreen$3",
            "XXX.mojang.realmsclient.RealmsMainScreen$5",
            "XXX.mojang.realmsclient.RealmsMainScreen$Entry",
            "XXX.mojang.realmsclient.RealmsMainScreen$NewsButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionList",
            "XXX.mojang.realmsclient.RealmsMainScreen$ShowPopupButton",
            "XXX.mojang.realmsclient.Unit",
            "XXX.realmsclient.client.FileDownload$1",
            "XXX.realmsclient.client.FileDownload$ProgressListener",
            "XXX.realmsclient.client.FileUpload",
            "XXX.realmsclient.client.Ping",
            "XXX.realmsclient.client.RealmsClient",
            "XXX.realmsclient.client.RealmsClient$Environment",
            "XXX.realmsclient.client.RealmsError",
            "XXX.realmsclient.client.Request$Delete",
            "XXX.realmsclient.client.Request$Post",
            "XXX.realmsclient.client.UploadStatus",
            "XXX.realmsclient.exception.RealmsDefaultUncaughtExceptionHandler",
            "XXX.realmsclient.exception.RealmsServiceException",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.gui.screens.RealmsBackupScreen",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$1",
            "XXX.gui.screens.RealmsPendingInvitesScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$2",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$RejectRowButton",
            "XXX.gui.screens.RealmsPlayerScreen",
            "XXX.gui.screens.RealmsPlayerScreen$InvitedObjectSelectionList",
            "XXX.gui.screens.RealmsResetNormalWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$1",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$WorldSelectionList",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$1",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList",
            "XXX.gui.screens.RealmsSlotOptionsScreen",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen",
            "XXX.gui.screens.RealmsTermsScreen",
            "XXX.gui.screens.UploadResult",
            "XXX.gui.screens.UploadResult$Builder",
            "XXX.util.task.CloseServerTask",
            "XXX.util.task.DownloadTask",
            "XXX.util.task.LongRunningTask",
            "XXX.util.task.ResettingGeneratedWorldTask",
            "XXX.util.task.ResettingWorldTask",
            "XXX.util.task.SwitchMinigameTask",
            "XXX.util.task.WorldCreationTask",
            "XXX.screens.mco.package-info",
            "XXX.screens.multiplayer.SafetyScreen",
            "XXX.screens.multiplayer.ServerSelectionList$Entry",
            "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
            "XXX.screens.multiplayer.package-info",
            "XXX.screens.packs.PackSelectionModel",
            "XXX.screens.packs.PackSelectionModel$EntryBase",
            "XXX.screens.packs.PackSelectionModel$UnselectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen$Watcher",
            "XXX.screens.packs.TransferableSelectionList$PackEntry",
            "XXX.screens.recipebook.AbstractFurnaceRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe",
            "XXX.screens.recipebook.OverlayRecipeComponent",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton$Pos",
            "XXX.screens.recipebook.RecipeBookComponent",
            "XXX.screens.recipebook.RecipeBookTabButton",
            "XXX.screens.recipebook.RecipeCollection",
            "XXX.screens.recipebook.RecipeUpdateListener",
            "XXX.screens.recipebook.SmokingRecipeBookComponent",
            "XXX.screens.social.PlayerEntry",
            "XXX.screens.social.PlayerEntry$2",
            "XXX.screens.social.SocialInteractionsPlayerList",
            "XXX.screens.social.SocialInteractionsScreen$1",
            "XXX.screens.social.SocialInteractionsScreen$Page",
            "XXX.screens.stream.package-info",
            "XXX.client.map.Map$1",
            "XXX.client.map.Map$3",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.AxolotlModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BoatModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColorableAgeableListModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.GhastModel",
            "XXX.client.multiplayer.ClientPacketListener$1",
            "XXX.client.multiplayer.MultiPlayerGameMode",
            "XXX.client.multiplayer.ServerAddress",
            "XXX.client.multiplayer.ServerData$ServerPackStatus",
            "XXX.client.multiplayer.ServerStatusPinger",
            "XXX.client.multiplayer.ServerStatusPinger$2",
            "XXX.client.multiplayer.package-info",
            "XXX.client.particle.AshParticle",
            "XXX.client.particle.AttackSweepParticle",
            "XXX.client.particle.AttackSweepParticle$Provider",
            "XXX.client.particle.BarrierParticle$1",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.BlockRenderDispatcher$1",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElement$Deserializer",
            "XXX.block.model.BlockElementFace$Deserializer",
            "XXX.block.model.BlockFaceUV",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModel$GuiLight",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockModelDefinition$Deserializer",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemOverride",
            "XXX.block.model.ItemOverride$Predicate",
            "XXX.block.model.ItemOverrides$1",
            "XXX.block.model.ItemOverrides$PropertyMatcher",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.ItemTransforms$TransformType",
            "XXX.block.model.MultiVariant$Deserializer",
            "XXX.block.model.Variant$Deserializer",
            "XXX.model.multipart.Condition",
            "XXX.model.multipart.MultiPart",
            "XXX.model.multipart.OrCondition",
            "XXX.model.multipart.Selector$Deserializer",
            "XXX.block.model.package-info",
            "XXX.block.statemap.package-info",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZoglinRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.ElytraLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HorseMarkingLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SheepFurLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StrayClothingLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.renderer.item.ItemProperties$1",
            "XXX.renderer.item.ItemProperties$CompassWobble",
            "XXX.renderer.item.package-info",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlas$Preparations",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureAtlasSprite$FrameInfo",
            "XXX.renderer.texture.TextureAtlasSprite$InterpolationData",
            "XXX.renderer.texture.Tickable",
            "XXX.client.resources.AssetIndex",
            "XXX.client.resources.ClientPackSource$1",
            "XXX.client.resources.DefaultClientPackResources",
            "XXX.client.resources.DirectAssetIndex",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.PackResourcesAdapterV4",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$SkinTextureCallback",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.FormattedBidiReorder",
            "XXX.resources.language.LanguageInfo",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.AnimationMetadataSection$FrameOutput",
            "XXX.metadata.animation.VillagerMetaDataSection",
            "XXX.metadata.animation.VillagerMetadataSectionSerializer",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBakery$BlockStateDefinitionException",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Builder",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.resources.model.WeightedBakedModel$WeightedModel",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.LoopingAudioStream$1",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.tutorial.BundleTutorial",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.Tutorial$1",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CommandFunction",
            "XXX.minecraft.commands.CommandFunction$CommandEntry",
            "XXX.minecraft.commands.CommandFunction$FunctionEntry",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Serializer",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions$1",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.minecraft.obfuscate.DontObfuscateOrShrink",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsBridge",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsObjectSelectionList",
            "XXX.minecraft.realms.RealmsServerAddress",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.resources.RegistryDataPackCodec",
            "XXX.minecraft.resources.RegistryLookupCodec",
            "XXX.minecraft.resources.RegistryReadOps$1",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$MemoryMap",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerFunctionManager$QueuedCommand",
            "XXX.minecraft.server.ServerResources",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.package-info",
            "XXX.server.commands.AdvancementCommands$1",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$1",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$1",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure",
            "XXX.server.level.ChunkHolder$ChunkSaveDebug",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$2",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkTaskPriorityQueueSorter",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Message",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$ChunkTicketTracker",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$1",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel$1",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ServerPlayer$2",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenTickList",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.TextFilter",
            "XXX.server.network.TextFilter$FilteredText",
            "XXX.server.network.TextFilterClient$1",
            "XXX.server.network.TextFilterClient$PlayerContext",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.FolderPackResources",
            "XXX.server.packs.PackType",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.metadata.MetadataSectionSerializer",
            "XXX.metadata.pack.PackMetadataSectionSerializer",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.Pack$PackConstructor",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.packs.resources.SimpleReloadableResourceManager$FailingReloadInstance",
            "XXX.packs.resources.SimpleResource",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$1",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.SetTag",
            "XXX.minecraft.tags.StaticTagHelper$1",
            "XXX.minecraft.tags.StaticTags",
            "XXX.minecraft.tags.Tag$1",
            "XXX.minecraft.tags.Tag$BuilderEntry",
            "XXX.minecraft.tags.Tag$Entry",
            "XXX.minecraft.tags.Tag$OptionalElementEntry",
            "XXX.minecraft.tags.Tag$TagEntry",
            "XXX.minecraft.tags.TagCollection$1",
            "XXX.minecraft.tags.TagContainer",
            "XXX.minecraft.tags.TagContainer$Builder",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagManager$1",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.ClampedNormalFloat",
            "XXX.minecraft.util.ConstantFloat",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.FloatProvider",
            "XXX.minecraft.util.GlslPreprocessor$1",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.TrapezoidFloat",
            "XXX.minecraft.util.UniformFloat",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.WeighedRandom",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.SavedDataVillageCropFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.SwimStatsRenameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_7",
            "XXX.datafix.schemas.V1460$1",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$1",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.package-info",
            "XXX.profiling.registry.MeasurementCategory",
            "XXX.profiling.registry.Metric",
            "XXX.profiling.registry.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownTemptationTicks",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.WeightedList$1",
            "XXX.ai.behavior.WeightedList$WeightedEntry$1",
            "XXX.ai.goal.MoveIndoorsGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.PlayGoal",
            "XXX.ai.goal.TakeFlowerGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$1",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlHostileSensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HostilesSensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$AxolotlPathNavigation",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MelonBlock",
            "XXX.level.block.Mirror$1",
            "XXX.level.block.MultifaceBlock",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.OreBlock",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PressurePlateBlock$Sensitivity",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RodBlock$1",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.Rotation$1",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SporeBlossomBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StemGrownBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.SupportType$1",
            "XXX.level.block.SupportType$3",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrassBlock",
            "XXX.level.block.TintedGlassBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlantBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WeatheringCopper",
            "XXX.level.block.WeatheringCopperFullBlock",
            "XXX.level.block.WeatheringCopperStairBlock",
            "XXX.level.block.WeepingVinesBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BellBlockEntity$ResonationEndAction",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BlockEntityType$Builder",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.ChestLidController",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.ContainerOpenersCounter",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantmentTableBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity$1",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.SculkSensorBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$1",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.grower.AbstractMegaTreeGrower",
            "XXX.block.grower.AcaciaTreeGrower",
            "XXX.block.grower.DarkOakTreeGrower",
            "XXX.block.grower.OakTreeGrower",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonHeadBlock$1",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.StateHolder$1",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockMaterialPredicate",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.DripstoneThickness",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.Property",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkStatus",
            "XXX.level.chunk.ChunkStatus$GenerationTask",
            "XXX.level.chunk.ChunkStatus$SimpleGenerationTask",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.FeatureAccess",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunk$BoundTickingBlockEntity",
            "XXX.level.chunk.LevelChunk$RebindableTickingBlockEntityWrapper",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.OldDataLayer",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.ProtoTickList",
            "XXX.level.chunk.UpgradeData$1",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.OldChunkStorage$1",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.package-info",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.RuinedPortalPiece$Properties",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.ShipwreckPieces$ShipwreckPiece",
            "XXX.levelgen.structure.StrongholdPieces$1",
            "XXX.levelgen.structure.StrongholdPieces$3",
            "XXX.levelgen.structure.StrongholdPieces$FillerCorridor",
            "XXX.levelgen.structure.StrongholdPieces$LeftTurn",
            "XXX.levelgen.structure.StrongholdPieces$PieceWeight",
            "XXX.levelgen.structure.StrongholdPieces$PrisonHall",
            "XXX.levelgen.structure.StrongholdPieces$RoomCrossing",
            "XXX.levelgen.structure.StrongholdPieces$StairsDown",
            "XXX.levelgen.structure.StrongholdPieces$Straight",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece",
            "XXX.levelgen.structure.StrongholdPieces$Turn",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$1",
            "XXX.level.timers.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec3",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info"
          ],
          "removed": [
            "XXX.mojang.blaze3d.FieldsAreNonnullByDefault",
            "XXX.blaze3d.audio.Channel",
            "XXX.blaze3d.audio.Library$1",
            "XXX.blaze3d.audio.Library$CountingChannelPool",
            "XXX.blaze3d.audio.Listener",
            "XXX.blaze3d.audio.OggAudioStream$OutputConcat",
            "XXX.blaze3d.audio.SoundBuffer",
            "XXX.blaze3d.font.package-info",
            "XXX.blaze3d.platform.ClipboardManager",
            "XXX.blaze3d.platform.DisplayData",
            "XXX.blaze3d.platform.GlConst",
            "XXX.blaze3d.platform.package-info",
            "XXX.blaze3d.preprocessor.GlslPreprocessor$1",
            "XXX.blaze3d.preprocessor.package-info",
            "XXX.blaze3d.shaders.BlendMode",
            "XXX.blaze3d.shaders.EffectProgram",
            "XXX.blaze3d.shaders.Program",
            "XXX.blaze3d.shaders.ProgramManager",
            "XXX.blaze3d.shaders.Uniform",
            "XXX.blaze3d.systems.package-info",
            "XXX.blaze3d.vertex.BufferBuilder$1",
            "XXX.blaze3d.vertex.BufferBuilder$SortState",
            "XXX.blaze3d.vertex.BufferVertexConsumer",
            "XXX.blaze3d.vertex.DefaultedVertexConsumer",
            "XXX.blaze3d.vertex.PoseStack$1",
            "XXX.blaze3d.vertex.SheetedDecalTextureGenerator",
            "XXX.blaze3d.vertex.VertexBuffer",
            "XXX.blaze3d.vertex.VertexFormat",
            "XXX.blaze3d.vertex.VertexFormat$IndexType",
            "XXX.blaze3d.vertex.VertexFormatElement",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage$SetupState",
            "XXX.blaze3d.vertex.VertexMultiConsumer$Double",
            "XXX.blaze3d.vertex.package-info",
            "XXX.mojang.math.FieldsAreNonnullByDefault",
            "XXX.mojang.math.Matrix4f",
            "XXX.mojang.math.package-info",
            "XXX.mojang.realmsclient.RealmsMainScreen",
            "XXX.mojang.realmsclient.RealmsMainScreen$2",
            "XXX.mojang.realmsclient.RealmsMainScreen$4",
            "XXX.mojang.realmsclient.RealmsMainScreen$CloseButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$HoveredElement",
            "XXX.mojang.realmsclient.RealmsMainScreen$PendingInvitesButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$ServerEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$TrialEntry",
            "XXX.realmsclient.client.FileDownload",
            "XXX.realmsclient.client.FileDownload$DownloadCountingOutputStream",
            "XXX.realmsclient.client.FileDownload$ResourcePackProgressListener",
            "XXX.realmsclient.client.FileUpload$CustomInputStreamEntity",
            "XXX.realmsclient.client.Ping$Region",
            "XXX.realmsclient.client.RealmsClient$CompatibleVersionResponse",
            "XXX.realmsclient.client.RealmsClientConfig",
            "XXX.realmsclient.client.Request",
            "XXX.realmsclient.client.Request$Get",
            "XXX.realmsclient.client.Request$Put",
            "XXX.realmsclient.client.package-info",
            "XXX.realmsclient.dto.ServerActivity",
            "XXX.realmsclient.dto.package-info",
            "XXX.realmsclient.exception.RealmsHttpException",
            "XXX.realmsclient.exception.RetryCallException",
            "XXX.gui.screens.RealmsBackupInfoScreen",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoListEntry",
            "XXX.gui.screens.RealmsBackupScreen$1",
            "XXX.gui.screens.RealmsBackupScreen$Entry",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen$1",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsInviteScreen",
            "XXX.gui.screens.RealmsLongConfirmationScreen$Type",
            "XXX.gui.screens.RealmsNotificationsScreen",
            "XXX.gui.screens.RealmsParentalConsentScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$1",
            "XXX.gui.screens.RealmsPendingInvitesScreen$3",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$AcceptRowButton",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionList",
            "XXX.gui.screens.RealmsPlayerScreen$Entry",
            "XXX.gui.screens.RealmsPlayerScreen$UserAction",
            "XXX.gui.screens.RealmsResetWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$FrameButton",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$Entry",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$Entry",
            "XXX.gui.screens.RealmsSettingsScreen",
            "XXX.gui.screens.RealmsSlotOptionsScreen$SettingsSlider",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$1",
            "XXX.gui.screens.RealmsUploadScreen",
            "XXX.gui.screens.UploadResult$1",
            "XXX.gui.screens.package-info",
            "XXX.mojang.realmsclient.package-info",
            "XXX.realmsclient.util.package-info",
            "XXX.util.task.ConnectTask",
            "XXX.util.task.GetServerDetailsTask",
            "XXX.util.task.OpenServerTask",
            "XXX.util.task.ResettingTemplateWorldTask",
            "XXX.util.task.RestoreTask",
            "XXX.util.task.SwitchSlotTask",
            "XXX.util.task.package-info",
            "XXX.screens.multiplayer.JoinMultiplayerScreen",
            "XXX.screens.multiplayer.ServerSelectionList",
            "XXX.screens.multiplayer.ServerSelectionList$LANHeader",
            "XXX.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
            "XXX.gui.screens.package-info",
            "XXX.screens.packs.PackSelectionModel$Entry",
            "XXX.screens.packs.PackSelectionModel$SelectedPackEntry",
            "XXX.screens.packs.PackSelectionScreen",
            "XXX.screens.packs.TransferableSelectionList",
            "XXX.screens.packs.package-info",
            "XXX.screens.recipebook.BlastingRecipeBookComponent",
            "XXX.screens.recipebook.GhostRecipe$GhostIngredient",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlayRecipeButton",
            "XXX.screens.recipebook.OverlayRecipeComponent$OverlaySmeltingRecipeButton",
            "XXX.screens.recipebook.RecipeBookPage",
            "XXX.screens.recipebook.RecipeButton",
            "XXX.screens.recipebook.RecipeShownListener",
            "XXX.screens.recipebook.SmeltingRecipeBookComponent",
            "XXX.screens.recipebook.package-info",
            "XXX.screens.social.PlayerEntry$1",
            "XXX.screens.social.PlayerSocialManager",
            "XXX.screens.social.SocialInteractionsScreen",
            "XXX.screens.social.SocialInteractionsScreen$2",
            "XXX.screens.social.package-info",
            "XXX.client.model.AgeableListModel",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.ChestedHorseModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColorableHierarchicalModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.multiplayer.ClientPacketListener",
            "XXX.client.multiplayer.ClientSuggestionProvider",
            "XXX.client.multiplayer.PlayerInfo",
            "XXX.client.multiplayer.ServerData",
            "XXX.client.multiplayer.ServerList",
            "XXX.client.multiplayer.ServerStatusPinger$1",
            "XXX.client.multiplayer.ServerStatusPinger$2$1",
            "XXX.minecraft.client.package-info",
            "XXX.client.particle.AshParticle$Provider",
            "XXX.client.particle.AttackSweepParticle$1",
            "XXX.client.particle.StationaryItemParticle",
            "XXX.client.particle.StationaryItemParticle$BarrierProvider",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionFace",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$1",
            "XXX.block.model.BlockElementFace",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockFaceUV$Deserializer",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModel$LoopException",
            "XXX.block.model.BlockModelDefinition$Context",
            "XXX.block.model.BlockModelDefinition$MissingVariantException",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$1",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemOverride$Deserializer",
            "XXX.block.model.ItemOverrides",
            "XXX.block.model.ItemOverrides$BakedOverride",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.MultiVariant",
            "XXX.block.model.Variant",
            "XXX.model.multipart.AndCondition",
            "XXX.model.multipart.KeyValueCondition",
            "XXX.model.multipart.MultiPart$Deserializer",
            "XXX.model.multipart.Selector",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.entity.GoatRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseArmorLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.SaddleLayer",
            "XXX.entity.layers.ShulkerHeadLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.renderer.item.ItemProperties",
            "XXX.renderer.item.ItemProperties$2",
            "XXX.renderer.item.ItemPropertyFunction",
            "XXX.client.renderer.package-info",
            "XXX.renderer.texture.AtlasSet",
            "XXX.renderer.texture.HttpTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.PreloadedTexture",
            "XXX.renderer.texture.SimpleTexture$TextureImage",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$AnimatedTexture",
            "XXX.renderer.texture.TextureAtlasSprite$Info",
            "XXX.renderer.texture.TextureManager",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.ClientPackSource$2",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.LegacyPackResourcesAdapter",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SplashManager",
            "XXX.resources.language.ClientLanguage",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.AnimationMetadataSection$1",
            "XXX.metadata.animation.AnimationMetadataSectionSerializer",
            "XXX.metadata.animation.VillagerMetaDataSection$Hat",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.language.LanguageMetadataSectionSerializer",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.TextureMetadataSectionSerializer",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BuiltInModel",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$ModelGroupKey",
            "XXX.resources.model.ModelResourceLocation",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.SimpleBakedModel",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel$Builder",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.Tutorial$TimedToast",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandFunction$CacheableFunction",
            "XXX.minecraft.commands.CommandFunction$Entry",
            "XXX.minecraft.commands.CommandRuntimeException",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$1",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntitySummonArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.ItemEnchantmentArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.MobEffectArgument",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreHolderArgument$Serializer",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$1",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemPredicateArgument$ItemPredicate",
            "XXX.arguments.item.ItemPredicateArgument$TagPredicate",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.NarrationHelper",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryReadOps",
            "XXX.minecraft.resources.RegistryReadOps$ReadCache",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$1",
            "XXX.minecraft.resources.RegistryWriteOps",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$1",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$2",
            "XXX.minecraft.server.PlayerAdvancements$1",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.TickTask",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateBiomeCommand",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand$Filter",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TeleportCommand$LookAt",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder$1",
            "XXX.server.level.ChunkHolder$ChunkLoadingFailure$1",
            "XXX.server.level.ChunkHolder$FullChunkStatus",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkMap$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$1",
            "XXX.server.level.ChunkTaskPriorityQueueSorter$Release",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerLevel$EntityCallbacks",
            "XXX.server.level.ServerPlayer$1",
            "XXX.server.level.ServerPlayer$3",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.Ticket",
            "XXX.server.level.WorldGenRegion",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.TextFilter$1",
            "XXX.server.network.TextFilterClient",
            "XXX.server.network.TextFilterClient$IgnoreStrategy",
            "XXX.server.network.TextFilterClient$RequestFailedException",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.ResourcePackFileNotFoundException",
            "XXX.server.packs.VanillaPackResources$1",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$1",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.SimpleReloadableResourceManager",
            "XXX.packs.resources.SimpleReloadableResourceManager$ResourcePackLoadingFailure",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.SerializationTags",
            "XXX.minecraft.tags.StaticTagHelper",
            "XXX.minecraft.tags.StaticTagHelper$Wrapper",
            "XXX.minecraft.tags.Tag",
            "XXX.minecraft.tags.Tag$Builder",
            "XXX.minecraft.tags.Tag$ElementEntry",
            "XXX.minecraft.tags.Tag$Named",
            "XXX.minecraft.tags.Tag$OptionalTagEntry",
            "XXX.minecraft.tags.TagCollection",
            "XXX.minecraft.tags.TagCollection$NetworkPayload",
            "XXX.minecraft.tags.TagContainer$1",
            "XXX.minecraft.tags.TagContainer$CollectionConsumer",
            "XXX.minecraft.tags.TagManager",
            "XXX.minecraft.tags.TagManager$LoaderInfo",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$1",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.HeapDumper",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.minecraft.util.WeighedRandom$WeighedRandomItem",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedBlockEntityInjecter",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.registry.MeasuredMetric",
            "XXX.profiling.registry.MeasurementRegistry",
            "XXX.profiling.registry.ProfilerMeasured",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$1",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$1",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.ShufflingList$1",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$1",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$1",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$1",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$1",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$1",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.goat.GoatAi",
            "XXX.level.block.LightningRodBlock",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MossBlock",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock$1",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StoneButtonBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TripWireHookBlock$1",
            "XXX.level.block.TwistingVinesBlock",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeatheringCopper$WeatherState",
            "XXX.level.block.WeatheringCopperSlabBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlantBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoodButtonBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPattern$Builder",
            "XXX.block.entity.BarrelBlockEntity$1",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BeaconBlockEntity$BeaconBeamSection",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntityTicker",
            "XXX.block.entity.BlockEntityType$BlockEntitySupplier",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.ChestBlockEntity$1",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickingBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.block.grower.AbstractTreeGrower",
            "XXX.block.grower.BirchTreeGrower",
            "XXX.block.grower.JungleTreeGrower",
            "XXX.block.grower.SpruceTreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.state.BlockBehaviour",
            "XXX.block.state.BlockBehaviour$BlockStateBase",
            "XXX.block.state.BlockBehaviour$OffsetType",
            "XXX.block.state.BlockBehaviour$StateArgumentPredicate",
            "XXX.block.state.BlockState",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockMaterialPredicate$1",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.DirectionProperty",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$1",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.SculkSensorPhase",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.Tilt",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$1",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.ChunkBiomeContainer",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.ChunkStatus$ChunkType",
            "XXX.level.chunk.ChunkStatus$LoadingTask",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.EmptyLevelChunk$EmptyChunkBiomeContainer",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$1",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.storage.ChunkSerializer",
            "XXX.chunk.storage.EntityStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.OldChunkStorage",
            "XXX.chunk.storage.OldChunkStorage$OldLevelChunk",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.SectionStorage",
            "XXX.level.dimension.DimensionDefaults",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.package-info",
            "XXX.levelgen.structure.OceanRuinPieces$OceanRuinPiece",
            "XXX.levelgen.structure.RuinedPortalPiece",
            "XXX.levelgen.structure.RuinedPortalPiece$VerticalPlacement",
            "XXX.levelgen.structure.ShipwreckPieces",
            "XXX.levelgen.structure.StrongholdPieces",
            "XXX.levelgen.structure.StrongholdPieces$2",
            "XXX.levelgen.structure.StrongholdPieces$ChestCorridor",
            "XXX.levelgen.structure.StrongholdPieces$FiveCrossing",
            "XXX.levelgen.structure.StrongholdPieces$Library",
            "XXX.levelgen.structure.StrongholdPieces$PortalRoom",
            "XXX.levelgen.structure.StrongholdPieces$RightTurn",
            "XXX.levelgen.structure.StrongholdPieces$SmoothStoneSelector",
            "XXX.levelgen.structure.StrongholdPieces$StartPiece",
            "XXX.levelgen.structure.StrongholdPieces$StraightStairsDown",
            "XXX.levelgen.structure.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructurePieceAccessor",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.world.scores.Objective",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.mojang.blaze3d.Blaze3D \u001b[2;32m+3M\u001b[0m",
          "XXX.blaze3d.font.GlyphInfo \u001b[2;32m+1M\u001b[0m",
          "XXX.blaze3d.pipeline.RenderTarget \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+4P\u001b[0m",
          "XXX.blaze3d.platform.GlStateManager \u001b[2;32m+10M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.blaze3d.platform.GlStateManager$Viewport \u001b[2;32m+4M\u001b[0m",
          "XXX.blaze3d.platform.InputConstants \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+125P\u001b[0m",
          "XXX.blaze3d.platform.Lighting \u001b[2;32m+1M\u001b[0m",
          "XXX.blaze3d.platform.NativeImage \u001b[2;32m+8M\u001b[0m | \u001b[2;32m+4P\u001b[0m",
          "XXX.blaze3d.platform.NativeImage$Format \u001b[2;32m+14M\u001b[0m",
          "XXX.blaze3d.platform.PngInfo$StbReaderBufferedChannel \u001b[2;32m+1P\u001b[0m",
          "XXX.blaze3d.platform.TextureUtil \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.mojang.math.OctahedralGroup \u001b[2;32m+2M\u001b[0m",
          "XXX.mojang.math.Quaternion \u001b[2;32m+9M\u001b[0m",
          "XXX.mojang.math.Transformation \u001b[2;32m+4M\u001b[0m",
          "XXX.mojang.math.Vector3f \u001b[2;32m+5M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.realmsclient.dto.RealmsWorldOptions \u001b[2;32m+11P\u001b[0m",
          "XXX.realmsclient.dto.UploadInfo \u001b[2;32m+2P\u001b[0m",
          "XXX.realmsclient.util.RealmsUtil \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.realmsclient.util.TextRenderingUtils$Line \u001b[2;32m+1M\u001b[0m",
          "XXX.realmsclient.util.UploadTokenCache \u001b[2;32m+1M\u001b[0m",
          "net.minecraft.FileUtil \u001b[2;32m+1P\u001b[0m",
          "net.minecraft.SharedConstants \u001b[2;32m+81P\u001b[0m",
          "XXX.minecraft.client.Camera \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.client.ClientBrandRetriever \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.client.KeyMapping \u001b[2;32m+7P\u001b[0m",
          "XXX.minecraft.client.Minecraft \u001b[2;32m+1P\u001b[0m",
          "XXX.color.block.BlockColors \u001b[2;32m+1P\u001b[0m",
          "XXX.color.item.ItemColors \u001b[2;32m+1P\u001b[0m",
          "XXX.client.gui.Font \u001b[2;32m+1P\u001b[0m",
          "XXX.client.gui.Gui \u001b[2;32m+6P\u001b[0m",
          "XXX.client.gui.MapRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.client.gui.MapRenderer$MapInstance \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.components.AbstractWidget \u001b[2;32m+2P\u001b[0m",
          "XXX.gui.components.ChatComponent \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.components.DebugScreenOverlay \u001b[2;32m+7P\u001b[0m",
          "XXX.gui.components.EditBox \u001b[2;32m+10P\u001b[0m",
          "XXX.gui.components.LerpingBossEvent \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.components.SubtitleOverlay \u001b[2;32m+1P\u001b[0m",
          "XXX.components.toasts.RecipeToast \u001b[2;32m+1P\u001b[0m",
          "XXX.components.toasts.TutorialToast \u001b[2;32m+4P\u001b[0m",
          "XXX.gui.font.FontManager \u001b[2;32m+1P\u001b[0m",
          "XXX.font.glyphs.MissingGlyph \u001b[2;32m+2P\u001b[0m",
          "XXX.font.providers.LegacyUnicodeBitmapsProvider \u001b[2;32m+3P\u001b[0m",
          "XXX.gui.screens.ChatScreen \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.screens.ConnectScreen \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.screens.CreateFlatWorldScreen \u001b[2;32m+7P\u001b[0m",
          "XXX.gui.screens.LevelLoadingScreen \u001b[2;32m+1P\u001b[0m",
          "XXX.gui.screens.PauseScreen \u001b[2;32m+3P\u001b[0m",
          "XXX.gui.screens.TitleScreen \u001b[2;32m+2P\u001b[0m",
          "XXX.gui.screens.WinScreen \u001b[2;32m+1P\u001b[0m",
          "XXX.screens.debug.GameModeSwitcherScreen \u001b[2;32m+6P\u001b[0m",
          "XXX.screens.debug.GameModeSwitcherScreen$GameModeIcon \u001b[2;32m+2P\u001b[0m",
          "XXX.screens.inventory.AbstractContainerScreen \u001b[2;32m+5P\u001b[0m",
          "XXX.inventory.tooltip.ClientBundleTooltip \u001b[2;32m+5P\u001b[0m",
          "XXX.spectator.categories.SpectatorPage \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.GuardianModel \u001b[2;32m+4P\u001b[0m",
          "XXX.client.model.HorseModel \u001b[2;32m+17P\u001b[0m",
          "XXX.client.model.LavaSlimeModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.LlamaSpitModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.OcelotModel \u001b[2;32m+21P\u001b[0m",
          "XXX.client.model.ParrotModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.PlayerModel \u001b[2;32m+6P\u001b[0m",
          "XXX.client.model.RabbitModel \u001b[2;32m+5P\u001b[0m",
          "XXX.client.model.SalmonModel \u001b[2;32m+2P\u001b[0m",
          "XXX.client.model.ShulkerBulletModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.SilverfishModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.SpiderModel \u001b[2;32m+6P\u001b[0m",
          "XXX.client.model.StriderModel \u001b[2;32m+6P\u001b[0m",
          "XXX.client.model.TurtleModel \u001b[2;32m+1P\u001b[0m",
          "XXX.client.model.WolfModel \u001b[2;32m+4P\u001b[0m",
          "XXX.model.geom.ModelLayers \u001b[2;32m+2P\u001b[0m",
          "XXX.model.geom.PartNames \u001b[2;32m+57P\u001b[0m",
          "XXX.client.particle.DragonBreathParticle \u001b[2;32m+8P\u001b[0m",
          "XXX.client.particle.ItemPickupParticle \u001b[2;32m+1P\u001b[0m",
          "XXX.client.player.AbstractClientPlayer \u001b[2;32m+11P\u001b[0m",
          "XXX.client.player.KeyboardInput \u001b[2;32m+1P\u001b[0m",
          "XXX.client.profiling.ActiveClientMetricsLogger \u001b[2;32m+1P\u001b[0m",
          "XXX.profiling.storage.MetricsPersister \u001b[2;32m+3P\u001b[0m",
          "XXX.client.renderer.FogRenderer \u001b[2;32m+2P\u001b[0m",
          "XXX.client.renderer.GameRenderer \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.client.renderer.LightTexture \u001b[2;32m+3P\u001b[0m",
          "XXX.client.renderer.RenderType \u001b[2;32m+6P\u001b[0m",
          "XXX.client.renderer.ShaderInstance \u001b[2;32m+3P\u001b[0m",
          "XXX.renderer.blockentity.BeaconRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.blockentity.BellRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.blockentity.ChestRenderer \u001b[2;32m+3P\u001b[0m",
          "XXX.renderer.blockentity.SignRenderer \u001b[2;32m+3P\u001b[0m",
          "XXX.renderer.blockentity.TheEndGatewayRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.chunk.VisGraph \u001b[2;32m+8P\u001b[0m",
          "XXX.renderer.debug.BeeDebugRenderer \u001b[2;32m+26P\u001b[0m",
          "XXX.renderer.debug.GameTestDebugRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.debug.GoalSelectorDebugRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.debug.HeightMapRenderer \u001b[2;32m+2P\u001b[0m",
          "XXX.renderer.debug.LightDebugRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.debug.PathfindingRenderer \u001b[2;32m+8P\u001b[0m",
          "XXX.renderer.debug.VillageSectionsDebugRenderer \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.entity.EntityRenderers \u001b[2;32m+1P\u001b[0m",
          "XXX.resources.sounds.BeeSoundInstance \u001b[2;32m+3P\u001b[0m",
          "XXX.resources.sounds.ElytraOnPlayerSoundInstance \u001b[2;32m+1P\u001b[0m",
          "XXX.resources.sounds.GuardianAttackSoundInstance \u001b[2;32m+4P\u001b[0m",
          "XXX.resources.sounds.RidingMinecartSoundInstance \u001b[2;32m+2P\u001b[0m",
          "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance \u001b[2;32m+1P\u001b[0m",
          "XXX.client.searchtree.SuffixArray \u001b[2;32m+2P\u001b[0m",
          "XXX.client.server.IntegratedServer \u001b[2;32m+1P\u001b[0m",
          "XXX.synchronization.brigadier.BrigadierArgumentSerializers \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.core.BlockPos \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.core.FrontAndTop \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.core.Registry \u001b[2;32m+25M\u001b[0m \u001b[2;31m-23M\u001b[0m | \u001b[2;32m+4P\u001b[0m",
          "XXX.core.particles.DustParticleOptionsBase \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.data.BlockFamilies \u001b[2;32m+2P\u001b[0m",
          "XXX.data.worldgen.Carvers \u001b[2;32m+3P\u001b[0m",
          "XXX.data.worldgen.Features \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+22P\u001b[0m",
          "XXX.gametest.framework.GameTestBatch \u001b[2;32m+1P\u001b[0m",
          "XXX.gametest.framework.GameTestRunner \u001b[2;32m+5P\u001b[0m",
          "XXX.gametest.framework.GameTestSequence$Condition \u001b[2;32m+1P\u001b[0m",
          "XXX.gametest.framework.MultipleTestTracker \u001b[2;32m+5P\u001b[0m",
          "XXX.minecraft.nbt.ByteArrayTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.ByteTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.CompoundTag \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.nbt.DoubleTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.EndTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.FloatTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.IntArrayTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.IntTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.IntTag$Cache \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.nbt.NbtUtils \u001b[2;32m+7P\u001b[0m",
          "XXX.minecraft.nbt.ShortTag \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.nbt.ShortTag$Cache \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.nbt.StringTag \u001b[2;32m+5P\u001b[0m",
          "XXX.minecraft.nbt.TagParser \u001b[2;32m+6P\u001b[0m",
          "XXX.minecraft.network.CompressionDecoder \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.network.Connection \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.network.ConnectionProtocol \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.network.FriendlyByteBuf \u001b[2;32m+5P\u001b[0m",
          "XXX.network.chat.NbtComponent \u001b[2;32m+1P\u001b[0m",
          "XXX.network.chat.ScoreComponent \u001b[2;32m+1P\u001b[0m",
          "XXX.network.chat.TextColor \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundAddEntityPacket \u001b[2;32m+2P\u001b[0m",
          "XXX.protocol.game.ClientboundAnimatePacket \u001b[2;32m+6P\u001b[0m",
          "XXX.protocol.game.ClientboundBlockEntityDataPacket \u001b[2;32m+13P\u001b[0m",
          "XXX.protocol.game.ClientboundCustomSoundPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundLevelChunkPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundLoginPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundPlayerAbilitiesPacket \u001b[2;32m+4P\u001b[0m",
          "XXX.protocol.game.ClientboundResourcePackPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundSetEquipmentPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundSoundPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ServerboundChatPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ServerboundCustomPayloadPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ServerboundPlayerAbilitiesPacket \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ServerboundSetCommandBlockPacket \u001b[2;32m+3P\u001b[0m",
          "XXX.protocol.game.ServerboundSetStructureBlockPacket \u001b[2;32m+3P\u001b[0m",
          "XXX.minecraft.util.FrameTimer \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.util.Mth \u001b[2;32m+16P\u001b[0m",
          "XXX.minecraft.util.SortedArraySet \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.world.DifficultyInstance \u001b[2;32m+3P\u001b[0m",
          "XXX.minecraft.world.LockCode \u001b[2;32m+1P\u001b[0m",
          "XXX.world.damagesource.CombatRules \u001b[2;32m+5P\u001b[0m",
          "XXX.world.entity.Entity \u001b[2;32m+22P\u001b[0m",
          "XXX.world.entity.EntityEvent \u001b[2;32m+57P\u001b[0m",
          "XXX.world.entity.LivingEntity \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+20P\u001b[0m",
          "XXX.world.entity.Mob \u001b[2;32m+9P\u001b[0m",
          "XXX.world.entity.MobCategory \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.NeutralMob \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.ai.Brain \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.attributes.Attribute \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.behavior.Mount \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.MoveToTargetSink \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.RandomStroll \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.RunSometimes \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.behavior.ShowTradesToPlayer \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.SocializeAtBell \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.UseBonemeal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.VillagerCalmDown \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.behavior.VillagerMakeLove \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.behavior.WorkAtPoi \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.control.MoveControl \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.control.SmoothSwimmingLookControl \u001b[2;32m+2P\u001b[0m",
          "XXX.ai.goal.BreakDoorGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.FollowParentGoal \u001b[2;32m+3P\u001b[0m",
          "XXX.ai.goal.GolemRandomStrollInVillageGoal \u001b[2;32m+4P\u001b[0m",
          "XXX.ai.goal.MeleeAttackGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.RandomStrollGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.RangedCrossbowAttackGoal \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.ai.goal.RemoveBlockGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.goal.StrollThroughVillageGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.ai.sensing.NearestBedSensor \u001b[2;32m+3P\u001b[0m",
          "XXX.animal.horse.AbstractChestedHorse \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.horse.AbstractHorse \u001b[2;32m+12P\u001b[0m",
          "XXX.animal.horse.SkeletonHorse \u001b[2;32m+1P\u001b[0m",
          "XXX.boss.enderdragon.EnderDragon \u001b[2;32m+3P\u001b[0m",
          "XXX.enderdragon.phases.DragonChargePlayerPhase \u001b[2;32m+1P\u001b[0m",
          "XXX.enderdragon.phases.DragonSittingFlamingPhase \u001b[2;32m+3P\u001b[0m",
          "XXX.enderdragon.phases.DragonStrafePlayerPhase \u001b[2;32m+1P\u001b[0m",
          "XXX.boss.wither.WitherBoss \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.decoration.ItemFrame \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.item.ItemEntity \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.monster.AbstractSkeleton \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.monster.Endermite \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Guardian \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Pillager \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.monster.Ravager \u001b[2;32m+8P\u001b[0m",
          "XXX.entity.monster.Slime \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.monster.Spider \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Vindicator \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Zoglin \u001b[2;32m+10P\u001b[0m",
          "XXX.entity.monster.ZombieVillager \u001b[2;32m+4P\u001b[0m",
          "XXX.monster.hoglin.Hoglin \u001b[2;32m+8P\u001b[0m",
          "XXX.monster.hoglin.HoglinBase \u001b[2;32m+1P\u001b[0m",
          "XXX.monster.piglin.Piglin \u001b[2;32m+9P\u001b[0m",
          "XXX.monster.piglin.PiglinBruteAi \u001b[2;32m+10P\u001b[0m",
          "XXX.entity.npc.AbstractVillager \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.npc.VillagerData \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.npc.WanderingTrader \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.npc.WanderingTraderSpawner \u001b[2;32m+7P\u001b[0m",
          "XXX.entity.player.Player \u001b[2;32m+11P\u001b[0m",
          "XXX.entity.player.StackedContents \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.projectile.DragonFireball \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.projectile.ShulkerBullet \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.raid.Raids \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.schedule.Activity \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.schedule.Schedule \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.vehicle.Boat \u001b[2;32m+6P\u001b[0m",
          "XXX.entity.vehicle.MinecartHopper \u001b[2;32m+1P\u001b[0m",
          "XXX.world.food.Foods \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.inventory.AbstractContainerMenu \u001b[2;32m+8P\u001b[0m",
          "XXX.world.inventory.AbstractFurnaceMenu \u001b[2;32m+9P\u001b[0m",
          "XXX.world.inventory.DispenserMenu \u001b[2;32m+5P\u001b[0m",
          "XXX.world.inventory.GrindstoneMenu \u001b[2;32m+8P\u001b[0m",
          "XXX.world.inventory.ItemCombinerMenu \u001b[2;32m+7P\u001b[0m",
          "XXX.world.inventory.MerchantMenu \u001b[2;32m+11P\u001b[0m",
          "XXX.world.inventory.ShulkerBoxMenu \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.BannerItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.BowItem \u001b[2;32m+2P\u001b[0m",
          "XXX.world.item.CrossbowItem \u001b[2;32m+8P\u001b[0m",
          "XXX.world.item.FireworkRocketItem \u001b[2;32m+10P\u001b[0m",
          "XXX.world.item.Item \u001b[2;32m+3P\u001b[0m",
          "XXX.world.item.ItemStack \u001b[2;32m+14P\u001b[0m",
          "XXX.world.item.ItemUtils \u001b[2;31m-1M\u001b[0m",
          "XXX.world.item.KnowledgeBookItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.MilkBucketItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.PlayerHeadItem \u001b[2;32m+1P\u001b[0m",
          "XXX.world.item.SpyglassItem \u001b[2;32m+2P\u001b[0m",
          "XXX.world.item.SuspiciousStewItem \u001b[2;32m+3P\u001b[0m",
          "XXX.item.crafting.Ingredient \u001b[2;31m-1M\u001b[0m",
          "XXX.item.enchantment.ThornsEnchantment \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.BaseSpawner \u001b[2;32m+3P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.world.level.ChunkPos \u001b[2;32m+7P\u001b[0m",
          "XXX.world.level.Explosion \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.ForcedChunksSavedData \u001b[2;32m+2P\u001b[0m",
          "XXX.world.level.Level \u001b[2;32m+7P\u001b[0m",
          "XXX.world.level.ServerTickList \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.StructureFeatureManager \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.level.biome.Biome \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.AbstractCandleBlock \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.AnvilBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.AzaleaBlock \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BambooSaplingBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BeetrootBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BigDripleafStemBlock \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BubbleColumnBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BuddingAmethystBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.ButtonBlock \u001b[2;32m+4P\u001b[0m",
          "XXX.level.block.CactusBlock \u001b[2;32m+2P\u001b[0m",
          "XXX.level.block.CampfireBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CandleCakeBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.ChestBlock \u001b[2;32m+3P\u001b[0m",
          "XXX.level.block.ChorusFlowerBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CocoaBlock \u001b[2;32m+10P\u001b[0m",
          "XXX.level.block.ComposterBlock \u001b[2;32m+4P\u001b[0m",
          "XXX.level.block.CoralPlantBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.DeadBushBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.DispenserBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.FlowerPotBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.FungusBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.GrowingPlantHeadBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.HoneyBlock \u001b[2;32m+4P\u001b[0m",
          "XXX.level.block.KelpBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.LadderBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.LayeredCauldronBlock \u001b[2;32m+4P\u001b[0m",
          "XXX.level.block.LecternBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.LevelEvent \u001b[2;32m+70P\u001b[0m",
          "XXX.level.levelgen.Cavifier \u001b[2;32m+2P\u001b[0m",
          "XXX.level.levelgen.DebugLevelSource \u001b[2;32m+3P\u001b[0m",
          "XXX.level.levelgen.DepthBasedReplacingBaseStoneSource \u001b[2;32m+2P\u001b[0m",
          "XXX.level.levelgen.SimpleRandomSource \u001b[2;32m+6P\u001b[0m",
          "XXX.level.levelgen.VerticalAnchor$Absolute \u001b[2;32m+1M\u001b[0m",
          "XXX.levelgen.carver.CaveWorldCarver \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.levelgen.carver.NetherWorldCarver \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.BastionFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.BuriedTreasureFeature$BuriedTreasureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.DeltaFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.DesertPyramidFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.EndCityFeature$EndCityStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.JigsawFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.LargeDripstoneFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.NetherFortressFeature$NetherBridgeStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature$OceanMonumentStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.PillagerOutpostFeature \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.levelgen.feature.RuinedPortalFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.ScatteredOreFeature \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.ShipwreckFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.StructureFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.SwamplandHutFeature$FeatureStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.WoodlandMansionFeature$WoodlandMansionStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.configurations.ColumnFeatureConfiguration \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.feature.configurations.DeltaFeatureConfiguration \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.feature.configurations.DripstoneClusterConfiguration \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-5P\u001b[0m",
          "XXX.feature.configurations.ReplaceSphereConfiguration \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.configurations.VegetationPatchConfiguration \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.feature.featuresize.FeatureSize \u001b[2;32m+1P\u001b[0m",
          "XXX.feature.foliageplacers.BlobFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.DarkOakFoliagePlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.foliageplacers.FoliagePlacer \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.feature.foliageplacers.MegaPineFoliagePlacer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.stateproviders.RandomizedIntStateProvider \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.feature.structures.JigsawPlacement \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.ListPoolElement \u001b[2;32m+4M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.structures.StructureTemplatePool \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.feature.treedecorators.BeehiveDecorator \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.treedecorators.LeaveVineDecorator \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.feature.trunkplacers.DarkOakTrunkPlacer \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.feature.trunkplacers.GiantTrunkPlacer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.feature.trunkplacers.StraightTrunkPlacer \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.BoundingBox \u001b[2;32m+11M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+7P\u001b[0m \u001b[2;31m-6P\u001b[0m",
          "XXX.levelgen.structure.EndCityPieces$EndCityPiece \u001b[2;32m+4M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-3P\u001b[0m",
          "XXX.levelgen.structure.IglooPieces \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+6P\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftCorridor \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftPiece \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.MineShaftPieces$MineShaftStairs \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$BridgeEndFiller \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleEntrance \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$MonsterThrone \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherBridgePieces$StairsRoom \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.levelgen.structure.NetherFossilPieces \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.NoiseAffectingStructureStart \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$MonumentBuilding \u001b[2;32m+5P\u001b[0m",
          "XXX.levelgen.structure.OceanMonumentPieces$OceanMonumentPiece \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+12P\u001b[0m",
          "XXX.levelgen.structure.OceanRuinFeature$OceanRuinStart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.OceanRuinPieces \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.levelgen.structure.StructureStart$1 \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.TemplateStructurePiece \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.structure.templatesystem.BlockAgeProcessor \u001b[2;32m+3P\u001b[0m",
          "XXX.structure.templatesystem.StructureTemplate \u001b[2;32m+12P\u001b[0m",
          "XXX.levelgen.surfacebuilders.BadlandsSurfaceBuilder \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.synth.ImprovedNoise \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.synth.NormalNoise \u001b[2;32m+2P\u001b[0m",
          "XXX.level.lighting.DynamicGraphMinFixedPoint \u001b[2;32m+1P\u001b[0m",
          "XXX.level.lighting.LayerLightEngine \u001b[2;32m+2P\u001b[0m",
          "XXX.level.lighting.SpatialLongSet$InternalMap \u001b[2;32m+1P\u001b[0m",
          "XXX.level.material.FluidState \u001b[2;32m+2P\u001b[0m",
          "XXX.level.material.Material \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.newbiome.context.LazyAreaContext \u001b[2;32m+1P\u001b[0m",
          "XXX.newbiome.layer.LayerBiomes \u001b[2;32m+68P\u001b[0m",
          "XXX.newbiome.layer.ZoomLayer \u001b[2;32m+2P\u001b[0m",
          "XXX.level.pathfinder.PathFinder \u001b[2;32m+2P\u001b[0m",
          "XXX.saveddata.maps.MapItemSavedData \u001b[2;32m+3P\u001b[0m",
          "XXX.level.storage.CommandStorage \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.CommandStorage$Container \u001b[2;32m+1P\u001b[0m",
          "XXX.level.storage.LevelStorageSource \u001b[2;32m+1P\u001b[0m",
          "XXX.loot.entries.LootPoolSingletonContainer \u001b[2;32m+2P\u001b[0m",
          "XXX.loot.functions.ExplorationMapFunction \u001b[2;32m+4P\u001b[0m",
          "XXX.loot.functions.LootingEnchantFunction \u001b[2;32m+1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.Blaze3D",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()",
            "void process(RenderPipeline,float)",
            "void render(RenderPipeline,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.font.GlyphInfo",
        "differences": {
          "added": [],
          "removed": [
            "float getBearingY()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.pipeline.RenderTarget",
        "differences": {
          "added": [],
          "removed": [
            "void bindRead()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.GlStateManager",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()",
            "void _glCopyTexSubImage2D(int,int,int,int,int,int,int,int)",
            "void _glBindRenderbuffer(int,int)",
            "void _glDeleteRenderbuffers(int)",
            "int glGenRenderbuffers()",
            "void _glRenderbufferStorage(int,int,int,int)",
            "void _glFramebufferRenderbuffer(int,int,int,int)",
            "int getBoundFramebuffer()",
            "void _glDrawPixels(int,int,int,int,long)",
            "void _readPixels(int,int,int,int,int,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.GlStateManager$Viewport",
        "differences": {
          "added": [],
          "removed": [
            "int x()",
            "int y()",
            "int width()",
            "int height()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.InputConstants",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.Lighting",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.NativeImage",
        "differences": {
          "added": [],
          "removed": [
            "void setPixelLuminance(int,int,byte)",
            "byte getRedOrLuminance(int,int)",
            "byte getGreenOrLuminance(int,int)",
            "byte getBlueOrLuminance(int,int)",
            "void blendPixel(int,int,int)",
            "void downloadDepthBuffer(float)",
            "void drawPixels()",
            "void writeToFile(String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.NativeImage$Format",
        "differences": {
          "added": [],
          "removed": [
            "boolean hasRed()",
            "boolean hasGreen()",
            "boolean hasBlue()",
            "boolean hasLuminance()",
            "int redOffset()",
            "int greenOffset()",
            "int blueOffset()",
            "int luminanceOffset()",
            "boolean hasLuminanceOrRed()",
            "boolean hasLuminanceOrGreen()",
            "boolean hasLuminanceOrBlue()",
            "int luminanceOrRedOffset()",
            "int luminanceOrGreenOffset()",
            "int luminanceOrBlueOffset()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.TextureUtil",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()",
            "void writeAsPNG(String,int,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.OctahedralGroup",
        "differences": {
          "added": [],
          "removed": [
            "OctahedralGroup inverse()",
            "Matrix3f transformation()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Quaternion",
        "differences": {
          "added": [],
          "removed": [
            "Quaternion fromYXZ(float,float,float)",
            "Quaternion fromXYZDegrees(Vector3f)",
            "Quaternion fromXYZ(Vector3f)",
            "Quaternion fromXYZ(float,float,float)",
            "Vector3f toXYZ()",
            "Vector3f toXYZDegrees()",
            "Vector3f toYXZ()",
            "Vector3f toYXZDegrees()",
            "void slerp(Quaternion,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Transformation",
        "differences": {
          "added": [],
          "removed": [
            "Vector3f getTranslation()",
            "Vector3f getScale()",
            "Quaternion getRightRotation()",
            "Transformation slerp(Transformation,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.math.Vector3f",
        "differences": {
          "added": [
            "DoubleStream lambda$static$2(Vector3f)",
            "DataResult lambda$static$1(DoubleStream)",
            "Vector3f lambda$null$0(double[])"
          ],
          "removed": [
            "void clamp(Vector3f,Vector3f)",
            "void load(Vector3f)",
            "List lambda$static$2(Vector3f)",
            "DataResult lambda$static$1(List)",
            "Vector3f lambda$null$0(List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.RealmsUtil",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.TextRenderingUtils$Line",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(TextRenderingUtils$LineSegment[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.realmsclient.util.UploadTokenCache",
        "differences": {
          "added": [],
          "removed": [
            "void <init>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.MapRenderer",
        "differences": {
          "added": [
            "MapItemSavedData retrieveMapFromRenderer(int)",
            "TextureManager access$300(MapRenderer)",
            "RenderType access$400()"
          ],
          "removed": [
            "TextureManager access$200(MapRenderer)",
            "RenderType access$300()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.MapRenderer$MapInstance",
        "differences": {
          "added": [
            "MapItemSavedData access$200(MapRenderer$MapInstance)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.GameRenderer",
        "differences": {
          "added": [],
          "removed": [
            "boolean isPanoramicMode()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.TheEndGatewayRenderer",
        "differences": {
          "added": [
            "float getOffset()"
          ],
          "removed": [
            "float getOffsetUp()",
            "float getOffsetDown()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.FrontAndTop",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$static$0(Int2ObjectOpenHashMap)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.Registry",
        "differences": {
          "added": [
            "Object lambda$keys$57(DynamicOps,ResourceLocation)",
            "DataResult lambda$decode$56(Pair)",
            "Pair lambda$decode$55(DynamicOps,Object)",
            "DataResult lambda$decode$54(Number)",
            "void lambda$checkRegistry$53(WritableRegistry,WritableRegistry)",
            "void lambda$static$52(ResourceLocation,Supplier)",
            "StructurePoolElementType lambda$static$51()",
            "StructureProcessorType lambda$static$50()",
            "Codec lambda$static$49()",
            "Codec lambda$static$48()",
            "FeatureSizeType lambda$static$47()",
            "TreeDecoratorType lambda$static$46()",
            "TrunkPlacerType lambda$static$45()",
            "FoliagePlacerType lambda$static$44()",
            "BlockPlacerType lambda$static$43()",
            "BlockStateProviderType lambda$static$42()",
            "FeatureDecorator lambda$static$41()",
            "StructurePieceType lambda$static$40()",
            "StructureFeature lambda$static$39()",
            "Feature lambda$static$38()",
            "WorldCarver lambda$static$37()",
            "FloatProviderType lambda$static$36()",
            "SurfaceBuilder lambda$static$35()"
          ],
          "removed": [
            "Object lambda$keys$59(DynamicOps,ResourceLocation)",
            "DataResult lambda$decode$58(Pair)",
            "Pair lambda$decode$57(DynamicOps,Object)",
            "DataResult lambda$decode$56(Number)",
            "void lambda$checkRegistry$55(WritableRegistry,WritableRegistry)",
            "void lambda$static$54(ResourceLocation,Supplier)",
            "StructurePoolElementType lambda$static$53()",
            "StructureProcessorType lambda$static$52()",
            "Codec lambda$static$51()",
            "Codec lambda$static$50()",
            "FeatureSizeType lambda$static$49()",
            "TreeDecoratorType lambda$static$48()",
            "TrunkPlacerType lambda$static$47()",
            "FoliagePlacerType lambda$static$46()",
            "BlockPlacerType lambda$static$45()",
            "BlockStateProviderType lambda$static$44()",
            "FeatureDecorator lambda$static$43()",
            "StructurePieceType lambda$static$42()",
            "StructureFeature lambda$static$41()",
            "Feature lambda$static$40()",
            "WorldCarver lambda$static$39()",
            "SurfaceBuilder lambda$static$38()",
            "HeightProviderType lambda$static$37()",
            "IntProviderType lambda$static$36()",
            "FloatProviderType lambda$static$35()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.Features",
        "differences": {
          "added": [],
          "removed": [
            "SimpleWeightedRandomList$Builder weightedBlockStateBuilder()",
            "SimpleWeightedRandomList$Builder access$000()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.LivingEntity",
        "differences": {
          "added": [],
          "removed": [
            "boolean shouldDiscardFriction()",
            "void setDiscardFriction(boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.behavior.RunSometimes",
        "differences": {
          "added": [
            "void <init>(Behavior,IntRange)",
            "void <init>(Behavior,boolean,IntRange)"
          ],
          "removed": [
            "void <init>(Behavior,UniformInt)",
            "void <init>(Behavior,boolean,UniformInt)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.monster.AbstractSkeleton",
        "differences": {
          "added": [],
          "removed": [
            "boolean isShaking()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.food.Foods",
        "differences": {
          "added": [
            "FoodProperties stew(int)"
          ],
          "removed": [
            "FoodProperties$Builder stew(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.ItemUtils",
        "differences": {
          "added": [
            "Optional bucketMobPickup(Player,InteractionHand,LivingEntity,SoundEvent,Supplier)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.item.crafting.Ingredient",
        "differences": {
          "added": [
            "JsonSyntaxException lambda$valueFromJson$8(ResourceLocation)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.StructureFeatureManager",
        "differences": {
          "added": [
            "boolean lambda$getStructureAt$5(boolean,BlockPos,StructureStart)",
            "boolean lambda$null$4(BlockPos,StructurePiece)",
            "boolean lambda$getStructureAt$3(BlockPos,StructureStart)"
          ],
          "removed": [
            "boolean lambda$getStructureAt$4(boolean,BlockPos,StructureStart)",
            "boolean lambda$null$3(BlockPos,StructurePiece)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AbstractCandleBlock",
        "differences": {
          "added": [],
          "removed": [
            "boolean isLit(BlockState)",
            "boolean canBeLit(BlockState)",
            "void lambda$extinguish$1(LevelAccessor,BlockPos,Vec3)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.AzaleaBlock",
        "differences": {
          "added": [],
          "removed": [
            "VoxelShape getBlockSupportShape(BlockState,BlockGetter,BlockPos)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BigDripleafStemBlock",
        "differences": {
          "added": [],
          "removed": [
            "ItemStack getCloneItemStack(BlockGetter,BlockPos,BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.VerticalAnchor$Absolute",
        "differences": {
          "added": [],
          "removed": [
            "String toString()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.CaveWorldCarver",
        "differences": {
          "added": [
            "int getCaveY(CarvingContext,Random)",
            "void createRoom(CarvingContext,CarverConfiguration,ChunkAccess,Function,long,int,double,double,double,float,double,BitSet,WorldCarver$CarveSkipChecker)",
            "void createTunnel(CarvingContext,CarverConfiguration,ChunkAccess,Function,long,int,double,double,double,double,double,float,float,float,int,int,double,BitSet,WorldCarver$CarveSkipChecker)"
          ],
          "removed": [
            "boolean isStartChunk(CaveCarverConfiguration,Random)",
            "boolean carve(CarvingContext,CaveCarverConfiguration,ChunkAccess,Function,Random,int,ChunkPos,BitSet)",
            "void createRoom(CarvingContext,CaveCarverConfiguration,ChunkAccess,Function,long,int,double,double,double,float,double,BitSet,WorldCarver$CarveSkipChecker)",
            "void createTunnel(CarvingContext,CaveCarverConfiguration,ChunkAccess,Function,long,int,double,double,double,double,double,float,float,float,int,int,double,BitSet,WorldCarver$CarveSkipChecker)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.NetherWorldCarver",
        "differences": {
          "added": [
            "int getCaveY(CarvingContext,Random)"
          ],
          "removed": [
            "boolean carveBlock(CarvingContext,CaveCarverConfiguration,ChunkAccess,Function,BitSet,Random,BlockPos$MutableBlockPos,BlockPos$MutableBlockPos,int,MutableBoolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.BuriedTreasureFeature$BuriedTreasureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.DesertPyramidFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.EndCityFeature$EndCityStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.JigsawFeature",
        "differences": {
          "added": [
            "StructureStart lambda$getStartFactory$0(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "StructureStart lambda$getStartFactory$0(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.LargeDripstoneFeature",
        "differences": {
          "added": [
            "LargeDripstoneFeature$LargeDripstone makeDripstone(BlockPos,boolean,Random,int,FloatProvider,FloatProvider)"
          ],
          "removed": [
            "LargeDripstoneFeature$LargeDripstone makeDripstone(BlockPos,boolean,Random,int,FloatProvider,FloatProvider)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherFortressFeature$NetherBridgeStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature$OceanMonumentStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)",
            "void generatePieces(ChunkPos)",
            "void placeInChunk(WorldGenLevel,StructureFeatureManager,ChunkGenerator,Random,BoundingBox,ChunkPos)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.PillagerOutpostFeature",
        "differences": {
          "added": [
            "List getSpecialEnemies()"
          ],
          "removed": [
            "WeightedRandomList getSpecialEnemies()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.RuinedPortalFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.ShipwreckFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.StructureFeature",
        "differences": {
          "added": [
            "StructureStart createStart(ChunkPos,BoundingBox,int,long)",
            "List getSpecialEnemies()",
            "List getSpecialAnimals()"
          ],
          "removed": [
            "StructureStart createStart(ChunkPos,int,long)",
            "WeightedRandomList getSpecialEnemies()",
            "WeightedRandomList getSpecialAnimals()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.SwamplandHutFeature$FeatureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.WoodlandMansionFeature$WoodlandMansionStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt)",
            "UniformInt reach()",
            "UniformInt height()",
            "UniformInt lambda$null$1(ColumnFeatureConfiguration)",
            "UniformInt lambda$null$0(ColumnFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider)",
            "IntProvider reach()",
            "IntProvider height()",
            "IntProvider lambda$null$1(ColumnFeatureConfiguration)",
            "IntProvider lambda$null$0(ColumnFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration",
        "differences": {
          "added": [
            "void <init>(BlockState,BlockState,UniformInt,UniformInt)",
            "UniformInt size()",
            "UniformInt rimSize()",
            "UniformInt lambda$null$3(DeltaFeatureConfiguration)",
            "UniformInt lambda$null$2(DeltaFeatureConfiguration)"
          ],
          "removed": [
            "void <init>(BlockState,BlockState,IntProvider,IntProvider)",
            "IntProvider size()",
            "IntProvider rimSize()",
            "IntProvider lambda$null$3(DeltaFeatureConfiguration)",
            "IntProvider lambda$null$2(DeltaFeatureConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration",
        "differences": {
          "added": [
            "void <init>(int,UniformInt,UniformInt,int,int,UniformInt,FloatProvider,FloatProvider,float,int,int)",
            "FloatProvider lambda$null$7(DripstoneClusterConfiguration)",
            "FloatProvider lambda$null$6(DripstoneClusterConfiguration)",
            "UniformInt lambda$null$5(DripstoneClusterConfiguration)",
            "UniformInt lambda$null$2(DripstoneClusterConfiguration)",
            "UniformInt lambda$null$1(DripstoneClusterConfiguration)"
          ],
          "removed": [
            "void <init>(int,IntProvider,IntProvider,int,int,IntProvider,FloatProvider,FloatProvider,float,int,int)",
            "FloatProvider lambda$null$7(DripstoneClusterConfiguration)",
            "FloatProvider lambda$null$6(DripstoneClusterConfiguration)",
            "IntProvider lambda$null$5(DripstoneClusterConfiguration)",
            "IntProvider lambda$null$2(DripstoneClusterConfiguration)",
            "IntProvider lambda$null$1(DripstoneClusterConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration",
        "differences": {
          "added": [
            "void <init>(BlockState,BlockState,UniformInt)",
            "UniformInt radius()",
            "UniformInt lambda$null$2(ReplaceSphereConfiguration)"
          ],
          "removed": [
            "void <init>(BlockState,BlockState,IntProvider)",
            "IntProvider radius()",
            "IntProvider lambda$null$2(ReplaceSphereConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,BlockStateProvider,Supplier,CaveSurface,UniformInt,float,int,float,UniformInt,float)",
            "UniformInt lambda$null$8(VegetationPatchConfiguration)",
            "UniformInt lambda$null$4(VegetationPatchConfiguration)"
          ],
          "removed": [
            "void <init>(ResourceLocation,BlockStateProvider,Supplier,CaveSurface,IntProvider,float,int,float,IntProvider,float)",
            "IntProvider lambda$null$8(VegetationPatchConfiguration)",
            "IntProvider lambda$null$4(VegetationPatchConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,int)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,int)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,BoundingBox)",
            "void placeLeavesRow(LevelSimulatedRW,Random,TreeConfiguration,BlockPos,int,Set,int,boolean,BoundingBox)",
            "void tryPlaceLeaf(LevelSimulatedRW,Random,TreeConfiguration,Set,BoundingBox,BlockPos$MutableBlockPos)",
            "UniformInt lambda$foliagePlacerParts$1(FoliagePlacer)",
            "UniformInt lambda$foliagePlacerParts$0(FoliagePlacer)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int)",
            "void placeLeavesRow(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,BlockPos,int,int,boolean)",
            "void tryPlaceLeaf(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,BlockPos)",
            "IntProvider lambda$foliagePlacerParts$1(FoliagePlacer)",
            "IntProvider lambda$foliagePlacerParts$0(FoliagePlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,UniformInt)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)",
            "UniformInt lambda$null$0(MegaPineFoliagePlacer)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,IntProvider)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)",
            "IntProvider lambda$null$0(MegaPineFoliagePlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer",
        "differences": {
          "added": [
            "void <init>(UniformInt,UniformInt,UniformInt,int)",
            "void createFoliage(LevelSimulatedRW,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,Set,int,BoundingBox)",
            "UniformInt lambda$null$0(RandomSpreadFoliagePlacer)"
          ],
          "removed": [
            "void <init>(IntProvider,IntProvider,IntProvider,int)",
            "void createFoliage(LevelSimulatedReader,BiConsumer,Random,TreeConfiguration,int,FoliagePlacer$FoliageAttachment,int,int,int)",
            "IntProvider lambda$null$0(RandomSpreadFoliagePlacer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider",
        "differences": {
          "added": [
            "void <init>(BlockStateProvider,IntegerProperty,UniformInt)",
            "void <init>(BlockStateProvider,String,UniformInt)",
            "UniformInt lambda$null$2(RandomizedIntStateProvider)"
          ],
          "removed": [
            "void <init>(BlockStateProvider,IntegerProperty,IntProvider)",
            "void <init>(BlockStateProvider,String,IntProvider)",
            "IntProvider lambda$null$2(RandomizedIntStateProvider)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.JigsawPlacement",
        "differences": {
          "added": [
            "void addPieces(RegistryAccess,JigsawConfiguration,JigsawPlacement$PieceFactory,ChunkGenerator,StructureManager,BlockPos,List,Random,boolean,boolean,LevelHeightAccessor)"
          ],
          "removed": [
            "void addPieces(RegistryAccess,JigsawConfiguration,JigsawPlacement$PieceFactory,ChunkGenerator,StructureManager,BlockPos,StructurePieceAccessor,Random,boolean,boolean,LevelHeightAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.ListPoolElement",
        "differences": {
          "added": [
            "void lambda$setProjectionOnEachElement$2(StructureTemplatePool$Projection,StructurePoolElement)"
          ],
          "removed": [
            "void lambda$setProjectionOnEachElement$5(StructureTemplatePool$Projection,StructurePoolElement)",
            "IllegalStateException lambda$getBoundingBox$4()",
            "BoundingBox lambda$getBoundingBox$3(StructureManager,BlockPos,Rotation,StructurePoolElement)",
            "boolean lambda$getBoundingBox$2(StructurePoolElement)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.structures.StructureTemplatePool",
        "differences": {
          "added": [
            "int lambda$getMaxSize$2(StructureManager,StructurePoolElement)"
          ],
          "removed": [
            "int lambda$getMaxSize$3(StructureManager,StructurePoolElement)",
            "boolean lambda$getMaxSize$2(StructurePoolElement)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator",
        "differences": {
          "added": [
            "void place(WorldGenLevel,Random,List,List,Set,BoundingBox)"
          ],
          "removed": [
            "void place(LevelSimulatedReader,BiConsumer,Random,List,List)",
            "void lambda$place$2(Random,BeehiveBlockEntity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator",
        "differences": {
          "added": [
            "void place(WorldGenLevel,Random,List,List,Set,BoundingBox)",
            "void addHangingVine(LevelSimulatedRW,BlockPos,BooleanProperty,Set,BoundingBox)",
            "void lambda$place$1(Random,WorldGenLevel,Set,BoundingBox,BlockPos)"
          ],
          "removed": [
            "void place(LevelSimulatedReader,BiConsumer,Random,List,List)",
            "void addHangingVine(LevelSimulatedReader,BlockPos,BooleanProperty,BiConsumer)",
            "void lambda$place$1(Random,LevelSimulatedReader,BiConsumer,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)",
            "void placeLogIfFreeWithOffset(LevelSimulatedRW,Random,BlockPos$MutableBlockPos,Set,BoundingBox,TreeConfiguration,BlockPos,int,int,int)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)",
            "void placeLogIfFreeWithOffset(LevelSimulatedReader,BiConsumer,Random,BlockPos$MutableBlockPos,TreeConfiguration,BlockPos,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer",
        "differences": {
          "added": [
            "List placeTrunk(LevelSimulatedRW,Random,int,BlockPos,Set,BoundingBox,TreeConfiguration)"
          ],
          "removed": [
            "List placeTrunk(LevelSimulatedReader,BiConsumer,Random,int,BlockPos,TreeConfiguration)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.BoundingBox",
        "differences": {
          "added": [
            "BoundingBox createProper(Vec3i,Vec3i)",
            "BoundingBox createProper(int,int,int,int,int,int)",
            "BoundingBox getUnknownBox()",
            "void expand(BoundingBox)"
          ],
          "removed": [
            "BoundingBox fromCorners(Vec3i,Vec3i)",
            "Optional encapsulatingPositions(Iterable)",
            "Optional encapsulatingBoxes(Iterable)",
            "BoundingBox encapsulate(BoundingBox)",
            "BoundingBox inflate(int)",
            "int minX()",
            "int minY()",
            "int minZ()",
            "int maxX()",
            "int maxY()",
            "int maxZ()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.EndCityPieces$EndCityPiece",
        "differences": {
          "added": [
            "void loadTemplate(StructureManager)"
          ],
          "removed": [
            "StructurePlaceSettings makeSettings(boolean,Rotation)",
            "ResourceLocation makeTemplateLocation()",
            "ResourceLocation makeResourceLocation(String)",
            "StructurePlaceSettings lambda$new$0(CompoundTag,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.IglooPieces",
        "differences": {
          "added": [
            "void addPieces(StructureManager,BlockPos,Rotation,List,Random)"
          ],
          "removed": [
            "void addPieces(StructureManager,BlockPos,Rotation,StructurePieceAccessor,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces",
        "differences": {
          "added": [
            "MineShaftPieces$MineShaftPiece createRandomShaftPiece(List,Random,int,int,int,Direction,int,MineshaftFeature$Type)",
            "MineShaftPieces$MineShaftPiece generateAndAddPiece(StructurePiece,List,Random,int,int,int,Direction,int)",
            "MineShaftPieces$MineShaftPiece access$100(StructurePiece,List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "MineShaftPieces$MineShaftPiece createRandomShaftPiece(StructurePieceAccessor,Random,int,int,int,Direction,int,MineshaftFeature$Type)",
            "MineShaftPieces$MineShaftPiece generateAndAddPiece(StructurePiece,StructurePieceAccessor,Random,int,int,int,Direction,int)",
            "MineShaftPieces$MineShaftPiece access$100(StructurePiece,StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftCorridor",
        "differences": {
          "added": [
            "BoundingBox findCorridorSize(List,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,List,Random)"
          ],
          "removed": [
            "BoundingBox findCorridorSize(StructurePieceAccessor,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftPiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,int,MineshaftFeature$Type)"
          ],
          "removed": [
            "void <init>(StructurePieceType,int,MineshaftFeature$Type,BoundingBox)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.MineShaftPieces$MineShaftStairs",
        "differences": {
          "added": [
            "BoundingBox findStairs(List,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,List,Random)"
          ],
          "removed": [
            "BoundingBox findStairs(StructurePieceAccessor,Random,int,int,int,Direction)",
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$BridgeEndFiller",
        "differences": {
          "added": [
            "NetherBridgePieces$BridgeEndFiller createPiece(List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "NetherBridgePieces$BridgeEndFiller createPiece(StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleCorridorStairsPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleCorridorStairsPiece createPiece(List,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleCorridorStairsPiece createPiece(StructurePieceAccessor,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleEntrance",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleEntrance createPiece(List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleEntrance createPiece(StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorLeftTurnPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleSmallCorridorLeftTurnPiece createPiece(List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleSmallCorridorLeftTurnPiece createPiece(StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$CastleSmallCorridorRightTurnPiece",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$CastleSmallCorridorRightTurnPiece createPiece(List,Random,int,int,int,Direction,int)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$CastleSmallCorridorRightTurnPiece createPiece(StructurePieceAccessor,Random,int,int,int,Direction,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$MonsterThrone",
        "differences": {
          "added": [
            "NetherBridgePieces$MonsterThrone createPiece(List,int,int,int,int,Direction)"
          ],
          "removed": [
            "NetherBridgePieces$MonsterThrone createPiece(StructurePieceAccessor,int,int,int,int,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherBridgePieces$StairsRoom",
        "differences": {
          "added": [
            "void addChildren(StructurePiece,List,Random)",
            "NetherBridgePieces$StairsRoom createPiece(List,int,int,int,int,Direction)"
          ],
          "removed": [
            "void addChildren(StructurePiece,StructurePieceAccessor,Random)",
            "NetherBridgePieces$StairsRoom createPiece(StructurePieceAccessor,int,int,int,int,Direction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NetherFossilPieces",
        "differences": {
          "added": [
            "void addPieces(StructureManager,List,Random,BlockPos)"
          ],
          "removed": [
            "void addPieces(StructureManager,StructurePieceAccessor,Random,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.NoiseAffectingStructureStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)",
            "void calculateBoundingBox()"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)",
            "BoundingBox getBoundingBox()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanMonumentPieces$OceanMonumentPiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,int)",
            "void <init>(StructurePieceType,Direction,BoundingBox)"
          ],
          "removed": [
            "void <init>(StructurePieceType,Direction,int,BoundingBox)",
            "BoundingBox makeBoundingBox(Direction,OceanMonumentPieces$RoomDefinition,int,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinFeature$OceanRuinStart",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.OceanRuinPieces",
        "differences": {
          "added": [
            "void addPieces(StructureManager,BlockPos,Rotation,List,Random,OceanRuinConfiguration)",
            "void addClusterRuins(StructureManager,Random,Rotation,BlockPos,OceanRuinConfiguration,List)",
            "List allPositions(Random,int,int)",
            "void addPiece(StructureManager,BlockPos,Rotation,List,Random,OceanRuinConfiguration,boolean,float)"
          ],
          "removed": [
            "void addPieces(StructureManager,BlockPos,Rotation,StructurePieceAccessor,Random,OceanRuinConfiguration)",
            "void addClusterRuins(StructureManager,Random,Rotation,BlockPos,OceanRuinConfiguration,StructurePieceAccessor)",
            "List allPositions(Random,BlockPos)",
            "void addPiece(StructureManager,BlockPos,Rotation,StructurePieceAccessor,Random,OceanRuinConfiguration,boolean,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StructureStart$1",
        "differences": {
          "added": [
            "void <init>(StructureFeature,ChunkPos,BoundingBox,int,long)"
          ],
          "removed": [
            "void <init>(StructureFeature,ChunkPos,int,long)",
            "boolean isValid()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.TemplateStructurePiece",
        "differences": {
          "added": [
            "void <init>(StructurePieceType,int)",
            "void <init>(StructurePieceType,CompoundTag)",
            "void setup(StructureTemplate,BlockPos,StructurePlaceSettings)"
          ],
          "removed": [
            "void <init>(StructurePieceType,int,StructureManager,ResourceLocation,String,StructurePlaceSettings,BlockPos)",
            "void <init>(StructurePieceType,CompoundTag,ServerLevel,Function)",
            "ResourceLocation makeTemplateLocation()"
          ]
        }
      }
    }
  ]
}