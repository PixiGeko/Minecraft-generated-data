{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "21w44a",
        "currentLabel": "1.18-pre1",
        "values": [
          {
            "key": "World version",
            "previous": "2845",
            "current": "2847"
          },
          {
            "key": "Protocol version",
            "previous": "1073741872",
            "current": "1073741873"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "21w44a",
        "currentLabel": "1.18-pre1",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "worldgen/placement_modifier_type.txt"
          ],
          "removed": [
            "worldgen/decorator.txt"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "block_predicate_type",
        "differences": {
          "added": [
            "minecraft:solid",
            "minecraft:inside_world_bounds"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "height_provider_type",
        "differences": {
          "added": [
            "minecraft:weighted_list"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "worldgen/feature",
        "differences": {
          "added": [],
          "removed": [
            "minecraft:decorated"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "üóíÔ∏è List",
        "differences": {
          "added": [
            "universal_tags/worldgen/placement_modifier_type.json"
          ],
          "removed": [
            "universal_tags/worldgen/decorator.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/block_predicate_type.json",
        "differences": {
          "added": [
            "minecraft:solid",
            "minecraft:inside_world_bounds"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/height_provider_type.json",
        "differences": {
          "added": [
            "minecraft:weighted_list"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/worldgen/feature.json",
        "differences": {
          "added": [],
          "removed": [
            "minecraft:decorated"
          ]
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "generator.amplified.info: Notice: Just for fun! Requires a beefy computer.",
            "advancements.adventure.play_jukebox_in_meadows.title: Sound of Music",
            "advancements.adventure.play_jukebox_in_meadows.description: Make the Meadows come alive with the sound of music from a jukebox"
          ],
          "removed": [
            "advancements.husbandry.play_jukebox_in_meadows.title: Sound of Music",
            "advancements.husbandry.play_jukebox_in_meadows.description: Make the Meadows come alive with the sound of music from a jukebox"
          ]
        }
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "generated",
        "differences": {
          "added": [
            "reports/worldgen/minecraft/dimension/overworld.json",
            "reports/worldgen/minecraft/dimension/the_end.json",
            "reports/worldgen/minecraft/dimension/the_nether.json",
            "reports/worldgen/minecraft/dimension_type/overworld.json",
            "reports/worldgen/minecraft/dimension_type/overworld_caves.json",
            "reports/worldgen/minecraft/dimension_type/the_end.json",
            "reports/worldgen/minecraft/dimension_type/the_nether.json",
            "reports/worldgen/minecraft/worldgen/biome/badlands.json",
            "reports/worldgen/minecraft/worldgen/biome/bamboo_jungle.json",
            "reports/worldgen/minecraft/worldgen/biome/basalt_deltas.json",
            "reports/worldgen/minecraft/worldgen/biome/beach.json",
            "reports/worldgen/minecraft/worldgen/biome/birch_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/cold_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/crimson_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/dark_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/deep_cold_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/deep_frozen_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/deep_lukewarm_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/deep_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/desert.json",
            "reports/worldgen/minecraft/worldgen/biome/dripstone_caves.json",
            "reports/worldgen/minecraft/worldgen/biome/end_barrens.json",
            "reports/worldgen/minecraft/worldgen/biome/end_highlands.json",
            "reports/worldgen/minecraft/worldgen/biome/end_midlands.json",
            "reports/worldgen/minecraft/worldgen/biome/eroded_badlands.json",
            "reports/worldgen/minecraft/worldgen/biome/flower_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/forest.json",
            "reports/worldgen/minecraft/worldgen/biome/frozen_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/frozen_peaks.json",
            "reports/worldgen/minecraft/worldgen/biome/frozen_river.json",
            "reports/worldgen/minecraft/worldgen/biome/grove.json",
            "reports/worldgen/minecraft/worldgen/biome/ice_spikes.json",
            "reports/worldgen/minecraft/worldgen/biome/jagged_peaks.json",
            "reports/worldgen/minecraft/worldgen/biome/jungle.json",
            "reports/worldgen/minecraft/worldgen/biome/lukewarm_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/lush_caves.json",
            "reports/worldgen/minecraft/worldgen/biome/meadow.json",
            "reports/worldgen/minecraft/worldgen/biome/mushroom_fields.json",
            "reports/worldgen/minecraft/worldgen/biome/nether_wastes.json",
            "reports/worldgen/minecraft/worldgen/biome/ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/old_growth_birch_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/old_growth_pine_taiga.json",
            "reports/worldgen/minecraft/worldgen/biome/old_growth_spruce_taiga.json",
            "reports/worldgen/minecraft/worldgen/biome/plains.json",
            "reports/worldgen/minecraft/worldgen/biome/river.json",
            "reports/worldgen/minecraft/worldgen/biome/savanna.json",
            "reports/worldgen/minecraft/worldgen/biome/savanna_plateau.json",
            "reports/worldgen/minecraft/worldgen/biome/small_end_islands.json",
            "reports/worldgen/minecraft/worldgen/biome/snowy_beach.json",
            "reports/worldgen/minecraft/worldgen/biome/snowy_plains.json",
            "reports/worldgen/minecraft/worldgen/biome/snowy_slopes.json",
            "reports/worldgen/minecraft/worldgen/biome/snowy_taiga.json",
            "reports/worldgen/minecraft/worldgen/biome/soul_sand_valley.json",
            "reports/worldgen/minecraft/worldgen/biome/sparse_jungle.json",
            "reports/worldgen/minecraft/worldgen/biome/stony_peaks.json",
            "reports/worldgen/minecraft/worldgen/biome/stony_shore.json",
            "reports/worldgen/minecraft/worldgen/biome/sunflower_plains.json",
            "reports/worldgen/minecraft/worldgen/biome/swamp.json",
            "reports/worldgen/minecraft/worldgen/biome/taiga.json",
            "reports/worldgen/minecraft/worldgen/biome/the_end.json",
            "reports/worldgen/minecraft/worldgen/biome/the_void.json",
            "reports/worldgen/minecraft/worldgen/biome/warm_ocean.json",
            "reports/worldgen/minecraft/worldgen/biome/warped_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/windswept_forest.json",
            "reports/worldgen/minecraft/worldgen/biome/windswept_gravelly_hills.json",
            "reports/worldgen/minecraft/worldgen/biome/windswept_hills.json",
            "reports/worldgen/minecraft/worldgen/biome/windswept_savanna.json",
            "reports/worldgen/minecraft/worldgen/biome/wooded_badlands.json",
            "reports/worldgen/minecraft/worldgen/configured_carver/canyon.json",
            "reports/worldgen/minecraft/worldgen/configured_carver/cave.json",
            "reports/worldgen/minecraft/worldgen/configured_carver/cave_extra_underground.json",
            "reports/worldgen/minecraft/worldgen/configured_carver/nether_cave.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/acacia.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/amethyst_geode.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/azalea_tree.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/bamboo_no_podzol.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/bamboo_some_podzol.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/bamboo_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/basalt_blobs.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/basalt_pillar.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/birch.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/birch_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/birch_bees_002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/birch_bees_005.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/birch_tall.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/blackstone_blobs.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/blue_ice.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/bonus_chest.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/cave_vine.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/cave_vine_in_moss.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/chorus_plant.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/clay_pool_with_dripleaves.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/clay_with_dripleaves.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/crimson_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/crimson_forest_vegetation_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/crimson_fungus.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/crimson_fungus_planted.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/dark_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/dark_oak.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/delta.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/desert_well.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/disk_clay.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/disk_gravel.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/disk_sand.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/dripleaf.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/dripstone_cluster.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/end_gateway_delayed.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/end_gateway_return.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/end_island.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/end_spike.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fancy_oak.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fancy_oak_bees.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fancy_oak_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fancy_oak_bees_002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fancy_oak_bees_005.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/flower_default.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/flower_flower_forest.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/flower_meadow.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/flower_plain.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/flower_swamp.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/forest_flowers.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/forest_rock.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fossil_coal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/fossil_diamonds.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/freeze_top_layer.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/glowstone_extra.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/glow_lichen.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/huge_brown_mushroom.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/huge_red_mushroom.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/iceberg_blue.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/iceberg_packed.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ice_patch.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ice_spike.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/jungle_bush.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/jungle_tree.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/jungle_tree_no_vine.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/kelp.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/lake_lava.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/large_basalt_columns_temp.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/large_dripstone.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/lush_caves_clay.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/meadow_trees.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/mega_jungle_tree.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/mega_pine.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/mega_spruce.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/monster_room.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/moss_patch.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/moss_patch_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/moss_patch_ceiling.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/moss_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/mushroom_island_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/nether_sprouts.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/nether_sprouts_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/oak.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/oak_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/oak_bees_002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/oak_bees_005.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_ancient_debris_large.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_ancient_debris_small.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_andesite.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_blackstone.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_clay.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_coal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_coal_buried.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_copper_large.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_copper_small.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_diamond_buried.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_diamond_large.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_diamond_small.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_diorite.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_dirt.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_emerald.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_gold.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_gold_buried.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_granite.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_gravel.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_gravel_nether.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_infested.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_iron.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_iron_small.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_lapis.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_lapis_buried.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_magma.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_nether_gold.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_quartz.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_redstone.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_soul_sand.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/ore_tuff.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_berry_bush.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_brown_mushroom.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_cactus.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_crimson_roots.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_dead_bush.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_fire.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_grass.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_grass_jungle.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_large_fern.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_melon.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_pumpkin.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_red_mushroom.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_soul_fire.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_sugar_cane.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_sunflower.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_taiga_grass.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_tall_grass.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/patch_waterlily.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pile_hay.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pile_ice.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pile_melon.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pile_pumpkin.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pile_snow.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pine.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/pointed_dripstone.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/rooted_azalea_tree.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/seagrass_mid.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/seagrass_short.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/seagrass_simple.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/seagrass_slightly_less_short.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/seagrass_tall.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/sea_pickle.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/single_piece_of_grass.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/small_basalt_columns.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spore_blossom.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_lava_frozen.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_lava_nether.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_lava_overworld.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_nether_closed.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_nether_open.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spring_water.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/spruce.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/super_birch_bees.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/super_birch_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/swamp_oak.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_birch_and_oak.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_flower_forest.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_grove.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_jungle.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_old_growth_pine_taiga.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_old_growth_spruce_taiga.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_plains.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_savanna.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_sparse_jungle.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_taiga.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_water.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/trees_windswept_hills.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/twisting_vines.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/twisting_vines_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/underwater_magma.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/vines.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/void_start_platform.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/warm_ocean_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/warped_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/warped_forest_vegetation_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/warped_fungus.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/warped_fungus_planted.json",
            "reports/worldgen/minecraft/worldgen/configured_feature/weeping_vines.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/bastion_remnant.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/buried_treasure.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/desert_pyramid.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/end_city.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/fortress.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/igloo.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/jungle_pyramid.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/mansion.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/mineshaft.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/mineshaft_mesa.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/monument.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/nether_fossil.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ocean_ruin_cold.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ocean_ruin_warm.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/pillager_outpost.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_desert.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_jungle.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_mountain.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_nether.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_ocean.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/ruined_portal_swamp.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/shipwreck.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/shipwreck_beached.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/stronghold.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/swamp_hut.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/village_desert.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/village_plains.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/village_savanna.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/village_snowy.json",
            "reports/worldgen/minecraft/worldgen/configured_structure_feature/village_taiga.json",
            "reports/worldgen/minecraft/worldgen/noise/aquifer_barrier.json",
            "reports/worldgen/minecraft/worldgen/noise/aquifer_fluid_level_floodedness.json",
            "reports/worldgen/minecraft/worldgen/noise/aquifer_fluid_level_spread.json",
            "reports/worldgen/minecraft/worldgen/noise/aquifer_lava.json",
            "reports/worldgen/minecraft/worldgen/noise/badlands_pillar.json",
            "reports/worldgen/minecraft/worldgen/noise/badlands_pillar_roof.json",
            "reports/worldgen/minecraft/worldgen/noise/badlands_surface.json",
            "reports/worldgen/minecraft/worldgen/noise/calcite.json",
            "reports/worldgen/minecraft/worldgen/noise/cave_cheese.json",
            "reports/worldgen/minecraft/worldgen/noise/cave_entrance.json",
            "reports/worldgen/minecraft/worldgen/noise/cave_layer.json",
            "reports/worldgen/minecraft/worldgen/noise/clay_bands_offset.json",
            "reports/worldgen/minecraft/worldgen/noise/continentalness.json",
            "reports/worldgen/minecraft/worldgen/noise/continentalness_large.json",
            "reports/worldgen/minecraft/worldgen/noise/erosion.json",
            "reports/worldgen/minecraft/worldgen/noise/erosion_large.json",
            "reports/worldgen/minecraft/worldgen/noise/gravel.json",
            "reports/worldgen/minecraft/worldgen/noise/gravel_layer.json",
            "reports/worldgen/minecraft/worldgen/noise/ice.json",
            "reports/worldgen/minecraft/worldgen/noise/iceberg_pillar.json",
            "reports/worldgen/minecraft/worldgen/noise/iceberg_pillar_roof.json",
            "reports/worldgen/minecraft/worldgen/noise/iceberg_surface.json",
            "reports/worldgen/minecraft/worldgen/noise/jagged.json",
            "reports/worldgen/minecraft/worldgen/noise/netherrack.json",
            "reports/worldgen/minecraft/worldgen/noise/nether_state_selector.json",
            "reports/worldgen/minecraft/worldgen/noise/nether_wart.json",
            "reports/worldgen/minecraft/worldgen/noise/noodle.json",
            "reports/worldgen/minecraft/worldgen/noise/noodle_ridge_a.json",
            "reports/worldgen/minecraft/worldgen/noise/noodle_ridge_b.json",
            "reports/worldgen/minecraft/worldgen/noise/noodle_thickness.json",
            "reports/worldgen/minecraft/worldgen/noise/offset.json",
            "reports/worldgen/minecraft/worldgen/noise/ore_gap.json",
            "reports/worldgen/minecraft/worldgen/noise/ore_veininess.json",
            "reports/worldgen/minecraft/worldgen/noise/ore_vein_a.json",
            "reports/worldgen/minecraft/worldgen/noise/ore_vein_b.json",
            "reports/worldgen/minecraft/worldgen/noise/packed_ice.json",
            "reports/worldgen/minecraft/worldgen/noise/patch.json",
            "reports/worldgen/minecraft/worldgen/noise/pillar.json",
            "reports/worldgen/minecraft/worldgen/noise/pillar_rareness.json",
            "reports/worldgen/minecraft/worldgen/noise/pillar_thickness.json",
            "reports/worldgen/minecraft/worldgen/noise/powder_snow.json",
            "reports/worldgen/minecraft/worldgen/noise/ridge.json",
            "reports/worldgen/minecraft/worldgen/noise/soul_sand_layer.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_2d.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_2d_elevation.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_2d_modulator.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_2d_thickness.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_3d_1.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_3d_2.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_3d_rarity.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_3d_thickness.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_roughness.json",
            "reports/worldgen/minecraft/worldgen/noise/spaghetti_roughness_modulator.json",
            "reports/worldgen/minecraft/worldgen/noise/surface.json",
            "reports/worldgen/minecraft/worldgen/noise/surface_secondary.json",
            "reports/worldgen/minecraft/worldgen/noise/surface_swamp.json",
            "reports/worldgen/minecraft/worldgen/noise/temperature.json",
            "reports/worldgen/minecraft/worldgen/noise/temperature_large.json",
            "reports/worldgen/minecraft/worldgen/noise/vegetation.json",
            "reports/worldgen/minecraft/worldgen/noise/vegetation_large.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/amplified.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/caves.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/end.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/floating_islands.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/large_biomes.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/nether.json",
            "reports/worldgen/minecraft/worldgen/noise_settings/overworld.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/acacia_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/amethyst_geode.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/bamboo.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/bamboo_light.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/bamboo_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/basalt_blobs.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/basalt_pillar.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/birch_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/birch_bees_002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/birch_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/birch_tall.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/blackstone_blobs.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/blue_ice.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/brown_mushroom_nether.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/brown_mushroom_normal.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/brown_mushroom_old_growth.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/brown_mushroom_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/brown_mushroom_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/cave_vines.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/chorus_plant.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/classic_vines_cave_feature.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/crimson_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/crimson_fungi.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/dark_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/dark_oak_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/delta.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/desert_well.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/disk_clay.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/disk_gravel.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/disk_sand.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/dripstone_cluster.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/end_gateway_return.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/end_island_decorated.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/end_spike.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fancy_oak_bees.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fancy_oak_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fancy_oak_bees_002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fancy_oak_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_default.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_flower_forest.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_forest_flowers.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_meadow.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_plain.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/flower_warm.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/forest_flowers.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/forest_rock.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fossil_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/fossil_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/freeze_top_layer.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/glowstone.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/glowstone_extra.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/glow_lichen.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/grass_bonemeal.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/iceberg_blue.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/iceberg_packed.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ice_patch.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ice_spike.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/jungle_bush.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/jungle_tree.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/kelp_cold.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/kelp_warm.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/lake_lava_surface.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/lake_lava_underground.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/large_basalt_columns.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/large_dripstone.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/lush_caves_ceiling_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/lush_caves_clay.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/lush_caves_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/mega_jungle_tree_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/mega_pine_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/mega_spruce_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/monster_room.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/monster_room_deep.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/mushroom_island_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/nether_sprouts.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/oak_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/oak_bees_002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/oak_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_ancient_debris_large.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_andesite_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_andesite_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_blackstone.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_clay.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_coal_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_coal_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_copper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_copper_large.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_debris_small.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_diamond.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_diamond_buried.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_diamond_large.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_diorite_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_diorite_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_dirt.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_emerald.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gold.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gold_deltas.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gold_extra.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gold_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gold_nether.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_granite_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_granite_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gravel.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_gravel_nether.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_infested.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_iron_middle.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_iron_small.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_iron_upper.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_lapis.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_lapis_buried.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_magma.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_quartz_deltas.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_quartz_nether.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_redstone.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_redstone_lower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_soul_sand.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/ore_tuff.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_berry_common.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_berry_rare.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_cactus_decorated.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_cactus_desert.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_crimson_roots.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_dead_bush.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_dead_bush_2.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_dead_bush_badlands.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_fire.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_badlands.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_forest.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_jungle.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_normal.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_plain.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_savanna.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_grass_taiga_2.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_large_fern.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_melon.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_pumpkin.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_soul_fire.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_sugar_cane.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_sugar_cane_badlands.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_sugar_cane_desert.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_sugar_cane_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_sunflower.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_tall_grass.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_tall_grass_2.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/patch_waterlily.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/pine_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/pine_on_snow.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/pointed_dripstone.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/red_mushroom_nether.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/red_mushroom_normal.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/red_mushroom_old_growth.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/red_mushroom_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/red_mushroom_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/rooted_azalea_tree.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_cold.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_deep.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_deep_cold.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_deep_warm.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_normal.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_river.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_simple.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/seagrass_warm.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/sea_pickle.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/small_basalt_columns.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spore_blossom.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_closed.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_closed_double.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_delta.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_lava.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_lava_frozen.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_open.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spring_water.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spruce_checked.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/spruce_on_snow.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/super_birch_bees.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/super_birch_bees_0002.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_badlands.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_birch.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_birch_and_oak.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_flower_forest.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_grove.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_jungle.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_meadow.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_old_growth_pine_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_old_growth_spruce_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_plains.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_savanna.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_snowy.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_sparse_jungle.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_swamp.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_taiga.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_water.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_windswept_forest.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_windswept_hills.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/trees_windswept_savanna.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/twisting_vines.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/underwater_magma.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/vines.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/void_start_platform.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/warm_ocean_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/warped_forest_vegetation.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/warped_fungi.json",
            "reports/worldgen/minecraft/worldgen/placed_feature/weeping_vines.json",
            "reports/worldgen/minecraft/worldgen/processor_list/bastion_generic_degradation.json",
            "reports/worldgen/minecraft/worldgen/processor_list/bottom_rampart.json",
            "reports/worldgen/minecraft/worldgen/processor_list/bridge.json",
            "reports/worldgen/minecraft/worldgen/processor_list/empty.json",
            "reports/worldgen/minecraft/worldgen/processor_list/entrance_replacement.json",
            "reports/worldgen/minecraft/worldgen/processor_list/farm_desert.json",
            "reports/worldgen/minecraft/worldgen/processor_list/farm_plains.json",
            "reports/worldgen/minecraft/worldgen/processor_list/farm_savanna.json",
            "reports/worldgen/minecraft/worldgen/processor_list/farm_snowy.json",
            "reports/worldgen/minecraft/worldgen/processor_list/farm_taiga.json",
            "reports/worldgen/minecraft/worldgen/processor_list/fossil_coal.json",
            "reports/worldgen/minecraft/worldgen/processor_list/fossil_diamonds.json",
            "reports/worldgen/minecraft/worldgen/processor_list/fossil_rot.json",
            "reports/worldgen/minecraft/worldgen/processor_list/high_rampart.json",
            "reports/worldgen/minecraft/worldgen/processor_list/high_wall.json",
            "reports/worldgen/minecraft/worldgen/processor_list/housing.json",
            "reports/worldgen/minecraft/worldgen/processor_list/mossify_10_percent.json",
            "reports/worldgen/minecraft/worldgen/processor_list/mossify_20_percent.json",
            "reports/worldgen/minecraft/worldgen/processor_list/mossify_70_percent.json",
            "reports/worldgen/minecraft/worldgen/processor_list/outpost_rot.json",
            "reports/worldgen/minecraft/worldgen/processor_list/rampart_degradation.json",
            "reports/worldgen/minecraft/worldgen/processor_list/roof.json",
            "reports/worldgen/minecraft/worldgen/processor_list/side_wall_degradation.json",
            "reports/worldgen/minecraft/worldgen/processor_list/stable_degradation.json",
            "reports/worldgen/minecraft/worldgen/processor_list/street_plains.json",
            "reports/worldgen/minecraft/worldgen/processor_list/street_savanna.json",
            "reports/worldgen/minecraft/worldgen/processor_list/street_snowy_or_taiga.json",
            "reports/worldgen/minecraft/worldgen/processor_list/treasure_rooms.json",
            "reports/worldgen/minecraft/worldgen/processor_list/zombie_desert.json",
            "reports/worldgen/minecraft/worldgen/processor_list/zombie_plains.json",
            "reports/worldgen/minecraft/worldgen/processor_list/zombie_savanna.json",
            "reports/worldgen/minecraft/worldgen/processor_list/zombie_snowy.json",
            "reports/worldgen/minecraft/worldgen/processor_list/zombie_taiga.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/blocks/gold.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/bridge_pieces.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/connectors.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/legs.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/ramparts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/rampart_plates.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/starting_pieces.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/bridge/walls.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/connectors.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/large_stables/inner.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/large_stables/outer.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/mirrored_starting_pieces.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/posts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/ramparts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/rampart_plates.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/small_stables/inner.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/small_stables/outer.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/stairs.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/starting_pieces.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/walls.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/hoglin_stable/wall_bases.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/mobs/hoglin.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/mobs/piglin.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/mobs/piglin_melee.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/starts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/bases/centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/bases.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/brains.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/connectors.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/corners/bottom.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/corners/edges.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/corners/middle.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/corners/top.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/entrances.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/extensions/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/extensions/large_pool.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/extensions/small_pool.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/ramparts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/roofs.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/stairs.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/walls/bottom.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/walls/mid.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/walls/outer.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/walls/top.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/treasure/walls.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/center_pieces.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/edges.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/edge_wall_units.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/fillers/stage_0.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/large_ramparts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/pathways.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/ramparts.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/rampart_plates.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/stages/rot/stage_1.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/stages/stage_0.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/stages/stage_1.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/stages/stage_2.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/stages/stage_3.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/walls/wall_bases.json",
            "reports/worldgen/minecraft/worldgen/template_pool/bastion/units/wall_units.json",
            "reports/worldgen/minecraft/worldgen/template_pool/empty.json",
            "reports/worldgen/minecraft/worldgen/template_pool/pillager_outpost/base_plates.json",
            "reports/worldgen/minecraft/worldgen/template_pool/pillager_outpost/features.json",
            "reports/worldgen/minecraft/worldgen/template_pool/pillager_outpost/feature_plates.json",
            "reports/worldgen/minecraft/worldgen/template_pool/pillager_outpost/towers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/animals.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/butcher_animals.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/cats.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/iron_golem.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/sheep.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/common/well_bottoms.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/town_centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/zombie/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/zombie/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/zombie/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/zombie/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/desert/zombie/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/town_centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/trees.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/zombie/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/zombie/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/zombie/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/plains/zombie/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/town_centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/trees.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/zombie/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/zombie/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/zombie/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/zombie/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/savanna/zombie/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/town_centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/trees.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/zombie/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/zombie/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/zombie/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/snowy/zombie/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/terminators.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/town_centers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/villagers.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/zombie/decor.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/zombie/houses.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/zombie/streets.json",
            "reports/worldgen/minecraft/worldgen/template_pool/village/taiga/zombie/villagers.json"
          ],
          "removed": [
            "reports/biomes/badlands.json",
            "reports/biomes/bamboo_jungle.json",
            "reports/biomes/basalt_deltas.json",
            "reports/biomes/beach.json",
            "reports/biomes/birch_forest.json",
            "reports/biomes/cold_ocean.json",
            "reports/biomes/crimson_forest.json",
            "reports/biomes/dark_forest.json",
            "reports/biomes/deep_cold_ocean.json",
            "reports/biomes/deep_frozen_ocean.json",
            "reports/biomes/deep_lukewarm_ocean.json",
            "reports/biomes/deep_ocean.json",
            "reports/biomes/desert.json",
            "reports/biomes/dripstone_caves.json",
            "reports/biomes/end_barrens.json",
            "reports/biomes/end_highlands.json",
            "reports/biomes/end_midlands.json",
            "reports/biomes/eroded_badlands.json",
            "reports/biomes/flower_forest.json",
            "reports/biomes/forest.json",
            "reports/biomes/frozen_ocean.json",
            "reports/biomes/frozen_peaks.json",
            "reports/biomes/frozen_river.json",
            "reports/biomes/grove.json",
            "reports/biomes/ice_spikes.json",
            "reports/biomes/jagged_peaks.json",
            "reports/biomes/jungle.json",
            "reports/biomes/lukewarm_ocean.json",
            "reports/biomes/lush_caves.json",
            "reports/biomes/meadow.json",
            "reports/biomes/mushroom_fields.json",
            "reports/biomes/nether_wastes.json",
            "reports/biomes/ocean.json",
            "reports/biomes/old_growth_birch_forest.json",
            "reports/biomes/old_growth_pine_taiga.json",
            "reports/biomes/old_growth_spruce_taiga.json",
            "reports/biomes/plains.json",
            "reports/biomes/river.json",
            "reports/biomes/savanna.json",
            "reports/biomes/savanna_plateau.json",
            "reports/biomes/small_end_islands.json",
            "reports/biomes/snowy_beach.json",
            "reports/biomes/snowy_plains.json",
            "reports/biomes/snowy_slopes.json",
            "reports/biomes/snowy_taiga.json",
            "reports/biomes/soul_sand_valley.json",
            "reports/biomes/sparse_jungle.json",
            "reports/biomes/stony_peaks.json",
            "reports/biomes/stony_shore.json",
            "reports/biomes/sunflower_plains.json",
            "reports/biomes/swamp.json",
            "reports/biomes/taiga.json",
            "reports/biomes/the_end.json",
            "reports/biomes/the_void.json",
            "reports/biomes/warm_ocean.json",
            "reports/biomes/warped_forest.json",
            "reports/biomes/windswept_forest.json",
            "reports/biomes/windswept_gravelly_hills.json",
            "reports/biomes/windswept_hills.json",
            "reports/biomes/windswept_savanna.json",
            "reports/biomes/wooded_badlands.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/advancements/adventure/fall_from_world_height.json",
            "minecraft/advancements/adventure/play_jukebox_in_meadows.json",
            "minecraft/advancements/nether/ride_strider_in_overworld_lava.json"
          ],
          "removed": [
            "minecraft/advancements/adventure/caves_and_cliffs.json",
            "minecraft/advancements/adventure/ride_strider_in_overworld_lava.json",
            "minecraft/advancements/husbandry/play_jukebox_in_meadows.json"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.UpgradeRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.Features$Configs",
            "XXX.worldgen.biome.BiomeReport",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$MemoryMap",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1451_7",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimeStamped",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.EntityDamageSource",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttackDamageMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.MobEffects$1",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomSwim",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VictoryStroll",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.ai.behavior.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.goat.Goat$GoatNodeEvaluator",
            "XXX.animal.goat.GoatAi",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.GlowItemFrame",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.ItemFrame$1",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.Painting",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Ravager$RavagerNavigation",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerLookControl",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Strider",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zoglin",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$1",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$11",
            "XXX.world.item.CreativeModeTab$2",
            "XXX.world.item.CreativeModeTab$4",
            "XXX.world.item.CreativeModeTab$6",
            "XXX.world.item.CreativeModeTab$8",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.DyeableHorseArmorItem",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack$TooltipPart",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.Vanishable",
            "XXX.world.item.Wearable",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.UpgradeRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureFeatureManager",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$BiomeCategory",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeManager",
            "XXX.level.levelgen.Density",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.GeodeCrackSettings",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.LegacyRandomSource$LegacyPositionalRandomFactory",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$NoiseFiller",
            "XXX.level.levelgen.NoiseChunk$Sampler",
            "XXX.level.levelgen.NoiseSampler",
            "XXX.level.levelgen.NoiseSampler$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.NoiseSamplingSettings",
            "XXX.level.levelgen.NoiseSlider",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.TerrainInfo",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.GenerationUpgradeData",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DripstoneClusterFeature",
            "XXX.levelgen.feature.EndCityFeature",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.FossilFeatureConfiguration",
            "XXX.levelgen.feature.GlowLichenFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungusFeature",
            "XXX.levelgen.feature.IcePatchFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.JigsawFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.WeightedConfiguredFeature",
            "XXX.feature.configurations.DecoratedFeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.LargeDripstoneConfiguration",
            "XXX.feature.configurations.MineshaftConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.PointedDripstoneConfiguration",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.RootSystemConfiguration",
            "XXX.feature.configurations.ScatterDecoratorConfiguration",
            "XXX.feature.configurations.UnderwaterMagmaConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.NoiseBasedStateProvider",
            "XXX.feature.stateproviders.NoiseThresholdProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.package-info",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.feature.trunkplacers.DarkOakTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer$FoliageCoords",
            "XXX.feature.trunkplacers.GiantTrunkPlacer",
            "XXX.feature.trunkplacers.StraightTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacerType",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.placement.BlockFilterDecorator",
            "XXX.levelgen.placement.CarvingMaskDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceDecorator",
            "XXX.levelgen.placement.ConfiguredDecorator",
            "XXX.levelgen.placement.CountNoiseDecorator",
            "XXX.levelgen.placement.DarkOakTreePlacementDecorator",
            "XXX.levelgen.placement.DecoratedDecoratorConfiguration",
            "XXX.levelgen.placement.EndGatewayPlacementDecorator",
            "XXX.levelgen.placement.EnvironmentScanDecorator",
            "XXX.levelgen.placement.FilterDecorator",
            "XXX.levelgen.placement.HeightmapDecorator",
            "XXX.levelgen.placement.LakeLavaPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.RangeDecorator",
            "XXX.levelgen.placement.ScatterDecorator",
            "XXX.levelgen.placement.SurfaceRelativeThresholdConfiguration",
            "XXX.levelgen.placement.VerticalDecorator",
            "XXX.levelgen.placement.WaterDepthThresholdDecorator",
            "XXX.placement.nether.package-info"
          ],
          "removed": [
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.recipes.UpgradeRecipeBuilder$Result",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.Carvers",
            "XXX.worldgen.biome.Biomes",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.minecraft.resources.RegistryResourceAccess",
            "XXX.minecraft.resources.RegistryResourceAccess$InMemoryStorage",
            "XXX.minecraft.resources.RegistryResourceAccess$ParsedEntry",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.TelemetryConstants",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.SavedDataVillageCropFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.BadRespawnPointDamage",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.IndirectEntityDamageSource",
            "XXX.world.effect.AbsoptionMobEffect",
            "XXX.world.effect.HealthBoostMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunIf",
            "XXX.ai.behavior.RunSometimes",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$AxolotlPathNavigation",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.goat.Goat",
            "XXX.animal.goat.Goat$GoatPathNavigation",
            "XXX.animal.goat.package-info",
            "XXX.animal.horse.AbstractChestedHorse$1",
            "XXX.animal.horse.AbstractHorse$1",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Markings",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.Variant",
            "XXX.animal.horse.package-info",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.ArmorStand$1",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.ItemFrame$2",
            "XXX.entity.decoration.Motive",
            "XXX.entity.decoration.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Ravager$RavagerNodeEvaluator",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGoToLavaGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Vindicator$VindicatorMeleeAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.AbstractMinecartContainer$1",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModeCheck",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$10",
            "XXX.world.item.CreativeModeTab$12",
            "XXX.world.item.CreativeModeTab$3",
            "XXX.world.item.CreativeModeTab$5",
            "XXX.world.item.CreativeModeTab$7",
            "XXX.world.item.CreativeModeTab$9",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.DyeableArmorItem",
            "XXX.world.item.DyeableLeatherItem",
            "XXX.world.item.ElytraItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.UpgradeRecipe$Serializer",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.GeodeBlockSettings",
            "XXX.level.levelgen.GeodeLayerSettings",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.LegacyRandomSource",
            "XXX.level.levelgen.MarsagliaPolarGaussian",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$InterpolatableNoise",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseSampler$FlatNoiseData",
            "XXX.level.levelgen.NoiseSampler$VeinType",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomSource",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.StructureSettings",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$PositionedBlendingData",
            "XXX.levelgen.blending.BlendingData$1",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.DiskReplaceFeature",
            "XXX.levelgen.feature.DripstoneUtils",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FeatureCountTracker",
            "XXX.levelgen.feature.FeatureCountTracker$FeatureData",
            "XXX.levelgen.feature.FeaturePlaceContext",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GeodeFeature",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeFungusConfiguration",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.IglooFeature",
            "XXX.levelgen.feature.JunglePyramidFeature",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.JigsawConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.NetherForestVegetationConfig",
            "XXX.feature.configurations.OreConfiguration$TargetBlockState",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RangeConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.RuinedPortalConfiguration",
            "XXX.feature.configurations.TwistingVinesConfig",
            "XXX.feature.configurations.VegetationPatchConfiguration",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.DualNoiseProvider",
            "XXX.feature.stateproviders.NoiseProvider",
            "XXX.feature.stateproviders.RandomizedIntStateProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.LegacySinglePoolElement",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.feature.trunkplacers.BendingTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer",
            "XXX.feature.trunkplacers.ForkingTrunkPlacer",
            "XXX.feature.trunkplacers.MegaJungleTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacer",
            "XXX.feature.trunkplacers.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.TrapezoidHeight",
            "XXX.levelgen.heightproviders.VeryBiasedToBottomHeight",
            "XXX.levelgen.placement.BlockPredicateFilter",
            "XXX.levelgen.placement.CountPlacement",
            "XXX.levelgen.placement.HeightRangePlacement",
            "XXX.levelgen.placement.InSquarePlacement",
            "XXX.levelgen.placement.NoiseThresholdCountPlacement",
            "XXX.levelgen.placement.PlacementContext",
            "XXX.levelgen.placement.PlacementModifier",
            "XXX.levelgen.placement.RandomOffsetPlacement",
            "XXX.levelgen.placement.RepeatingPlacement",
            "XXX.levelgen.placement.SurfaceWaterDepthFilter"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.minecraft.core.IdMapper \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.core.MappedRegistry$RegistryEntry \u001b[2;32m+6M\u001b[0m",
          "XXX.minecraft.core.RegistryAccess \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.data.BuiltinRegistries \u001b[2;32m+3M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.data.worldgen.NoiseData \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.data.worldgen.TerrainProvider \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.resources.RegistryReadOps$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.minecraft.resources.ResourceKey \u001b[2;32m+1M\u001b[0m",
          "XXX.server.commands.JfrCommand \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.server.players.PlayerList \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.util.CubicSpline \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.util.CubicSpline$Builder \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.util.StringRepresentable$1 \u001b[2;32m+2M\u001b[0m \u001b[2;31m-11M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.level.biome.BiomeSource \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.biome.Climate$RTree$Leaf \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource$PresetInstance \u001b[2;32m+3M\u001b[0m",
          "XXX.level.biome.TerrainShaper \u001b[2;32m+12M\u001b[0m \u001b[2;31m-8M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.border.WorldBorder \u001b[2;32m+1M\u001b[0m",
          "XXX.level.chunk.LevelChunk \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.chunk.ProtoChunk \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.blockpredicates.BlockPredicate \u001b[2;32m+9M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.levelgen.carver.CarvingContext \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.NetherForestVegetationFeature \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.PillagerOutpostFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.levelgen.feature.StructureFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.levelgen.feature.TwistingVinesFeature \u001b[2;31m-2M\u001b[0m",
          "XXX.level.portal.PortalForcer \u001b[2;32m+7M\u001b[0m \u001b[2;31m-6M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.MappedRegistry$RegistryEntry",
        "differences": {
          "added": [],
          "removed": [
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)",
            "ResourceKey key()",
            "int id()",
            "Object value()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.RegistryAccess",
        "differences": {
          "added": [
            "void addBuiltinElements(RegistryAccess$RegistryHolder,RegistryReadOps$ResourceAccess$MemoryMap,RegistryAccess$RegistryData)"
          ],
          "removed": [
            "Iterable knownRegistries()",
            "void addBuiltinElements(RegistryAccess$RegistryHolder,RegistryResourceAccess$InMemoryStorage,RegistryAccess$RegistryData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.BuiltinRegistries",
        "differences": {
          "added": [
            "void lambda$static$4(ResourceLocation,Supplier)",
            "Biome lambda$static$3()",
            "StructureProcessorList lambda$static$2()",
            "ConfiguredFeature lambda$static$1()"
          ],
          "removed": [
            "void lambda$static$3(ResourceLocation,Supplier)",
            "Biome lambda$static$2()",
            "StructureProcessorList lambda$static$1()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.NoiseData",
        "differences": {
          "added": [
            "void registerBiomeNoises(int,ResourceKey,ResourceKey,ResourceKey,ResourceKey,ResourceKey,ResourceKey)"
          ],
          "removed": [
            "void registerBiomeNoises(int,ResourceKey,ResourceKey,ResourceKey,ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.TerrainProvider",
        "differences": {
          "added": [
            "TerrainShaper overworld()"
          ],
          "removed": [
            "TerrainShaper overworld(boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.resources.RegistryReadOps$1",
        "differences": {
          "added": [
            "void <init>(RegistryReadOps,WritableRegistry,ResourceKey)"
          ],
          "removed": [
            "void <init>(Registry,ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.resources.ResourceKey",
        "differences": {
          "added": [],
          "removed": [
            "Optional cast(ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.commands.JfrCommand",
        "differences": {
          "added": [
            "Style lambda$stopJfr$4(File,Style)"
          ],
          "removed": [
            "Style lambda$stopJfr$4(Path,Style)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.players.PlayerList",
        "differences": {
          "added": [
            "void setLevel(ServerLevel)"
          ],
          "removed": [
            "void addWorldborderListener(ServerLevel)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.CubicSpline",
        "differences": {
          "added": [],
          "removed": [
            "CubicSpline$Builder builder(ToFloatFunction,ToFloatFunction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.CubicSpline$Builder",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(ToFloatFunction,ToFloatFunction)",
            "float lambda$new$0(Float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.StringRepresentable$1",
        "differences": {
          "added": [
            "void <init>(ToIntFunction,IntFunction,Function)",
            "DataResult encode(StringRepresentable,DynamicOps,Object)",
            "DataResult decode(DynamicOps,Object)",
            "String toString()",
            "DataResult encode(Object,DynamicOps,Object)",
            "Pair lambda$decode$5(DynamicOps,StringRepresentable)",
            "DataResult lambda$decode$4(Function,String)",
            "DataResult lambda$decode$3(String)",
            "Pair lambda$decode$2(DynamicOps,StringRepresentable)",
            "DataResult lambda$decode$1(IntFunction,Number)",
            "DataResult lambda$decode$0(Number)"
          ],
          "removed": [
            "void <init>(StringRepresentable[])",
            "Stream keys(DynamicOps)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSource",
        "differences": {
          "added": [
            "ImmutableList featuresPerStep()",
            "boolean lambda$new$2(int,BiomeSource$1FeatureData)",
            "Set lambda$new$1(Comparator,BiomeSource$1FeatureData)",
            "int lambda$new$0(MutableInt,Object)"
          ],
          "removed": [
            "List buildFeaturesPerStep(List,boolean)",
            "List featuresPerStep()",
            "boolean lambda$buildFeaturesPerStep$2(int,BiomeSource$1FeatureData)",
            "Set lambda$buildFeaturesPerStep$1(Comparator,BiomeSource$1FeatureData)",
            "int lambda$buildFeaturesPerStep$0(MutableInt,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Climate$RTree$Leaf",
        "differences": {
          "added": [
            "void <init>(Climate$ParameterPoint,Supplier)"
          ],
          "removed": [
            "void <init>(Climate$ParameterPoint,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource",
        "differences": {
          "added": [
            "Biome lambda$getNoiseBiome$7()",
            "MultiNoiseBiomeSource$PresetInstance lambda$preset$6(Pair)"
          ],
          "removed": [
            "Biome lambda$getNoiseBiome$6()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource$PresetInstance",
        "differences": {
          "added": [],
          "removed": [
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.TerrainShaper",
        "differences": {
          "added": [
            "TerrainShaper overworld()",
            "CubicSpline buildErosionJaggednessSpline(float,float,float,float)",
            "CubicSpline buildRidgeJaggednessSpline(float,float)",
            "CubicSpline buildWeirdnessJaggednessSpline(float)",
            "CubicSpline getErosionFactor(float,boolean)",
            "CubicSpline buildMountainRidgeSplineWithPoints(float,boolean)",
            "CubicSpline buildErosionOffsetSpline(float,float,float,float,float,float,boolean,boolean)",
            "CubicSpline ridgeSpline(float,float,float,float,float,float)"
          ],
          "removed": [
            "float getAmplifiedOffset(float)",
            "float getAmplifiedFactor(float)",
            "float getAmplifiedJaggedness(float)",
            "TerrainShaper overworld(boolean)",
            "CubicSpline buildErosionJaggednessSpline(float,float,float,float,ToFloatFunction)",
            "CubicSpline buildRidgeJaggednessSpline(float,float,ToFloatFunction)",
            "CubicSpline buildWeirdnessJaggednessSpline(float,ToFloatFunction)",
            "CubicSpline getErosionFactor(float,boolean,ToFloatFunction)",
            "CubicSpline buildMountainRidgeSplineWithPoints(float,boolean,ToFloatFunction)",
            "CubicSpline buildErosionOffsetSpline(float,float,float,float,float,float,boolean,boolean,ToFloatFunction)",
            "CubicSpline ridgeSpline(float,float,float,float,float,float,ToFloatFunction)",
            "float lambda$static$2(Float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.border.WorldBorder",
        "differences": {
          "added": [],
          "removed": [
            "BlockPos clampToBounds(double,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.LevelChunk",
        "differences": {
          "added": [
            "void <init>(Level,ChunkPos,UpgradeData,LevelChunkTicks,LevelChunkTicks,long,LevelChunkSection[],Consumer,GenerationUpgradeData)"
          ],
          "removed": [
            "void <init>(Level,ChunkPos,UpgradeData,LevelChunkTicks,LevelChunkTicks,long,LevelChunkSection[],Consumer,BlendingData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.ProtoChunk",
        "differences": {
          "added": [
            "void <init>(ChunkPos,UpgradeData,LevelHeightAccessor,Registry,GenerationUpgradeData)",
            "void <init>(ChunkPos,UpgradeData,LevelChunkSection[],ProtoChunkTicks,ProtoChunkTicks,LevelHeightAccessor,Registry,GenerationUpgradeData)"
          ],
          "removed": [
            "void <init>(ChunkPos,UpgradeData,LevelHeightAccessor,Registry,BlendingData)",
            "void <init>(ChunkPos,UpgradeData,LevelChunkSection[],ProtoChunkTicks,ProtoChunkTicks,LevelHeightAccessor,Registry,BlendingData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate",
        "differences": {
          "added": [
            "BlockPredicate matchesBlocks(List,BlockPos)",
            "BlockPredicate matchesBlock(Block,BlockPos)",
            "BlockPredicate matchesFluids(List,BlockPos)",
            "BlockPredicate matchesFluid(Fluid,BlockPos)",
            "BlockPredicate replaceable(BlockPos)",
            "BlockPredicate wouldSurvive(BlockState,BlockPos)"
          ],
          "removed": [
            "BlockPredicate matchesBlocks(List,Vec3i)",
            "BlockPredicate matchesBlock(Block,Vec3i)",
            "BlockPredicate matchesFluids(List,Vec3i)",
            "BlockPredicate matchesFluid(Fluid,Vec3i)",
            "BlockPredicate replaceable(Vec3i)",
            "BlockPredicate wouldSurvive(BlockState,Vec3i)",
            "BlockPredicate solid(Vec3i)",
            "BlockPredicate solid()",
            "BlockPredicate insideWorld(Vec3i)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.CarvingContext",
        "differences": {
          "added": [
            "void <init>(NoiseBasedChunkGenerator,RegistryAccess,LevelHeightAccessor)"
          ],
          "removed": [
            "void <init>(NoiseBasedChunkGenerator,RegistryAccess,LevelHeightAccessor,NoiseChunk)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,Random,BlockPos,BlockPileConfiguration,int,int)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,NoneFeatureConfiguration,LevelHeightAccessor)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,NoneFeatureConfiguration,LevelHeightAccessor)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.PillagerOutpostFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,JigsawConfiguration,LevelHeightAccessor)",
            "boolean isNearVillage(ChunkGenerator,long,WorldgenRandom,ChunkPos)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,JigsawConfiguration,LevelHeightAccessor)",
            "boolean isNearVillage(ChunkGenerator,long,ChunkPos)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.StructureFeature",
        "differences": {
          "added": [
            "ChunkPos getPotentialFeatureChunk(StructureFeatureConfiguration,long,WorldgenRandom,int,int)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)",
            "StructureStart generate(RegistryAccess,ChunkGenerator,BiomeSource,StructureManager,long,ChunkPos,int,WorldgenRandom,StructureFeatureConfiguration,FeatureConfiguration,LevelHeightAccessor,Predicate)",
            "void lambda$generate$2(long,ChunkPos,WorldgenRandom)"
          ],
          "removed": [
            "ChunkPos getPotentialFeatureChunk(StructureFeatureConfiguration,long,int,int)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)",
            "StructureStart generate(RegistryAccess,ChunkGenerator,BiomeSource,StructureManager,long,ChunkPos,int,StructureFeatureConfiguration,FeatureConfiguration,LevelHeightAccessor,Predicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.TwistingVinesFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,Random,BlockPos,int,int,int)",
            "void placeTwistingVines(LevelAccessor,Random,BlockPos,int,int,int)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.portal.PortalForcer",
        "differences": {
          "added": [
            "Optional findPortalAround(BlockPos,boolean)",
            "BlockUtil$FoundRectangle lambda$findPortalAround$5(PoiRecord)",
            "boolean lambda$findPortalAround$4(BlockState,BlockPos)",
            "boolean lambda$findPortalAround$3(PoiRecord)",
            "int lambda$findPortalAround$2(PoiRecord)",
            "double lambda$findPortalAround$1(BlockPos,PoiRecord)"
          ],
          "removed": [
            "Optional findPortalAround(BlockPos,boolean,WorldBorder)",
            "BlockUtil$FoundRectangle lambda$findPortalAround$6(PoiRecord)",
            "boolean lambda$findPortalAround$5(BlockState,BlockPos)",
            "boolean lambda$findPortalAround$4(PoiRecord)",
            "int lambda$findPortalAround$3(PoiRecord)",
            "double lambda$findPortalAround$2(BlockPos,PoiRecord)",
            "boolean lambda$findPortalAround$1(WorldBorder,PoiRecord)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.data.info.package-info",
            "XXX.data.loot.ChestLoot",
            "XXX.data.loot.FishingLoot",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.package-info",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$TintState",
            "XXX.data.models.ItemModelGenerators",
            "XXX.models.blockstates.BlockStateGenerator",
            "XXX.models.blockstates.Condition$CompositeCondition",
            "XXX.models.blockstates.Condition$TerminalCondition",
            "XXX.models.blockstates.MultiPartGenerator$ConditionalEntry",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.PropertyDispatch$QuadFunction",
            "XXX.models.blockstates.Selector",
            "XXX.models.blockstates.VariantProperties",
            "XXX.models.blockstates.VariantProperty",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.data.recipes.FinishedRecipe",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.ShapedRecipeBuilder$Result",
            "XXX.data.recipes.ShapelessRecipeBuilder$Result",
            "XXX.data.recipes.SimpleCookingRecipeBuilder$Result",
            "XXX.data.recipes.SingleItemRecipeBuilder$Result",
            "XXX.data.recipes.SpecialRecipeBuilder$1",
            "XXX.data.recipes.UpgradeRecipeBuilder$Result",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.Features",
            "XXX.data.worldgen.Features$Decorators",
            "XXX.worldgen.biome.Biomes",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess",
            "XXX.minecraft.resources.RegistryReadOps$ResourceAccess$MemoryMap",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AttributesRename",
            "XXX.datafix.fixes.BeehivePoiRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$1",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.ItemWrittenBookPagesStrictJsonFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.PoiTypeRename",
            "XXX.datafix.fixes.RecipesRenameFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1451_7",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.NetworkPacketSummary",
            "XXX.jfr.stats.NetworkPacketSummary$PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimeStamped",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.SimpleWeightedRandomList$Builder",
            "XXX.util.random.WeightedEntry",
            "XXX.util.random.WeightedEntry$Wrapper",
            "XXX.util.random.WeightedRandomList",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.ProcessorHandle",
            "XXX.util.thread.ProcessorMailbox",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$IntRunnable",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.EntityDamageSource",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.AttackDamageMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.MobEffects$1",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.LerpingModel",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobSpawnType",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.Pose",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoOutsideToCelebrate",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomSwim",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VictoryStroll",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.ai.behavior.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Type",
            "XXX.entity.animal.IronGolem$Crackiness",
            "XXX.entity.animal.MushroomCow$MushroomType",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep$1",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.entity.animal.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.goat.Goat$GoatNodeEvaluator",
            "XXX.animal.goat.GoatAi",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.GlowItemFrame",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.ItemFrame$1",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.Painting",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Ravager$RavagerNavigation",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerLookControl",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Strider",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zoglin",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$1",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$1",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.vehicle.AbstractMinecart$1",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.Boat$Status",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.InventoryMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArmorItem$1",
            "XXX.world.item.ArmorMaterials",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BookItem",
            "XXX.world.item.BowItem",
            "XXX.world.item.BucketItem",
            "XXX.world.item.ChorusFruitItem",
            "XXX.world.item.ComplexItem",
            "XXX.world.item.CreativeModeTab$1",
            "XXX.world.item.CreativeModeTab$11",
            "XXX.world.item.CreativeModeTab$2",
            "XXX.world.item.CreativeModeTab$4",
            "XXX.world.item.CreativeModeTab$6",
            "XXX.world.item.CreativeModeTab$8",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.DiggerItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.DyeableHorseArmorItem",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnchantedGoldenAppleItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FireworkStarItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemNameBlockItem",
            "XXX.world.item.ItemStack$TooltipPart",
            "XXX.world.item.Items",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PickaxeItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.Rarity",
            "XXX.world.item.SaddleItem",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.SwordItem",
            "XXX.world.item.Tier",
            "XXX.world.item.Tiers",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.Vanishable",
            "XXX.world.item.Wearable",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionUtils",
            "XXX.item.alchemy.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.Ingredient$ItemValue",
            "XXX.item.crafting.Ingredient$Value",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.ShulkerBoxColoring",
            "XXX.item.crafting.SimpleCookingSerializer$CookieBaker",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.SuspiciousStewRecipe",
            "XXX.item.crafting.UpgradeRecipe",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.ArrowFireEnchantment",
            "XXX.item.enchantment.ArrowKnockbackEnchantment",
            "XXX.item.enchantment.BindingCurseEnchantment",
            "XXX.item.enchantment.DigDurabilityEnchantment",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.EnchantmentCategory",
            "XXX.item.enchantment.EnchantmentCategory$10",
            "XXX.item.enchantment.EnchantmentCategory$12",
            "XXX.item.enchantment.EnchantmentCategory$14",
            "XXX.item.enchantment.EnchantmentCategory$3",
            "XXX.item.enchantment.EnchantmentCategory$5",
            "XXX.item.enchantment.EnchantmentCategory$7",
            "XXX.item.enchantment.EnchantmentCategory$9",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.FishingSpeedEnchantment",
            "XXX.item.enchantment.KnockbackEnchantment",
            "XXX.item.enchantment.MendingEnchantment",
            "XXX.item.enchantment.OxygenEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment$Type",
            "XXX.item.enchantment.SoulSpeedEnchantment",
            "XXX.item.enchantment.ThornsEnchantment",
            "XXX.item.enchantment.TridentImpalerEnchantment",
            "XXX.item.enchantment.TridentRiptideEnchantment",
            "XXX.item.enchantment.VanishingCurseEnchantment",
            "XXX.item.enchantment.WaterWorkerEnchantment",
            "XXX.world.item.package-info",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.ForcedChunksSavedData",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$1",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.SpawnData",
            "XXX.world.level.StructureFeatureManager",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$BiomeCategory",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeManager",
            "XXX.level.levelgen.Density",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.GeodeCrackSettings",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.LegacyRandomSource$LegacyPositionalRandomFactory",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$NoiseFiller",
            "XXX.level.levelgen.NoiseChunk$Sampler",
            "XXX.level.levelgen.NoiseSampler",
            "XXX.level.levelgen.NoiseSampler$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.NoiseSamplingSettings",
            "XXX.level.levelgen.NoiseSlider",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.TerrainInfo",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.GenerationUpgradeData",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DripstoneClusterFeature",
            "XXX.levelgen.feature.EndCityFeature",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.FossilFeatureConfiguration",
            "XXX.levelgen.feature.GlowLichenFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungusFeature",
            "XXX.levelgen.feature.IcePatchFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.JigsawFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.WeightedConfiguredFeature",
            "XXX.feature.configurations.DecoratedFeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.LargeDripstoneConfiguration",
            "XXX.feature.configurations.MineshaftConfiguration",
            "XXX.feature.configurations.NoneDecoratorConfiguration",
            "XXX.feature.configurations.OreConfiguration$Predicates",
            "XXX.feature.configurations.PointedDripstoneConfiguration",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.RootSystemConfiguration",
            "XXX.feature.configurations.ScatterDecoratorConfiguration",
            "XXX.feature.configurations.UnderwaterMagmaConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.NoiseBasedStateProvider",
            "XXX.feature.stateproviders.NoiseThresholdProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.structures.EmptyPoolElement",
            "XXX.feature.structures.JigsawJunction",
            "XXX.feature.structures.JigsawPlacement$PieceFactory",
            "XXX.feature.structures.JigsawPlacement$Placer",
            "XXX.feature.structures.ListPoolElement",
            "XXX.feature.structures.StructurePoolElement",
            "XXX.feature.structures.StructureTemplatePool",
            "XXX.feature.structures.package-info",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.feature.trunkplacers.DarkOakTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer$FoliageCoords",
            "XXX.feature.trunkplacers.GiantTrunkPlacer",
            "XXX.feature.trunkplacers.StraightTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacerType",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.placement.BlockFilterDecorator",
            "XXX.levelgen.placement.CarvingMaskDecoratorConfiguration",
            "XXX.levelgen.placement.ChanceDecorator",
            "XXX.levelgen.placement.ConfiguredDecorator",
            "XXX.levelgen.placement.CountNoiseDecorator",
            "XXX.levelgen.placement.DarkOakTreePlacementDecorator",
            "XXX.levelgen.placement.DecoratedDecoratorConfiguration",
            "XXX.levelgen.placement.EndGatewayPlacementDecorator",
            "XXX.levelgen.placement.EnvironmentScanDecorator",
            "XXX.levelgen.placement.FilterDecorator",
            "XXX.levelgen.placement.HeightmapDecorator",
            "XXX.levelgen.placement.LakeLavaPlacementDecorator",
            "XXX.levelgen.placement.NoiseCountFactorDecoratorConfiguration",
            "XXX.levelgen.placement.RangeDecorator",
            "XXX.levelgen.placement.ScatterDecorator",
            "XXX.levelgen.placement.SurfaceRelativeThresholdConfiguration",
            "XXX.levelgen.placement.VerticalDecorator",
            "XXX.levelgen.placement.WaterDepthThresholdDecorator",
            "XXX.placement.nether.package-info"
          ],
          "removed": [
            "XXX.data.info.WorldgenRegistryDumpReport",
            "XXX.data.loot.BlockLoot",
            "XXX.data.loot.EntityLoot",
            "XXX.data.loot.GiftLoot",
            "XXX.data.loot.PiglinBarterLoot",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockEntityModelGenerator",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ModelProvider",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.UpgradeRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BlockTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.minecraft.resources.RegistryResourceAccess",
            "XXX.minecraft.resources.RegistryResourceAccess$InMemoryStorage",
            "XXX.minecraft.resources.RegistryResourceAccess$ParsedEntry",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.TelemetryConstants",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntitySignTextStrictJsonFix$1",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockRenameFixWithJigsaw$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.ObjectiveDisplayNameFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RenameBiomesFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.SavedDataVillageCropFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.TeamDisplayNameFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.ProfilerFiller$1",
            "XXX.util.profiling.ResultField",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.NetworkPacketSummary$PacketCountAndSize",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.SimpleWeightedRandomList",
            "XXX.util.random.Weight",
            "XXX.util.random.WeightedEntry$IntrusiveBase",
            "XXX.util.random.WeightedRandom",
            "XXX.util.random.package-info",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ProcessorHandle$1",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResultHolder",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.BadRespawnPointDamage",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.IndirectEntityDamageSource",
            "XXX.world.effect.AbsoptionMobEffect",
            "XXX.world.effect.HealthBoostMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector$MobCanWearArmorEntitySelector",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Mob",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.MobType",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.PowerableMob",
            "XXX.world.entity.Saddleable",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.SpawnPlacements$Type",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToCelebrateLocation",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LocateHidingPlaceDuringRaid",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunIf",
            "XXX.ai.behavior.RunSometimes",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiType",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.PolarBear$PolarBearPanicGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$EvilRabbitAttackGoal",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Sheep",
            "XXX.entity.animal.Sheep$2",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.entity.animal.Wolf",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$AxolotlPathNavigation",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.goat.Goat",
            "XXX.animal.goat.Goat$GoatPathNavigation",
            "XXX.animal.goat.package-info",
            "XXX.animal.horse.AbstractChestedHorse$1",
            "XXX.animal.horse.AbstractHorse$1",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Markings",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.Variant",
            "XXX.animal.horse.package-info",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.ArmorStand$1",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.ItemFrame$2",
            "XXX.entity.decoration.Motive",
            "XXX.entity.decoration.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Ravager$RavagerMeleeAttackGoal",
            "XXX.entity.monster.Ravager$RavagerNodeEvaluator",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGoToLavaGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Vindicator$VindicatorMeleeAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.AbstractMinecart$Type",
            "XXX.entity.vehicle.AbstractMinecartContainer$1",
            "XXX.entity.vehicle.Boat$1",
            "XXX.entity.vehicle.Boat$Type",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu$1",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModeCheck",
            "XXX.world.item.ArmorItem",
            "XXX.world.item.ArmorMaterial",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BannerPatternItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BowlFoodItem",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$10",
            "XXX.world.item.CreativeModeTab$12",
            "XXX.world.item.CreativeModeTab$3",
            "XXX.world.item.CreativeModeTab$5",
            "XXX.world.item.CreativeModeTab$7",
            "XXX.world.item.CreativeModeTab$9",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.DyeableArmorItem",
            "XXX.world.item.DyeableLeatherItem",
            "XXX.world.item.ElytraItem",
            "XXX.world.item.EnchantedBookItem",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FireworkRocketItem$Shape",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoneyBottleItem",
            "XXX.world.item.HorseArmorItem",
            "XXX.world.item.Item$1",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MilkBucketItem",
            "XXX.world.item.MinecartItem$1",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.RecordItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SimpleFoiledItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.SuspiciousStewItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.TieredItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.UseAnim",
            "XXX.world.item.WaterLilyBlockItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.Ingredient$TagValue",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SimpleCookingSerializer",
            "XXX.item.crafting.SimpleRecipeSerializer",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.UpgradeRecipe$Serializer",
            "XXX.item.enchantment.ArrowDamageEnchantment",
            "XXX.item.enchantment.ArrowInfiniteEnchantment",
            "XXX.item.enchantment.ArrowPiercingEnchantment",
            "XXX.item.enchantment.DamageEnchantment",
            "XXX.item.enchantment.DiggingEnchantment",
            "XXX.item.enchantment.Enchantment$Rarity",
            "XXX.item.enchantment.EnchantmentCategory$1",
            "XXX.item.enchantment.EnchantmentCategory$11",
            "XXX.item.enchantment.EnchantmentCategory$13",
            "XXX.item.enchantment.EnchantmentCategory$2",
            "XXX.item.enchantment.EnchantmentCategory$4",
            "XXX.item.enchantment.EnchantmentCategory$6",
            "XXX.item.enchantment.EnchantmentCategory$8",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.FireAspectEnchantment",
            "XXX.item.enchantment.FrostWalkerEnchantment",
            "XXX.item.enchantment.LootBonusEnchantment",
            "XXX.item.enchantment.MultiShotEnchantment",
            "XXX.item.enchantment.ProtectionEnchantment",
            "XXX.item.enchantment.QuickChargeEnchantment",
            "XXX.item.enchantment.SweepingEdgeEnchantment",
            "XXX.item.enchantment.TridentChannelingEnchantment",
            "XXX.item.enchantment.TridentLoyaltyEnchantment",
            "XXX.item.enchantment.UntouchingEnchantment",
            "XXX.item.enchantment.WaterWalkerEnchantment",
            "XXX.item.enchantment.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep$Carving",
            "XXX.level.levelgen.GeodeBlockSettings",
            "XXX.level.levelgen.GeodeLayerSettings",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.LegacyRandomSource",
            "XXX.level.levelgen.MarsagliaPolarGaussian",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$InterpolatableNoise",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseSampler$FlatNoiseData",
            "XXX.level.levelgen.NoiseSampler$VeinType",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomSource",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.StructureSettings",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$PositionedBlendingData",
            "XXX.levelgen.blending.BlendingData$1",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.feature.DesertPyramidFeature",
            "XXX.levelgen.feature.DiskReplaceFeature",
            "XXX.levelgen.feature.DripstoneUtils",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.levelgen.feature.FeatureCountTracker",
            "XXX.levelgen.feature.FeatureCountTracker$FeatureData",
            "XXX.levelgen.feature.FeaturePlaceContext",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GeodeFeature",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeFungusConfiguration",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.IglooFeature",
            "XXX.levelgen.feature.JunglePyramidFeature",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.JigsawConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.NetherForestVegetationConfig",
            "XXX.feature.configurations.OreConfiguration$TargetBlockState",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.RangeConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.RuinedPortalConfiguration",
            "XXX.feature.configurations.TwistingVinesConfig",
            "XXX.feature.configurations.VegetationPatchConfiguration",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.DualNoiseProvider",
            "XXX.feature.stateproviders.NoiseProvider",
            "XXX.feature.stateproviders.RandomizedIntStateProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.structures.FeaturePoolElement",
            "XXX.feature.structures.JigsawPlacement",
            "XXX.feature.structures.JigsawPlacement$PieceState",
            "XXX.feature.structures.LegacySinglePoolElement",
            "XXX.feature.structures.SinglePoolElement",
            "XXX.feature.structures.StructurePoolElementType",
            "XXX.feature.structures.StructureTemplatePool$Projection",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.feature.trunkplacers.BendingTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer",
            "XXX.feature.trunkplacers.ForkingTrunkPlacer",
            "XXX.feature.trunkplacers.MegaJungleTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacer",
            "XXX.feature.trunkplacers.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.TrapezoidHeight",
            "XXX.levelgen.heightproviders.VeryBiasedToBottomHeight",
            "XXX.levelgen.placement.BlockPredicateFilter",
            "XXX.levelgen.placement.CountPlacement",
            "XXX.levelgen.placement.HeightRangePlacement",
            "XXX.levelgen.placement.InSquarePlacement",
            "XXX.levelgen.placement.NoiseThresholdCountPlacement",
            "XXX.levelgen.placement.PlacementContext",
            "XXX.levelgen.placement.PlacementModifier",
            "XXX.levelgen.placement.RandomOffsetPlacement",
            "XXX.levelgen.placement.RepeatingPlacement",
            "XXX.levelgen.placement.SurfaceWaterDepthFilter"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "net.minecraft.SharedConstants \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.screens.worldselection.WorldGenSettingsComponent \u001b[2;32m+10M\u001b[0m \u001b[2;31m-9M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.core.MappedRegistry \u001b[2;32m+8M\u001b[0m \u001b[2;31m-9M\u001b[0m",
          "XXX.minecraft.core.Registry \u001b[2;32m+9M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.minecraft.core.RegistryAccess$RegistryData \u001b[2;32m+3M\u001b[0m",
          "XXX.minecraft.core.Vec3i \u001b[2;32m+3M\u001b[0m",
          "XXX.minecraft.resources.RegistryReadOps$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.minecraft.resources.ResourceKey \u001b[2;32m+1M\u001b[0m",
          "XXX.server.commands.JfrCommand \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.server.players.PlayerList \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.util.CubicSpline \u001b[2;32m+1M\u001b[0m",
          "XXX.minecraft.util.CubicSpline$Builder \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.util.StringRepresentable$1 \u001b[2;32m+2M\u001b[0m \u001b[2;31m-11M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.level.biome.BiomeSource \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.biome.Climate$RTree$Leaf \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.level.biome.MultiNoiseBiomeSource$PresetInstance \u001b[2;32m+3M\u001b[0m",
          "XXX.level.biome.TerrainShaper \u001b[2;32m+12M\u001b[0m \u001b[2;31m-8M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.border.WorldBorder \u001b[2;32m+1M\u001b[0m",
          "XXX.level.chunk.LevelChunk \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.chunk.ProtoChunk \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.blockpredicates.BlockPredicate \u001b[2;32m+9M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.levelgen.carver.CarvingContext \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.levelgen.feature.NetherForestVegetationFeature \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.feature.OceanMonumentFeature \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.levelgen.feature.PillagerOutpostFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.levelgen.feature.StructureFeature \u001b[2;32m+3M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.levelgen.feature.TwistingVinesFeature \u001b[2;31m-2M\u001b[0m",
          "XXX.level.portal.PortalForcer \u001b[2;32m+7M\u001b[0m \u001b[2;31m-6M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.WorldGenSettingsComponent",
        "differences": {
          "added": [
            "void lambda$updateDataPacks$11(RegistryAccess$RegistryHolder,WorldGenSettings)",
            "DataResult lambda$updateDataPacks$10(RegistryReadOps,JsonElement)",
            "void lambda$init$9(CreateWorldScreen,Minecraft,Button)",
            "void lambda$init$8(Minecraft,CreateWorldScreen,RegistryAccess$RegistryHolder,Lifecycle,WorldGenSettings)",
            "void lambda$init$7(Minecraft,CreateWorldScreen,RegistryAccess$RegistryHolder,WorldGenSettings,boolean)",
            "void lambda$init$6(CycleButton,Boolean)",
            "void lambda$init$5(Minecraft,CreateWorldScreen,Button)",
            "void lambda$init$4(Button)",
            "void lambda$init$3(CreateWorldScreen,CycleButton,WorldPreset)"
          ],
          "removed": [
            "void lambda$updateDataPacks$12(RegistryAccess$RegistryHolder,WorldGenSettings)",
            "DataResult lambda$updateDataPacks$11(RegistryReadOps,JsonElement)",
            "void lambda$init$10(CreateWorldScreen,Minecraft,Button)",
            "void lambda$init$9(Minecraft,CreateWorldScreen,RegistryAccess$RegistryHolder,Lifecycle,WorldGenSettings)",
            "void lambda$init$8(Minecraft,CreateWorldScreen,RegistryAccess$RegistryHolder,WorldGenSettings,boolean)",
            "void lambda$init$7(CycleButton,Boolean)",
            "void lambda$init$6(Minecraft,CreateWorldScreen,Button)",
            "void lambda$init$5(Button)",
            "void lambda$init$4(CreateWorldScreen,CycleButton,WorldPreset)",
            "MutableComponent lambda$init$3(CycleButton)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.MappedRegistry",
        "differences": {
          "added": [
            "Map lambda$directCodec$8(MappedRegistry)",
            "MappedRegistry lambda$directCodec$7(ResourceKey,Lifecycle,Map)",
            "void lambda$directCodec$6(MappedRegistry,Lifecycle,ResourceKey,Object)",
            "List lambda$networkCodec$5(MappedRegistry)",
            "MappedRegistry lambda$networkCodec$4(ResourceKey,Lifecycle,List)",
            "App lambda$withNameAndId$3(ResourceKey,MapCodec,RecordCodecBuilder$Instance)",
            "Object lambda$withNameAndId$2(MappedRegistry$RegistryEntry)",
            "Integer lambda$withNameAndId$1(MappedRegistry$RegistryEntry)",
            "ResourceKey lambda$withNameAndId$0(MappedRegistry$RegistryEntry)"
          ],
          "removed": [
            "Map lambda$directCodec$7(MappedRegistry)",
            "MappedRegistry lambda$directCodec$6(ResourceKey,Lifecycle,Map)",
            "void lambda$directCodec$5(MappedRegistry,Lifecycle,ResourceKey,Object)",
            "List lambda$networkCodec$4(MappedRegistry)",
            "MappedRegistry lambda$networkCodec$3(ResourceKey,Lifecycle,List)",
            "Object[] lambda$getRandom$2(int)",
            "App lambda$withNameAndId$1(ResourceKey,MapCodec,RecordCodecBuilder$Instance)",
            "void lambda$new$0(Object2IntOpenCustomHashMap)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.Registry",
        "differences": {
          "added": [
            "DataResult decode(DynamicOps,Object)",
            "DataResult encode(Object,DynamicOps,Object)",
            "Object lambda$keys$59(DynamicOps,ResourceLocation)",
            "DataResult lambda$decode$58(Pair)",
            "Pair lambda$decode$57(DynamicOps,Object)",
            "DataResult lambda$decode$56(Number)",
            "FeatureDecorator lambda$static$43()"
          ],
          "removed": [
            "Codec byNameCodec()",
            "Object lambda$keys$62(DynamicOps,ResourceLocation)",
            "Lifecycle lambda$byNameCodec$61(Object)",
            "int lambda$byNameCodec$60(Object)",
            "DataResult lambda$byNameCodec$59(Object)",
            "DataResult lambda$byNameCodec$58(Object)",
            "DataResult lambda$byNameCodec$57(ResourceLocation)",
            "DataResult lambda$byNameCodec$56(ResourceLocation)",
            "PlacementModifierType lambda$static$43()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.RegistryAccess$RegistryData",
        "differences": {
          "added": [],
          "removed": [
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.core.Vec3i",
        "differences": {
          "added": [],
          "removed": [
            "Function checkOffsetAxes(int)",
            "Codec offsetCodec(int)",
            "DataResult lambda$checkOffsetAxes$3(int,Vec3i)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.resources.RegistryReadOps$1",
        "differences": {
          "added": [
            "void <init>(RegistryReadOps,WritableRegistry,ResourceKey)"
          ],
          "removed": [
            "void <init>(Registry,ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.resources.ResourceKey",
        "differences": {
          "added": [],
          "removed": [
            "Optional cast(ResourceKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.commands.JfrCommand",
        "differences": {
          "added": [
            "Style lambda$stopJfr$4(File,Style)"
          ],
          "removed": [
            "Style lambda$stopJfr$4(Path,Style)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.players.PlayerList",
        "differences": {
          "added": [
            "void setLevel(ServerLevel)"
          ],
          "removed": [
            "void addWorldborderListener(ServerLevel)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.CubicSpline",
        "differences": {
          "added": [],
          "removed": [
            "CubicSpline$Builder builder(ToFloatFunction,ToFloatFunction)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.CubicSpline$Builder",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(ToFloatFunction,ToFloatFunction)",
            "float lambda$new$0(Float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.StringRepresentable$1",
        "differences": {
          "added": [
            "void <init>(ToIntFunction,IntFunction,Function)",
            "DataResult encode(StringRepresentable,DynamicOps,Object)",
            "DataResult decode(DynamicOps,Object)",
            "String toString()",
            "DataResult encode(Object,DynamicOps,Object)",
            "Pair lambda$decode$5(DynamicOps,StringRepresentable)",
            "DataResult lambda$decode$4(Function,String)",
            "DataResult lambda$decode$3(String)",
            "Pair lambda$decode$2(DynamicOps,StringRepresentable)",
            "DataResult lambda$decode$1(IntFunction,Number)",
            "DataResult lambda$decode$0(Number)"
          ],
          "removed": [
            "void <init>(StringRepresentable[])",
            "Stream keys(DynamicOps)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.BiomeSource",
        "differences": {
          "added": [
            "ImmutableList featuresPerStep()",
            "boolean lambda$new$2(int,BiomeSource$1FeatureData)",
            "Set lambda$new$1(Comparator,BiomeSource$1FeatureData)",
            "int lambda$new$0(MutableInt,Object)"
          ],
          "removed": [
            "List buildFeaturesPerStep(List,boolean)",
            "List featuresPerStep()",
            "boolean lambda$buildFeaturesPerStep$2(int,BiomeSource$1FeatureData)",
            "Set lambda$buildFeaturesPerStep$1(Comparator,BiomeSource$1FeatureData)",
            "int lambda$buildFeaturesPerStep$0(MutableInt,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.Climate$RTree$Leaf",
        "differences": {
          "added": [
            "void <init>(Climate$ParameterPoint,Supplier)"
          ],
          "removed": [
            "void <init>(Climate$ParameterPoint,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource",
        "differences": {
          "added": [
            "Biome lambda$getNoiseBiome$7()",
            "MultiNoiseBiomeSource$PresetInstance lambda$preset$6(Pair)"
          ],
          "removed": [
            "Biome lambda$getNoiseBiome$6()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.MultiNoiseBiomeSource$PresetInstance",
        "differences": {
          "added": [],
          "removed": [
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.biome.TerrainShaper",
        "differences": {
          "added": [
            "TerrainShaper overworld()",
            "CubicSpline buildErosionJaggednessSpline(float,float,float,float)",
            "CubicSpline buildRidgeJaggednessSpline(float,float)",
            "CubicSpline buildWeirdnessJaggednessSpline(float)",
            "CubicSpline getErosionFactor(float,boolean)",
            "CubicSpline buildMountainRidgeSplineWithPoints(float,boolean)",
            "CubicSpline buildErosionOffsetSpline(float,float,float,float,float,float,boolean,boolean)",
            "CubicSpline ridgeSpline(float,float,float,float,float,float)"
          ],
          "removed": [
            "float getAmplifiedOffset(float)",
            "float getAmplifiedFactor(float)",
            "float getAmplifiedJaggedness(float)",
            "TerrainShaper overworld(boolean)",
            "CubicSpline buildErosionJaggednessSpline(float,float,float,float,ToFloatFunction)",
            "CubicSpline buildRidgeJaggednessSpline(float,float,ToFloatFunction)",
            "CubicSpline buildWeirdnessJaggednessSpline(float,ToFloatFunction)",
            "CubicSpline getErosionFactor(float,boolean,ToFloatFunction)",
            "CubicSpline buildMountainRidgeSplineWithPoints(float,boolean,ToFloatFunction)",
            "CubicSpline buildErosionOffsetSpline(float,float,float,float,float,float,boolean,boolean,ToFloatFunction)",
            "CubicSpline ridgeSpline(float,float,float,float,float,float,ToFloatFunction)",
            "float lambda$static$2(Float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.border.WorldBorder",
        "differences": {
          "added": [],
          "removed": [
            "BlockPos clampToBounds(double,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.LevelChunk",
        "differences": {
          "added": [
            "void <init>(Level,ChunkPos,UpgradeData,LevelChunkTicks,LevelChunkTicks,long,LevelChunkSection[],Consumer,GenerationUpgradeData)"
          ],
          "removed": [
            "void <init>(Level,ChunkPos,UpgradeData,LevelChunkTicks,LevelChunkTicks,long,LevelChunkSection[],Consumer,BlendingData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.ProtoChunk",
        "differences": {
          "added": [
            "void <init>(ChunkPos,UpgradeData,LevelHeightAccessor,Registry,GenerationUpgradeData)",
            "void <init>(ChunkPos,UpgradeData,LevelChunkSection[],ProtoChunkTicks,ProtoChunkTicks,LevelHeightAccessor,Registry,GenerationUpgradeData)"
          ],
          "removed": [
            "void <init>(ChunkPos,UpgradeData,LevelHeightAccessor,Registry,BlendingData)",
            "void <init>(ChunkPos,UpgradeData,LevelChunkSection[],ProtoChunkTicks,ProtoChunkTicks,LevelHeightAccessor,Registry,BlendingData)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate",
        "differences": {
          "added": [
            "BlockPredicate matchesBlocks(List,BlockPos)",
            "BlockPredicate matchesBlock(Block,BlockPos)",
            "BlockPredicate matchesFluids(List,BlockPos)",
            "BlockPredicate matchesFluid(Fluid,BlockPos)",
            "BlockPredicate replaceable(BlockPos)",
            "BlockPredicate wouldSurvive(BlockState,BlockPos)"
          ],
          "removed": [
            "BlockPredicate matchesBlocks(List,Vec3i)",
            "BlockPredicate matchesBlock(Block,Vec3i)",
            "BlockPredicate matchesFluids(List,Vec3i)",
            "BlockPredicate matchesFluid(Fluid,Vec3i)",
            "BlockPredicate replaceable(Vec3i)",
            "BlockPredicate wouldSurvive(BlockState,Vec3i)",
            "BlockPredicate solid(Vec3i)",
            "BlockPredicate solid()",
            "BlockPredicate insideWorld(Vec3i)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.carver.CarvingContext",
        "differences": {
          "added": [
            "void <init>(NoiseBasedChunkGenerator,RegistryAccess,LevelHeightAccessor)"
          ],
          "removed": [
            "void <init>(NoiseBasedChunkGenerator,RegistryAccess,LevelHeightAccessor,NoiseChunk)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,Random,BlockPos,BlockPileConfiguration,int,int)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.OceanMonumentFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,NoneFeatureConfiguration,LevelHeightAccessor)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,NoneFeatureConfiguration,LevelHeightAccessor)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.PillagerOutpostFeature",
        "differences": {
          "added": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,JigsawConfiguration,LevelHeightAccessor)",
            "boolean isNearVillage(ChunkGenerator,long,WorldgenRandom,ChunkPos)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ],
          "removed": [
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,JigsawConfiguration,LevelHeightAccessor)",
            "boolean isNearVillage(ChunkGenerator,long,ChunkPos)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.StructureFeature",
        "differences": {
          "added": [
            "ChunkPos getPotentialFeatureChunk(StructureFeatureConfiguration,long,WorldgenRandom,int,int)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,WorldgenRandom,ChunkPos,ChunkPos,FeatureConfiguration,LevelHeightAccessor)",
            "StructureStart generate(RegistryAccess,ChunkGenerator,BiomeSource,StructureManager,long,ChunkPos,int,WorldgenRandom,StructureFeatureConfiguration,FeatureConfiguration,LevelHeightAccessor,Predicate)",
            "void lambda$generate$2(long,ChunkPos,WorldgenRandom)"
          ],
          "removed": [
            "ChunkPos getPotentialFeatureChunk(StructureFeatureConfiguration,long,int,int)",
            "boolean isFeatureChunk(ChunkGenerator,BiomeSource,long,ChunkPos,FeatureConfiguration,LevelHeightAccessor)",
            "StructureStart generate(RegistryAccess,ChunkGenerator,BiomeSource,StructureManager,long,ChunkPos,int,StructureFeatureConfiguration,FeatureConfiguration,LevelHeightAccessor,Predicate)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.feature.TwistingVinesFeature",
        "differences": {
          "added": [
            "boolean place(LevelAccessor,Random,BlockPos,int,int,int)",
            "void placeTwistingVines(LevelAccessor,Random,BlockPos,int,int,int)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.portal.PortalForcer",
        "differences": {
          "added": [
            "Optional findPortalAround(BlockPos,boolean)",
            "BlockUtil$FoundRectangle lambda$findPortalAround$5(PoiRecord)",
            "boolean lambda$findPortalAround$4(BlockState,BlockPos)",
            "boolean lambda$findPortalAround$3(PoiRecord)",
            "int lambda$findPortalAround$2(PoiRecord)",
            "double lambda$findPortalAround$1(BlockPos,PoiRecord)"
          ],
          "removed": [
            "Optional findPortalAround(BlockPos,boolean,WorldBorder)",
            "BlockUtil$FoundRectangle lambda$findPortalAround$6(PoiRecord)",
            "boolean lambda$findPortalAround$5(BlockState,BlockPos)",
            "boolean lambda$findPortalAround$4(PoiRecord)",
            "int lambda$findPortalAround$3(PoiRecord)",
            "double lambda$findPortalAround$2(BlockPos,PoiRecord)",
            "boolean lambda$findPortalAround$1(WorldBorder,PoiRecord)"
          ]
        }
      }
    }
  ]
}