{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "1.18-pre6",
        "currentLabel": "1.18-pre7",
        "values": [
          {
            "key": "World version",
            "previous": "2853",
            "current": "2854"
          },
          {
            "key": "Protocol version",
            "previous": "1073741878",
            "current": "1073741879"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "1.18-pre6",
        "currentLabel": "1.18-pre7",
        "values": [
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-glfw",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-jemalloc",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-openal",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-opengl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-stb",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl-tinyfd",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          },
          {
            "key": "org.lwjgl:lwjgl",
            "previous": "3.2.1",
            "current": "3.2.2"
          }
        ]
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.server.level.ChunkMap \u001b[2;32m+27M\u001b[0m \u001b[2;31m-26M\u001b[0m",
          "XXX.datafix.fixes.ChunkRenamesFix \u001b[2;32m+5M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.level.chunk.PalettedContainer \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ChunkMap",
        "differences": {
          "added": [
            "String lambda$printFuture$46(ChunkHolder$ChunkLoadingFailure)",
            "String lambda$printFuture$45(LevelChunk)",
            "Integer lambda$dumpChunks$42(LevelChunk)",
            "Optional lambda$dumpChunks$41(ChunkAccess)",
            "void lambda$setViewDistance$40(ChunkPos,int,MutableObject,ServerPlayer)",
            "void lambda$prepareAccessibleChunk$39(ChunkHolder,Runnable)",
            "Either lambda$prepareAccessibleChunk$38(Either)",
            "LevelChunk lambda$prepareAccessibleChunk$37(List)",
            "void lambda$prepareTickingChunk$36(ChunkHolder,Runnable)",
            "void lambda$prepareTickingChunk$35(ChunkPos,Either)",
            "void lambda$prepareTickingChunk$34(ChunkPos,LevelChunk)",
            "void lambda$prepareTickingChunk$33(MutableObject,LevelChunk,ServerPlayer)",
            "void lambda$prepareTickingChunk$32(ChunkHolder,Runnable)",
            "Either lambda$prepareTickingChunk$31(Either)",
            "Either lambda$prepareTickingChunk$30(List)",
            "ChunkStatus lambda$prepareTickingChunk$29(int)",
            "void lambda$protoChunkToFullChunk$28(ChunkHolder,Runnable)",
            "Either lambda$protoChunkToFullChunk$27(ChunkHolder,Either)",
            "ChunkAccess lambda$protoChunkToFullChunk$26(ChunkHolder,ChunkAccess)",
            "ChunkHolder$FullChunkStatus lambda$protoChunkToFullChunk$25(ChunkHolder)",
            "void lambda$protoChunkToFullChunk$24(ProtoChunk,LevelChunk)",
            "String lambda$releaseLightTicket$23(ChunkPos)",
            "void lambda$releaseLightTicket$22(ChunkPos)",
            "CompletionStage lambda$scheduleChunkGeneration$21(ChunkPos,ChunkHolder,ChunkStatus,Executor,Either)",
            "CompletableFuture lambda$scheduleChunkGeneration$20(ChunkPos,ChunkHolder$ChunkLoadingFailure)",
            "CompletableFuture lambda$scheduleChunkGeneration$19(ChunkPos,ChunkHolder,ChunkStatus,Executor,List)"
          ],
          "removed": [
            "String lambda$printFuture$47(ChunkHolder$ChunkLoadingFailure)",
            "String lambda$printFuture$46(LevelChunk)",
            "Integer lambda$dumpChunks$45(LevelChunk)",
            "Optional lambda$dumpChunks$42(ChunkAccess)",
            "void lambda$setViewDistance$41(ChunkPos,int,MutableObject,ServerPlayer)",
            "void lambda$prepareAccessibleChunk$40(ChunkHolder,Runnable)",
            "Either lambda$prepareAccessibleChunk$39(Either)",
            "LevelChunk lambda$prepareAccessibleChunk$38(List)",
            "void lambda$prepareTickingChunk$37(ChunkHolder,Runnable)",
            "void lambda$prepareTickingChunk$36(ChunkPos,Either)",
            "void lambda$prepareTickingChunk$35(ChunkPos,LevelChunk)",
            "void lambda$prepareTickingChunk$34(MutableObject,LevelChunk,ServerPlayer)",
            "void lambda$prepareTickingChunk$33(ChunkHolder,Runnable)",
            "Either lambda$prepareTickingChunk$32(Either)",
            "Either lambda$prepareTickingChunk$31(List)",
            "ChunkStatus lambda$prepareTickingChunk$30(int)",
            "void lambda$protoChunkToFullChunk$29(ChunkHolder,Runnable)",
            "Either lambda$protoChunkToFullChunk$28(ChunkHolder,Either)",
            "ChunkAccess lambda$protoChunkToFullChunk$27(ChunkHolder,ChunkAccess)",
            "ChunkHolder$FullChunkStatus lambda$protoChunkToFullChunk$26(ChunkHolder)",
            "void lambda$protoChunkToFullChunk$25(ProtoChunk,LevelChunk)",
            "String lambda$releaseLightTicket$24(ChunkPos)",
            "void lambda$releaseLightTicket$23(ChunkPos)",
            "CompletionStage lambda$scheduleChunkGeneration$22(ChunkPos,ChunkHolder,ChunkStatus,Executor,Either)",
            "CompletableFuture lambda$scheduleChunkGeneration$21(ChunkPos,ChunkHolder$ChunkLoadingFailure)",
            "CompletableFuture lambda$scheduleChunkGeneration$20(ChunkPos,ChunkHolder,ChunkStatus,Executor,List)",
            "void lambda$scheduleChunkGeneration$19(CrashReport)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.datafix.fixes.ChunkRenamesFix",
        "differences": {
          "added": [
            "Dynamic lambda$mergeRemainders$4(DynamicOps,Object)",
            "DataResult lambda$mergeRemainders$3(DynamicOps,Dynamic,MapLike)",
            "Dynamic lambda$renameField$2(String,Dynamic)",
            "Typed lambda$makeRule$1(OpticFinder,OpticFinder,Type,Typed)"
          ],
          "removed": [
            "Dynamic lambda$mergeRemainders$5(DynamicOps,Object)",
            "DataResult lambda$mergeRemainders$4(DynamicOps,Dynamic,MapLike)",
            "Dynamic lambda$renameField$3(String,Dynamic)",
            "Typed lambda$makeRule$2(OpticFinder,OpticFinder,Type,Typed)",
            "Dynamic lambda$makeRule$1(Dynamic)"
          ]
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.minecraft.util.ThreadingDetector \u001b[2;32m+6M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+6P\u001b[0m",
          "XXX.world.level.ChunkPos \u001b[2;32m+1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.ThreadingDetector",
        "differences": {
          "added": [
            "void <init>()",
            "void checkAndLock(Semaphore,DebugBuffer,String)",
            "ReportedException makeThreadingException(String,DebugBuffer)",
            "String lambda$makeThreadingException$0(Thread)"
          ],
          "removed": [
            "void <init>(String)",
            "void checkAndLock()",
            "void checkAndUnlock()",
            "ReportedException makeThreadingException(String,Thread)",
            "String stackTrace(Thread)",
            "void <clinit>()"
          ]
        }
      }
    }
  ]
}