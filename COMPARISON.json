{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "25w08a",
        "currentLabel": "25w09a",
        "values": [
          {
            "key": "DataPack version",
            "previous": "68",
            "current": "69"
          },
          {
            "key": "World version",
            "previous": "4316",
            "current": "4317"
          },
          {
            "key": "Protocol version",
            "previous": "1073742059",
            "current": "1073742060"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "worldgen/feature",
        "differences": {
          "added": [
            "minecraft:fallen_tree"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "worldgen/tree_decorator_type",
        "differences": {
          "added": [
            "minecraft:attached_to_logs"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/worldgen/feature.json",
        "differences": {
          "added": [
            "minecraft:fallen_tree"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/worldgen/tree_decorator_type.json",
        "differences": {
          "added": [
            "minecraft:attached_to_logs"
          ],
          "removed": []
        }
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "snbt.parser.empty_key: Key cannot be empty",
            "snbt.parser.expected_binary_numeral: Expected a binary number",
            "snbt.parser.expected_decimal_numeral: Expected a decimal number",
            "snbt.parser.expected_float_type: Expected a floating point number",
            "snbt.parser.expected_hex_escape: Expected a character literal of length %s",
            "snbt.parser.expected_hex_numeral: Expected a hexadecimal number",
            "snbt.parser.expected_integer_type: Expected an integer number",
            "snbt.parser.expected_non_negative_number: Expected a non-negative number",
            "snbt.parser.expected_unquoted_string: Expected a valid unquoted string",
            "snbt.parser.invalid_array_element_type: Invalid array element type",
            "snbt.parser.invalid_character_name: Invalid Unicode character name",
            "snbt.parser.invalid_string_contents: Invalid string contents",
            "snbt.parser.invalid_unquoted_start: Unquoted strings can't start with digits 0-9, + or -",
            "snbt.parser.leading_zero_not_allowed: Decimal numbers can't start with 0",
            "snbt.parser.number_parse_failure: Failed to parse number: %s",
            "snbt.parser.undescore_not_allowed: Underscore characters are not allowed at the start or end of a number"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "mco.backup.nobackups",
            "previous": "This realm doesn't have any backups currently.",
            "current": "This Realm doesn't have any backups currently."
          },
          {
            "key": "mco.backup.restoring",
            "previous": "Restoring your realm",
            "current": "Restoring your Realm"
          },
          {
            "key": "mco.brokenworld.nonowner.error",
            "previous": "Please wait for the realm owner to reset the world",
            "current": "Please wait for the Realm owner to reset the world"
          },
          {
            "key": "mco.configure.world.close.question.line1",
            "previous": "Your realm will become unavailable.",
            "current": "Your Realm will become unavailable."
          },
          {
            "key": "mco.configure.world.closing",
            "previous": "Closing the realm...",
            "current": "Closing the Realm..."
          },
          {
            "key": "mco.configure.world.delete.question.line1",
            "previous": "Your realm will be permanently deleted",
            "current": "Your Realm will be permanently deleted"
          },
          {
            "key": "mco.configure.world.leave.question.line1",
            "previous": "If you leave this realm you won't see it unless you are invited again",
            "current": "If you leave this Realm you won't see it unless you are invited again"
          },
          {
            "key": "mco.configure.world.opening",
            "previous": "Opening the realm...",
            "current": "Opening the Realm..."
          },
          {
            "key": "mco.configure.world.resourcepack.question",
            "previous": "You need a custom resource pack to play on this realm\n\n\n\nDo you want to download it and play?",
            "current": "You need a custom resource pack to play on this Realm\n\n\n\nDo you want to download it and play?"
          },
          {
            "key": "mco.configure.world.resourcepack.question.line1",
            "previous": "You need a custom resource pack to play on this realm",
            "current": "You need a custom resource pack to play on this Realm"
          },
          {
            "key": "mco.configure.world.slot.switch.question.line1",
            "previous": "Your realm will be switched to another world",
            "current": "Your Realm will be switched to another world"
          },
          {
            "key": "mco.connect.connecting",
            "previous": "Connecting to the realm...",
            "current": "Connecting to the Realm..."
          },
          {
            "key": "mco.connect.failed",
            "previous": "Failed to connect to the realm",
            "current": "Failed to connect to the Realm"
          },
          {
            "key": "mco.create.world.subtitle",
            "previous": "Optionally, select what world to put on your new realm",
            "current": "Optionally, select what world to put on your new Realm"
          },
          {
            "key": "mco.create.world.wait",
            "previous": "Creating the realm...",
            "current": "Creating the Realm..."
          },
          {
            "key": "mco.download.confirmation.line2",
            "previous": "You won't be able to upload this world to your realm again",
            "current": "You won't be able to upload this world to your Realm again"
          },
          {
            "key": "mco.download.confirmation.oversized",
            "previous": "The world you are going to download is larger than %s\n\n\n\nYou won't be able to upload this world to your realm again",
            "current": "The world you are going to download is larger than %s\n\n\n\nYou won't be able to upload this world to your Realm again"
          },
          {
            "key": "mco.minigame.world.restore.question.line1",
            "previous": "The minigame will end and your realm will be restored.",
            "current": "The minigame will end and your Realm will be restored."
          },
          {
            "key": "mco.reset.world.warning",
            "previous": "This will replace the current world of your realm",
            "current": "This will replace the current world of your Realm"
          },
          {
            "key": "mco.selectServer.closed",
            "previous": "Closed realm",
            "current": "Closed Realm"
          },
          {
            "key": "mco.selectServer.closeserver",
            "previous": "Close realm",
            "current": "Close Realm"
          },
          {
            "key": "mco.selectServer.configureRealm",
            "previous": "Configure realm",
            "current": "Configure Realm"
          },
          {
            "key": "mco.selectServer.create.subtitle",
            "previous": "Select what world to put on your new realm",
            "current": "Select what world to put on your new Realm"
          },
          {
            "key": "mco.selectServer.expired",
            "previous": "Expired realm",
            "current": "Expired Realm"
          },
          {
            "key": "mco.selectServer.open",
            "previous": "Open realm",
            "current": "Open Realm"
          },
          {
            "key": "mco.selectServer.openserver",
            "previous": "Open realm",
            "current": "Open Realm"
          },
          {
            "key": "mco.selectServer.uninitialized",
            "previous": "Click to start your new realm!",
            "current": "Click to start your new Realm!"
          },
          {
            "key": "mco.trial.message.line1",
            "previous": "Want to get your own realm?",
            "current": "Want to get your own Realm?"
          },
          {
            "key": "mco.upload.close.failure",
            "previous": "Could not close your realm, please try again later",
            "current": "Could not close your Realm, please try again later"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/worldgen/configured_feature/fallen_birch_tree.json",
            "minecraft/worldgen/configured_feature/fallen_jungle_tree.json",
            "minecraft/worldgen/configured_feature/fallen_oak_tree.json",
            "minecraft/worldgen/configured_feature/fallen_spruce_tree.json",
            "minecraft/worldgen/configured_feature/fallen_super_birch_tree.json",
            "minecraft/worldgen/configured_feature/trees_badlands.json",
            "minecraft/worldgen/configured_feature/trees_birch.json",
            "minecraft/worldgen/configured_feature/trees_snowy.json",
            "minecraft/worldgen/placed_feature/fallen_birch_tree.json",
            "minecraft/worldgen/placed_feature/fallen_jungle_tree.json",
            "minecraft/worldgen/placed_feature/fallen_oak_tree.json",
            "minecraft/worldgen/placed_feature/fallen_spruce_tree.json",
            "minecraft/worldgen/placed_feature/fallen_super_birch_tree.json"
          ],
          "removed": []
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtException",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtIo$StringFallbackDataOutput",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.parsing.packrat.Dictionary",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly",
            "XXX.parsing.packrat.ParseState$CacheKey",
            "XXX.parsing.packrat.SuggestionSupplier",
            "XXX.parsing.packrat.Term$1",
            "XXX.parsing.packrat.Term$Maybe",
            "XXX.packrat.commands.ResourceLocationParseRule",
            "XXX.packrat.commands.ResourceSuggestion",
            "XXX.packrat.commands.StringReaderTerms",
            "XXX.packrat.commands.StringReaderTerms$TerminalWord",
            "XXX.levelgen.feature.FeatureCountTracker",
            "XXX.levelgen.feature.FeatureCountTracker$FeatureData",
            "XXX.levelgen.feature.FeaturePlaceContext",
            "XXX.levelgen.feature.FossilFeature",
            "XXX.levelgen.feature.GeodeFeature",
            "XXX.levelgen.feature.HugeBrownMushroomFeature",
            "XXX.levelgen.feature.HugeFungusFeature",
            "XXX.levelgen.feature.IceSpikeFeature",
            "XXX.levelgen.feature.KelpFeature",
            "XXX.levelgen.feature.LakeFeature$Configuration",
            "XXX.levelgen.feature.LargeDripstoneFeature$LargeDripstone",
            "XXX.levelgen.feature.MonsterRoomFeature",
            "XXX.levelgen.feature.NetherForestVegetationFeature",
            "XXX.levelgen.feature.OreFeature",
            "XXX.levelgen.feature.RandomBooleanSelectorFeature",
            "XXX.levelgen.feature.RandomSelectorFeature",
            "XXX.levelgen.feature.ReplaceBlockFeature",
            "XXX.levelgen.feature.ScatteredOreFeature",
            "XXX.levelgen.feature.SeaPickleFeature",
            "XXX.levelgen.feature.SimpleBlockFeature",
            "XXX.levelgen.feature.SnowAndFreezeFeature",
            "XXX.levelgen.feature.SpikeFeature$EndSpike",
            "XXX.levelgen.feature.SpringFeature",
            "XXX.levelgen.feature.TreeFeature$1",
            "XXX.levelgen.feature.UnderwaterMagmaFeature",
            "XXX.levelgen.feature.VinesFeature",
            "XXX.levelgen.feature.WaterloggedVegetationPatchFeature",
            "XXX.levelgen.feature.WeightedPlacedFeature",
            "XXX.feature.configurations.BlockColumnConfiguration$Layer",
            "XXX.feature.configurations.BlockStateConfiguration",
            "XXX.feature.configurations.CountConfiguration",
            "XXX.feature.configurations.DiskConfiguration",
            "XXX.feature.configurations.EndGatewayConfiguration",
            "XXX.feature.configurations.GeodeConfiguration",
            "XXX.feature.configurations.LargeDripstoneConfiguration",
            "XXX.feature.configurations.MultifaceGrowthConfiguration",
            "XXX.feature.configurations.NoneFeatureConfiguration",
            "XXX.feature.configurations.OreConfiguration$TargetBlockState",
            "XXX.feature.configurations.ProbabilityFeatureConfiguration",
            "XXX.feature.configurations.RandomFeatureConfiguration",
            "XXX.feature.configurations.ReplaceBlockConfiguration",
            "XXX.feature.configurations.RootSystemConfiguration",
            "XXX.feature.configurations.SimpleBlockConfiguration",
            "XXX.feature.configurations.SpikeConfiguration",
            "XXX.feature.configurations.TreeConfiguration",
            "XXX.feature.configurations.TwistingVinesConfig",
            "XXX.feature.configurations.VegetationPatchConfiguration",
            "XXX.feature.featuresize.FeatureSize",
            "XXX.feature.featuresize.ThreeLayersFeatureSize",
            "XXX.feature.featuresize.package-info",
            "XXX.feature.foliageplacers.BlobFoliagePlacer",
            "XXX.feature.foliageplacers.CherryFoliagePlacer",
            "XXX.feature.foliageplacers.FancyFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageAttachment",
            "XXX.feature.foliageplacers.FoliagePlacerType",
            "XXX.feature.foliageplacers.MegaPineFoliagePlacer",
            "XXX.feature.foliageplacers.RandomSpreadFoliagePlacer",
            "XXX.feature.foliageplacers.package-info",
            "XXX.feature.rootplacers.AboveRootPlacement",
            "XXX.feature.rootplacers.MangroveRootPlacer",
            "XXX.feature.rootplacers.RootPlacerType",
            "XXX.feature.stateproviders.BlockStateProvider",
            "XXX.feature.stateproviders.DualNoiseProvider",
            "XXX.feature.stateproviders.NoiseProvider",
            "XXX.feature.stateproviders.RandomizedIntStateProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider",
            "XXX.feature.stateproviders.SimpleStateProvider",
            "XXX.feature.stateproviders.package-info",
            "XXX.feature.treedecorators.AttachedToLeavesDecorator"
          ],
          "removed": [
            "XXX.minecraft.nbt.CollectionTag$1",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounterException",
            "XXX.minecraft.nbt.NbtFormatException",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.PrimitiveTag",
            "XXX.minecraft.nbt.SnbtGrammar$1",
            "XXX.minecraft.nbt.SnbtGrammar$3",
            "XXX.minecraft.nbt.SnbtGrammar$5",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$1",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$3",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerLiteral",
            "XXX.minecraft.nbt.SnbtGrammar$Sign",
            "XXX.minecraft.nbt.SnbtGrammar$SignedPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$TypeSuffix",
            "XXX.nbt.visitors.CollectToTag$ContainerBuilder",
            "XXX.nbt.visitors.CollectToTag$RootBuilder",
            "XXX.parsing.packrat.CachedParseState$CacheEntry",
            "XXX.parsing.packrat.CachedParseState$Silent",
            "XXX.parsing.packrat.Control",
            "XXX.parsing.packrat.DelayedException",
            "XXX.parsing.packrat.Dictionary$Entry",
            "XXX.parsing.packrat.ErrorCollector",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly$MutableErrorEntry",
            "XXX.parsing.packrat.ErrorEntry",
            "XXX.parsing.packrat.Scope$1",
            "XXX.parsing.packrat.Term",
            "XXX.parsing.packrat.Term$2",
            "XXX.parsing.packrat.Term$Marker",
            "XXX.parsing.packrat.Term$Repeated",
            "XXX.packrat.commands.CommandArgumentParser$1",
            "XXX.packrat.commands.Grammar",
            "XXX.packrat.commands.GreedyPredicateParseRule",
            "XXX.packrat.commands.ParserBasedArgument",
            "XXX.packrat.commands.ResourceLookupRule",
            "XXX.packrat.commands.StringReaderParserState",
            "XXX.packrat.commands.StringReaderTerms$1",
            "XXX.packrat.commands.StringReaderTerms$TerminalCharacters",
            "XXX.packrat.commands.TagParseRule",
            "XXX.levelgen.feature.Feature",
            "XXX.levelgen.feature.FeatureCountTracker$1",
            "XXX.levelgen.feature.FeatureCountTracker$LevelData",
            "XXX.levelgen.feature.FillLayerFeature",
            "XXX.levelgen.feature.FossilFeatureConfiguration",
            "XXX.levelgen.feature.GlowstoneFeature",
            "XXX.levelgen.feature.HugeFungusConfiguration",
            "XXX.levelgen.feature.HugeRedMushroomFeature",
            "XXX.levelgen.feature.IcebergFeature",
            "XXX.levelgen.feature.LakeFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature",
            "XXX.levelgen.feature.LargeDripstoneFeature$WindOffsetter",
            "XXX.levelgen.feature.MultifaceGrowthFeature",
            "XXX.levelgen.feature.NoOpFeature",
            "XXX.levelgen.feature.PointedDripstoneFeature",
            "XXX.levelgen.feature.RandomPatchFeature",
            "XXX.levelgen.feature.ReplaceBlobsFeature",
            "XXX.levelgen.feature.RootSystemFeature",
            "XXX.levelgen.feature.SculkPatchFeature",
            "XXX.levelgen.feature.SeagrassFeature",
            "XXX.levelgen.feature.SimpleRandomSelectorFeature",
            "XXX.levelgen.feature.SpikeFeature",
            "XXX.levelgen.feature.SpikeFeature$SpikeCacheLoader",
            "XXX.levelgen.feature.TreeFeature",
            "XXX.levelgen.feature.TwistingVinesFeature",
            "XXX.levelgen.feature.VegetationPatchFeature",
            "XXX.levelgen.feature.VoidStartPlatformFeature",
            "XXX.levelgen.feature.WeepingVinesFeature",
            "XXX.feature.configurations.BlockColumnConfiguration",
            "XXX.feature.configurations.BlockPileConfiguration",
            "XXX.feature.configurations.ColumnFeatureConfiguration",
            "XXX.feature.configurations.DeltaFeatureConfiguration",
            "XXX.feature.configurations.DripstoneClusterConfiguration",
            "XXX.feature.configurations.FallenTreeConfiguration",
            "XXX.feature.configurations.FeatureConfiguration",
            "XXX.feature.configurations.HugeMushroomFeatureConfiguration",
            "XXX.feature.configurations.LayerConfiguration",
            "XXX.feature.configurations.NetherForestVegetationConfig",
            "XXX.feature.configurations.OreConfiguration",
            "XXX.feature.configurations.PointedDripstoneConfiguration",
            "XXX.feature.configurations.RandomBooleanFeatureConfiguration",
            "XXX.feature.configurations.RandomPatchConfiguration",
            "XXX.feature.configurations.ReplaceSphereConfiguration",
            "XXX.feature.configurations.SculkPatchConfiguration",
            "XXX.feature.configurations.SimpleRandomFeatureConfiguration",
            "XXX.feature.configurations.SpringConfiguration",
            "XXX.feature.configurations.TreeConfiguration$TreeConfigurationBuilder",
            "XXX.feature.configurations.UnderwaterMagmaConfiguration",
            "XXX.feature.configurations.package-info",
            "XXX.feature.featuresize.FeatureSizeType",
            "XXX.feature.featuresize.TwoLayersFeatureSize",
            "XXX.feature.foliageplacers.AcaciaFoliagePlacer",
            "XXX.feature.foliageplacers.BushFoliagePlacer",
            "XXX.feature.foliageplacers.DarkOakFoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer",
            "XXX.feature.foliageplacers.FoliagePlacer$FoliageSetter",
            "XXX.feature.foliageplacers.MegaJungleFoliagePlacer",
            "XXX.feature.foliageplacers.PineFoliagePlacer",
            "XXX.feature.foliageplacers.SpruceFoliagePlacer",
            "XXX.levelgen.feature.package-info",
            "XXX.feature.rootplacers.MangroveRootPlacement",
            "XXX.feature.rootplacers.RootPlacer",
            "XXX.feature.rootplacers.package-info",
            "XXX.feature.stateproviders.BlockStateProviderType",
            "XXX.feature.stateproviders.NoiseBasedStateProvider",
            "XXX.feature.stateproviders.NoiseThresholdProvider",
            "XXX.feature.stateproviders.RotatedBlockProvider",
            "XXX.feature.stateproviders.RuleBasedBlockStateProvider$Rule",
            "XXX.feature.stateproviders.WeightedStateProvider",
            "XXX.feature.treedecorators.AlterGroundDecorator",
            "XXX.feature.treedecorators.AttachedToLogsDecorator"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "net.minecraft.SharedConstants \u001b[2;31m-1P\u001b[0m",
          "net.minecraft.Util \u001b[2;32m+1M\u001b[0m",
          "XXX.commands.arguments.NbtTagArgument \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.commands.arguments.ParticleArgument \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.commands.arguments.StyleArgument \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.arguments.item.ComponentPredicateParser$TagLookupRule \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.arguments.item.ItemParser$State \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.worldgen.features.TreeFeatures \u001b[2;32m+5M\u001b[0m | \u001b[2;32m+5P\u001b[0m",
          "XXX.minecraft.nbt.ByteArrayTag \u001b[2;32m+2M\u001b[0m \u001b[2;31m-11M\u001b[0m",
          "XXX.minecraft.nbt.ByteTag \u001b[2;32m+9M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.nbt.ShortTag \u001b[2;32m+9M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.nbt.StringTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.Tag \u001b[2;32m+15M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.nbt.TagType \u001b[2;31m-1M\u001b[0m",
          "XXX.nbt.visitors.CollectToTag \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.chat.contents.NbtContents \u001b[2;32m+1M\u001b[0m",
          "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot \u001b[2;32m+1M\u001b[0m",
          "XXX.server.level.DistanceManager \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.parsing.packrat.ParseState \u001b[2;32m+1M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+6P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.parsing.packrat.Rule$RuleAction \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.parsing.packrat.Rule$WrappedTerm \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.parsing.packrat.Term$Alternative \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.parsing.packrat.Term$Sequence \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.util.random.WeightedList \u001b[2;32m+2M\u001b[0m",
          "XXX.world.entity.AreaEffectCloud \u001b[2;32m+9P\u001b[0m",
          "XXX.world.entity.Display$TextDisplay \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.EntityReference \u001b[2;32m+1M\u001b[0m",
          "XXX.world.entity.ExperienceOrb \u001b[2;32m+4P\u001b[0m",
          "XXX.world.entity.GlowSquid \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.LivingEntity \u001b[2;32m+19M\u001b[0m \u001b[2;31m-17M\u001b[0m",
          "XXX.world.entity.Mob \u001b[2;32m+4P\u001b[0m",
          "XXX.ai.attributes.AttributeInstance \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.ambient.Bat \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Animal \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Chicken \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Fox \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.animal.Fox$Variant \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Ocelot \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Pufferfish \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.animal.Rabbit \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.allay.Allay \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.axolotl.Axolotl$Variant \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.frog.Tadpole \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.horse.AbstractChestedHorse \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.horse.AbstractHorse \u001b[2;32m+4P\u001b[0m",
          "XXX.animal.horse.Horse \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.horse.Llama$Variant \u001b[2;32m+1P\u001b[0m",
          "XXX.boss.enderdragon.EndCrystal \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.decoration.ArmorStand \u001b[2;32m+6P\u001b[0m",
          "XXX.entity.item.ItemEntity \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.monster.Endermite \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Shulker \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.monster.Skeleton \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Vindicator \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.monster.Zombie \u001b[2;32m+4P\u001b[0m",
          "XXX.monster.piglin.AbstractPiglin \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.npc.InventoryCarrier \u001b[2;32m+1M\u001b[0m",
          "XXX.entity.npc.Villager \u001b[2;32m+6P\u001b[0m",
          "XXX.entity.player.Abilities \u001b[2;32m+7P\u001b[0m",
          "XXX.entity.projectile.FireworkRocketEntity \u001b[2;32m+3P\u001b[0m",
          "XXX.entity.projectile.SpectralArrow \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.projectile.ThrownTrident \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.vehicle.MinecartFurnace \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.vehicle.MinecartTNT \u001b[2;32m+1P\u001b[0m",
          "XXX.world.food.FoodData \u001b[2;32m+2P\u001b[0m",
          "XXX.world.level.BaseCommandBlock \u001b[2;32m+1P\u001b[0m",
          "XXX.world.level.Spawner \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.block.entity.BlockEntity \u001b[2;32m+1M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.CampfireBlockEntity \u001b[2;32m+4M\u001b[0m",
          "XXX.block.entity.ChiseledBookShelfBlockEntity \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.ComparatorBlockEntity \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.JigsawBlockEntity \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+5P\u001b[0m",
          "XXX.block.entity.JukeboxBlockEntity \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.block.entity.TestBlockEntity \u001b[2;32m+2P\u001b[0m",
          "XXX.level.levelgen.BelowZeroRetrogen \u001b[2;31m-1M\u001b[0m",
          "XXX.levelgen.structure.StructureCheck \u001b[2;32m+7M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.structure.pools.FeaturePoolElement \u001b[2;32m+1P\u001b[0m",
          "XXX.structure.pools.JigsawPlacement$Placer \u001b[2;31m-1M\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.Util",
        "differences": {
          "added": [],
          "removed": [
            "int growByHalf(int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.NbtTagArgument",
        "differences": {
          "added": [
            "Tag parse(StringReader)",
            "Object parse(StringReader)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.ParticleArgument",
        "differences": {
          "added": [
            "ParticleOptions readParticle(DynamicOps,StringReader,ParticleType,HolderLookup$Provider)"
          ],
          "removed": [
            "ParticleOptions readParticle(DynamicOps,TagParser,StringReader,ParticleType,HolderLookup$Provider)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.StyleArgument",
        "differences": {
          "added": [
            "Style parse(StringReader)",
            "Object parse(StringReader)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.item.ComponentPredicateParser$ComponentLookupRule",
        "differences": {
          "added": [
            "void <init>(Atom,ComponentPredicateParser$Context)"
          ],
          "removed": [
            "void <init>(NamedRule,ComponentPredicateParser$Context)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.item.ComponentPredicateParser$ElementLookupRule",
        "differences": {
          "added": [
            "void <init>(Atom,ComponentPredicateParser$Context)"
          ],
          "removed": [
            "void <init>(NamedRule,ComponentPredicateParser$Context)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.item.ComponentPredicateParser$TagLookupRule",
        "differences": {
          "added": [
            "void <init>(Atom,ComponentPredicateParser$Context)"
          ],
          "removed": [
            "void <init>(NamedRule,ComponentPredicateParser$Context)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.commands.arguments.item.ItemParser$State",
        "differences": {
          "added": [
            "void readComponent(RegistryOps,DataComponentType)"
          ],
          "removed": [
            "void readComponent(TagParser,RegistryOps,DataComponentType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.data.worldgen.features.TreeFeatures",
        "differences": {
          "added": [],
          "removed": [
            "FallenTreeConfiguration$FallenTreeConfigurationBuilder createFallenOak()",
            "FallenTreeConfiguration$FallenTreeConfigurationBuilder createFallenBirch(int)",
            "FallenTreeConfiguration$FallenTreeConfigurationBuilder createFallenJungle()",
            "FallenTreeConfiguration$FallenTreeConfigurationBuilder createFallenSpruce()",
            "FallenTreeConfiguration$FallenTreeConfigurationBuilder createFallenTrees(Block,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.ByteArrayTag",
        "differences": {
          "added": [
            "void <init>(List)",
            "byte[] toArray(List)",
            "ByteTag set(int,ByteTag)",
            "void add(int,ByteTag)",
            "byte getElementType()",
            "void add(int,Tag)",
            "Tag set(int,Tag)",
            "Object remove(int)",
            "void add(int,Object)",
            "Object set(int,Object)",
            "Object get(int)"
          ],
          "removed": [
            "Optional asByteArray()",
            "Tag get(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.ByteTag",
        "differences": {
          "added": [
            "long getAsLong()",
            "int getAsInt()",
            "short getAsShort()",
            "byte getAsByte()",
            "double getAsDouble()",
            "float getAsFloat()",
            "Number getAsNumber()"
          ],
          "removed": [
            "long longValue()",
            "int intValue()",
            "short shortValue()",
            "byte byteValue()",
            "double doubleValue()",
            "float floatValue()",
            "Number box()",
            "String toString()",
            "byte value()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.ShortTag",
        "differences": {
          "added": [
            "long getAsLong()",
            "int getAsInt()",
            "short getAsShort()",
            "byte getAsByte()",
            "double getAsDouble()",
            "float getAsFloat()",
            "Number getAsNumber()"
          ],
          "removed": [
            "long longValue()",
            "int intValue()",
            "short shortValue()",
            "byte byteValue()",
            "double doubleValue()",
            "float floatValue()",
            "Number box()",
            "String toString()",
            "short value()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.StringTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.Tag",
        "differences": {
          "added": [
            "String getAsString()"
          ],
          "removed": [
            "Optional asString()",
            "Optional asNumber()",
            "Optional asByte()",
            "Optional asShort()",
            "Optional asInt()",
            "Optional asLong()",
            "Optional asFloat()",
            "Optional asDouble()",
            "Optional asBoolean()",
            "Optional asByteArray()",
            "Optional asIntArray()",
            "Optional asLongArray()",
            "Optional asCompound()",
            "Optional asList()",
            "Boolean lambda$asBoolean$0(Byte)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.TagType",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.visitors.CollectToTag",
        "differences": {
          "added": [
            "void lambda$visitRootEntry$2(Tag)",
            "void lambda$visitRootEntry$1(CompoundTag,Tag)",
            "void lambda$enterContainerIfNeeded$0(CompoundTag,Tag)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.chat.contents.NbtContents",
        "differences": {
          "added": [],
          "removed": [
            "String asString(Tag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ServerboundMovePlayerPacket$PosRot",
        "differences": {
          "added": [],
          "removed": [
            "void <init>(Vec3,float,float,boolean,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.DistanceManager",
        "differences": {
          "added": [
            "void forEachBlockTickingChunks(LongConsumer)"
          ],
          "removed": [
            "void forEachEntityTickingChunk(LongConsumer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.ParseState",
        "differences": {
          "added": [
            "void <init>(Dictionary,ErrorCollector)",
            "ErrorCollector errorCollector()",
            "Optional parseTopRule(Atom)",
            "Optional parse(Atom)",
            "ParseState$CacheEntry lookupInCache(ParseState$CacheKey)",
            "void storeInCache(ParseState$CacheKey,Optional)"
          ],
          "removed": [
            "Optional parseTopRule(NamedRule)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.Rule$WrappedTerm",
        "differences": {
          "added": [
            "Optional parse(ParseState)"
          ],
          "removed": [
            "Object parse(ParseState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.Term$Alternative",
        "differences": {
          "added": [
            "void <init>(List)",
            "List elements()"
          ],
          "removed": [
            "void <init>(Term[])",
            "Term[] elements()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.Term$Sequence",
        "differences": {
          "added": [
            "void <init>(List)",
            "List elements()"
          ],
          "removed": [
            "void <init>(Term[])",
            "Term[] elements()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.random.WeightedList",
        "differences": {
          "added": [],
          "removed": [
            "WeightedList map(Function)",
            "Weighted lambda$map$0(Function,Weighted)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.EntityReference",
        "differences": {
          "added": [],
          "removed": [
            "UUID lambda$readWithOldOwnerConversion$1(Level,String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.LivingEntity",
        "differences": {
          "added": [
            "boolean lambda$createEquipmentSlotAccess$20(LivingEntity,EquipmentSlot,ItemStack)",
            "void lambda$stopLocationBasedEffects$19(AttributeMap,Holder,AttributeModifier)",
            "void lambda$stopSleeping$18(BlockPos)",
            "Vec3 lambda$stopSleeping$17(BlockPos)",
            "Boolean lambda$checkBedExists$16(BlockPos)",
            "boolean lambda$updateFallFlying$15(EquipmentSlot)",
            "void lambda$handleEquipmentChanges$14(List,EquipmentSlot,ItemStack)",
            "void lambda$collectEquipmentChanges$13(Holder,AttributeModifier)",
            "Vec3 lambda$dismountVehicle$12(double,Vec3)",
            "boolean lambda$isHolding$11(Item,ItemStack)",
            "Reference2ObjectMap lambda$activeLocationDependentEnchantments$10(EquipmentSlot)",
            "void lambda$dropFromLootTable$9(BiConsumer,ServerLevel,ItemStack)",
            "LootParams lambda$dropFromShearingLootTable$8(ItemStack,LootParams$Builder)",
            "LootParams lambda$dropFromGiftLootTable$7(LootParams$Builder)",
            "void lambda$dropFromLootTable$6(ServerLevel,ItemStack)",
            "void lambda$tickEffects$5(MobEffectInstance)",
            "void lambda$readAdditionalSaveData$4(BlockPos)"
          ],
          "removed": [
            "boolean lambda$createEquipmentSlotAccess$22(LivingEntity,EquipmentSlot,ItemStack)",
            "void lambda$stopLocationBasedEffects$21(AttributeMap,Holder,AttributeModifier)",
            "void lambda$stopSleeping$20(BlockPos)",
            "Vec3 lambda$stopSleeping$19(BlockPos)",
            "Boolean lambda$checkBedExists$18(BlockPos)",
            "boolean lambda$updateFallFlying$17(EquipmentSlot)",
            "void lambda$handleEquipmentChanges$16(List,EquipmentSlot,ItemStack)",
            "void lambda$collectEquipmentChanges$15(Holder,AttributeModifier)",
            "Vec3 lambda$dismountVehicle$14(double,Vec3)",
            "boolean lambda$isHolding$13(Item,ItemStack)",
            "Reference2ObjectMap lambda$activeLocationDependentEnchantments$12(EquipmentSlot)",
            "void lambda$dropFromLootTable$11(BiConsumer,ServerLevel,ItemStack)",
            "LootParams lambda$dropFromShearingLootTable$10(ItemStack,LootParams$Builder)",
            "LootParams lambda$dropFromGiftLootTable$9(LootParams$Builder)",
            "void lambda$dropFromLootTable$8(ServerLevel,ItemStack)",
            "void lambda$tickEffects$7(MobEffectInstance)",
            "void lambda$readAdditionalSaveData$6(CompoundTag)",
            "void lambda$readAdditionalSaveData$5(BlockPos)",
            "void lambda$readAdditionalSaveData$4(String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.ai.attributes.AttributeInstance",
        "differences": {
          "added": [
            "IllegalStateException lambda$save$2()"
          ],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Chicken",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$readAdditionalSaveData$1(Integer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.npc.InventoryCarrier",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$readInventoryFromTag$0(HolderLookup$Provider,ListTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.Spawner",
        "differences": {
          "added": [
            "ResourceLocation getEntityKey(CompoundTag,String)",
            "MutableComponent lambda$getSpawnEntityDisplayName$0(EntityType)"
          ],
          "removed": [
            "MutableComponent lambda$getSpawnEntityDisplayName$2(EntityType)",
            "Optional lambda$getSpawnEntityDisplayName$1(CompoundTag)",
            "Optional lambda$getSpawnEntityDisplayName$0(CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.BlockEntity",
        "differences": {
          "added": [
            "void lambda$parseCustomNameSafe$3(String)",
            "BlockEntity lambda$loadStatic$2(String)",
            "BlockEntity lambda$loadStatic$1(CompoundTag,HolderLookup$Provider,String,BlockEntity)",
            "BlockEntity lambda$loadStatic$0(BlockPos,BlockState,String,BlockEntityType)"
          ],
          "removed": [
            "void lambda$parseCustomNameSafe$0(String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.CampfireBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$loadAdditional$4()",
            "void lambda$loadAdditional$3(int[])",
            "void lambda$loadAdditional$2()",
            "void lambda$loadAdditional$1(int[])"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.JigsawBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.JukeboxBlockEntity",
        "differences": {
          "added": [
            "void lambda$tryForcePlaySong$2(Holder)",
            "void lambda$setSongItemWithoutPlaying$1(Holder)",
            "void lambda$loadAdditional$0(CompoundTag,Holder)"
          ],
          "removed": [
            "void lambda$tryForcePlaySong$3(Holder)",
            "void lambda$setSongItemWithoutPlaying$2(Holder)",
            "void lambda$loadAdditional$1(HolderLookup$Provider,Long)",
            "void lambda$loadAdditional$0(Long,Holder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.BelowZeroRetrogen",
        "differences": {
          "added": [
            "BelowZeroRetrogen read(CompoundTag)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.StructureCheck",
        "differences": {
          "added": [
            "Object2IntMap lambda$incrementReference$5(Structure,Long,Object2IntMap)",
            "Integer lambda$incrementReference$4(Structure,Integer)",
            "void lambda$storeFullResults$3(long,Long2BooleanMap)",
            "void lambda$onStructureLoad$2(Object2IntMap,Structure,StructureStart)"
          ],
          "removed": [
            "Object2IntMap lambda$incrementReference$8(Structure,Long,Object2IntMap)",
            "Integer lambda$incrementReference$7(Structure,Integer)",
            "void lambda$storeFullResults$6(long,Long2BooleanMap)",
            "void lambda$onStructureLoad$5(Object2IntMap,Structure,StructureStart)",
            "void lambda$loadStructures$4(Registry,Object2IntMap,String,Tag)",
            "void lambda$loadStructures$3(Object2IntMap,Structure,CompoundTag)",
            "Optional lambda$loadStructures$2(CompoundTag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.pools.JigsawPlacement$Placer",
        "differences": {
          "added": [
            "ResourceKey readPoolKey(StructureTemplate$JigsawBlockInfo,PoolAliasLookup)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.blaze3d.audio.Channel",
            "XXX.blaze3d.audio.Library$1",
            "XXX.blaze3d.audio.Library$CountingChannelPool",
            "XXX.blaze3d.audio.Listener",
            "XXX.blaze3d.audio.OpenAlUtil",
            "XXX.blaze3d.audio.package-info",
            "XXX.blaze3d.buffers.BufferUsage",
            "XXX.blaze3d.buffers.GpuBuffer$ReadView",
            "XXX.blaze3d.buffers.package-info",
            "XXX.blaze3d.font.GlyphInfo$SpaceGlyphInfo",
            "XXX.blaze3d.font.GlyphProvider$Conditional",
            "XXX.blaze3d.font.SpaceProvider",
            "XXX.blaze3d.font.TrueTypeGlyphProvider",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$Glyph$1",
            "XXX.blaze3d.font.package-info",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$ExternalResource",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Inspector",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$InternalVirtualResource",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$VirtualResource",
            "XXX.blaze3d.framegraph.package-info",
            "XXX.blaze3d.pipeline.MainTarget$Dimension",
            "XXX.blaze3d.pipeline.RenderPipeline",
            "XXX.blaze3d.platform.GlDebug",
            "XXX.blaze3d.platform.GlStateManager",
            "XXX.blaze3d.platform.GlStateManager$BooleanState",
            "XXX.blaze3d.platform.GlStateManager$ColorMask",
            "XXX.blaze3d.platform.GlStateManager$DepthState",
            "XXX.blaze3d.platform.GlStateManager$FramebufferState",
            "XXX.blaze3d.platform.GlStateManager$SourceFactor",
            "XXX.blaze3d.platform.GlStateManager$Viewport",
            "XXX.blaze3d.platform.IconSet",
            "XXX.blaze3d.platform.InputConstants$Key",
            "XXX.blaze3d.platform.Lighting",
            "XXX.blaze3d.shaders.CompiledShader",
            "XXX.blaze3d.shaders.FogShape",
            "XXX.blaze3d.shaders.Uniform$Type",
            "XXX.blaze3d.systems.TimerQuery$FrameProfile",
            "XXX.blaze3d.systems.package-info",
            "XXX.blaze3d.textures.FilterMode",
            "XXX.blaze3d.textures.GpuTexture$1",
            "XXX.blaze3d.vertex.VertexConsumer",
            "XXX.blaze3d.vertex.VertexFormat$Builder",
            "XXX.blaze3d.vertex.VertexFormat$Mode",
            "XXX.blaze3d.vertex.VertexFormatElement$Type",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage$SetupState",
            "XXX.models.blockstates.ConditionBuilder",
            "XXX.client.renderer.CompiledShaderProgram",
            "XXX.client.renderer.DepthTestFunction",
            "XXX.client.renderer.ShaderManager$ShaderCompilationKey",
            "XXX.client.renderer.ShapeRenderer",
            "XXX.client.renderer.Sheets",
            "XXX.client.renderer.SkyRenderer",
            "XXX.client.renderer.SpriteCoordinateExpander",
            "XXX.client.renderer.VirtualScreen",
            "XXX.client.renderer.WeatherEffectRenderer$ColumnInstance",
            "XXX.client.renderer.WorldBorderRenderer$1",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.MultiVariant",
            "XXX.model.multipart.MultiPart$1Key",
            "XXX.model.multipart.MultiPart$InstantiatedSelector",
            "XXX.renderer.chunk.SectionRenderDispatcher$TranslucencyPointOfView",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$HiveDebugInfo",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedGameEvent",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.LightSectionDebugRenderer$SectionData",
            "XXX.renderer.debug.OctreeDebugRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.SupportBlockRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractHoglinRenderer",
            "XXX.renderer.entity.AbstractMinecartRenderer",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.AllayRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.AxolotlRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.BreezeRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DisplayRenderer$1",
            "XXX.renderer.entity.DisplayRenderer$ItemDisplayRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DonkeyRenderer$Type",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EntityRendererProvider",
            "XXX.renderer.entity.EntityRenderers",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GlowSquidRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.ParrotRenderer$1",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RabbitRenderer$1",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.TadpoleRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer$Type",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WardenRenderer",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.renderer.entity.ZombifiedPiglinRenderer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.BreezeWindLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.EquipmentLayerRenderer$LayerTextureKey",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseMarkingLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer$DrawSelector",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.SheepWoolLayer",
            "XXX.entity.layers.SimpleEquipmentLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.entity.state.AllayRenderState",
            "XXX.entity.state.ArmedEntityRenderState",
            "XXX.entity.state.ArrowRenderState",
            "XXX.entity.state.BatRenderState",
            "XXX.entity.state.BlockDisplayEntityRenderState",
            "XXX.entity.state.BoggedRenderState",
            "XXX.entity.state.CamelRenderState",
            "XXX.entity.state.ChickenRenderState",
            "XXX.entity.state.CreakingRenderState",
            "XXX.entity.state.DisplayEntityRenderState",
            "XXX.entity.state.DonkeyRenderState",
            "XXX.entity.state.EnderDragonRenderState",
            "XXX.entity.state.EntityRenderState",
            "XXX.entity.state.EquineRenderState",
            "XXX.entity.state.EvokerRenderState",
            "XXX.entity.state.FallingBlockRenderState",
            "XXX.entity.state.FireworkRocketRenderState",
            "XXX.entity.state.FoxRenderState",
            "XXX.entity.state.GhastRenderState",
            "XXX.entity.state.GuardianRenderState",
            "XXX.entity.state.HoldingEntityRenderState",
            "XXX.entity.state.HumanoidRenderState",
            "XXX.entity.state.IllusionerRenderState",
            "XXX.entity.state.ItemClusterRenderState",
            "XXX.entity.state.ItemEntityRenderState",
            "XXX.entity.state.LightningBoltRenderState",
            "XXX.entity.state.LlamaRenderState",
            "XXX.entity.state.MinecartRenderState",
            "XXX.entity.state.MushroomCowRenderState",
            "XXX.entity.state.PandaRenderState",
            "XXX.entity.state.PhantomRenderState",
            "XXX.entity.state.PiglinRenderState",
            "XXX.entity.state.PolarBearRenderState",
            "XXX.entity.state.RabbitRenderState",
            "XXX.entity.state.SalmonRenderState",
            "XXX.entity.state.ShulkerBulletRenderState",
            "XXX.entity.state.SkeletonRenderState",
            "XXX.entity.state.SnifferRenderState",
            "XXX.entity.state.SquidRenderState",
            "XXX.entity.state.TextDisplayEntityRenderState",
            "XXX.entity.state.ThrownTridentRenderState",
            "XXX.entity.state.TntRenderState",
            "XXX.entity.state.TurtleRenderState",
            "XXX.entity.state.VillagerDataHolderRenderState",
            "XXX.entity.state.WardenRenderState",
            "XXX.entity.state.WitherRenderState",
            "XXX.entity.state.WolfRenderState",
            "XXX.entity.state.ZombieVillagerRenderState",
            "XXX.entity.state.package-info",
            "XXX.renderer.item.BlockModelWrapper$Unbaked",
            "XXX.renderer.item.BundleSelectedItemSpecialRenderer$Unbaked",
            "XXX.renderer.item.ClientItem$Properties",
            "XXX.renderer.item.CompositeModel$Unbaked",
            "XXX.renderer.item.ConditionalItemModel$Unbaked",
            "XXX.renderer.item.EmptyModel$Unbaked",
            "XXX.renderer.item.ItemModel$BakingContext",
            "XXX.renderer.item.ItemModelResolver",
            "XXX.renderer.item.ItemStackRenderState",
            "XXX.renderer.item.ItemStackRenderState$LayerRenderState",
            "XXX.renderer.item.ModelRenderProperties",
            "XXX.renderer.item.RangeSelectItemModel$Entry",
            "XXX.renderer.item.SelectItemModel",
            "XXX.renderer.item.SelectItemModel$SwitchCase",
            "XXX.renderer.item.SelectItemModel$UnbakedSwitch",
            "XXX.renderer.item.SpecialModelWrapper$Unbaked",
            "XXX.properties.conditional.Broken",
            "XXX.properties.conditional.ComponentMatches",
            "XXX.properties.conditional.ConditionalItemModelProperty",
            "XXX.properties.conditional.Damaged",
            "XXX.properties.conditional.FishingRodCast",
            "XXX.properties.conditional.IsCarried",
            "XXX.properties.conditional.IsSelected",
            "XXX.properties.conditional.IsViewEntity",
            "XXX.properties.conditional.package-info",
            "XXX.properties.numeric.CompassAngle",
            "XXX.properties.numeric.CompassAngleState$CompassTarget",
            "XXX.properties.numeric.CompassAngleState$CompassTarget$2",
            "XXX.properties.numeric.CompassAngleState$CompassTarget$4",
            "XXX.properties.numeric.Count",
            "XXX.properties.numeric.CustomModelDataProperty",
            "XXX.properties.numeric.NeedleDirectionHelper",
            "XXX.properties.numeric.NeedleDirectionHelper$2",
            "XXX.properties.numeric.RangeSelectItemModelProperties",
            "XXX.properties.numeric.Time",
            "XXX.properties.numeric.Time$TimeSource$1",
            "XXX.properties.numeric.Time$TimeSource$3",
            "XXX.properties.numeric.UseDuration",
            "XXX.item.properties.package-info",
            "XXX.properties.select.ComponentContents",
            "XXX.properties.select.ContextEntityType",
            "XXX.properties.select.DisplayContext",
            "XXX.properties.select.LocalTime",
            "XXX.properties.select.MainHand",
            "XXX.properties.select.SelectItemModelProperty",
            "XXX.properties.select.TrimMaterialProperty",
            "XXX.client.renderer.package-info",
            "XXX.renderer.special.BannerSpecialRenderer$Unbaked",
            "XXX.renderer.special.BedSpecialRenderer$Unbaked",
            "XXX.renderer.special.ChestSpecialRenderer$Unbaked",
            "XXX.renderer.special.ConduitSpecialRenderer$Unbaked",
            "XXX.renderer.special.DecoratedPotSpecialRenderer$Unbaked",
            "XXX.renderer.special.HangingSignSpecialRenderer$Unbaked",
            "XXX.renderer.special.ShieldSpecialRenderer",
            "XXX.renderer.special.ShulkerBoxSpecialRenderer",
            "XXX.renderer.special.SkullSpecialRenderer",
            "XXX.renderer.special.SpecialModelRenderer",
            "XXX.renderer.special.SpecialModelRenderers",
            "XXX.renderer.special.StandingSignSpecialRenderer$Unbaked",
            "XXX.renderer.special.TridentSpecialRenderer$Unbaked",
            "XXX.renderer.state.MapRenderState",
            "XXX.renderer.state.package-info",
            "XXX.renderer.texture.Dumpable",
            "XXX.renderer.texture.MipmapGenerator",
            "XXX.renderer.texture.OverlayTexture",
            "XXX.renderer.texture.SimpleTexture",
            "XXX.renderer.texture.SpriteContents",
            "XXX.renderer.texture.SpriteContents$FrameInfo",
            "XXX.renderer.texture.SpriteContents$Ticker",
            "XXX.renderer.texture.SpriteLoader$Preparations",
            "XXX.renderer.texture.Stitcher",
            "XXX.renderer.texture.Stitcher$Holder",
            "XXX.renderer.texture.Stitcher$SpriteLoader",
            "XXX.renderer.texture.TextureAtlas",
            "XXX.renderer.texture.TextureAtlasSprite$1",
            "XXX.renderer.texture.TextureContents",
            "XXX.renderer.texture.TextureManager$PendingReload",
            "XXX.texture.atlas.SpriteResourceLoader",
            "XXX.texture.atlas.SpriteSource$Output",
            "XXX.texture.atlas.SpriteSourceList",
            "XXX.texture.atlas.SpriteSources",
            "XXX.atlas.sources.DirectoryLister",
            "XXX.atlas.sources.PalettedPermutations",
            "XXX.atlas.sources.SingleFile",
            "XXX.atlas.sources.Unstitcher",
            "XXX.atlas.sources.Unstitcher$RegionInstance",
            "XXX.renderer.texture.package-info",
            "XXX.client.resources.DefaultPlayerSkin",
            "XXX.client.resources.FoliageColorReloadListener",
            "XXX.client.resources.IndexedAssetSource",
            "XXX.client.resources.MapDecorationTextureManager",
            "XXX.client.resources.MapTextureManager$MapInstance",
            "XXX.client.resources.PaintingTextureManager",
            "XXX.client.resources.PlayerSkin$Model",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SkinManager$CacheKey",
            "XXX.client.resources.SplashManager",
            "XXX.resources.language.ClientLanguage",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.FrameSize",
            "XXX.metadata.animation.VillagerMetadataSection$Hat",
            "XXX.metadata.gui.GuiMetadataSection",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice",
            "XXX.metadata.gui.GuiSpriteScaling$Stretch",
            "XXX.metadata.gui.GuiSpriteScaling$Type",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.AtlasSet",
            "XXX.resources.model.AtlasSet$StitchResult",
            "XXX.resources.model.BlockModelRotation$WithUvLock",
            "XXX.resources.model.BlockStateModelLoader",
            "XXX.resources.model.BlockStateModelLoader$LoadedModels",
            "XXX.resources.model.ClientItemInfoLoader$LoadedClientInfos",
            "XXX.resources.model.EquipmentAssetManager",
            "XXX.resources.model.EquipmentClientInfo$Builder",
            "XXX.resources.model.EquipmentClientInfo$Layer",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBaker",
            "XXX.resources.model.MultiPartBakedModel$Selector",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.client.resources.package-info",
            "XXX.resources.server.DownloadedPackSource$1",
            "XXX.resources.server.DownloadedPackSource$3",
            "XXX.resources.server.DownloadedPackSource$5",
            "XXX.resources.server.DownloadedPackSource$7",
            "XXX.resources.server.PackDownloader",
            "XXX.resources.server.PackLoadFeedback$FinalResult",
            "XXX.resources.server.PackReloadConfig",
            "XXX.resources.server.PackReloadConfig$IdAndPath",
            "XXX.resources.server.ServerPackManager$1",
            "XXX.resources.server.ServerPackManager$PackDownloadStatus",
            "XXX.resources.server.ServerPackManager$RemovalReason",
            "XXX.resources.server.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.SnifferSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.IdSearchTree",
            "XXX.client.searchtree.MergingUniqueIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree$1",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.ChunkedSampleByteBuf",
            "XXX.client.sounds.FloatSampleSource",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.telemetry.ClientTelemetryManager",
            "XXX.client.telemetry.TelemetryEventLog",
            "XXX.client.telemetry.TelemetryEventSender",
            "XXX.client.telemetry.TelemetryEventType$Builder",
            "XXX.client.telemetry.TelemetryProperty",
            "XXX.client.telemetry.TelemetryProperty$GameMode",
            "XXX.client.telemetry.TelemetryPropertyMap",
            "XXX.client.telemetry.TelemetryPropertyMap$Builder",
            "XXX.telemetry.events.AggregatedTelemetryEvent",
            "XXX.telemetry.events.GameLoadTimesEvent$Measurement",
            "XXX.telemetry.events.WorldLoadEvent",
            "XXX.telemetry.events.WorldLoadTimesEvent",
            "XXX.telemetry.events.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandResultCallback",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$1$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootModifierArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootTableArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ResourceSelectorArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.SlotsArgument",
            "XXX.commands.arguments.StyleArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$TagLookupRule",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$1",
            "XXX.arguments.item.ItemParser$State",
            "XXX.arguments.item.ItemParser$Visitor",
            "XXX.arguments.item.ItemPredicateArgument$ComponentWrapper",
            "XXX.arguments.item.ItemPredicateArgument$PredicateWrapper",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.execution.CommandQueueEntry",
            "XXX.commands.execution.CustomCommandExecutor$CommandAdapter",
            "XXX.commands.execution.CustomModifierExecutor",
            "XXX.commands.execution.EntryAction",
            "XXX.commands.execution.ExecutionControl",
            "XXX.commands.execution.Frame",
            "XXX.commands.execution.TraceCallbacks",
            "XXX.commands.execution.package-info",
            "XXX.execution.tasks.BuildContexts$Continuation",
            "XXX.execution.tasks.BuildContexts$Unbound",
            "XXX.execution.tasks.ContinuationTask",
            "XXX.execution.tasks.ExecuteCommand",
            "XXX.execution.tasks.IsolatedCall",
            "XXX.commands.functions.CommandFunction",
            "XXX.commands.functions.InstantiatedFunction",
            "XXX.commands.functions.MacroFunction$Entry",
            "XXX.commands.functions.MacroFunction$PlainTextEntry",
            "XXX.commands.functions.StringTemplate",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockBox",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.ClientAsset",
            "XXX.minecraft.core.Cloner$Factory",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.MappedRegistry$TagSet",
            "XXX.minecraft.core.MappedRegistry$TagSet$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.RegistrationInfo",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$2",
            "XXX.minecraft.core.RegistrySetBuilder$3$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookupWrapper",
            "XXX.minecraft.core.RegistrySetBuilder$LazyHolder",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$PackedRegistryEntry",
            "XXX.minecraft.core.Rotations$1",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.UUIDUtil$1",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.CauldronInteraction$InteractionMap",
            "XXX.core.component.DataComponentExactPredicate",
            "XXX.core.component.DataComponentGetter",
            "XXX.core.component.DataComponentMap",
            "XXX.core.component.DataComponentMap$2",
            "XXX.core.component.DataComponentMap$Builder",
            "XXX.core.component.DataComponentPatch",
            "XXX.core.component.DataComponentPatch$Builder",
            "XXX.core.component.DataComponentPatch$SplitResult",
            "XXX.core.component.DataComponentType$Builder",
            "XXX.core.component.DataComponents",
            "XXX.core.component.TypedDataComponent",
            "XXX.core.component.package-info",
            "XXX.component.predicates.AttributeModifiersPredicate$EntryPredicate",
            "XXX.component.predicates.ContainerPredicate",
            "XXX.component.predicates.DamagePredicate",
            "XXX.component.predicates.DataComponentPredicate$Single",
            "XXX.component.predicates.DataComponentPredicates",
            "XXX.component.predicates.EnchantmentsPredicate$Enchantments",
            "XXX.component.predicates.FireworkExplosionPredicate",
            "XXX.component.predicates.FireworksPredicate",
            "XXX.component.predicates.PotionsPredicate",
            "XXX.component.predicates.WritableBookPredicate",
            "XXX.component.predicates.WrittenBookPredicate",
            "XXX.component.predicates.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.EquipmentDispenseItemBehavior",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.ScalableParticleOptionsBase",
            "XXX.core.particles.ShriekParticleOption",
            "XXX.core.particles.TrailParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.DatapackStructureReport",
            "XXX.data.info.DatapackStructureReport$Entry",
            "XXX.data.info.DatapackStructureReport$Report",
            "XXX.data.info.PacketReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.TradeRebalanceChestLoot",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaEquipmentLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider$Runner",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.RegistryPatchGenerator",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.VanillaBlockTagsProvider",
            "XXX.data.tags.VanillaItemTagsProvider",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.AncientCityStructurePools",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.BootstrapContext",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.NoiseData",
            "XXX.data.worldgen.PlainVillagePools",
            "XXX.data.worldgen.ProcessorLists",
            "XXX.data.worldgen.SnowyVillagePools",
            "XXX.data.worldgen.Structures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.data.worldgen.TrailRuinsStructurePools",
            "XXX.data.worldgen.VillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BlockBasedTestInstance",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.FunctionGameTestInstance",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchFactory",
            "XXX.gametest.framework.GameTestBatchListener",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestInstances",
            "XXX.gametest.framework.GameTestMainUtil",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestRunner$GameTestBatcher",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.RetryOptions",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestEnvironmentDefinition",
            "XXX.gametest.framework.TestEnvironmentDefinition$Functions",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules$Entry",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather",
            "XXX.gametest.framework.TestFinder",
            "XXX.gametest.framework.TestFunctionLoader",
            "XXX.gametest.framework.TestPosFinder",
            "XXX.gametest.framework.UnknownGameTestException",
            "XXX.minecraft.locale.DeprecatedTranslationsInfo",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.HiddenByteBuf",
            "XXX.minecraft.network.LocalFrameEncoder",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.ProtocolInfo",
            "XXX.minecraft.network.ProtocolInfo$Unbound$PacketVisitor",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Inbound",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Outbound",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.ClickEvent$CopyToClipboard",
            "XXX.network.chat.ClickEvent$OpenUrl",
            "XXX.network.chat.ClickEvent$SuggestCommand",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$SerializerAdapter",
            "XXX.network.chat.ComponentContents$Type",
            "XXX.network.chat.ComponentSerialization$1",
            "XXX.network.chat.ComponentSerialization$StrictEither",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ShowEntity",
            "XXX.network.chat.HoverEvent$ShowText",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$1",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.DataSource$Type",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.PlainTextContents$1",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.chat.numbers.BlankFormat",
            "XXX.chat.numbers.FixedFormat",
            "XXX.chat.numbers.NumberFormat",
            "XXX.chat.numbers.NumberFormatTypes",
            "XXX.chat.numbers.StyledFormat$1",
            "XXX.network.chat.package-info",
            "XXX.network.codec.ByteBufCodecs$1",
            "XXX.network.codec.ByteBufCodecs$11",
            "XXX.network.codec.ByteBufCodecs$13",
            "XXX.network.codec.ByteBufCodecs$15",
            "XXX.network.codec.ByteBufCodecs$17",
            "XXX.network.codec.ByteBufCodecs$19",
            "XXX.network.codec.ByteBufCodecs$20",
            "XXX.network.codec.ByteBufCodecs$22",
            "XXX.network.codec.ByteBufCodecs$24",
            "XXX.network.codec.ByteBufCodecs$26",
            "XXX.network.codec.ByteBufCodecs$28",
            "XXX.network.codec.ByteBufCodecs$3",
            "XXX.network.codec.ByteBufCodecs$31",
            "XXX.network.codec.ByteBufCodecs$5",
            "XXX.network.codec.ByteBufCodecs$7",
            "XXX.network.codec.ByteBufCodecs$9",
            "XXX.network.codec.IdDispatchCodec$Builder",
            "XXX.network.codec.StreamCodec",
            "XXX.network.codec.StreamCodec$10",
            "XXX.network.codec.StreamCodec$12",
            "XXX.network.codec.StreamCodec$14",
            "XXX.network.codec.StreamCodec$16",
            "XXX.network.codec.StreamCodec$3",
            "XXX.network.codec.StreamCodec$5",
            "XXX.network.codec.StreamCodec$7",
            "XXX.network.codec.StreamCodec$9",
            "XXX.network.codec.StreamDecoder",
            "XXX.network.codec.StreamMemberEncoder",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.PacketFlow",
            "XXX.network.protocol.PacketUtils",
            "XXX.network.protocol.ProtocolInfoBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$CodecEntry",
            "XXX.protocol.common.ClientCommonPacketListener",
            "XXX.protocol.common.ClientboundCustomReportDetailsPacket",
            "XXX.protocol.common.ClientboundKeepAlivePacket",
            "XXX.protocol.common.ClientboundResourcePackPopPacket",
            "XXX.protocol.common.ClientboundServerLinksPacket",
            "XXX.protocol.common.ClientboundTransferPacket",
            "XXX.protocol.common.CommonPacketTypes",
            "XXX.protocol.common.ServerboundClientInformationPacket",
            "XXX.protocol.common.ServerboundKeepAlivePacket",
            "XXX.protocol.common.ServerboundResourcePackPacket",
            "XXX.common.custom.BeeDebugPayload",
            "XXX.common.custom.BrainDebugPayload",
            "XXX.common.custom.BrandPayload",
            "XXX.common.custom.BreezeDebugPayload$BreezeInfo",
            "XXX.common.custom.CustomPacketPayload$1",
            "XXX.common.custom.CustomPacketPayload$Type",
            "XXX.common.custom.DiscardedPayload",
            "XXX.common.custom.GameEventListenerDebugPayload",
            "XXX.common.custom.GameTestClearMarkersDebugPayload",
            "XXX.common.custom.GoalDebugPayload$DebugGoal",
            "XXX.common.custom.HiveDebugPayload$HiveInfo",
            "XXX.common.custom.PathfindingDebugPayload",
            "XXX.common.custom.PoiRemovedDebugPayload",
            "XXX.common.custom.RaidsDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload$Wire",
            "XXX.common.custom.StructuresDebugPayload$PieceInfo",
            "XXX.common.custom.WorldGenAttemptDebugPayload",
            "XXX.protocol.common.package-info",
            "XXX.protocol.configuration.ClientboundFinishConfigurationPacket",
            "XXX.protocol.configuration.ClientboundResetChatPacket",
            "XXX.protocol.configuration.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.configuration.ConfigurationProtocols",
            "XXX.protocol.configuration.ServerboundFinishConfigurationPacket",
            "XXX.protocol.configuration.package-info",
            "XXX.protocol.cookie.ClientboundCookieRequestPacket",
            "XXX.protocol.cookie.ServerCookiePacketListener",
            "XXX.protocol.cookie.package-info",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundBundleDelimiterPacket",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBatchStartPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeResolver",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket$Action",
            "XXX.protocol.game.ClientboundDebugSamplePacket",
            "XXX.protocol.game.ClientboundDisguisedChatPacket",
            "XXX.protocol.game.ClientboundEntityPositionSyncPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundGameEventPacket$Type",
            "XXX.protocol.game.ClientboundHurtAnimationPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerChatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEnterPacket",
            "XXX.protocol.game.ClientboundPlayerInfoRemovePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundProjectilePowerPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket$Entry",
            "XXX.protocol.game.ClientboundRecipeBookSettingsPacket",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetCursorItemPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerInventoryPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStartConfigurationPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundTickingStatePacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.GamePacketTypes",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundChunkBatchReceivedPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundDebugSampleSubscriptionPacket",
            "XXX.protocol.game.ServerboundEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundInteractPacket$1",
            "XXX.protocol.game.ServerboundInteractPacket$ActionType",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAction",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMovePlayerPacket$StatusOnly",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPickItemFromEntityPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundPlayerLoadedPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectBundleItemPacket",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket$Action",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.HandshakeProtocols",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ClientboundLoginFinishedPacket",
            "XXX.protocol.login.LoginProtocols",
            "XXX.protocol.login.ServerboundCustomQueryAnswerPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.login.custom.CustomQueryAnswerPayload",
            "XXX.login.custom.DiscardedQueryAnswerPayload",
            "XXX.login.custom.package-info",
            "XXX.network.protocol.package-info",
            "XXX.protocol.ping.ClientboundPongResponsePacket",
            "XXX.protocol.ping.ServerPingPacketListener",
            "XXX.protocol.ping.package-info",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.protocol.status.StatusProtocols",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.network.syncher.SyncedDataHolder",
            "XXX.network.syncher.SynchedEntityData$Builder",
            "XXX.network.syncher.SynchedEntityData$DataValue",
            "XXX.minecraft.obfuscate.DontObfuscate",
            "net.minecraft.package-info",
            "XXX.minecraft.realms.RealmsConnect",
            "XXX.minecraft.realms.RealmsLabel",
            "XXX.minecraft.realms.RepeatedNarrator",
            "XXX.minecraft.realms.package-info",
            "XXX.minecraft.recipebook.PlaceRecipeHelper$Output",
            "XXX.minecraft.recipebook.ServerPlaceRecipe$CraftingMenuAccess",
            "XXX.minecraft.references.Blocks",
            "XXX.minecraft.references.package-info",
            "XXX.minecraft.resources.DependantName",
            "XXX.minecraft.resources.HolderSetCodec",
            "XXX.minecraft.resources.RegistryDataLoader$1",
            "XXX.minecraft.resources.RegistryDataLoader$LoadingFunction",
            "XXX.minecraft.resources.RegistryDataLoader$RegistryData",
            "XXX.minecraft.resources.RegistryFixedCodec",
            "XXX.minecraft.resources.RegistryOps$HolderLookupAdapter",
            "XXX.minecraft.resources.RegistryOps$RegistryInfoLookup",
            "XXX.minecraft.resources.ResourceKey$InternKey",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$Data",
            "XXX.minecraft.server.ReloadableServerRegistries",
            "XXX.minecraft.server.ReloadableServerRegistries$LoadResult",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerInfo",
            "XXX.minecraft.server.ServerLinks",
            "XXX.minecraft.server.ServerLinks$KnownLinkType",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.ServerTickRateManager",
            "XXX.minecraft.server.SuppressedExceptionCollector",
            "XXX.minecraft.server.SuppressedExceptionCollector$ShortEntry",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.bossevents.CustomBossEvents",
            "XXX.server.chase.ChaseClient",
            "XXX.server.chase.ChaseServer",
            "XXX.server.chase.package-info",
            "XXX.server.commands.AdvancementCommands$Action",
            "XXX.server.commands.AdvancementCommands$Action$2",
            "XXX.server.commands.AttributeCommand",
            "XXX.server.commands.BanListCommands",
            "XXX.server.commands.BossBarCommands",
            "XXX.server.commands.ClearInventoryCommands",
            "XXX.server.commands.CloneCommands$CloneBlockEntityInfo",
            "XXX.server.commands.CloneCommands$DimensionAndPosition",
            "XXX.server.commands.DamageCommand",
            "XXX.server.commands.DataPackCommand$Inserter",
            "XXX.server.commands.DebugCommand",
            "XXX.server.commands.DebugCommand$TraceCustomExecutor$1",
            "XXX.server.commands.DebugConfigCommand",
            "XXX.server.commands.DebugPathCommand",
            "XXX.server.commands.DifficultyCommand",
            "XXX.server.commands.EmoteCommands",
            "XXX.server.commands.ExecuteCommand",
            "XXX.server.commands.ExecuteCommand$CommandPredicate",
            "XXX.server.commands.ExecuteCommand$IntBiPredicate",
            "XXX.server.commands.ExperienceCommand$Type",
            "XXX.server.commands.FillCommand",
            "XXX.server.commands.FillCommand$Filter",
            "XXX.server.commands.FillCommand$NullableCommandFunction",
            "XXX.server.commands.FunctionCommand",
            "XXX.server.commands.FunctionCommand$1Accumulator",
            "XXX.server.commands.FunctionCommand$3",
            "XXX.server.commands.FunctionCommand$5",
            "XXX.server.commands.FunctionCommand$FunctionCustomExecutor",
            "XXX.server.commands.GameRuleCommand",
            "XXX.server.commands.GiveCommand",
            "XXX.server.commands.InCommandFunction",
            "XXX.server.commands.JfrCommand",
            "XXX.server.commands.KillCommand",
            "XXX.server.commands.LocateCommand",
            "XXX.server.commands.LookAt$LookAtEntity",
            "XXX.server.commands.LootCommand",
            "XXX.server.commands.LootCommand$DropConsumer",
            "XXX.server.commands.MsgCommand",
            "XXX.server.commands.PardonCommand",
            "XXX.server.commands.ParticleCommand",
            "XXX.server.commands.PlaceCommand",
            "XXX.server.commands.PublishCommand",
            "XXX.server.commands.RandomCommand",
            "XXX.server.commands.ReloadCommand",
            "XXX.server.commands.ReturnCommand$ReturnFailCustomExecutor",
            "XXX.server.commands.ReturnCommand$ReturnValueCustomExecutor",
            "XXX.server.commands.RotateCommand",
            "XXX.server.commands.SaveOffCommand",
            "XXX.server.commands.SayCommand",
            "XXX.server.commands.ScoreboardCommand",
            "XXX.server.commands.SeedCommand",
            "XXX.server.commands.SetBlockCommand",
            "XXX.server.commands.SetPlayerIdleTimeoutCommand",
            "XXX.server.commands.SetWorldSpawnCommand",
            "XXX.server.commands.SpectateCommand",
            "XXX.server.commands.SpreadPlayersCommand$Position",
            "XXX.server.commands.StopSoundCommand",
            "XXX.server.commands.TagCommand",
            "XXX.server.commands.TeamMsgCommand",
            "XXX.server.commands.TellRawCommand",
            "XXX.server.commands.TimeCommand",
            "XXX.server.commands.TransferCommand",
            "XXX.server.commands.WardenSpawnTrackerCommand",
            "XXX.server.commands.WhitelistCommand",
            "XXX.commands.data.BlockDataAccessor",
            "XXX.commands.data.DataAccessor",
            "XXX.commands.data.DataCommands$DataManipulator",
            "XXX.commands.data.DataCommands$DataProvider",
            "XXX.commands.data.EntityDataAccessor",
            "XXX.commands.data.StorageDataAccessor",
            "XXX.commands.data.package-info",
            "XXX.server.dedicated.DedicatedPlayerList",
            "XXX.server.dedicated.DedicatedServer$1",
            "XXX.server.dedicated.DedicatedServerProperties$WorldDimensionData",
            "XXX.server.dedicated.ServerWatchdog",
            "XXX.server.dedicated.Settings",
            "XXX.server.dedicated.package-info",
            "XXX.server.gui.MinecraftServerGui$1",
            "XXX.server.gui.PlayerListComponent",
            "XXX.server.gui.package-info",
            "XXX.server.level.ChunkGenerationTask",
            "XXX.server.level.ChunkHolder$LevelChangeListener",
            "XXX.server.level.ChunkLevel",
            "XXX.server.level.ChunkMap",
            "XXX.server.level.ChunkMap$TrackedEntity",
            "XXX.server.level.ChunkResult$Fail",
            "XXX.server.level.ChunkTaskDispatcher",
            "XXX.server.level.ChunkTaskPriorityQueue$TasksForChunk",
            "XXX.server.level.ChunkTrackingView",
            "XXX.server.level.ChunkTrackingView$Positioned",
            "XXX.server.level.ColumnPos",
            "XXX.server.level.DistanceManager",
            "XXX.server.level.DistanceManager$PlayerTicketTracker",
            "XXX.server.level.GeneratingChunkMap",
            "XXX.server.level.LoadingChunkTracker",
            "XXX.server.level.PlayerMap",
            "XXX.server.level.SectionTracker",
            "XXX.server.level.ServerChunkCache",
            "XXX.server.level.ServerEntity",
            "XXX.server.level.ServerLevel",
            "XXX.server.level.ServerLevel$EntityCallbacks",
            "XXX.server.level.ServerPlayer$1",
            "XXX.server.level.ServerPlayer$3",
            "XXX.server.level.ServerPlayer$RespawnPosAngle",
            "XXX.server.level.SimulationChunkTracker",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.Ticket",
            "XXX.server.level.TicketType$TicketUse",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.ConfigurationTask",
            "XXX.server.network.Filterable",
            "XXX.server.network.LegacyProtocolUtils",
            "XXX.server.network.LegacyTextFilter",
            "XXX.server.network.LegacyTextFilter$JoinOrLeaveEncoder",
            "XXX.server.network.PlayerChunkSender",
            "XXX.server.network.ServerCommonPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.ServerTextFilter",
            "XXX.server.network.ServerTextFilter$MessageEncoder",
            "XXX.server.network.ServerTextFilter$RequestFailedException",
            "XXX.server.network.TextFilter$1",
            "XXX.network.config.ServerResourcePackConfigurationTask",
            "XXX.network.config.package-info",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.BuiltInMetadata",
            "XXX.server.packs.DownloadCacheCleaner",
            "XXX.server.packs.DownloadCacheCleaner$PathAndPriority",
            "XXX.server.packs.DownloadQueue",
            "XXX.server.packs.DownloadQueue$BatchResult",
            "XXX.server.packs.DownloadQueue$FileInfoEntry",
            "XXX.server.packs.FeatureFlagsMetadataSection",
            "XXX.server.packs.FilePackResources$FileResourcesSupplier",
            "XXX.server.packs.OverlayMetadataSection",
            "XXX.server.packs.PackLocationInfo",
            "XXX.server.packs.PackResources$ResourceOutput",
            "XXX.server.packs.PackType",
            "XXX.server.packs.PathPackResources$PathResourcesSupplier",
            "XXX.server.packs.VanillaPackResourcesBuilder",
            "XXX.packs.linkfs.LinkFSFileStore",
            "XXX.packs.linkfs.LinkFSPath$1",
            "XXX.packs.linkfs.LinkFSPath$3",
            "XXX.packs.linkfs.LinkFSProvider$1",
            "XXX.packs.linkfs.LinkFileSystem",
            "XXX.packs.linkfs.LinkFileSystem$DirectoryEntry",
            "XXX.packs.linkfs.PathContents$1",
            "XXX.packs.linkfs.PathContents$DirectoryContents",
            "XXX.packs.linkfs.package-info",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.BuiltInPackSource",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.KnownPack",
            "XXX.packs.repository.Pack$Metadata",
            "XXX.packs.repository.Pack$ResourcesSupplier",
            "XXX.packs.repository.PackDetector",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.FallbackResourceManager$EntryStack",
            "XXX.packs.resources.FallbackResourceManager$PackEntry",
            "XXX.packs.resources.IoSupplier",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.ResourceMetadata$1",
            "XXX.packs.resources.ResourceMetadata$Builder",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BiomeTags",
            "XXX.minecraft.tags.DamageTypeTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.InstrumentTags",
            "XXX.minecraft.tags.PaintingVariantTags",
            "XXX.minecraft.tags.StructureTags",
            "XXX.minecraft.tags.TagEntry",
            "XXX.minecraft.tags.TagFile",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagLoader$ElementLookup",
            "XXX.minecraft.tags.TagLoader$LoadResult",
            "XXX.minecraft.tags.TagNetworkSerialization",
            "XXX.minecraft.tags.WorldPresetTags",
            "XXX.minecraft.util.ARGB",
            "XXX.minecraft.util.AbortableIterationConsumer$Continuation",
            "XXX.minecraft.util.ArrayListDeque$DescendingIterator",
            "XXX.minecraft.util.BinaryAnimator",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.ColorRGBA",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DelegateDataOutput",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.EncoderCache$1",
            "XXX.minecraft.util.EncoderCache$Key",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$5",
            "XXX.minecraft.util.ExtraCodecs$7",
            "XXX.minecraft.util.ExtraCodecs$StrictUnboundedMapCodec",
            "XXX.minecraft.util.FastBufferedInputStream",
            "XXX.minecraft.util.FileZipper",
            "XXX.minecraft.util.FormattedCharSink",
            "XXX.minecraft.util.Graph",
            "XXX.minecraft.util.GsonHelper$CountedAppendable",
            "XXX.minecraft.util.HttpUtil$DownloadProgressListener",
            "XXX.minecraft.util.KeyDispatchDataCodec",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.MemoryReserve",
            "XXX.minecraft.util.ModCheck$Confidence",
            "XXX.minecraft.util.NativeModuleLister",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleVersion",
            "XXX.minecraft.util.NullOps$NullMapBuilder",
            "XXX.minecraft.util.ParticleUtils",
            "XXX.minecraft.util.PlaceholderLookupProvider$1",
            "XXX.minecraft.util.PlaceholderLookupProvider$UniversalLookup",
            "XXX.minecraft.util.ProblemReporter",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RegistryContextSwapper",
            "XXX.minecraft.util.SegmentedAnglePrecision",
            "XXX.minecraft.util.SignatureUpdater",
            "XXX.minecraft.util.SignatureValidator",
            "XXX.minecraft.util.SimpleBitStorage",
            "XXX.minecraft.util.SingleKeyCache",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SpawnUtil",
            "XXX.minecraft.util.StaticCache2D",
            "XXX.minecraft.util.StringDecomposer",
            "XXX.minecraft.util.StringRepresentable$1",
            "XXX.minecraft.util.StringRepresentable$StringRepresentableCodec",
            "XXX.minecraft.util.TaskChainer",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.TimeSource",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.ToFloatFunction$1",
            "XXX.minecraft.util.TriState",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.context.ContextKeySet",
            "XXX.util.context.ContextMap",
            "XXX.util.context.package-info",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.ExtraDataFixUtils",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractBlockPropertyFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.AreaEffectCloudPotionFix",
            "XXX.datafix.fixes.AttributeModifierIdFix",
            "XXX.datafix.fixes.AttributesRenameLegacy",
            "XXX.datafix.fixes.BannerPatternFormatFix",
            "XXX.datafix.fixes.BeehiveFieldRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityFurnaceBurnTimeFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockPropertyRenameAndFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CarvingStepRemoveFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChestedHorsesInventoryZeroIndexingFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$MappingConstants",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.ContainerBlockEntityLockPredicateFix",
            "XXX.datafix.fixes.CustomModelDataExpandFix",
            "XXX.datafix.fixes.DecoratedPotFieldRenameFix",
            "XXX.datafix.fixes.DropInvalidSignDataFix",
            "XXX.datafix.fixes.EffectDurationFix",
            "XXX.datafix.fixes.EmptyItemInVillagerTradeFix",
            "XXX.datafix.fixes.EntityAttributeBaseValueFix",
            "XXX.datafix.fixes.EntityBrushableBlockFieldsRenameFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityFallDistanceFloatToDoubleFix",
            "XXX.datafix.fixes.EntityGoatMissingStateFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix$Fixer",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.EquipmentFormatFix",
            "XXX.datafix.fixes.FeatureFlagRemoveFix",
            "XXX.datafix.fixes.FilteredSignsFix",
            "XXX.datafix.fixes.FixProjectileStoredItem",
            "XXX.datafix.fixes.FixWolfHealth",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.HorseBodyArmorItemFix",
            "XXX.datafix.fixes.InlineBlockPosFormatFix",
            "XXX.datafix.fixes.InvalidLockComponentFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRemoveBlockEntityTagFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix$ItemStackData",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTagRemainderFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.JukeboxTicksSinceSongStartedFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelLegacyWorldGenSettingsFix",
            "XXX.datafix.fixes.LockComponentPredicateFix",
            "XXX.datafix.fixes.MapBannerBlockPosFormatFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobEffectIdFix",
            "XXX.datafix.fixes.NamedEntityConvertUncheckedFix",
            "XXX.datafix.fixes.NamedEntityWriteReadFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsMenuBlurrinessFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.ParticleUnflatteningFix",
            "XXX.datafix.fixes.PlayerHeadBlockProfileFix",
            "XXX.datafix.fixes.PoiTypeRemoveFix",
            "XXX.datafix.fixes.PrimedTntBlockStateFixer",
            "XXX.datafix.fixes.RaidRenamesDataFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.References$1",
            "XXX.datafix.fixes.RemoveEmptyItemInBrushableBlockFix",
            "XXX.datafix.fixes.RenameEnchantmentsFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SaddleEquipmentSlotFix",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.ScoreboardDisplaySlotFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix",
            "XXX.datafix.fixes.TextComponentHoverAndClickEventFix",
            "XXX.datafix.fixes.TextComponentStringifiedFlagsFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix$ItemIdFinder",
            "XXX.datafix.fixes.TooltipDisplayComponentFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix",
            "XXX.datafix.fixes.UnflattenTextComponentFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WeaponSmithChestLootTableFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1458",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2511_1",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V3076",
            "XXX.datafix.schemas.V3081",
            "XXX.datafix.schemas.V3083",
            "XXX.datafix.schemas.V3203",
            "XXX.datafix.schemas.V3325",
            "XXX.datafix.schemas.V3327",
            "XXX.datafix.schemas.V3438",
            "XXX.datafix.schemas.V3448",
            "XXX.datafix.schemas.V3683",
            "XXX.datafix.schemas.V3689",
            "XXX.datafix.schemas.V3807",
            "XXX.datafix.schemas.V3808_1",
            "XXX.datafix.schemas.V3813",
            "XXX.datafix.schemas.V3818",
            "XXX.datafix.schemas.V3818_4",
            "XXX.datafix.schemas.V3825",
            "XXX.datafix.schemas.V4059",
            "XXX.datafix.schemas.V4070",
            "XXX.datafix.schemas.V4290",
            "XXX.datafix.schemas.V4300",
            "XXX.datafix.schemas.V4302",
            "XXX.datafix.schemas.V4307",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionStartedAt",
            "XXX.util.debugchart.RemoteDebugSampleType",
            "XXX.util.debugchart.SampleLogger",
            "XXX.util.debugchart.TpsDebugDimensions",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.parsing.packrat.Atom",
            "XXX.parsing.packrat.ParseState",
            "XXX.parsing.packrat.ParseState$CacheKey",
            "XXX.parsing.packrat.Rule$RuleAction",
            "XXX.parsing.packrat.Rule$WrappedTerm",
            "XXX.parsing.packrat.Term$Alternative",
            "XXX.parsing.packrat.Term$Sequence",
            "XXX.packrat.commands.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.Profiler",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.profiling.TracyZoneFiller$PlotAndValue",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.ChunkRegionIoEvent$Fields",
            "XXX.jfr.event.ChunkRegionWriteEvent",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.StructureGenerationEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.IoSummary",
            "XXX.jfr.stats.PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.WeightedList",
            "XXX.util.random.WeightedList$Compact",
            "XXX.util.random.WeightedList$Selector",
            "XXX.util.random.package-info",
            "XXX.util.thread.AbstractConsecutiveExecutor$Status",
            "XXX.util.thread.ConsecutiveExecutor",
            "XXX.util.thread.ParallelMapTransform",
            "XXX.util.thread.ParallelMapTransform$Container",
            "XXX.util.thread.ParallelMapTransform$SplitterBase",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$RunnableWithPriority",
            "XXX.util.thread.TaskScheduler$1",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.WorldUpgrader$AbstractUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$DimensionToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$FileToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$SimpleRegionStorageUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.Container$ContainerIterator",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResult$Fail",
            "XXX.minecraft.world.InteractionResult$Pass",
            "XXX.minecraft.world.InteractionResult$SwingSource",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.RandomSequences",
            "XXX.minecraft.world.RandomizableContainer",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.DamageScaling",
            "XXX.world.damagesource.DamageSource$1",
            "XXX.world.damagesource.DamageType",
            "XXX.world.damagesource.DeathMessageType",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.BadOmenMobEffect",
            "XXX.world.effect.HungerMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffect$AttributeTemplate",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffectInstance$Details",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.OozingMobEffect$NearbySlimes",
            "XXX.world.effect.RaidOmenMobEffect",
            "XXX.world.effect.SaturationMobEffect",
            "XXX.world.effect.WindChargedMobEffect",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.ConversionParams",
            "XXX.world.entity.ConversionType",
            "XXX.world.entity.ConversionType$2",
            "XXX.world.entity.Crackiness$Level",
            "XXX.world.entity.Display$BillboardConstraints",
            "XXX.world.entity.Display$BlockDisplay$BlockRenderState",
            "XXX.world.entity.Display$FloatInterpolator",
            "XXX.world.entity.Display$IntInterpolator",
            "XXX.world.entity.Display$ItemDisplay$ItemRenderState",
            "XXX.world.entity.Display$LinearIntInterpolator",
            "XXX.world.entity.Display$TextDisplay",
            "XXX.world.entity.Display$TextDisplay$CachedInfo",
            "XXX.world.entity.Display$TextDisplay$LineSplitter",
            "XXX.world.entity.Display$TransformationInterpolator",
            "XXX.world.entity.ElytraAnimationState",
            "XXX.world.entity.Entity$1",
            "XXX.world.entity.Entity$Movement",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityAttachment$Fallback",
            "XXX.world.entity.EntityAttachments$Builder",
            "XXX.world.entity.EntityEquipment",
            "XXX.world.entity.EntityReference",
            "XXX.world.entity.EntitySpawnReason",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.EquipmentSlotGroup",
            "XXX.world.entity.EquipmentTable",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.InsideBlockEffectApplier$1",
            "XXX.world.entity.InsideBlockEffectType",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.InterpolationHandler$InterpolationData",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.Leashable$LeashData",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.Mob$2",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OminousItemSpawner",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.Pose",
            "XXX.world.entity.Relative",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacementTypes",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal$TamableAnimalPanicGoal",
            "XXX.world.entity.TraceableEntity",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartAttacking$StartAttackingCondition",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$TargetErasedCallback",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.MobSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.TargetingConditions$Selector",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractCow",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Bee$ValidateHiveGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.CatVariant",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.ChickenVariant$ModelType",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.CowVariant",
            "XXX.entity.animal.CowVariants",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Variant",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PigVariant$ModelType",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.ShoulderRidingEntity",
            "XXX.entity.animal.Squid",
            "XXX.entity.animal.Squid$SquidRandomMovementGoal",
            "XXX.entity.animal.TropicalFish",
            "XXX.entity.animal.TropicalFish$Pattern",
            "XXX.entity.animal.TropicalFish$Variant",
            "XXX.entity.animal.Turtle$TurtleBreedGoal",
            "XXX.entity.animal.Turtle$TurtleGoToWaterGoal",
            "XXX.entity.animal.Turtle$TurtleMoveControl",
            "XXX.entity.animal.Turtle$TurtlePathNavigation",
            "XXX.entity.animal.Turtle$TurtleTravelGoal",
            "XXX.animal.allay.Allay",
            "XXX.animal.allay.Allay$VibrationUser",
            "XXX.animal.allay.package-info",
            "XXX.animal.armadillo.Armadillo$1",
            "XXX.animal.armadillo.Armadillo$ArmadilloState$1",
            "XXX.animal.armadillo.Armadillo$ArmadilloState$3",
            "XXX.animal.armadillo.ArmadilloAi",
            "XXX.animal.armadillo.ArmadilloAi$ArmadilloBallUp",
            "XXX.animal.armadillo.package-info",
            "XXX.animal.axolotl.Axolotl$AnimationState",
            "XXX.animal.axolotl.Axolotl$AxolotlLookControl",
            "XXX.animal.axolotl.Axolotl$Variant",
            "XXX.animal.axolotl.PlayDead",
            "XXX.animal.axolotl.package-info",
            "XXX.animal.camel.Camel$CamelBodyRotationControl",
            "XXX.animal.camel.Camel$CamelMoveControl",
            "XXX.animal.camel.CamelAi$CamelPanic",
            "XXX.animal.camel.package-info",
            "XXX.animal.frog.Frog$FrogLookControl",
            "XXX.animal.frog.Frog$FrogPathNavigation",
            "XXX.animal.frog.FrogVariant",
            "XXX.animal.frog.ShootTongue",
            "XXX.animal.frog.Tadpole",
            "XXX.animal.frog.package-info",
            "XXX.animal.goat.GoatAi",
            "XXX.animal.horse.AbstractChestedHorse",
            "XXX.animal.horse.AbstractHorse",
            "XXX.animal.horse.Horse",
            "XXX.animal.horse.Llama",
            "XXX.animal.horse.Llama$LlamaGroupData",
            "XXX.animal.horse.Llama$Variant",
            "XXX.animal.horse.Mule",
            "XXX.animal.horse.SkeletonTrapGoal",
            "XXX.animal.horse.TraderLlama$TraderLlamaDefendWanderingTraderGoal",
            "XXX.animal.horse.ZombieHorse",
            "XXX.entity.animal.package-info",
            "XXX.animal.sheep.SheepColorSpawnRules",
            "XXX.animal.sheep.SheepColorSpawnRules$SheepColorSpawnConfiguration",
            "XXX.animal.sniffer.Sniffer",
            "XXX.animal.sniffer.SnifferAi",
            "XXX.animal.sniffer.SnifferAi$2",
            "XXX.animal.sniffer.SnifferAi$Digging",
            "XXX.animal.sniffer.SnifferAi$FinishedDigging",
            "XXX.animal.sniffer.SnifferAi$Searching",
            "XXX.animal.sniffer.package-info",
            "XXX.animal.wolf.Wolf$WolfAvoidEntityGoal",
            "XXX.animal.wolf.WolfSoundVariant",
            "XXX.animal.wolf.WolfSoundVariants$SoundSet",
            "XXX.animal.wolf.WolfVariant$AssetInfo",
            "XXX.animal.wolf.package-info",
            "XXX.boss.enderdragon.DragonFlightHistory",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.GlowItemFrame",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.PaintingVariant",
            "XXX.entity.decoration.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.PrimedTnt$1",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerLookControl",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Strider",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.breeze.Breeze$1",
            "XXX.monster.breeze.BreezeAi$SlideToTargetSink",
            "XXX.monster.breeze.LongJump",
            "XXX.monster.breeze.ShootWhenStuck",
            "XXX.monster.breeze.package-info",
            "XXX.monster.creaking.Creaking$CreakingBodyRotationControl",
            "XXX.monster.creaking.Creaking$CreakingLookControl",
            "XXX.monster.creaking.Creaking$CreakingPathNavigation",
            "XXX.monster.creaking.CreakingAi",
            "XXX.monster.creaking.package-info",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.monster.warden.AngerManagement",
            "XXX.monster.warden.AngerManagement$Sorter",
            "XXX.monster.warden.Warden$1",
            "XXX.monster.warden.Warden$2",
            "XXX.monster.warden.WardenAi",
            "XXX.monster.warden.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$FailureItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Input",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$IngredientInfo",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.AbstractThrownPotion",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.Projectile$ProjectileFactory",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownLingeringPotion",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.projectile.windcharge.BreezeWindCharge",
            "XXX.projectile.windcharge.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.variant.BiomeCheck",
            "XXX.entity.variant.MoonBrightnessCheck",
            "XXX.entity.variant.PriorityProvider$Selector",
            "XXX.entity.variant.PriorityProvider$UnpackedEntry",
            "XXX.entity.variant.SpawnConditions",
            "XXX.entity.variant.SpawnPrioritySelectors",
            "XXX.entity.variant.VariantUtils",
            "XXX.entity.vehicle.AbstractBoat",
            "XXX.entity.vehicle.AbstractChestBoat",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.ChestBoat",
            "XXX.entity.vehicle.ContainerEntity",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartBehavior",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.entity.vehicle.NewMinecartBehavior$1",
            "XXX.entity.vehicle.NewMinecartBehavior$StepPartialTicks",
            "XXX.entity.vehicle.OldMinecartBehavior",
            "XXX.entity.vehicle.Raft",
            "XXX.entity.vehicle.package-info",
            "XXX.world.flag.FeatureFlag",
            "XXX.world.flag.FeatureFlagRegistry$Builder",
            "XXX.world.flag.FeatureFlagUniverse",
            "XXX.world.flag.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AbstractCraftingMenu$1",
            "XXX.world.inventory.AbstractFurnaceMenu$1",
            "XXX.world.inventory.ArmorSlot",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CrafterMenu",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.NonInteractiveResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SlotRange",
            "XXX.world.inventory.SlotRanges",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModePredicate",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BoneMealItem$1",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.BundleItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.CrossbowItem$ChargingSounds",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.EitherHolder",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.Item$TooltipContext$1",
            "XXX.world.item.Item$TooltipContext$3",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack$1",
            "XXX.world.item.ItemStack$3",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUseAnimation",
            "XXX.world.item.Items",
            "XXX.world.item.JukeboxSong",
            "XXX.world.item.JukeboxSongPlayer$OnSongChanged",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileItem",
            "XXX.world.item.ProjectileItem$DispenseConfig$Builder",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Builder",
            "XXX.item.alchemy.PotionContents",
            "XXX.item.alchemy.package-info",
            "XXX.item.component.BlockItemStateProperties",
            "XXX.item.component.BlocksAttacks$DamageReduction",
            "XXX.item.component.BookContent",
            "XXX.item.component.BundleContents$Mutable",
            "XXX.item.component.Consumable",
            "XXX.item.component.Consumable$OverrideConsumeSound",
            "XXX.item.component.Consumables",
            "XXX.item.component.CustomModelData",
            "XXX.item.component.DeathProtection",
            "XXX.item.component.DyedItemColor",
            "XXX.item.component.FireworkExplosion$Shape",
            "XXX.item.component.InstrumentComponent",
            "XXX.item.component.ItemAttributeModifiers$1",
            "XXX.item.component.ItemAttributeModifiers$Entry",
            "XXX.item.component.ItemContainerContents$Slot",
            "XXX.item.component.LodestoneTracker",
            "XXX.item.component.MapDecorations$Entry",
            "XXX.item.component.MapPostProcessing",
            "XXX.item.component.ProvidesTrimMaterial",
            "XXX.item.component.SeededContainerLoot",
            "XXX.item.component.SuspiciousStewEffects$Entry",
            "XXX.item.component.Tool$Rule",
            "XXX.item.component.TooltipProvider",
            "XXX.item.component.UseRemainder",
            "XXX.item.component.Weapon",
            "XXX.item.component.WrittenBookContent",
            "XXX.item.consume_effects.ApplyStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect",
            "XXX.item.consume_effects.PlaySoundConsumeEffect",
            "XXX.item.consume_effects.TeleportRandomlyConsumeEffect",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.AbstractCookingRecipe$Factory",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingInput",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.CustomRecipe$Serializer$Factory",
            "XXX.item.crafting.ExtendedRecipeBookCategory",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeBookCategories",
            "XXX.item.crafting.RecipeCache",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeManager$IngredientExtractor",
            "XXX.item.crafting.RecipeMap",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.SelectableRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputSet",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapedRecipePattern$Data",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.TransmuteRecipe$Serializer",
            "XXX.crafting.display.DisplayContentsFactory",
            "XXX.crafting.display.DisplayContentsFactory$ForStacks",
            "XXX.crafting.display.RecipeDisplay",
            "XXX.crafting.display.RecipeDisplayEntry",
            "XXX.crafting.display.RecipeDisplays",
            "XXX.crafting.display.ShapelessCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay$AnyFuel",
            "XXX.crafting.display.SlotDisplay$Empty",
            "XXX.crafting.display.SlotDisplay$ItemStackContentsFactory",
            "XXX.crafting.display.SlotDisplay$SmithingTrimDemoSlotDisplay",
            "XXX.crafting.display.SlotDisplay$Type",
            "XXX.crafting.display.SlotDisplayContext",
            "XXX.crafting.display.SmithingRecipeDisplay",
            "XXX.crafting.display.package-info",
            "XXX.item.enchantment.ConditionalEffect",
            "XXX.item.enchantment.EnchantedItemInUse",
            "XXX.item.enchantment.Enchantment$1",
            "XXX.item.enchantment.Enchantment$Cost",
            "XXX.item.enchantment.EnchantmentEffectComponents",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.ItemEnchantments$Mutable",
            "XXX.item.enchantment.LevelBasedValue$Clamped",
            "XXX.item.enchantment.LevelBasedValue$Fraction",
            "XXX.item.enchantment.LevelBasedValue$Linear",
            "XXX.item.enchantment.Repairable",
            "XXX.enchantment.effects.AddValue",
            "XXX.enchantment.effects.AllOf$EntityEffects",
            "XXX.enchantment.effects.AllOf$ValueEffects",
            "XXX.enchantment.effects.ChangeItemDamage",
            "XXX.enchantment.effects.DamageImmunity",
            "XXX.enchantment.effects.EnchantmentEntityEffect",
            "XXX.enchantment.effects.EnchantmentValueEffect",
            "XXX.enchantment.effects.Ignite",
            "XXX.enchantment.effects.PlaySoundEffect",
            "XXX.enchantment.effects.ReplaceBlock",
            "XXX.enchantment.effects.RunFunction",
            "XXX.enchantment.effects.SetValue",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSource",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType$CoordinateSource",
            "XXX.enchantment.effects.SummonEntityEffect",
            "XXX.item.enchantment.package-info",
            "XXX.enchantment.providers.EnchantmentProviderTypes",
            "XXX.enchantment.providers.EnchantmentsByCostWithDifficulty",
            "XXX.enchantment.providers.TradeRebalanceEnchantmentProviders",
            "XXX.enchantment.providers.package-info",
            "XXX.item.equipment.ArmorMaterial",
            "XXX.item.equipment.ArmorType",
            "XXX.item.equipment.EquipmentAssets",
            "XXX.item.equipment.Equippable$Builder",
            "XXX.equipment.trim.ArmorTrim",
            "XXX.equipment.trim.MaterialAssetGroup$AssetInfo",
            "XXX.equipment.trim.TrimMaterials",
            "XXX.equipment.trim.TrimPatterns",
            "XXX.world.item.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.BlockGetter$BlockStepVisitor",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorMapColorUtil",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EmptyBlockAndTintGetter",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.world.level.Level$ExplosionInteraction",
            "XXX.world.level.LevelHeightAccessor",
            "XXX.world.level.LevelReader",
            "XXX.world.level.LevelSimulatedRW",
            "XXX.world.level.LevelTimeAccess",
            "XXX.world.level.LightLayer",
            "XXX.world.level.LocalMobCapCalculator$MobCounts",
            "XXX.world.level.NaturalSpawner$AfterSpawnCallback",
            "XXX.world.level.NaturalSpawner$SpawnPredicate",
            "XXX.world.level.NoiseColumn",
            "XXX.world.level.PotentialCalculator",
            "XXX.world.level.ScheduledTickAccess",
            "XXX.world.level.ServerExplosion$StackCollector",
            "XXX.world.level.SignalGetter",
            "XXX.world.level.SpawnData",
            "XXX.world.level.Spawner",
            "XXX.world.level.TicketStorage",
            "XXX.world.level.WorldDataConfiguration",
            "XXX.level.biome.AmbientAdditionsSettings",
            "XXX.level.biome.AmbientParticleSettings",
            "XXX.level.biome.Biome$1",
            "XXX.level.biome.Biome$ClimateSettings",
            "XXX.level.biome.Biome$TemperatureModifier",
            "XXX.level.biome.Biome$TemperatureModifier$2",
            "XXX.level.biome.BiomeGenerationSettings$Builder",
            "XXX.level.biome.BiomeManager",
            "XXX.level.biome.BiomeResolver",
            "XXX.level.biome.BiomeSources",
            "XXX.level.biome.BiomeSpecialEffects$Builder",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$1",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$3",
            "XXX.level.biome.CheckerboardColumnBiomeSource",
            "XXX.level.biome.Climate$DistanceMetric",
            "XXX.level.biome.Climate$ParameterList",
            "XXX.level.biome.Climate$RTree",
            "XXX.level.biome.Climate$RTree$Node",
            "XXX.level.biome.Climate$Sampler",
            "XXX.level.biome.Climate$SpawnFinder$Result",
            "XXX.level.biome.FeatureSorter",
            "XXX.level.biome.FeatureSorter$StepFeatureData",
            "XXX.level.biome.MobSpawnSettings",
            "XXX.level.biome.MobSpawnSettings$MobSpawnCost",
            "XXX.level.biome.MultiNoiseBiomeSource",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$2",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterLists",
            "XXX.level.biome.TheEndBiomeSource",
            "XXX.level.block.AbstractBannerBlock",
            "XXX.level.block.AbstractCauldronBlock",
            "XXX.level.block.AbstractFurnaceBlock",
            "XXX.level.block.AirBlock",
            "XXX.level.block.AmethystClusterBlock",
            "XXX.level.block.AttachedStemBlock",
            "XXX.level.block.BambooSaplingBlock",
            "XXX.level.block.BannerBlock",
            "XXX.level.block.BarrierBlock",
            "XXX.level.block.BaseCoralPlantBlock",
            "XXX.level.block.BaseCoralWallFanBlock",
            "XXX.level.block.BaseFireBlock",
            "XXX.level.block.BaseRailBlock",
            "XXX.level.block.BaseTorchBlock",
            "XXX.level.block.BeaconBlock",
            "XXX.level.block.BeehiveBlock",
            "XXX.level.block.BellBlock",
            "XXX.level.block.BigDripleafBlock",
            "XXX.level.block.BlastFurnaceBlock",
            "XXX.level.block.Block$1",
            "XXX.level.block.Block$ShapePairKey",
            "XXX.level.block.Blocks",
            "XXX.level.block.BonemealableBlock$Type",
            "XXX.level.block.BrewingStandBlock",
            "XXX.level.block.BubbleColumnBlock",
            "XXX.level.block.BuddingAmethystBlock",
            "XXX.level.block.ButtonBlock",
            "XXX.level.block.CactusFlowerBlock",
            "XXX.level.block.CalibratedSculkSensorBlock",
            "XXX.level.block.CandleBlock",
            "XXX.level.block.CarpetBlock",
            "XXX.level.block.CartographyTableBlock",
            "XXX.level.block.CauldronBlock",
            "XXX.level.block.CaveVinesBlock",
            "XXX.level.block.CeilingHangingSignBlock",
            "XXX.level.block.ChangeOverTimeBlock",
            "XXX.level.block.ChestBlock$1",
            "XXX.level.block.ChestBlock$2$1",
            "XXX.level.block.ChestBlock$4",
            "XXX.level.block.ChiseledBookShelfBlock$1",
            "XXX.level.block.ChorusPlantBlock",
            "XXX.level.block.ColoredFallingBlock",
            "XXX.level.block.ComparatorBlock",
            "XXX.level.block.ComposterBlock$EmptyContainer",
            "XXX.level.block.ComposterBlock$OutputContainer",
            "XXX.level.block.ConduitBlock",
            "XXX.level.block.CoralBlock",
            "XXX.level.block.CoralPlantBlock",
            "XXX.level.block.CrafterBlock",
            "XXX.level.block.CraftingTableBlock",
            "XXX.level.block.CropBlock",
            "XXX.level.block.CrossCollisionBlock$1",
            "XXX.level.block.DaylightDetectorBlock",
            "XXX.level.block.DetectorRailBlock",
            "XXX.level.block.DiodeBlock",
            "XXX.level.block.DirtPathBlock",
            "XXX.level.block.DoorBlock",
            "XXX.level.block.DoubleBlockCombiner",
            "XXX.level.block.DoubleBlockCombiner$Combiner",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Double",
            "XXX.level.block.DoublePlantBlock",
            "XXX.level.block.DropExperienceBlock",
            "XXX.level.block.DryVegetationBlock",
            "XXX.level.block.EndGatewayBlock",
            "XXX.level.block.EndPortalFrameBlock",
            "XXX.level.block.EnderChestBlock",
            "XXX.level.block.EyeblossomBlock",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock",
            "XXX.level.block.Fallable",
            "XXX.level.block.FarmBlock",
            "XXX.level.block.FenceGateBlock",
            "XXX.level.block.FireBlock",
            "XXX.level.block.FletchingTableBlock",
            "XXX.level.block.FlowerBlock",
            "XXX.level.block.FrogspawnBlock",
            "XXX.level.block.FungusBlock",
            "XXX.level.block.GameMasterBlock",
            "XXX.level.block.GlowLichenBlock",
            "XXX.level.block.GrindstoneBlock",
            "XXX.level.block.GrowingPlantBodyBlock",
            "XXX.level.block.HalfTransparentBlock",
            "XXX.level.block.HangingRootsBlock",
            "XXX.level.block.HeavyCoreBlock",
            "XXX.level.block.HopperBlock",
            "XXX.level.block.HugeMushroomBlock",
            "XXX.level.block.InfestedBlock",
            "XXX.level.block.IronBarsBlock",
            "XXX.level.block.JukeboxBlock",
            "XXX.level.block.KelpPlantBlock",
            "XXX.level.block.LanternBlock",
            "XXX.level.block.LayeredCauldronBlock",
            "XXX.level.block.LeavesBlock",
            "XXX.level.block.LevelEvent",
            "XXX.level.block.LightBlock",
            "XXX.level.block.LiquidBlock",
            "XXX.level.block.LoomBlock",
            "XXX.level.block.MangroveLeavesBlock",
            "XXX.level.block.MangroveRootsBlock",
            "XXX.level.block.MossyCarpetBlock",
            "XXX.level.block.MudBlock",
            "XXX.level.block.MultifaceSpreadeableBlock",
            "XXX.level.block.MultifaceSpreader$DefaultSpreaderConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPos",
            "XXX.level.block.MultifaceSpreader$SpreadType",
            "XXX.level.block.MultifaceSpreader$SpreadType$2",
            "XXX.level.block.MushroomBlock",
            "XXX.level.block.NetherPortalBlock",
            "XXX.level.block.NetherSproutsBlock",
            "XXX.level.block.NetherWartBlock",
            "XXX.level.block.NoteBlock",
            "XXX.level.block.ObserverBlock",
            "XXX.level.block.PipeBlock",
            "XXX.level.block.PitcherCropBlock$1",
            "XXX.level.block.PlayerHeadBlock",
            "XXX.level.block.PointedDripstoneBlock",
            "XXX.level.block.PointedDripstoneBlock$FluidInfo",
            "XXX.level.block.Portal$Transition",
            "XXX.level.block.PowderSnowBlock",
            "XXX.level.block.PoweredRailBlock",
            "XXX.level.block.PressurePlateBlock",
            "XXX.level.block.PumpkinBlock",
            "XXX.level.block.RailBlock$1",
            "XXX.level.block.RailState$1",
            "XXX.level.block.RedStoneWireBlock",
            "XXX.level.block.RedstoneLampBlock",
            "XXX.level.block.RedstoneTorchBlock$Toggle",
            "XXX.level.block.RenderShape",
            "XXX.level.block.RespawnAnchorBlock",
            "XXX.level.block.RodBlock",
            "XXX.level.block.RootsBlock",
            "XXX.level.block.RotatedPillarBlock$1",
            "XXX.level.block.SandBlock",
            "XXX.level.block.ScaffoldingBlock",
            "XXX.level.block.SculkBehaviour$1",
            "XXX.level.block.SculkCatalystBlock",
            "XXX.level.block.SculkShriekerBlock",
            "XXX.level.block.SculkSpreader$ChargeCursor",
            "XXX.level.block.SculkVeinBlock$SculkVeinSpreaderConfig",
            "XXX.level.block.SeagrassBlock",
            "XXX.level.block.ShortDryGrassBlock",
            "XXX.level.block.ShulkerBoxBlock$1",
            "XXX.level.block.SimpleWaterloggedBlock",
            "XXX.level.block.SkullBlock$Type",
            "XXX.level.block.SlabBlock",
            "XXX.level.block.SlimeBlock",
            "XXX.level.block.SmithingTableBlock",
            "XXX.level.block.SnifferEggBlock",
            "XXX.level.block.SnowyDirtBlock",
            "XXX.level.block.SoulSandBlock",
            "XXX.level.block.SpawnerBlock",
            "XXX.level.block.SporeBlossomBlock",
            "XXX.level.block.StainedGlassBlock",
            "XXX.level.block.StairBlock",
            "XXX.level.block.StandingSignBlock",
            "XXX.level.block.StonecutterBlock",
            "XXX.level.block.StructureBlock$1",
            "XXX.level.block.SugarCaneBlock",
            "XXX.level.block.SupportType$1",
            "XXX.level.block.SupportType$3",
            "XXX.level.block.SweetBerryBushBlock",
            "XXX.level.block.TallFlowerBlock",
            "XXX.level.block.TallSeagrassBlock",
            "XXX.level.block.TerracottaBlock",
            "XXX.level.block.TestInstanceBlock",
            "XXX.level.block.TintedParticleLeavesBlock",
            "XXX.level.block.TorchBlock",
            "XXX.level.block.TransparentBlock",
            "XXX.level.block.TrapDoorBlock$1",
            "XXX.level.block.TrialSpawnerBlock",
            "XXX.level.block.TripWireBlock$1",
            "XXX.level.block.TurtleEggBlock",
            "XXX.level.block.TwistingVinesPlantBlock",
            "XXX.level.block.VaultBlock",
            "XXX.level.block.VineBlock",
            "XXX.level.block.WallBannerBlock",
            "XXX.level.block.WallBlock$1",
            "XXX.level.block.WallSignBlock",
            "XXX.level.block.WallTorchBlock",
            "XXX.level.block.WaterloggedTransparentBlock",
            "XXX.level.block.WeatheringCopper$WeatherState",
            "XXX.level.block.WeatheringCopperDoorBlock",
            "XXX.level.block.WeatheringCopperGrateBlock",
            "XXX.level.block.WeatheringCopperStairBlock",
            "XXX.level.block.WebBlock",
            "XXX.level.block.WeepingVinesPlantBlock",
            "XXX.level.block.WetSpongeBlock",
            "XXX.level.block.WitherSkullBlock",
            "XXX.level.block.WoolCarpetBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity$1",
            "XXX.block.entity.BannerPattern",
            "XXX.block.entity.BannerPatternLayers$Builder",
            "XXX.block.entity.BannerPatterns",
            "XXX.block.entity.BarrelBlockEntity$1",
            "XXX.block.entity.BeaconBeamOwner",
            "XXX.block.entity.BeaconBlockEntity",
            "XXX.block.entity.BedBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeData",
            "XXX.block.entity.BeehiveBlockEntity$Occupant",
            "XXX.block.entity.BellBlockEntity$ResonationEndAction",
            "XXX.block.entity.BlockEntity",
            "XXX.block.entity.BlockEntity$ComponentHelper",
            "XXX.block.entity.BlockEntityType",
            "XXX.block.entity.BoundingBoxRenderable",
            "XXX.block.entity.BoundingBoxRenderable$RenderableBox",
            "XXX.block.entity.BrewingStandBlockEntity$1",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity",
            "XXX.block.entity.CampfireBlockEntity",
            "XXX.block.entity.ChestBlockEntity$1",
            "XXX.block.entity.ChiseledBookShelfBlockEntity",
            "XXX.block.entity.CommandBlockEntity$1",
            "XXX.block.entity.ComparatorBlockEntity",
            "XXX.block.entity.ContainerOpenersCounter",
            "XXX.block.entity.CrafterBlockEntity$1",
            "XXX.block.entity.DaylightDetectorBlockEntity",
            "XXX.block.entity.DecoratedPotBlockEntity$WobbleStyle",
            "XXX.block.entity.DecoratedPotPatterns",
            "XXX.block.entity.DropperBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity",
            "XXX.block.entity.FuelValues",
            "XXX.block.entity.FurnaceBlockEntity",
            "XXX.block.entity.Hopper",
            "XXX.block.entity.JigsawBlockEntity",
            "XXX.block.entity.JukeboxBlockEntity",
            "XXX.block.entity.LecternBlockEntity$1",
            "XXX.block.entity.LidBlockEntity",
            "XXX.block.entity.RandomizableContainerBlockEntity",
            "XXX.block.entity.SculkCatalystBlockEntity$CatalystListener",
            "XXX.block.entity.SculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.SculkShriekerBlockEntity$VibrationUser",
            "XXX.block.entity.ShulkerBoxBlockEntity$AnimationStatus",
            "XXX.block.entity.SignText",
            "XXX.block.entity.SkullBlockEntity$1",
            "XXX.block.entity.SmokerBlockEntity",
            "XXX.block.entity.SpawnerBlockEntity$1",
            "XXX.block.entity.StructureBlockEntity$1",
            "XXX.block.entity.TestBlockEntity",
            "XXX.block.entity.TestInstanceBlockEntity$1",
            "XXX.block.entity.TestInstanceBlockEntity$Status",
            "XXX.block.entity.TheEndPortalBlockEntity",
            "XXX.block.entity.TrappedChestBlockEntity",
            "XXX.block.entity.package-info",
            "XXX.entity.trialspawner.PlayerDetector$EntitySelector",
            "XXX.entity.trialspawner.PlayerDetector$EntitySelector$2",
            "XXX.entity.trialspawner.TrialSpawner$FlameParticle",
            "XXX.entity.trialspawner.TrialSpawnerConfig",
            "XXX.entity.trialspawner.TrialSpawnerConfigs",
            "XXX.entity.trialspawner.TrialSpawnerData",
            "XXX.entity.trialspawner.TrialSpawnerState$LightLevel",
            "XXX.entity.trialspawner.TrialSpawnerState$SpinningMob",
            "XXX.entity.vault.VaultBlockEntity",
            "XXX.entity.vault.VaultBlockEntity$Server",
            "XXX.entity.vault.VaultConfig",
            "XXX.entity.vault.VaultSharedData",
            "XXX.entity.vault.VaultState$1",
            "XXX.entity.vault.VaultState$3",
            "XXX.entity.vault.VaultState$LightLevel",
            "XXX.block.grower.TreeGrower",
            "XXX.level.block.package-info",
            "XXX.block.piston.PistonBaseBlock",
            "XXX.block.piston.PistonHeadBlock",
            "XXX.block.piston.PistonMath$1",
            "XXX.block.piston.PistonMovingBlockEntity$1",
            "XXX.block.piston.package-info",
            "XXX.block.state.BlockBehaviour",
            "XXX.block.state.BlockBehaviour$BlockStateBase",
            "XXX.block.state.BlockBehaviour$OffsetFunction",
            "XXX.block.state.BlockBehaviour$Properties",
            "XXX.block.state.BlockBehaviour$StatePredicate",
            "XXX.block.state.StateDefinition",
            "XXX.block.state.StateDefinition$Factory",
            "XXX.block.state.StateHolder$1",
            "XXX.state.pattern.BlockInWorld",
            "XXX.state.pattern.BlockPattern$BlockCacheLoader",
            "XXX.state.pattern.BlockPatternBuilder",
            "XXX.state.predicate.BlockPredicate",
            "XXX.state.predicate.package-info",
            "XXX.state.properties.BambooLeaves",
            "XXX.state.properties.BellAttachType",
            "XXX.state.properties.BlockSetType$PressurePlateSensitivity",
            "XXX.state.properties.BooleanProperty",
            "XXX.state.properties.ComparatorMode",
            "XXX.state.properties.DoorHingeSide",
            "XXX.state.properties.DripstoneThickness",
            "XXX.state.properties.Half",
            "XXX.state.properties.NoteBlockInstrument",
            "XXX.state.properties.PistonType",
            "XXX.state.properties.Property$Value",
            "XXX.state.properties.RedstoneSide",
            "XXX.state.properties.SculkSensorPhase",
            "XXX.state.properties.StairsShape",
            "XXX.state.properties.TestBlockMode",
            "XXX.state.properties.WallSide",
            "XXX.state.properties.package-info",
            "XXX.level.border.BorderChangeListener$DelegateBorderChangeListener",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$DistancePerDirection",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.CarvingMask$Mask",
            "XXX.level.chunk.ChunkAccess$PackedTicks",
            "XXX.level.chunk.ChunkGeneratorStructureState",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.EmptyLevelChunk",
            "XXX.level.chunk.HashMapPalette",
            "XXX.level.chunk.LevelChunk",
            "XXX.level.chunk.LevelChunk$BoundTickingBlockEntity",
            "XXX.level.chunk.LevelChunk$PostLoadProcessor",
            "XXX.level.chunk.LevelChunk$UnsavedListener",
            "XXX.level.chunk.LevelChunkSection$1BlockCounter",
            "XXX.level.chunk.LightChunkGetter",
            "XXX.level.chunk.MissingPaletteEntryException",
            "XXX.level.chunk.Palette$Factory",
            "XXX.level.chunk.PalettedContainer",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.PalettedContainer$Strategy",
            "XXX.level.chunk.PalettedContainer$Strategy$2",
            "XXX.level.chunk.PalettedContainerRO$PackedData",
            "XXX.level.chunk.ProtoChunk",
            "XXX.level.chunk.StructureAccess",
            "XXX.level.chunk.UpgradeData$BlockFixer",
            "XXX.level.chunk.UpgradeData$BlockFixers$1",
            "XXX.level.chunk.UpgradeData$BlockFixers$3",
            "XXX.level.chunk.UpgradeData$BlockFixers$5",
            "XXX.chunk.status.ChunkDependencies",
            "XXX.chunk.status.ChunkPyramid$Builder",
            "XXX.chunk.status.ChunkStatusTask",
            "XXX.chunk.status.ChunkStep",
            "XXX.chunk.status.ChunkType",
            "XXX.chunk.status.package-info",
            "XXX.chunk.storage.ChunkScanAccess",
            "XXX.chunk.storage.EntityStorage",
            "XXX.chunk.storage.IOWorker$PendingStore",
            "XXX.chunk.storage.IOWorker$ThrowingSupplier",
            "XXX.chunk.storage.RecreatingSimpleRegionStorage",
            "XXX.chunk.storage.RegionFile",
            "XXX.chunk.storage.RegionFile$CommitOp",
            "XXX.chunk.storage.RegionFileVersion",
            "XXX.chunk.storage.RegionStorageInfo",
            "XXX.chunk.storage.SectionStorage$PackedChunk",
            "XXX.chunk.storage.SerializableChunkData$ChunkReadException",
            "XXX.chunk.storage.SimpleRegionStorage",
            "XXX.level.dimension.BuiltinDimensionTypes",
            "XXX.level.dimension.DimensionType",
            "XXX.level.dimension.LevelStem",
            "XXX.dimension.end.DragonRespawnAnimation$1",
            "XXX.dimension.end.DragonRespawnAnimation$3",
            "XXX.dimension.end.DragonRespawnAnimation$5",
            "XXX.dimension.end.EndDragonFight$Data",
            "XXX.level.dimension.package-info",
            "XXX.level.entity.ChunkStatusUpdateListener",
            "XXX.level.entity.EntityInLevelCallback",
            "XXX.level.entity.EntityLookup",
            "XXX.level.entity.EntitySection",
            "XXX.level.entity.EntityTickList",
            "XXX.level.entity.EntityTypeTest$1",
            "XXX.level.entity.LevelCallback",
            "XXX.level.entity.LevelEntityGetterAdapter",
            "XXX.level.entity.PersistentEntitySectionManager$Callback",
            "XXX.level.entity.TransientEntitySectionManager",
            "XXX.level.entity.UUIDLookup",
            "XXX.level.entity.Visibility",
            "XXX.level.gameevent.BlockPositionSource",
            "XXX.level.gameevent.DynamicGameEventListener",
            "XXX.level.gameevent.EntityPositionSource$Type",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry$OnEmptyAction",
            "XXX.level.gameevent.GameEvent$Context",
            "XXX.level.gameevent.GameEventDispatcher",
            "XXX.level.gameevent.GameEventListener$DeliveryMode",
            "XXX.level.gameevent.GameEventListenerRegistry",
            "XXX.level.gameevent.GameEventListenerRegistry$ListenerVisitor",
            "XXX.level.gameevent.PositionSourceType",
            "XXX.gameevent.vibrations.VibrationInfo",
            "XXX.gameevent.vibrations.VibrationSystem",
            "XXX.gameevent.vibrations.VibrationSystem$Listener",
            "XXX.gameevent.vibrations.VibrationSystem$User",
            "XXX.level.levelgen.Aquifer",
            "XXX.level.levelgen.Aquifer$FluidPicker",
            "XXX.level.levelgen.Aquifer$NoiseBasedAquifer",
            "XXX.level.levelgen.Beardifier$1",
            "XXX.level.levelgen.BelowZeroRetrogen",
            "XXX.level.levelgen.BitRandomSource",
            "XXX.level.levelgen.Column$Line",
            "XXX.level.levelgen.Column$Ray",
            "XXX.level.levelgen.Density",
            "XXX.level.levelgen.DensityFunction$ContextProvider",
            "XXX.level.levelgen.DensityFunction$NoiseHolder",
            "XXX.level.levelgen.DensityFunction$SinglePointContext",
            "XXX.level.levelgen.DensityFunctions",
            "XXX.level.levelgen.DensityFunctions$BeardifierMarker",
            "XXX.level.levelgen.DensityFunctions$BlendAlpha",
            "XXX.level.levelgen.DensityFunctions$BlendOffset",
            "XXX.level.levelgen.DensityFunctions$Constant",
            "XXX.level.levelgen.DensityFunctions$HolderHolder",
            "XXX.level.levelgen.DensityFunctions$Mapped$Type",
            "XXX.level.levelgen.DensityFunctions$Marker$Type",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd",
            "XXX.level.levelgen.DensityFunctions$Noise",
            "XXX.level.levelgen.DensityFunctions$RangeChoice",
            "XXX.level.levelgen.DensityFunctions$ShiftA",
            "XXX.level.levelgen.DensityFunctions$ShiftNoise",
            "XXX.level.levelgen.DensityFunctions$Spline",
            "XXX.level.levelgen.DensityFunctions$Spline$Point",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler",
            "XXX.level.levelgen.DensityFunctions$YClampedGradient",
            "XXX.level.levelgen.GenerationStep",
            "XXX.level.levelgen.GeodeBlockSettings",
            "XXX.level.levelgen.GeodeLayerSettings",
            "XXX.level.levelgen.Heightmap$Types",
            "XXX.level.levelgen.LegacyRandomSource",
            "XXX.level.levelgen.MarsagliaPolarGaussian",
            "XXX.level.levelgen.NoiseChunk",
            "XXX.level.levelgen.NoiseChunk$2",
            "XXX.level.levelgen.NoiseChunk$BlendOffset",
            "XXX.level.levelgen.NoiseChunk$Cache2D",
            "XXX.level.levelgen.NoiseChunk$CacheOnce",
            "XXX.level.levelgen.NoiseChunk$NoiseChunkDensityFunction",
            "XXX.level.levelgen.NoiseGeneratorSettings",
            "XXX.level.levelgen.NoiseRouterData",
            "XXX.level.levelgen.NoiseSettings",
            "XXX.level.levelgen.OreVeinifier",
            "XXX.level.levelgen.PatrolSpawner",
            "XXX.level.levelgen.PositionalRandomFactory",
            "XXX.level.levelgen.RandomState$1",
            "XXX.level.levelgen.RandomSupport",
            "XXX.level.levelgen.SingleThreadedRandomSource",
            "XXX.level.levelgen.SurfaceRules$AbovePreliminarySurface",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource",
            "XXX.level.levelgen.SurfaceRules$BlockRuleSource",
            "XXX.level.levelgen.SurfaceRules$ConditionSource",
            "XXX.level.levelgen.SurfaceRules$Context$AbovePreliminarySurfaceCondition",
            "XXX.level.levelgen.SurfaceRules$Context$SteepMaterialCondition",
            "XXX.level.levelgen.SurfaceRules$Hole",
            "XXX.level.levelgen.SurfaceRules$LazyXZCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource",
            "XXX.level.levelgen.SurfaceRules$NotCondition",
            "XXX.level.levelgen.SurfaceRules$RuleSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRuleSource",
            "XXX.level.levelgen.SurfaceRules$Steep",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck$1StoneDepthCondition",
            "XXX.level.levelgen.SurfaceRules$Temperature",
            "XXX.level.levelgen.SurfaceRules$TestRuleSource",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource$1WaterCondition",
            "XXX.level.levelgen.SurfaceRules$YConditionSource$1YCondition",
            "XXX.level.levelgen.SurfaceSystem$1",
            "XXX.level.levelgen.VerticalAnchor",
            "XXX.level.levelgen.VerticalAnchor$Absolute",
            "XXX.level.levelgen.WorldDimensions",
            "XXX.level.levelgen.WorldDimensions$Complete",
            "XXX.level.levelgen.WorldGenerationContext",
            "XXX.level.levelgen.WorldgenRandom",
            "XXX.level.levelgen.Xoroshiro128PlusPlus",
            "XXX.level.levelgen.XoroshiroRandomSource$XoroshiroPositionalRandomFactory",
            "XXX.levelgen.blending.Blender$1",
            "XXX.levelgen.blending.Blender$CellValueGetter",
            "XXX.levelgen.blending.BlendingData",
            "XXX.levelgen.blending.BlendingData$DensityConsumer",
            "XXX.levelgen.blending.BlendingData$Packed",
            "XXX.levelgen.blockpredicates.AllOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicate",
            "XXX.levelgen.blockpredicates.CombiningPredicate",
            "XXX.levelgen.blockpredicates.InsideWorldBoundsPredicate",
            "XXX.levelgen.blockpredicates.MatchingBlocksPredicate",
            "XXX.levelgen.blockpredicates.NotPredicate",
            "XXX.levelgen.blockpredicates.SolidPredicate",
            "XXX.levelgen.blockpredicates.TrueBlockPredicate",
            "XXX.levelgen.blockpredicates.WouldSurvivePredicate",
            "XXX.levelgen.carver.CanyonCarverConfiguration",
            "XXX.levelgen.carver.CanyonWorldCarver",
            "XXX.levelgen.carver.CarverDebugSettings",
            "XXX.levelgen.carver.CaveCarverConfiguration",
            "XXX.levelgen.carver.ConfiguredWorldCarver",
            "XXX.levelgen.carver.WorldCarver",
            "XXX.levelgen.carver.package-info",
            "XXX.levelgen.feature.BambooFeature",
            "XXX.levelgen.feature.BasaltPillarFeature",
            "XXX.levelgen.feature.BlockColumnFeature",
            "XXX.levelgen.feature.BlueIceFeature",
            "XXX.levelgen.feature.ChorusPlantFeature",
            "XXX.levelgen.feature.CoralClawFeature",
            "XXX.levelgen.feature.CoralMushroomFeature",
            "XXX.levelgen.feature.DeltaFeature",
            "XXX.levelgen.feature.DiskFeature",
            "XXX.levelgen.feature.DripstoneUtils",
            "XXX.levelgen.feature.EndIslandFeature",
            "XXX.levelgen.feature.EndPodiumFeature",
            "XXX.feature.treedecorators.CocoaDecorator",
            "XXX.feature.treedecorators.LeaveVineDecorator",
            "XXX.feature.treedecorators.PlaceOnGroundDecorator",
            "XXX.feature.treedecorators.TreeDecorator$Context",
            "XXX.feature.treedecorators.TrunkVineDecorator",
            "XXX.feature.trunkplacers.BendingTrunkPlacer",
            "XXX.feature.trunkplacers.DarkOakTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer$FoliageCoords",
            "XXX.feature.trunkplacers.GiantTrunkPlacer",
            "XXX.feature.trunkplacers.StraightTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacerType",
            "XXX.feature.trunkplacers.package-info",
            "XXX.levelgen.flat.FlatLevelGeneratorPreset",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets$Bootstrap",
            "XXX.levelgen.flat.package-info",
            "XXX.levelgen.heightproviders.ConstantHeight",
            "XXX.levelgen.heightproviders.HeightProviderType",
            "XXX.levelgen.heightproviders.UniformHeight",
            "XXX.levelgen.heightproviders.WeightedListHeight",
            "XXX.levelgen.material.MaterialRuleList",
            "XXX.levelgen.material.package-info",
            "XXX.levelgen.placement.BiomeFilter",
            "XXX.levelgen.placement.CaveSurface",
            "XXX.levelgen.placement.CountPlacement",
            "XXX.levelgen.placement.FixedPlacement",
            "XXX.levelgen.placement.HeightmapPlacement",
            "XXX.levelgen.placement.NoiseBasedCountPlacement",
            "XXX.levelgen.placement.PlacedFeature",
            "XXX.levelgen.placement.PlacementFilter",
            "XXX.levelgen.placement.PlacementModifierType",
            "XXX.levelgen.placement.RarityFilter",
            "XXX.levelgen.placement.SurfaceRelativeThresholdFilter",
            "XXX.levelgen.placement.package-info",
            "XXX.levelgen.presets.WorldPresets",
            "XXX.levelgen.presets.package-info",
            "XXX.levelgen.structure.BoundingBox$1",
            "XXX.levelgen.structure.BuiltinStructures",
            "XXX.levelgen.structure.PoolElementStructurePiece",
            "XXX.levelgen.structure.ScatteredFeaturePiece",
            "XXX.levelgen.structure.SinglePieceStructure$PieceConstructor",
            "XXX.levelgen.structure.Structure$GenerationContext",
            "XXX.levelgen.structure.Structure$StructureSettings",
            "XXX.levelgen.structure.StructureCheck",
            "XXX.levelgen.structure.StructureFeatureIndexSavedData",
            "XXX.levelgen.structure.StructurePiece$1",
            "XXX.levelgen.structure.StructurePieceAccessor",
            "XXX.levelgen.structure.StructureSet$StructureSelectionEntry",
            "XXX.levelgen.structure.StructureSpawnOverride$BoundingBoxType",
            "XXX.levelgen.structure.StructureType",
            "XXX.levelgen.structure.TerrainAdjustment",
            "XXX.structure.pieces.PieceGenerator",
            "XXX.structure.pieces.PieceGeneratorSupplier",
            "XXX.structure.pieces.PiecesContainer",
            "XXX.structure.pieces.StructurePieceType",
            "XXX.structure.pieces.StructurePieceType$StructureTemplateType",
            "XXX.structure.pieces.package-info",
            "XXX.structure.placement.RandomSpreadStructurePlacement",
            "XXX.structure.placement.StructurePlacement",
            "XXX.structure.placement.StructurePlacement$FrequencyReducer",
            "XXX.structure.placement.StructurePlacementType",
            "XXX.structure.pools.DimensionPadding",
            "XXX.structure.pools.FeaturePoolElement",
            "XXX.structure.pools.JigsawPlacement",
            "XXX.structure.pools.JigsawPlacement$Placer",
            "XXX.structure.pools.ListPoolElement",
            "XXX.structure.pools.StructurePoolElement",
            "XXX.structure.pools.StructureTemplatePool",
            "XXX.pools.alias.DirectPoolAlias",
            "XXX.pools.alias.PoolAliasBindings",
            "XXX.pools.alias.RandomGroupPoolAlias",
            "XXX.pools.alias.package-info",
            "XXX.structure.structures.BuriedTreasurePieces",
            "XXX.structure.structures.BuriedTreasureStructure",
            "XXX.structure.structures.DesertPyramidStructure",
            "XXX.structure.structures.EndCityPieces$1",
            "XXX.structure.structures.EndCityPieces$3",
            "XXX.structure.structures.EndCityPieces$EndCityPiece",
            "XXX.structure.structures.EndCityStructure",
            "XXX.structure.structures.IglooPieces$IglooPiece",
            "XXX.structure.structures.JigsawStructure",
            "XXX.structure.structures.JungleTemplePiece",
            "XXX.structure.structures.JungleTempleStructure",
            "XXX.structure.structures.MineshaftPieces$1",
            "XXX.structure.structures.MineshaftPieces$MineShaftCrossing",
            "XXX.structure.structures.MineshaftPieces$MineShaftRoom",
            "XXX.structure.structures.MineshaftStructure",
            "XXX.structure.structures.NetherFortressPieces",
            "XXX.structure.structures.NetherFortressPieces$BridgeCrossing",
            "XXX.structure.structures.NetherFortressPieces$BridgeStraight",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorTBalconyPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorCrossingPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleStalkRoom",
            "XXX.structure.structures.NetherFortressPieces$NetherBridgePiece",
            "XXX.structure.structures.NetherFortressPieces$RoomCrossing",
            "XXX.structure.structures.NetherFortressPieces$StartPiece",
            "XXX.structure.structures.NetherFossilPieces",
            "XXX.structure.structures.NetherFossilStructure",
            "XXX.structure.structures.OceanMonumentPieces$1",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentBuilding",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentCoreRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentEntryRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPiece",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$RoomDefinition",
            "XXX.structure.structures.OceanRuinPieces",
            "XXX.structure.structures.OceanRuinPieces$OceanRuinPiece",
            "XXX.structure.structures.OceanRuinStructure$Type",
            "XXX.structure.structures.RuinedPortalPiece$Properties",
            "XXX.structure.structures.RuinedPortalStructure",
            "XXX.structure.structures.ShipwreckPieces",
            "XXX.structure.structures.ShipwreckStructure",
            "XXX.structure.structures.StrongholdPieces$1",
            "XXX.structure.structures.StrongholdPieces$3",
            "XXX.structure.structures.StrongholdPieces$FillerCorridor",
            "XXX.structure.structures.StrongholdPieces$LeftTurn",
            "XXX.structure.structures.StrongholdPieces$PieceWeight",
            "XXX.structure.structures.StrongholdPieces$PrisonHall",
            "XXX.structure.structures.StrongholdPieces$RoomCrossing",
            "XXX.structure.structures.StrongholdPieces$StairsDown",
            "XXX.structure.structures.StrongholdPieces$Straight",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece",
            "XXX.structure.structures.StrongholdPieces$Turn",
            "XXX.structure.structures.SwampHutPiece",
            "XXX.structure.structures.WoodlandMansionPieces",
            "XXX.structure.structures.WoodlandMansionPieces$FloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionPiecePlacer",
            "XXX.structure.structures.WoodlandMansionPieces$SecondFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$ThirdFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionStructure",
            "XXX.structure.templatesystem.AlwaysTrueTest",
            "XXX.structure.templatesystem.BlackstoneReplaceProcessor",
            "XXX.structure.templatesystem.BlockIgnoreProcessor",
            "XXX.structure.templatesystem.BlockRotProcessor",
            "XXX.structure.templatesystem.CappedProcessor",
            "XXX.structure.templatesystem.JigsawReplacementProcessor",
            "XXX.structure.templatesystem.LinearPosTest",
            "XXX.structure.templatesystem.NopProcessor",
            "XXX.structure.templatesystem.PosRuleTest",
            "XXX.structure.templatesystem.ProcessorRule",
            "XXX.structure.templatesystem.RandomBlockMatchTest",
            "XXX.structure.templatesystem.RuleProcessor",
            "XXX.structure.templatesystem.RuleTestType",
            "XXX.structure.templatesystem.StructureProcessor",
            "XXX.structure.templatesystem.StructureProcessorType",
            "XXX.structure.templatesystem.StructureTemplate$1",
            "XXX.structure.templatesystem.StructureTemplate$Palette",
            "XXX.structure.templatesystem.StructureTemplate$StructureBlockInfo",
            "XXX.structure.templatesystem.StructureTemplateManager",
            "XXX.structure.templatesystem.StructureTemplateManager$Source",
            "XXX.structure.templatesystem.package-info",
            "XXX.rule.blockentity.AppendStatic",
            "XXX.rule.blockentity.Passthrough",
            "XXX.rule.blockentity.RuleBlockEntityModifierType",
            "XXX.levelgen.synth.BlendedNoise",
            "XXX.levelgen.synth.NoiseUtils",
            "XXX.levelgen.synth.NormalNoise$NoiseParameters",
            "XXX.levelgen.synth.PerlinSimplexNoise",
            "XXX.levelgen.synth.package-info",
            "XXX.level.lighting.BlockLightSectionStorage",
            "XXX.level.lighting.ChunkSkyLightSources",
            "XXX.level.lighting.DynamicGraphMinFixedPoint",
            "XXX.level.lighting.LayerLightEventListener",
            "XXX.level.lighting.LayerLightSectionStorage",
            "XXX.level.lighting.LayerLightSectionStorage$SectionType",
            "XXX.level.lighting.LeveledPriorityQueue",
            "XXX.level.lighting.LightEngine",
            "XXX.level.lighting.LightEventListener",
            "XXX.level.lighting.SkyLightEngine$1",
            "XXX.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap",
            "XXX.level.lighting.SpatialLongSet$InternalMap",
            "XXX.level.material.EmptyFluid",
            "XXX.level.material.FlowingFluid$1",
            "XXX.level.material.FlowingFluid$SpreadContext",
            "XXX.level.material.FluidState",
            "XXX.level.material.FogType",
            "XXX.level.material.LavaFluid$Flowing",
            "XXX.level.material.MapColor",
            "XXX.level.material.PushReaction",
            "XXX.level.material.WaterFluid$Flowing",
            "XXX.level.material.package-info",
            "XXX.level.pathfinder.AmphibiousNodeEvaluator",
            "XXX.level.pathfinder.FlyNodeEvaluator",
            "XXX.level.pathfinder.NodeEvaluator",
            "XXX.level.pathfinder.Path$DebugData",
            "XXX.level.pathfinder.PathFinder",
            "XXX.level.pathfinder.PathTypeCache",
            "XXX.level.pathfinder.SwimNodeEvaluator",
            "XXX.level.pathfinder.WalkNodeEvaluator",
            "XXX.level.pathfinder.package-info",
            "XXX.level.portal.PortalShape",
            "XXX.level.portal.TeleportTransition$PostTeleportTransition",
            "XXX.level.redstone.CollectingNeighborUpdater",
            "XXX.level.redstone.CollectingNeighborUpdater$MultiNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$ShapeUpdate",
            "XXX.level.redstone.DefaultRedstoneWireEvaluator",
            "XXX.level.redstone.ExperimentalRedstoneWireEvaluator",
            "XXX.level.redstone.NeighborUpdater",
            "XXX.level.redstone.Orientation$SideBias",
            "XXX.level.redstone.RedstoneWireEvaluator",
            "XXX.level.saveddata.SavedData",
            "XXX.level.saveddata.SavedDataType",
            "XXX.saveddata.maps.MapBanner$1",
            "XXX.saveddata.maps.MapDecorationType",
            "XXX.saveddata.maps.MapFrame",
            "XXX.saveddata.maps.MapIndex",
            "XXX.saveddata.maps.MapItemSavedData$HoldingPlayer",
            "XXX.saveddata.maps.MapItemSavedData$MapPatch",
            "XXX.level.saveddata.package-info",
            "XXX.level.storage.CommandStorage$Container",
            "XXX.level.storage.DerivedLevelData",
            "XXX.level.storage.FileNameDateFormatter",
            "XXX.level.storage.LevelDataAndDimensions",
            "XXX.level.storage.LevelStorageException",
            "XXX.level.storage.LevelStorageSource$LevelCandidates",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$2",
            "XXX.level.storage.LevelSummary$BackupStatus",
            "XXX.level.storage.LevelSummary$SymlinkLevelSummary",
            "XXX.level.storage.PlayerDataStorage",
            "XXX.level.storage.PrimaryLevelData$SpecialWorldProperty",
            "XXX.level.storage.WorldData",
            "XXX.storage.loot.BuiltInLootTables",
            "XXX.storage.loot.ContainerComponentManipulators",
            "XXX.storage.loot.ContainerComponentManipulators$2",
            "XXX.storage.loot.IntRange",
            "XXX.storage.loot.IntRange$IntLimiter",
            "XXX.storage.loot.LootContext$Builder",
            "XXX.storage.loot.LootContext$VisitedEntry",
            "XXX.storage.loot.LootDataType",
            "XXX.storage.loot.LootParams",
            "XXX.storage.loot.LootParams$DynamicDrop",
            "XXX.storage.loot.LootPool$Builder",
            "XXX.storage.loot.LootTable$Builder",
            "XXX.loot.entries.AlternativesEntry",
            "XXX.loot.entries.ComposableEntryContainer",
            "XXX.loot.entries.CompositeEntryBase$CompositeEntryConstructor",
            "XXX.loot.entries.EmptyLootItem",
            "XXX.loot.entries.EntryGroup$Builder",
            "XXX.loot.entries.LootPoolEntries",
            "XXX.loot.entries.LootPoolEntryContainer",
            "XXX.loot.entries.LootPoolEntryType",
            "XXX.loot.entries.LootPoolSingletonContainer$1",
            "XXX.loot.entries.LootPoolSingletonContainer$DummyBuilder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryConstructor",
            "XXX.loot.entries.SequentialEntry",
            "XXX.loot.entries.TagEntry",
            "XXX.loot.entries.package-info",
            "XXX.loot.functions.ApplyBonusCount$BinomialWithBonusCount",
            "XXX.loot.functions.ApplyBonusCount$FormulaType",
            "XXX.loot.functions.ApplyBonusCount$UniformBonusCount",
            "XXX.loot.functions.CopyBlockState",
            "XXX.loot.functions.CopyComponentsFunction",
            "XXX.loot.functions.CopyComponentsFunction$Source",
            "XXX.loot.functions.CopyCustomDataFunction$Builder",
            "XXX.loot.functions.CopyCustomDataFunction$MergeStrategy",
            "XXX.loot.functions.CopyCustomDataFunction$MergeStrategy$2",
            "XXX.loot.functions.CopyNameFunction",
            "XXX.loot.functions.EnchantRandomlyFunction",
            "XXX.loot.functions.EnchantWithLevelsFunction",
            "XXX.loot.functions.EnchantedCountIncreaseFunction",
            "XXX.loot.functions.ExplorationMapFunction",
            "XXX.loot.functions.FillPlayerHead",
            "XXX.loot.functions.FunctionReference",
            "XXX.loot.functions.LimitCount",
            "XXX.loot.functions.ListOperation$Append",
            "XXX.loot.functions.ListOperation$ReplaceAll",
            "XXX.loot.functions.ListOperation$StandAlone",
            "XXX.loot.functions.LootItemConditionalFunction",
            "XXX.loot.functions.LootItemConditionalFunction$DummyBuilder",
            "XXX.loot.functions.LootItemFunction$Builder",
            "XXX.loot.functions.LootItemFunctions",
            "XXX.loot.functions.SequenceFunction",
            "XXX.loot.functions.SetAttributesFunction$Builder",
            "XXX.loot.functions.SetAttributesFunction$ModifierBuilder",
            "XXX.loot.functions.SetBannerPatternFunction$Builder",
            "XXX.loot.functions.SetComponentsFunction",
            "XXX.loot.functions.SetContainerContents$Builder",
            "XXX.loot.functions.SetCustomDataFunction",
            "XXX.loot.functions.SetEnchantmentsFunction",
            "XXX.loot.functions.SetFireworkExplosionFunction",
            "XXX.loot.functions.SetInstrumentFunction",
            "XXX.loot.functions.SetItemDamageFunction",
            "XXX.loot.functions.SetLoreFunction",
            "XXX.loot.functions.SetNameFunction",
            "XXX.loot.functions.SetOminousBottleAmplifierFunction",
            "XXX.loot.functions.SetStewEffectFunction",
            "XXX.loot.functions.SetStewEffectFunction$EffectEntry",
            "XXX.loot.functions.SetWrittenBookPagesFunction",
            "XXX.loot.functions.ToggleTooltips",
            "XXX.storage.loot.package-info",
            "XXX.loot.parameters.LootContextParams",
            "XXX.loot.predicates.AllOfCondition",
            "XXX.loot.predicates.AnyOfCondition",
            "XXX.loot.predicates.BonusLevelTableCondition",
            "XXX.loot.predicates.CompositeLootItemCondition$Builder",
            "XXX.loot.predicates.ConditionUserBuilder",
            "XXX.loot.predicates.EnchantmentActiveCheck",
            "XXX.loot.predicates.EntityHasScoreCondition$Builder",
            "XXX.loot.predicates.InvertedLootItemCondition",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition",
            "XXX.loot.predicates.LootItemCondition",
            "XXX.loot.predicates.LootItemConditionType",
            "XXX.loot.predicates.LootItemEntityPropertyCondition",
            "XXX.loot.predicates.LootItemRandomChanceCondition",
            "XXX.loot.predicates.MatchTool",
            "XXX.loot.predicates.TimeCheck$Builder",
            "XXX.loot.predicates.WeatherCheck",
            "XXX.loot.predicates.package-info",
            "XXX.providers.nbt.ContextNbtProvider$1",
            "XXX.providers.nbt.ContextNbtProvider$Getter",
            "XXX.providers.nbt.NbtProvider",
            "XXX.providers.nbt.StorageNbtProvider",
            "XXX.providers.number.BinomialDistributionGenerator",
            "XXX.providers.number.EnchantmentLevelProvider",
            "XXX.providers.number.NumberProvider",
            "XXX.providers.number.ScoreboardValue",
            "XXX.providers.number.UniformGenerator",
            "XXX.providers.score.ContextScoreboardNameProvider",
            "XXX.providers.score.LootScoreProviderType",
            "XXX.providers.score.ScoreboardNameProviders",
            "XXX.level.storage.package-info",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.level.validation.ContentValidationException",
            "XXX.level.validation.DirectoryValidator$1",
            "XXX.level.validation.PathAllowList",
            "XXX.level.validation.PathAllowList$EntryType",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.AABB$Builder",
            "XXX.world.phys.EntityHitResult",
            "XXX.world.phys.HitResult$Type",
            "XXX.world.phys.Vec3",
            "XXX.world.phys.package-info",
            "XXX.phys.shapes.ArrayVoxelShape$1",
            "XXX.phys.shapes.BooleanOp",
            "XXX.phys.shapes.CubePointRange",
            "XXX.phys.shapes.DiscreteCubeMerger",
            "XXX.phys.shapes.DiscreteVoxelShape$IntFaceConsumer",
            "XXX.phys.shapes.EntityCollisionContext",
            "XXX.phys.shapes.IdenticalMerger",
            "XXX.phys.shapes.IndexMerger$IndexConsumer",
            "XXX.phys.shapes.MinecartCollisionContext",
            "XXX.phys.shapes.NonOverlappingMerger",
            "XXX.phys.shapes.Shapes",
            "XXX.phys.shapes.SliceShape",
            "XXX.phys.shapes.VoxelShape",
            "XXX.world.scores.DisplaySlot",
            "XXX.world.scores.Objective",
            "XXX.world.scores.PlayerScoreEntry",
            "XXX.world.scores.PlayerTeam",
            "XXX.world.scores.ReadOnlyScoreInfo",
            "XXX.world.scores.ScoreAccess",
            "XXX.world.scores.ScoreHolder$1",
            "XXX.world.scores.ScoreHolder$3",
            "XXX.world.scores.Scoreboard$1",
            "XXX.world.scores.ScoreboardSaveData",
            "XXX.world.scores.Team",
            "XXX.world.scores.Team$Visibility",
            "XXX.scores.criteria.ObjectiveCriteria$RenderType",
            "XXX.world.scores.package-info",
            "XXX.world.ticks.BlackholeTickAccess$1",
            "XXX.world.ticks.ContainerSingleItem",
            "XXX.world.ticks.LevelChunkTicks",
            "XXX.world.ticks.LevelTicks",
            "XXX.world.ticks.ProtoChunkTicks",
            "XXX.world.ticks.SavedTick$1",
            "XXX.world.ticks.ScheduledTick$1",
            "XXX.world.ticks.TickAccess",
            "XXX.world.ticks.TickPriority",
            "XXX.world.ticks.package-info"
          ],
          "removed": [
            "XXX.mojang.blaze3d.TracyFrameCapture$Status",
            "XXX.blaze3d.audio.Library",
            "XXX.blaze3d.audio.Library$ChannelPool",
            "XXX.blaze3d.audio.Library$Pool",
            "XXX.blaze3d.audio.ListenerTransform",
            "XXX.blaze3d.audio.SoundBuffer",
            "XXX.blaze3d.buffers.BufferType",
            "XXX.blaze3d.buffers.GpuBuffer",
            "XXX.blaze3d.buffers.GpuFence",
            "XXX.blaze3d.font.GlyphInfo",
            "XXX.blaze3d.font.GlyphProvider",
            "XXX.blaze3d.font.SheetGlyphInfo",
            "XXX.blaze3d.font.SpaceProvider$Definition",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$Glyph",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$GlyphEntry",
            "XXX.blaze3d.framegraph.FrameGraphBuilder",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Handle",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Inspector$1",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Pass",
            "XXX.blaze3d.framegraph.FramePass",
            "XXX.blaze3d.opengl.AbstractUniform",
            "XXX.blaze3d.opengl.GlBuffer$ReadView",
            "XXX.blaze3d.opengl.GlCommandEncoder$1",
            "XXX.blaze3d.opengl.GlDebug$LogEntry",
            "XXX.blaze3d.opengl.GlDebugLabel$Core",
            "XXX.blaze3d.opengl.GlDebugLabel$Ext",
            "XXX.blaze3d.opengl.GlDevice$ShaderCompilationKey",
            "XXX.blaze3d.opengl.GlRenderPass",
            "XXX.blaze3d.opengl.GlShaderModule",
            "XXX.blaze3d.opengl.GlTexture$1",
            "XXX.blaze3d.opengl.Uniform$1",
            "XXX.blaze3d.opengl.VertexArrayCache$1",
            "XXX.blaze3d.opengl.VertexArrayCache$Separate",
            "XXX.opengl.dsa.CoreDsa",
            "XXX.opengl.dsa.EmulatedDsa",
            "XXX.blaze3d.opengl.package-info",
            "XXX.blaze3d.pipeline.MainTarget",
            "XXX.blaze3d.pipeline.RenderCall",
            "XXX.blaze3d.platform.DestFactor",
            "XXX.blaze3d.platform.GlConst$1",
            "XXX.blaze3d.platform.GlStateManager$BlendState",
            "XXX.blaze3d.platform.GlStateManager$ColorLogicState",
            "XXX.blaze3d.platform.GlStateManager$CullState",
            "XXX.blaze3d.platform.GlStateManager$TextureState",
            "XXX.blaze3d.platform.InputConstants",
            "XXX.blaze3d.platform.InputConstants$Type",
            "XXX.blaze3d.platform.LogicOp",
            "XXX.blaze3d.platform.ScreenManager",
            "XXX.blaze3d.shaders.ShaderType",
            "XXX.blaze3d.shaders.package-info",
            "XXX.blaze3d.systems.GpuDevice",
            "XXX.blaze3d.systems.RenderPass$Draw",
            "XXX.blaze3d.systems.TimerQuery",
            "XXX.blaze3d.systems.TimerQuery$TimerQueryLazyLoader",
            "XXX.blaze3d.textures.AddressMode",
            "XXX.blaze3d.textures.GpuTexture",
            "XXX.blaze3d.vertex.VertexFormat",
            "XXX.blaze3d.vertex.VertexFormat$IndexType",
            "XXX.blaze3d.vertex.VertexFormatElement",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage",
            "XXX.models.blockstates.BlockModelDefinitionGenerator",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.ShaderManager$ShaderSourceKey",
            "XXX.client.renderer.ShapeRenderer$1",
            "XXX.client.renderer.Sheets$1",
            "XXX.client.renderer.SpecialBlockModelRenderer",
            "XXX.client.renderer.ViewArea",
            "XXX.client.renderer.WeatherEffectRenderer",
            "XXX.client.renderer.WorldBorderRenderer",
            "XXX.block.model.BlockModelDefinition$MultiPartDefinition",
            "XXX.block.model.BlockModelPart",
            "XXX.block.model.BlockStateModel$SimpleCachedUnbakedRoot$1",
            "XXX.block.model.BlockStateModel$UnbakedRoot",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.SingleVariant$Unbaked",
            "XXX.model.multipart.MultiPartModel$Selector",
            "XXX.model.multipart.MultiPartModel$Unbaked",
            "XXX.model.multipart.MultiPartModel$Unbaked$1Key",
            "XXX.renderer.chunk.SectionRenderDispatcher$SectionTaskResult",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.BreezeDebugRenderer",
            "XXX.renderer.debug.ChunkCullingDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedListener",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$EntityGoalInfo",
            "XXX.renderer.debug.HeightMapRenderer$1",
            "XXX.renderer.debug.LightSectionDebugRenderer",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.RedstoneWireOrientationsRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractBoatRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AbstractSkeletonRenderer",
            "XXX.renderer.entity.AgeableMobRenderer",
            "XXX.renderer.entity.ArmadilloRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.BoggedRenderer",
            "XXX.renderer.entity.CamelRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreakingRenderer",
            "XXX.renderer.entity.DisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$BlockDisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$TextDisplayRenderer",
            "XXX.renderer.entity.DonkeyRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EntityRendererProvider$Context",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.FrogRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.GoatRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaRenderer$1",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.NoopRenderer",
            "XXX.renderer.entity.OminousItemSpawnerRenderer",
            "XXX.renderer.entity.PaintingRenderer$1",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RaftRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnifferRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TropicalFishRenderer$1",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WindChargeRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZoglinRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.BreezeEyesLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.CustomHeadLayer$Transforms",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EquipmentLayerRenderer",
            "XXX.entity.layers.EquipmentLayerRenderer$TrimSpriteKey",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer$AlphaFunction",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SheepWoolUndercoatLayer",
            "XXX.entity.layers.SkeletonClothingLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer$PlacementStyle",
            "XXX.entity.layers.TropicalFishPatternLayer$1",
            "XXX.entity.layers.WingsLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.entity.state.ArmadilloRenderState",
            "XXX.entity.state.ArmorStandRenderState",
            "XXX.entity.state.AxolotlRenderState",
            "XXX.entity.state.BeeRenderState",
            "XXX.entity.state.BoatRenderState",
            "XXX.entity.state.BreezeRenderState",
            "XXX.entity.state.CatRenderState",
            "XXX.entity.state.CowRenderState",
            "XXX.entity.state.CreeperRenderState",
            "XXX.entity.state.DolphinRenderState",
            "XXX.entity.state.EndCrystalRenderState",
            "XXX.entity.state.EndermanRenderState",
            "XXX.entity.state.EntityRenderState$LeashState",
            "XXX.entity.state.EvokerFangsRenderState",
            "XXX.entity.state.ExperienceOrbRenderState",
            "XXX.entity.state.FelineRenderState",
            "XXX.entity.state.FishingHookRenderState",
            "XXX.entity.state.FrogRenderState",
            "XXX.entity.state.GoatRenderState",
            "XXX.entity.state.HoglinRenderState",
            "XXX.entity.state.HorseRenderState",
            "XXX.entity.state.IllagerRenderState",
            "XXX.entity.state.IronGolemRenderState",
            "XXX.entity.state.ItemDisplayEntityRenderState",
            "XXX.entity.state.ItemFrameRenderState",
            "XXX.entity.state.LivingEntityRenderState",
            "XXX.entity.state.LlamaSpitRenderState",
            "XXX.entity.state.MinecartTntRenderState",
            "XXX.entity.state.PaintingRenderState",
            "XXX.entity.state.ParrotRenderState",
            "XXX.entity.state.PigRenderState",
            "XXX.entity.state.PlayerRenderState",
            "XXX.entity.state.PufferfishRenderState",
            "XXX.entity.state.RavagerRenderState",
            "XXX.entity.state.SheepRenderState",
            "XXX.entity.state.ShulkerRenderState",
            "XXX.entity.state.SlimeRenderState",
            "XXX.entity.state.SnowGolemRenderState",
            "XXX.entity.state.StriderRenderState",
            "XXX.entity.state.ThrownItemRenderState",
            "XXX.entity.state.TippableArrowRenderState",
            "XXX.entity.state.TropicalFishRenderState",
            "XXX.entity.state.VexRenderState",
            "XXX.entity.state.VillagerRenderState",
            "XXX.entity.state.WitchRenderState",
            "XXX.entity.state.WitherSkullRenderState",
            "XXX.entity.state.ZombieRenderState",
            "XXX.entity.state.ZombifiedPiglinRenderState",
            "XXX.renderer.item.BlockModelWrapper",
            "XXX.renderer.item.BundleSelectedItemSpecialRenderer",
            "XXX.renderer.item.ClientItem",
            "XXX.renderer.item.CompositeModel",
            "XXX.renderer.item.ConditionalItemModel",
            "XXX.renderer.item.EmptyModel",
            "XXX.renderer.item.ItemModel",
            "XXX.renderer.item.ItemModel$Unbaked",
            "XXX.renderer.item.ItemModels",
            "XXX.renderer.item.ItemStackRenderState$FoilType",
            "XXX.renderer.item.MissingItemModel",
            "XXX.renderer.item.RangeSelectItemModel",
            "XXX.renderer.item.RangeSelectItemModel$Unbaked",
            "XXX.renderer.item.SelectItemModel$ModelSelector",
            "XXX.renderer.item.SelectItemModel$Unbaked",
            "XXX.renderer.item.SpecialModelWrapper",
            "XXX.renderer.item.package-info",
            "XXX.properties.conditional.BundleHasSelectedItem",
            "XXX.properties.conditional.ConditionalItemModelProperties",
            "XXX.properties.conditional.CustomModelDataProperty",
            "XXX.properties.conditional.ExtendedView",
            "XXX.properties.conditional.HasComponent",
            "XXX.properties.conditional.IsKeybindDown",
            "XXX.properties.conditional.IsUsingItem",
            "XXX.properties.conditional.ItemModelPropertyTest",
            "XXX.properties.numeric.BundleFullness",
            "XXX.properties.numeric.CompassAngleState",
            "XXX.properties.numeric.CompassAngleState$CompassTarget$1",
            "XXX.properties.numeric.CompassAngleState$CompassTarget$3",
            "XXX.properties.numeric.Cooldown",
            "XXX.properties.numeric.CrossbowPull",
            "XXX.properties.numeric.Damage",
            "XXX.properties.numeric.NeedleDirectionHelper$1",
            "XXX.properties.numeric.NeedleDirectionHelper$Wobbler",
            "XXX.properties.numeric.RangeSelectItemModelProperty",
            "XXX.properties.numeric.Time$TimeSource",
            "XXX.properties.numeric.Time$TimeSource$2",
            "XXX.properties.numeric.UseCycle",
            "XXX.properties.numeric.package-info",
            "XXX.properties.select.Charge",
            "XXX.properties.select.ContextDimension",
            "XXX.properties.select.CustomModelDataProperty",
            "XXX.properties.select.ItemBlockState",
            "XXX.properties.select.LocalTime$Data",
            "XXX.properties.select.SelectItemModelProperties",
            "XXX.properties.select.SelectItemModelProperty$Type",
            "XXX.properties.select.package-info",
            "XXX.renderer.special.BannerSpecialRenderer",
            "XXX.renderer.special.BedSpecialRenderer",
            "XXX.renderer.special.ChestSpecialRenderer",
            "XXX.renderer.special.ConduitSpecialRenderer",
            "XXX.renderer.special.DecoratedPotSpecialRenderer",
            "XXX.renderer.special.HangingSignSpecialRenderer",
            "XXX.renderer.special.NoDataSpecialModelRenderer",
            "XXX.renderer.special.ShieldSpecialRenderer$Unbaked",
            "XXX.renderer.special.ShulkerBoxSpecialRenderer$Unbaked",
            "XXX.renderer.special.SkullSpecialRenderer$Unbaked",
            "XXX.renderer.special.SpecialModelRenderer$Unbaked",
            "XXX.renderer.special.StandingSignSpecialRenderer",
            "XXX.renderer.special.TridentSpecialRenderer",
            "XXX.renderer.special.package-info",
            "XXX.renderer.state.MapRenderState$MapDecorationRenderState",
            "XXX.renderer.texture.AbstractTexture",
            "XXX.renderer.texture.DynamicTexture",
            "XXX.renderer.texture.MissingTextureAtlasSprite",
            "XXX.renderer.texture.ReloadableTexture",
            "XXX.renderer.texture.SkinTextureDownloader",
            "XXX.renderer.texture.SpriteContents$AnimatedTexture",
            "XXX.renderer.texture.SpriteContents$InterpolationData",
            "XXX.renderer.texture.SpriteLoader",
            "XXX.renderer.texture.SpriteTicker",
            "XXX.renderer.texture.Stitcher$Entry",
            "XXX.renderer.texture.Stitcher$Region",
            "XXX.renderer.texture.StitcherException",
            "XXX.renderer.texture.TextureAtlasSprite",
            "XXX.renderer.texture.TextureAtlasSprite$Ticker",
            "XXX.renderer.texture.TextureManager",
            "XXX.renderer.texture.Tickable",
            "XXX.texture.atlas.SpriteSource",
            "XXX.texture.atlas.SpriteSource$SpriteSupplier",
            "XXX.texture.atlas.SpriteSourceList$1",
            "XXX.texture.atlas.package-info",
            "XXX.atlas.sources.LazyLoadedImage",
            "XXX.atlas.sources.PalettedPermutations$PalettedSpriteSupplier",
            "XXX.atlas.sources.SourceFilter",
            "XXX.atlas.sources.Unstitcher$Region",
            "XXX.atlas.sources.package-info",
            "XXX.client.resources.ClientPackSource",
            "XXX.client.resources.DryFoliageColorReloadListener",
            "XXX.client.resources.GrassColorReloadListener",
            "XXX.client.resources.LegacyStuffWrapper",
            "XXX.client.resources.MapTextureManager",
            "XXX.client.resources.MobEffectTextureManager",
            "XXX.client.resources.PlayerSkin",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$2",
            "XXX.client.resources.SkinManager$TextureCache",
            "XXX.client.resources.TextureAtlasHolder",
            "XXX.resources.language.FormattedBidiReorder",
            "XXX.resources.language.LanguageInfo",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.VillagerMetadataSection",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.gui.GuiSpriteScaling",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice$Border",
            "XXX.metadata.gui.GuiSpriteScaling$Tile",
            "XXX.metadata.gui.package-info",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.resources.model.AtlasIds",
            "XXX.resources.model.AtlasSet$AtlasEntry",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.BlockStateDefinitions",
            "XXX.resources.model.BlockStateModelLoader$LoadedBlockModelDefinition",
            "XXX.resources.model.ClientItemInfoLoader",
            "XXX.resources.model.ClientItemInfoLoader$PendingLoad",
            "XXX.resources.model.EquipmentClientInfo",
            "XXX.resources.model.EquipmentClientInfo$Dyeable",
            "XXX.resources.model.EquipmentClientInfo$LayerType",
            "XXX.resources.model.MissingBlockModel",
            "XXX.resources.model.ModelBaker$SharedOperationKey",
            "XXX.resources.model.WeightedVariants",
            "XXX.resources.model.package-info",
            "XXX.resources.server.DownloadedPackSource",
            "XXX.resources.server.DownloadedPackSource$2",
            "XXX.resources.server.DownloadedPackSource$4",
            "XXX.resources.server.DownloadedPackSource$6",
            "XXX.resources.server.DownloadedPackSource$8",
            "XXX.resources.server.PackLoadFeedback",
            "XXX.resources.server.PackLoadFeedback$Update",
            "XXX.resources.server.PackReloadConfig$Callbacks",
            "XXX.resources.server.ServerPackManager",
            "XXX.resources.server.ServerPackManager$ActivationStatus",
            "XXX.resources.server.ServerPackManager$PackPromptStatus",
            "XXX.resources.server.ServerPackManager$ServerPackData",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.FullTextSearchTree",
            "XXX.client.searchtree.IntersectionIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$2",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.FiniteAudioStream",
            "XXX.client.sounds.JOrbisAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicInfo",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngine$DeviceCheckState",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.telemetry.TelemetryEventInstance",
            "XXX.client.telemetry.TelemetryEventLogger",
            "XXX.client.telemetry.TelemetryEventType",
            "XXX.client.telemetry.TelemetryLogManager",
            "XXX.client.telemetry.TelemetryProperty$Exporter",
            "XXX.client.telemetry.TelemetryProperty$ServerType",
            "XXX.client.telemetry.TelemetryPropertyMap$1",
            "XXX.client.telemetry.WorldSessionTelemetryManager",
            "XXX.telemetry.events.GameLoadTimesEvent",
            "XXX.telemetry.events.PerformanceMetricsEvent",
            "XXX.telemetry.events.WorldLoadEvent$1",
            "XXX.telemetry.events.WorldUnloadEvent",
            "XXX.client.telemetry.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CacheableFunction",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandResultCallback$1",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.ExecutionCommandSource",
            "XXX.minecraft.commands.ParserUtils",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrIdArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootPredicateArgument",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ResourceSelectorArgument",
            "XXX.commands.arguments.ResourceSelectorArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.ComponentPredicateParser",
            "XXX.arguments.item.ComponentPredicateParser$Context",
            "XXX.arguments.item.ComponentPredicateParser$PredicateLookupRule",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemParser$SuggestionsVisitor",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Context",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.arguments.selector.SelectorPattern",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.execution.ChainModifiers",
            "XXX.commands.execution.CustomCommandExecutor",
            "XXX.commands.execution.CustomCommandExecutor$WithErrorHandling",
            "XXX.commands.execution.CustomModifierExecutor$ModifierAdapter",
            "XXX.commands.execution.ExecutionContext",
            "XXX.commands.execution.ExecutionControl$1",
            "XXX.commands.execution.Frame$FrameControl",
            "XXX.commands.execution.UnboundEntryAction",
            "XXX.execution.tasks.BuildContexts",
            "XXX.execution.tasks.BuildContexts$TopLevel",
            "XXX.execution.tasks.CallFunction",
            "XXX.execution.tasks.ContinuationTask$TaskProvider",
            "XXX.execution.tasks.FallthroughTask",
            "XXX.execution.tasks.package-info",
            "XXX.commands.functions.FunctionBuilder",
            "XXX.commands.functions.MacroFunction",
            "XXX.commands.functions.MacroFunction$MacroEntry",
            "XXX.commands.functions.PlainTextFunction",
            "XXX.commands.functions.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockBox$1",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$6",
            "XXX.minecraft.core.BlockPos$TraversalNodeStatus",
            "XXX.minecraft.core.Cloner",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$1",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$1",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.MappedRegistry$3",
            "XXX.minecraft.core.MappedRegistry$TagSet$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$PendingTags",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$1Entry",
            "XXX.minecraft.core.RegistrySetBuilder$3",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagRegistryLookup",
            "XXX.minecraft.core.RegistrySetBuilder$PatchedRegistries",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalOwner",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.cauldron.package-info",
            "XXX.core.component.DataComponentExactPredicate$Builder",
            "XXX.core.component.DataComponentHolder",
            "XXX.core.component.DataComponentMap$1",
            "XXX.core.component.DataComponentMap$3",
            "XXX.core.component.DataComponentMap$Builder$SimpleMap",
            "XXX.core.component.DataComponentPatch$1",
            "XXX.core.component.DataComponentPatch$PatchKey",
            "XXX.core.component.DataComponentType",
            "XXX.core.component.DataComponentType$Builder$SimpleType",
            "XXX.core.component.PatchedDataComponentMap",
            "XXX.core.component.TypedDataComponent$1",
            "XXX.component.predicates.AttributeModifiersPredicate",
            "XXX.component.predicates.BundlePredicate",
            "XXX.component.predicates.CustomDataPredicate",
            "XXX.component.predicates.DataComponentPredicate",
            "XXX.component.predicates.DataComponentPredicate$Type",
            "XXX.component.predicates.EnchantmentsPredicate",
            "XXX.component.predicates.EnchantmentsPredicate$StoredEnchantments",
            "XXX.component.predicates.FireworkExplosionPredicate$FireworkPredicate",
            "XXX.component.predicates.JukeboxPlayablePredicate",
            "XXX.component.predicates.TrimPredicate",
            "XXX.component.predicates.WritableBookPredicate$PagePredicate",
            "XXX.component.predicates.WrittenBookPredicate$PagePredicate",
            "XXX.core.dispenser.BlockSource",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.MinecartDispenseItemBehavior",
            "XXX.core.dispenser.ProjectileDispenseBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.ColorParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SculkChargeParticleOptions",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$1",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.DatapackStructureReport$CustomPackEntry",
            "XXX.data.info.DatapackStructureReport$Format",
            "XXX.data.info.ItemListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.LootData",
            "XXX.loot.packs.TradeRebalanceLootTableProvider",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.VanillaShearingLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder$1",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$FamilyRecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner$1",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.TransmuteRecipeBuilder",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.recipes.packs.VanillaRecipeProvider$TrimTemplate",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.TradeRebalanceRegistries",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtDatafixer",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.EnchantmentTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.tags.TradeRebalanceEnchantmentTagsProvider",
            "XXX.data.tags.VanillaEnchantmentTagsProvider",
            "XXX.data.tags.WorldPresetTagsProvider",
            "XXX.data.worldgen.AncientCityStructurePieces",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.DimensionTypes",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureSets",
            "XXX.data.worldgen.SurfaceRuleData",
            "XXX.data.worldgen.TerrainProvider",
            "XXX.data.worldgen.TrialChambersStructurePools",
            "XXX.worldgen.biome.BiomeData",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.minecraft.gametest.Main",
            "XXX.gametest.framework.BuiltinTestFunctions",
            "XXX.gametest.framework.FailedTestTracker",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchFactory$TestDecorator",
            "XXX.gametest.framework.GameTestEnvironments",
            "XXX.gametest.framework.GameTestException",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestHelper$3",
            "XXX.gametest.framework.GameTestInstance",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestRunner$Builder",
            "XXX.gametest.framework.GameTestRunner$StructureSpawner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestTicker$State",
            "XXX.gametest.framework.GeneratedTest",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureGridSpawner",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestCommand$TestBatchSummaryDisplayer",
            "XXX.gametest.framework.TestData",
            "XXX.gametest.framework.TestEnvironmentDefinition$AllOf",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules",
            "XXX.gametest.framework.TestEnvironmentDefinition$TimeOfDay",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather$Type",
            "XXX.gametest.framework.TestFinder$Builder",
            "XXX.gametest.framework.TestInstanceFinder",
            "XXX.gametest.framework.TestReporter",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.NbtOps$GenericListCollector",
            "XXX.minecraft.nbt.ReportedNbtException",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtGrammar",
            "XXX.minecraft.nbt.SnbtGrammar$2",
            "XXX.minecraft.nbt.SnbtGrammar$4",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$2",
            "XXX.minecraft.nbt.SnbtGrammar$Base",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerSuffix",
            "XXX.minecraft.nbt.SnbtGrammar$Signed",
            "XXX.minecraft.nbt.SnbtGrammar$SimpleHexLiteralParseRule",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.CollectToTag$CompoundBuilder",
            "XXX.nbt.visitors.CollectToTag$ListBuilder",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.DisconnectionDetails",
            "XXX.minecraft.network.HandlerNames",
            "XXX.minecraft.network.LocalFrameDecoder",
            "XXX.minecraft.network.MonitoredLocalFrameDecoder",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.ProtocolInfo$Unbound",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.RegistryFriendlyByteBuf",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.UnconfiguredPipelineHandler",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$InboundConfigurationTask",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$OutboundConfigurationTask",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.ClickEvent$ChangePage",
            "XXX.network.chat.ClickEvent$OpenFile",
            "XXX.network.chat.ClickEvent$RunCommand",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentSerialization",
            "XXX.network.chat.ComponentSerialization$FuzzyCodec",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.HoverEvent$ShowItem",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.PlainTextContents",
            "XXX.chat.contents.PlainTextContents$LiteralContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.chat.numbers.BlankFormat$1",
            "XXX.chat.numbers.FixedFormat$1",
            "XXX.chat.numbers.NumberFormatType",
            "XXX.chat.numbers.StyledFormat",
            "XXX.chat.numbers.package-info",
            "XXX.network.codec.ByteBufCodecs",
            "XXX.network.codec.ByteBufCodecs$10",
            "XXX.network.codec.ByteBufCodecs$12",
            "XXX.network.codec.ByteBufCodecs$14",
            "XXX.network.codec.ByteBufCodecs$16",
            "XXX.network.codec.ByteBufCodecs$18",
            "XXX.network.codec.ByteBufCodecs$2",
            "XXX.network.codec.ByteBufCodecs$21",
            "XXX.network.codec.ByteBufCodecs$23",
            "XXX.network.codec.ByteBufCodecs$25",
            "XXX.network.codec.ByteBufCodecs$27",
            "XXX.network.codec.ByteBufCodecs$29",
            "XXX.network.codec.ByteBufCodecs$30",
            "XXX.network.codec.ByteBufCodecs$4",
            "XXX.network.codec.ByteBufCodecs$6",
            "XXX.network.codec.ByteBufCodecs$8",
            "XXX.network.codec.IdDispatchCodec",
            "XXX.network.codec.IdDispatchCodec$Entry",
            "XXX.network.codec.StreamCodec$1",
            "XXX.network.codec.StreamCodec$11",
            "XXX.network.codec.StreamCodec$13",
            "XXX.network.codec.StreamCodec$15",
            "XXX.network.codec.StreamCodec$2",
            "XXX.network.codec.StreamCodec$4",
            "XXX.network.codec.StreamCodec$6",
            "XXX.network.codec.StreamCodec$8",
            "XXX.network.codec.StreamCodec$CodecOperation",
            "XXX.network.codec.StreamEncoder",
            "XXX.network.codec.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$1$1",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketType",
            "XXX.network.protocol.ProtocolCodecBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$1",
            "XXX.network.protocol.ProtocolInfoBuilder$Implementation",
            "XXX.protocol.common.ClientboundCustomPayloadPacket",
            "XXX.protocol.common.ClientboundDisconnectPacket",
            "XXX.protocol.common.ClientboundPingPacket",
            "XXX.protocol.common.ClientboundResourcePackPushPacket",
            "XXX.protocol.common.ClientboundStoreCookiePacket",
            "XXX.protocol.common.ClientboundUpdateTagsPacket",
            "XXX.protocol.common.ServerCommonPacketListener",
            "XXX.protocol.common.ServerboundCustomPayloadPacket",
            "XXX.protocol.common.ServerboundPongPacket",
            "XXX.protocol.common.ServerboundResourcePackPacket$Action",
            "XXX.common.custom.BeeDebugPayload$BeeInfo",
            "XXX.common.custom.BrainDebugPayload$BrainDump",
            "XXX.common.custom.BreezeDebugPayload",
            "XXX.common.custom.CustomPacketPayload",
            "XXX.common.custom.CustomPacketPayload$FallbackProvider",
            "XXX.common.custom.CustomPacketPayload$TypeAndCodec",
            "XXX.common.custom.GameEventDebugPayload",
            "XXX.common.custom.GameTestAddMarkerDebugPayload",
            "XXX.common.custom.GoalDebugPayload",
            "XXX.common.custom.HiveDebugPayload",
            "XXX.common.custom.NeighborUpdatesDebugPayload",
            "XXX.common.custom.PoiAddedDebugPayload",
            "XXX.common.custom.PoiTicketCountDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload",
            "XXX.common.custom.StructuresDebugPayload",
            "XXX.common.custom.VillageSectionsDebugPayload",
            "XXX.common.custom.package-info",
            "XXX.protocol.configuration.ClientConfigurationPacketListener",
            "XXX.protocol.configuration.ClientboundRegistryDataPacket",
            "XXX.protocol.configuration.ClientboundSelectKnownPacks",
            "XXX.protocol.configuration.ConfigurationPacketTypes",
            "XXX.protocol.configuration.ServerConfigurationPacketListener",
            "XXX.protocol.configuration.ServerboundSelectKnownPacks",
            "XXX.protocol.cookie.ClientCookiePacketListener",
            "XXX.protocol.cookie.CookiePacketTypes",
            "XXX.protocol.cookie.ServerboundCookieResponsePacket",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundBundlePacket",
            "XXX.protocol.game.ClientboundChunkBatchFinishedPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket",
            "XXX.protocol.game.ClientboundClearTitlesPacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$ArgumentNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$LiteralNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeStub",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket",
            "XXX.protocol.game.ClientboundDamageEventPacket",
            "XXX.protocol.game.ClientboundDeleteChatPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundInitializeBorderPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
            "XXX.protocol.game.ClientboundLevelChunkWithLightPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacketData",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveMinecartPacket",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEndPacket",
            "XXX.protocol.game.ClientboundPlayerCombatKillPacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerRotationPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket",
            "XXX.protocol.game.ClientboundRecipeBookRemovePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResetScorePacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetHeldSlotPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundTestInstanceBlockStatus",
            "XXX.protocol.game.ClientboundTickingStepPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.CommonPlayerSpawnInfo",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.GameProtocols",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatCommandSignedPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientTickEndPacket",
            "XXX.protocol.game.ServerboundConfigurationAcknowledgedPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundContainerSlotStateChangedPacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundInteractPacket$Handler",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAtLocationAction",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemFromBlockPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSetTestBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntent",
            "XXX.protocol.handshake.HandshakePacketTypes",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.LoginPacketTypes",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.ServerboundLoginAcknowledgedPacket",
            "XXX.login.custom.CustomQueryPayload",
            "XXX.login.custom.DiscardedQueryPayload",
            "XXX.protocol.login.package-info",
            "XXX.protocol.ping.ClientPongPacketListener",
            "XXX.protocol.ping.PingPacketTypes",
            "XXX.protocol.ping.ServerboundPingRequestPacket",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.StatusPacketTypes",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.network.syncher.SynchedEntityData",
            "XXX.network.syncher.SynchedEntityData$DataItem",
            "XXX.network.syncher.package-info",
            "XXX.minecraft.obfuscate.package-info",
            "XXX.minecraft.realms.DisconnectedRealmsScreen",
            "XXX.minecraft.realms.RealmsConnect$1",
            "XXX.minecraft.realms.RealmsScreen",
            "XXX.minecraft.realms.RepeatedNarrator$Params",
            "XXX.minecraft.recipebook.PlaceRecipeHelper",
            "XXX.minecraft.recipebook.ServerPlaceRecipe",
            "XXX.minecraft.recipebook.package-info",
            "XXX.minecraft.references.Items",
            "XXX.minecraft.resources.DelegatingOps",
            "XXX.minecraft.resources.FileToIdConverter",
            "XXX.minecraft.resources.RegistryDataLoader",
            "XXX.minecraft.resources.RegistryDataLoader$Loader",
            "XXX.minecraft.resources.RegistryDataLoader$NetworkedRegistryData",
            "XXX.minecraft.resources.RegistryFileCodec",
            "XXX.minecraft.resources.RegistryOps",
            "XXX.minecraft.resources.RegistryOps$RegistryInfo",
            "XXX.minecraft.resources.ResourceKey",
            "XXX.minecraft.resources.ResourceLocation",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.ReloadableServerRegistries$Holder",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerLinks$Entry",
            "XXX.minecraft.server.ServerLinks$UntrustedEntry",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.SuppressedExceptionCollector$LongEntry",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvent$Packed",
            "XXX.server.bossevents.package-info",
            "XXX.server.chase.ChaseClient$TeleportTarget",
            "XXX.server.chase.ChaseServer$PlayerPosition",
            "XXX.server.commands.AdvancementCommands",
            "XXX.server.commands.AdvancementCommands$Action$1",
            "XXX.server.commands.AdvancementCommands$Mode",
            "XXX.server.commands.BanIpCommands",
            "XXX.server.commands.BanPlayerCommands",
            "XXX.server.commands.ChaseCommand",
            "XXX.server.commands.CloneCommands",
            "XXX.server.commands.CloneCommands$CloneBlockInfo",
            "XXX.server.commands.CloneCommands$Mode",
            "XXX.server.commands.DataPackCommand",
            "XXX.server.commands.DeOpCommands",
            "XXX.server.commands.DebugCommand$TraceCustomExecutor",
            "XXX.server.commands.DebugCommand$Tracer",
            "XXX.server.commands.DebugMobSpawningCommand",
            "XXX.server.commands.DefaultGameModeCommands",
            "XXX.server.commands.EffectCommands",
            "XXX.server.commands.EnchantCommand",
            "XXX.server.commands.ExecuteCommand$CommandNumericPredicate",
            "XXX.server.commands.ExecuteCommand$ExecuteIfFunctionCustomModifier",
            "XXX.server.commands.ExperienceCommand",
            "XXX.server.commands.FillBiomeCommand",
            "XXX.server.commands.FillCommand$Affector",
            "XXX.server.commands.FillCommand$Mode",
            "XXX.server.commands.ForceLoadCommand",
            "XXX.server.commands.FunctionCommand$1",
            "XXX.server.commands.FunctionCommand$2",
            "XXX.server.commands.FunctionCommand$4",
            "XXX.server.commands.FunctionCommand$Callbacks",
            "XXX.server.commands.GameModeCommand",
            "XXX.server.commands.GameRuleCommand$1",
            "XXX.server.commands.HelpCommand",
            "XXX.server.commands.ItemCommands",
            "XXX.server.commands.KickCommand",
            "XXX.server.commands.ListPlayersCommand",
            "XXX.server.commands.LookAt",
            "XXX.server.commands.LookAt$LookAtPosition",
            "XXX.server.commands.LootCommand$Callback",
            "XXX.server.commands.LootCommand$TailProvider",
            "XXX.server.commands.OpCommand",
            "XXX.server.commands.PardonIpCommand",
            "XXX.server.commands.PerfCommand",
            "XXX.server.commands.PlaySoundCommand",
            "XXX.server.commands.RaidCommand",
            "XXX.server.commands.RecipeCommand",
            "XXX.server.commands.ReturnCommand",
            "XXX.server.commands.ReturnCommand$ReturnFromCommandCustomModifier",
            "XXX.server.commands.RideCommand",
            "XXX.server.commands.SaveAllCommand",
            "XXX.server.commands.SaveOnCommand",
            "XXX.server.commands.ScheduleCommand",
            "XXX.server.commands.ScoreboardCommand$NumberFormatCommandExecutor",
            "XXX.server.commands.ServerPackCommand",
            "XXX.server.commands.SetBlockCommand$Mode",
            "XXX.server.commands.SetSpawnCommand",
            "XXX.server.commands.SpawnArmorTrimsCommand",
            "XXX.server.commands.SpreadPlayersCommand",
            "XXX.server.commands.StopCommand",
            "XXX.server.commands.SummonCommand",
            "XXX.server.commands.TeamCommand",
            "XXX.server.commands.TeleportCommand",
            "XXX.server.commands.TickCommand",
            "XXX.server.commands.TitleCommand",
            "XXX.server.commands.TriggerCommand",
            "XXX.server.commands.WeatherCommand",
            "XXX.server.commands.WorldBorderCommand",
            "XXX.commands.data.BlockDataAccessor$1",
            "XXX.commands.data.DataCommands",
            "XXX.commands.data.DataCommands$DataManipulatorDecorator",
            "XXX.commands.data.DataCommands$StringProcessor",
            "XXX.commands.data.EntityDataAccessor$1",
            "XXX.commands.data.StorageDataAccessor$1",
            "XXX.server.commands.package-info",
            "XXX.server.dedicated.DedicatedServer",
            "XXX.server.dedicated.DedicatedServerProperties",
            "XXX.server.dedicated.DedicatedServerSettings",
            "XXX.server.dedicated.ServerWatchdog$1",
            "XXX.server.dedicated.Settings$MutableValue",
            "XXX.server.gui.MinecraftServerGui",
            "XXX.server.gui.MinecraftServerGui$2",
            "XXX.server.gui.StatsComponent",
            "XXX.server.level.BlockDestructionProgress",
            "XXX.server.level.ChunkHolder",
            "XXX.server.level.ChunkHolder$PlayerProvider",
            "XXX.server.level.ChunkLevel$1",
            "XXX.server.level.ChunkMap$DistanceManager",
            "XXX.server.level.ChunkResult",
            "XXX.server.level.ChunkResult$Success",
            "XXX.server.level.ChunkTaskPriorityQueue",
            "XXX.server.level.ChunkTracker",
            "XXX.server.level.ChunkTrackingView$1",
            "XXX.server.level.ClientInformation",
            "XXX.server.level.DemoMode",
            "XXX.server.level.DistanceManager$FixedPlayerDistanceChunkTracker",
            "XXX.server.level.FullChunkStatus",
            "XXX.server.level.GenerationChunkHolder",
            "XXX.server.level.ParticleStatus",
            "XXX.server.level.PlayerRespawnLogic",
            "XXX.server.level.ServerBossEvent",
            "XXX.server.level.ServerChunkCache$MainThreadExecutor",
            "XXX.server.level.ServerEntityGetter",
            "XXX.server.level.ServerLevel$1",
            "XXX.server.level.ServerPlayer",
            "XXX.server.level.ServerPlayer$2",
            "XXX.server.level.ServerPlayer$RespawnConfig",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.ThrottlingChunkTaskDispatcher",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenRegion",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.CommonListenerCookie",
            "XXX.server.network.ConfigurationTask$Type",
            "XXX.server.network.FilteredText",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.LegacyTextFilter$1",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.PlayerSafetyServiceTextFilter",
            "XXX.server.network.ServerConfigurationPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.ServerTextFilter$IgnoreStrategy",
            "XXX.server.network.ServerTextFilter$PlayerContext",
            "XXX.server.network.TextFilter",
            "XXX.network.config.JoinWorldTask",
            "XXX.network.config.SynchronizeRegistriesTask",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.CompositePackResources",
            "XXX.server.packs.DownloadCacheCleaner$1",
            "XXX.server.packs.DownloadCacheCleaner$PathAndTime",
            "XXX.server.packs.DownloadQueue$BatchConfig",
            "XXX.server.packs.DownloadQueue$DownloadRequest",
            "XXX.server.packs.DownloadQueue$LogEntry",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.FilePackResources$SharedZipFileAccess",
            "XXX.server.packs.OverlayMetadataSection$OverlayEntry",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.PackSelectionConfig",
            "XXX.server.packs.PathPackResources",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.linkfs.DummyFileAttributes",
            "XXX.packs.linkfs.LinkFSPath",
            "XXX.packs.linkfs.LinkFSPath$2",
            "XXX.packs.linkfs.LinkFSProvider",
            "XXX.packs.linkfs.LinkFSProvider$2",
            "XXX.packs.linkfs.LinkFileSystem$Builder",
            "XXX.packs.linkfs.PathContents",
            "XXX.packs.linkfs.PathContents$2",
            "XXX.packs.linkfs.PathContents$FileContents",
            "XXX.packs.metadata.MetadataSectionType",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.BuiltInPackSource$1",
            "XXX.packs.repository.FolderRepositorySource$FolderPackDetector",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.PackSource$1",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.CloseableResourceManager",
            "XXX.packs.resources.FallbackResourceManager$1ResourceWithSourceAndIndex",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.FallbackResourceManager$ResourceWithSource",
            "XXX.packs.resources.MultiPackResourceManager",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceFilterSection",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceMetadata",
            "XXX.packs.resources.ResourceMetadata$2",
            "XXX.packs.resources.ResourceMetadata$Builder$1",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerRecipeBook$DisplayResolver",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BannerPatternTags",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EnchantmentTags",
            "XXX.minecraft.tags.FlatLevelGeneratorPresetTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.PoiTypeTags",
            "XXX.minecraft.tags.TagBuilder",
            "XXX.minecraft.tags.TagEntry$Lookup",
            "XXX.minecraft.tags.TagKey",
            "XXX.minecraft.tags.TagLoader$1",
            "XXX.minecraft.tags.TagLoader$EntryWithSource",
            "XXX.minecraft.tags.TagLoader$SortingEntry",
            "XXX.minecraft.tags.TagNetworkSerialization$NetworkPayload",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.AbortableIterationConsumer",
            "XXX.minecraft.util.ArrayListDeque",
            "XXX.minecraft.util.ArrayListDeque$ReversedView",
            "XXX.minecraft.util.BinaryAnimator$EasingFunction",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.ClassTreeIdRegistry",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.EncoderCache",
            "XXX.minecraft.util.EncoderCache$2",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$6",
            "XXX.minecraft.util.ExtraCodecs$LateBoundIdMapper",
            "XXX.minecraft.util.ExtraCodecs$TagOrElementLocation",
            "XXX.minecraft.util.FileSystemUtil",
            "XXX.minecraft.util.FormattedCharSequence",
            "XXX.minecraft.util.FutureChain",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.InclusiveRange",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.ListAndDeque",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ModCheck",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleInfo",
            "XXX.minecraft.util.NullOps",
            "XXX.minecraft.util.OptionEnum",
            "XXX.minecraft.util.PlaceholderLookupProvider",
            "XXX.minecraft.util.PlaceholderLookupProvider$2",
            "XXX.minecraft.util.PngInfo",
            "XXX.minecraft.util.ProblemReporter$Collector",
            "XXX.minecraft.util.RandomSource",
            "XXX.minecraft.util.ResourceLocationPattern",
            "XXX.minecraft.util.SequencedPriorityIterator",
            "XXX.minecraft.util.SignatureUpdater$Output",
            "XXX.minecraft.util.Signer",
            "XXX.minecraft.util.SimpleBitStorage$InitializationException",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.SpawnUtil$Strategy",
            "XXX.minecraft.util.StaticCache2D$Initializer",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.StringRepresentable$EnumCodec",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.TaskChainer$1",
            "XXX.minecraft.util.TickThrottler",
            "XXX.minecraft.util.TimeSource$NanoTimeSource",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.ToFloatFunction$2",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.context.ContextKey",
            "XXX.util.context.ContextKeySet$Builder",
            "XXX.util.context.ContextMap$Builder",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.LegacyComponentDataFixUtils",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AreaEffectCloudDurationScaleFix",
            "XXX.datafix.fixes.AttributeIdPrefixFix",
            "XXX.datafix.fixes.AttributesRenameFix",
            "XXX.datafix.fixes.BannerEntityCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockPosFormatAndRenamesFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.BoatSplitFix",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkTicketUnpackPosFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.CriteriaRenameFix",
            "XXX.datafix.fixes.DataComponentRemainderFix",
            "XXX.datafix.fixes.DropChancesFormatFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EmptyItemInHotbarFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityFieldsRenameFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntitySalmonSizeFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityVariantFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.EquippableAssetRenameFix",
            "XXX.datafix.fixes.FilteredBooksFix",
            "XXX.datafix.fixes.FireResistantToDamageResistantComponentFix",
            "XXX.datafix.fixes.FixProjectileStoredItem$SubFixer",
            "XXX.datafix.fixes.FoodToConsumableFix",
            "XXX.datafix.fixes.ForcedChunkToTicketFix",
            "XXX.datafix.fixes.GoatHornIdFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.InvalidBlockEntityLockFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix",
            "XXX.datafix.fixes.ItemStackCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LegacyHoverEventFix",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.LodestoneCompassComponentFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.NamespacedTypeRenameFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRarityFix",
            "XXX.datafix.fixes.OptionsAccessibilityOnboardFix",
            "XXX.datafix.fixes.OptionsAmbientOcclusionFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.OptionsProgrammerArtFix",
            "XXX.datafix.fixes.OverreachingTickFix",
            "XXX.datafix.fixes.PlayerEquipmentFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.PoiTypeRenameFix",
            "XXX.datafix.fixes.ProjectileStoredWeaponFix",
            "XXX.datafix.fixes.RandomSequenceSettingsFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RemapChunkStatusFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.ScoreboardDisplayNameFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsCounterFix$StatType",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.StructureSettingsFlattenFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix$Conversion",
            "XXX.datafix.fixes.TextComponentStrictJsonFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix",
            "XXX.datafix.fixes.TippedArrowPotionToItemFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.TrialSpawnerConfigFix",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix$VanillaTrialChambers",
            "XXX.datafix.fixes.VariantRenameFix",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerSetCanPickUpLootFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1488",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1925",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V3078",
            "XXX.datafix.schemas.V3082",
            "XXX.datafix.schemas.V3202",
            "XXX.datafix.schemas.V3204",
            "XXX.datafix.schemas.V3326",
            "XXX.datafix.schemas.V3328",
            "XXX.datafix.schemas.V3439",
            "XXX.datafix.schemas.V3682",
            "XXX.datafix.schemas.V3685",
            "XXX.datafix.schemas.V3799",
            "XXX.datafix.schemas.V3808",
            "XXX.datafix.schemas.V3808_2",
            "XXX.datafix.schemas.V3816",
            "XXX.datafix.schemas.V3818_3",
            "XXX.datafix.schemas.V3818_5",
            "XXX.datafix.schemas.V3938",
            "XXX.datafix.schemas.V4067",
            "XXX.datafix.schemas.V4071",
            "XXX.datafix.schemas.V4292",
            "XXX.datafix.schemas.V4301",
            "XXX.datafix.schemas.V4306",
            "XXX.datafix.schemas.V4312",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.debugchart.AbstractSampleLogger",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionRequest",
            "XXX.util.debugchart.LocalSampleLogger",
            "XXX.util.debugchart.RemoteSampleLogger",
            "XXX.util.debugchart.SampleStorage",
            "XXX.util.debugchart.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.parsing.package-info",
            "XXX.parsing.packrat.CachedParseState",
            "XXX.parsing.packrat.CachedParseState$PositionCache",
            "XXX.parsing.packrat.CachedParseState$SimpleControl",
            "XXX.parsing.packrat.Control$1",
            "XXX.parsing.packrat.Dictionary$Reference",
            "XXX.parsing.packrat.ErrorCollector$Nop",
            "XXX.parsing.packrat.NamedRule",
            "XXX.parsing.packrat.Rule",
            "XXX.parsing.packrat.Rule$SimpleRuleAction",
            "XXX.parsing.packrat.Scope",
            "XXX.parsing.packrat.Term$3",
            "XXX.parsing.packrat.Term$LookAhead",
            "XXX.parsing.packrat.Term$RepeatedWithSeparator",
            "XXX.packrat.commands.CommandArgumentParser",
            "XXX.packrat.commands.CommandArgumentParser$2",
            "XXX.packrat.commands.GreedyPatternParseRule",
            "XXX.packrat.commands.NumberRunParseRule",
            "XXX.packrat.commands.StringReaderTerms$2",
            "XXX.packrat.commands.UnquotedStringParseRule",
            "XXX.parsing.packrat.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.Profiler$Scope",
            "XXX.util.profiling.ProfilerFiller$CombinedProfileFiller",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.TracyZoneFiller",
            "XXX.util.profiling.Zone",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.ChunkRegionIoEvent",
            "XXX.jfr.event.ChunkRegionReadEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.StructureGenerationEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.ChunkIdentification",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.IoSummary$CountAndSize",
            "XXX.jfr.stats.StructureGenStat",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.Weighted",
            "XXX.util.random.WeightedList$Builder",
            "XXX.util.random.WeightedList$Flat",
            "XXX.util.random.WeightedRandom",
            "XXX.util.thread.AbstractConsecutiveExecutor",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ParallelMapTransform$BatchedTaskSplitter",
            "XXX.util.thread.ParallelMapTransform$SingleTaskSplitter",
            "XXX.util.thread.PriorityConsecutiveExecutor",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.thread.TaskScheduler",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$ChunkUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$EntityUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$PoiUpgrader",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.InteractionResult$ItemContext",
            "XXX.minecraft.world.InteractionResult$Success",
            "XXX.minecraft.world.InteractionResult$TryEmptyHandInteraction",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.RandomSequence",
            "XXX.minecraft.world.RandomSequences$DirtyMarkingRandomSource",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.TickRateManager",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageEffects",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.DamageSources",
            "XXX.world.damagesource.DamageTypes",
            "XXX.world.damagesource.FallLocation",
            "XXX.world.effect.AbsorptionMobEffect",
            "XXX.world.effect.HealOrHarmMobEffect",
            "XXX.world.effect.InfestedMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectInstance$BlendState",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.OozingMobEffect",
            "XXX.world.effect.PoisonMobEffect",
            "XXX.world.effect.RegenerationMobEffect",
            "XXX.world.effect.WeavingMobEffect",
            "XXX.world.effect.WitherMobEffect",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AnimationState",
            "XXX.world.entity.Attackable",
            "XXX.world.entity.ConversionParams$AfterConversion",
            "XXX.world.entity.ConversionType$1",
            "XXX.world.entity.Crackiness",
            "XXX.world.entity.Display",
            "XXX.world.entity.Display$BlockDisplay",
            "XXX.world.entity.Display$ColorInterpolator",
            "XXX.world.entity.Display$GenericInterpolator",
            "XXX.world.entity.Display$ItemDisplay",
            "XXX.world.entity.Display$LinearFloatInterpolator",
            "XXX.world.entity.Display$RenderState",
            "XXX.world.entity.Display$TextDisplay$Align",
            "XXX.world.entity.Display$TextDisplay$CachedLine",
            "XXX.world.entity.Display$TextDisplay$TextRenderState",
            "XXX.world.entity.DropChances",
            "XXX.world.entity.Entity",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityAttachment",
            "XXX.world.entity.EntityAttachments",
            "XXX.world.entity.EntityDimensions",
            "XXX.world.entity.EntityEvent",
            "XXX.world.entity.EntitySelector",
            "XXX.world.entity.EntityType",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.EquipmentSlotGroup$1",
            "XXX.world.entity.EquipmentUser",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.InsideBlockEffectApplier",
            "XXX.world.entity.InsideBlockEffectApplier$StepBasedCollector",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.InterpolationHandler",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.Leashable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.PortalProcessor",
            "XXX.world.entity.PositionMoveRotation",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SlotAccess$4",
            "XXX.world.entity.SpawnPlacementType",
            "XXX.world.entity.SpawnPlacementTypes$1",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.Attribute$Sentiment",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LongJumpUtil",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StartAttacking$TargetFinder",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$StopAttackCondition",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.BreezeAttackEntitySensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiRecord$Packed",
            "XXX.village.poi.PoiSection$Packed",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.AgeableWaterCreature",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bee$ValidateFlowerGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.CatVariants",
            "XXX.entity.animal.ChickenVariant",
            "XXX.entity.animal.ChickenVariants",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.CowVariant$ModelType",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow$Variant",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Parrot$Variant",
            "XXX.entity.animal.PigVariant",
            "XXX.entity.animal.PigVariants",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Rabbit$Variant",
            "XXX.entity.animal.Salmon$Variant",
            "XXX.entity.animal.SnowGolem",
            "XXX.entity.animal.Squid$SquidFleeGoal",
            "XXX.entity.animal.TemperatureVariants",
            "XXX.entity.animal.TropicalFish$Base",
            "XXX.entity.animal.TropicalFish$TropicalFishGroupData",
            "XXX.entity.animal.Turtle",
            "XXX.entity.animal.Turtle$TurtleGoHomeGoal",
            "XXX.entity.animal.Turtle$TurtleLayEggGoal",
            "XXX.entity.animal.Turtle$TurtlePanicGoal",
            "XXX.entity.animal.Turtle$TurtleRandomStrollGoal",
            "XXX.entity.animal.WaterAnimal",
            "XXX.animal.allay.Allay$JukeboxListener",
            "XXX.animal.allay.AllayAi",
            "XXX.animal.armadillo.Armadillo",
            "XXX.animal.armadillo.Armadillo$ArmadilloState",
            "XXX.animal.armadillo.Armadillo$ArmadilloState$2",
            "XXX.animal.armadillo.Armadillo$ArmadilloState$4",
            "XXX.animal.armadillo.ArmadilloAi$1",
            "XXX.animal.armadillo.ArmadilloAi$ArmadilloPanic",
            "XXX.animal.axolotl.Axolotl",
            "XXX.animal.axolotl.Axolotl$AxolotlGroupData",
            "XXX.animal.axolotl.Axolotl$AxolotlMoveControl",
            "XXX.animal.axolotl.AxolotlAi",
            "XXX.animal.axolotl.ValidatePlayDead",
            "XXX.animal.camel.Camel",
            "XXX.animal.camel.Camel$CamelLookControl",
            "XXX.animal.camel.CamelAi",
            "XXX.animal.camel.CamelAi$RandomSitting",
            "XXX.animal.frog.Frog",
            "XXX.animal.frog.Frog$FrogNodeEvaluator",
            "XXX.animal.frog.FrogAi",
            "XXX.animal.frog.FrogVariants",
            "XXX.animal.frog.ShootTongue$State",
            "XXX.animal.frog.TadpoleAi",
            "XXX.animal.goat.Goat",
            "XXX.animal.goat.package-info",
            "XXX.animal.horse.AbstractChestedHorse$1",
            "XXX.animal.horse.Donkey",
            "XXX.animal.horse.Horse$HorseGroupData",
            "XXX.animal.horse.Llama$LlamaAttackWolfGoal",
            "XXX.animal.horse.Llama$LlamaHurtByTargetGoal",
            "XXX.animal.horse.Markings",
            "XXX.animal.horse.SkeletonHorse",
            "XXX.animal.horse.TraderLlama",
            "XXX.animal.horse.Variant",
            "XXX.animal.horse.package-info",
            "XXX.animal.sheep.Sheep",
            "XXX.animal.sheep.SheepColorSpawnRules$SheepColorProvider",
            "XXX.animal.sheep.package-info",
            "XXX.animal.sniffer.Sniffer$State",
            "XXX.animal.sniffer.SnifferAi$1",
            "XXX.animal.sniffer.SnifferAi$3",
            "XXX.animal.sniffer.SnifferAi$FeelingHappy",
            "XXX.animal.sniffer.SnifferAi$Scenting",
            "XXX.animal.sniffer.SnifferAi$Sniffing",
            "XXX.animal.wolf.Wolf",
            "XXX.animal.wolf.Wolf$WolfPackData",
            "XXX.animal.wolf.WolfSoundVariants",
            "XXX.animal.wolf.WolfVariant",
            "XXX.animal.wolf.WolfVariants",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.DragonFlightHistory$Sample",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.BlockAttachedEntity",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.Painting",
            "XXX.entity.decoration.PaintingVariants",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.Bogged",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGoToLavaGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zoglin",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.breeze.Breeze",
            "XXX.monster.breeze.BreezeAi",
            "XXX.monster.breeze.BreezeUtil",
            "XXX.monster.breeze.Shoot",
            "XXX.monster.breeze.Slide",
            "XXX.monster.creaking.Creaking",
            "XXX.monster.creaking.Creaking$CreakingJumpControl",
            "XXX.monster.creaking.Creaking$CreakingMoveControl",
            "XXX.monster.creaking.Creaking$HomeNodeEvaluator",
            "XXX.monster.creaking.CreakingAi$1",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.monster.warden.AngerLevel",
            "XXX.monster.warden.AngerManagement$1",
            "XXX.monster.warden.Warden",
            "XXX.monster.warden.Warden$1$1",
            "XXX.monster.warden.Warden$VibrationUser",
            "XXX.monster.warden.WardenSpawnTracker",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerTrades$TypeSpecificTrade",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Input$1",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$2",
            "XXX.entity.player.PlayerEquipment",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.StackedContents$Output",
            "XXX.entity.player.StackedItemContents",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ProjectileDeflection",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownSplashPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.projectile.windcharge.AbstractWindCharge",
            "XXX.projectile.windcharge.WindCharge",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.Raids$RaidWithId",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.variant.ModelAndTexture",
            "XXX.entity.variant.PriorityProvider",
            "XXX.entity.variant.PriorityProvider$SelectorCondition",
            "XXX.entity.variant.SpawnCondition",
            "XXX.entity.variant.SpawnContext",
            "XXX.entity.variant.StructureCheck",
            "XXX.entity.variant.package-info",
            "XXX.entity.vehicle.AbstractBoat$Status",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.ChestRaft",
            "XXX.entity.vehicle.ContainerEntity$1",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.NewMinecartBehavior",
            "XXX.entity.vehicle.NewMinecartBehavior$MinecartStep",
            "XXX.entity.vehicle.NewMinecartBehavior$TrackIteration",
            "XXX.entity.vehicle.OldMinecartBehavior$1",
            "XXX.entity.vehicle.VehicleEntity",
            "XXX.world.flag.FeatureElement",
            "XXX.world.flag.FeatureFlagRegistry",
            "XXX.world.flag.FeatureFlagSet",
            "XXX.world.flag.FeatureFlags",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractCraftingMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CrafterSlot",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$4",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookMenu$PostPlaceAction",
            "XXX.world.inventory.RecipeCraftingHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SlotRange$1",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.TransientCraftingContainer",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.CrossbowItem$ChargeType",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$TooltipContext",
            "XXX.world.item.Item$TooltipContext$2",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStack$2",
            "XXX.world.item.ItemStack$4",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.JukeboxPlayable",
            "XXX.world.item.JukeboxSongPlayer",
            "XXX.world.item.JukeboxSongs",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MaceItem",
            "XXX.world.item.MapItem$1",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PlaceOnWaterBlockItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileItem$DispenseConfig",
            "XXX.world.item.ProjectileItem$PositionFunction",
            "XXX.world.item.Rarity",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignApplicator",
            "XXX.world.item.SmithingTemplateItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.ToolMaterial",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.WindChargeItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.component.Bees",
            "XXX.item.component.BlocksAttacks",
            "XXX.item.component.BlocksAttacks$ItemDamageFunction",
            "XXX.item.component.BundleContents",
            "XXX.item.component.ChargedProjectiles",
            "XXX.item.component.Consumable$Builder",
            "XXX.item.component.ConsumableListener",
            "XXX.item.component.CustomData",
            "XXX.item.component.DamageResistant",
            "XXX.item.component.DebugStickState",
            "XXX.item.component.FireworkExplosion",
            "XXX.item.component.Fireworks",
            "XXX.item.component.ItemAttributeModifiers",
            "XXX.item.component.ItemAttributeModifiers$Builder",
            "XXX.item.component.ItemContainerContents",
            "XXX.item.component.ItemLore",
            "XXX.item.component.MapDecorations",
            "XXX.item.component.MapItemColor",
            "XXX.item.component.OminousBottleAmplifier",
            "XXX.item.component.ResolvableProfile",
            "XXX.item.component.SuspiciousStewEffects",
            "XXX.item.component.Tool",
            "XXX.item.component.TooltipDisplay",
            "XXX.item.component.UseCooldown",
            "XXX.item.component.UseRemainder$OnExtraCreatedRemainder",
            "XXX.item.component.WritableBookContent",
            "XXX.item.component.package-info",
            "XXX.item.consume_effects.ClearAllStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect$Type",
            "XXX.item.consume_effects.RemoveStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.AbstractCookingRecipe$Serializer",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BlastingRecipe$1",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CraftingInput$Positioned",
            "XXX.item.crafting.CraftingRecipe$1",
            "XXX.item.crafting.CustomRecipe$Serializer",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.PlacementInfo",
            "XXX.item.crafting.RecipeAccess",
            "XXX.item.crafting.RecipeBookCategory",
            "XXX.item.crafting.RecipeCache$Entry",
            "XXX.item.crafting.RecipeInput",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeManager$IngredientCollector",
            "XXX.item.crafting.RecipeManager$ServerDisplayInfo",
            "XXX.item.crafting.RecipePropertySet",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputEntry",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapedRecipePattern",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SingleItemRecipe$Factory",
            "XXX.item.crafting.SingleRecipeInput",
            "XXX.item.crafting.SmeltingRecipe$1",
            "XXX.item.crafting.SmithingRecipeInput",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TransmuteRecipe",
            "XXX.item.crafting.TransmuteResult",
            "XXX.crafting.display.DisplayContentsFactory$ForRemainders",
            "XXX.crafting.display.FurnaceRecipeDisplay",
            "XXX.crafting.display.RecipeDisplay$Type",
            "XXX.crafting.display.RecipeDisplayId",
            "XXX.crafting.display.ShapedCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay",
            "XXX.crafting.display.SlotDisplay$Composite",
            "XXX.crafting.display.SlotDisplay$ItemSlotDisplay",
            "XXX.crafting.display.SlotDisplay$ItemStackSlotDisplay",
            "XXX.crafting.display.SlotDisplay$TagSlotDisplay",
            "XXX.crafting.display.SlotDisplay$WithRemainder",
            "XXX.crafting.display.SlotDisplays",
            "XXX.crafting.display.StonecutterRecipeDisplay",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.Enchantable",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.Enchantment$Builder",
            "XXX.item.enchantment.Enchantment$EnchantmentDefinition",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.EnchantmentTarget",
            "XXX.item.enchantment.ItemEnchantments",
            "XXX.item.enchantment.LevelBasedValue",
            "XXX.item.enchantment.LevelBasedValue$Constant",
            "XXX.item.enchantment.LevelBasedValue$LevelsSquared",
            "XXX.item.enchantment.LevelBasedValue$Lookup",
            "XXX.item.enchantment.TargetedConditionalEffect",
            "XXX.enchantment.effects.AllOf",
            "XXX.enchantment.effects.AllOf$LocationBasedEffects",
            "XXX.enchantment.effects.ApplyMobEffect",
            "XXX.enchantment.effects.DamageEntity",
            "XXX.enchantment.effects.EnchantmentAttributeEffect",
            "XXX.enchantment.effects.EnchantmentLocationBasedEffect",
            "XXX.enchantment.effects.ExplodeEffect",
            "XXX.enchantment.effects.MultiplyValue",
            "XXX.enchantment.effects.RemoveBinomial",
            "XXX.enchantment.effects.ReplaceDisk",
            "XXX.enchantment.effects.SetBlockProperties",
            "XXX.enchantment.effects.SpawnParticlesEffect",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType",
            "XXX.enchantment.effects.SpawnParticlesEffect$VelocitySource",
            "XXX.enchantment.effects.package-info",
            "XXX.enchantment.providers.EnchantmentProvider",
            "XXX.enchantment.providers.EnchantmentsByCost",
            "XXX.enchantment.providers.SingleEnchantment",
            "XXX.enchantment.providers.VanillaEnchantmentProviders",
            "XXX.item.equipment.AllowedEntitiesProvider",
            "XXX.item.equipment.ArmorMaterials",
            "XXX.item.equipment.EquipmentAsset",
            "XXX.item.equipment.Equippable",
            "XXX.item.equipment.package-info",
            "XXX.equipment.trim.MaterialAssetGroup",
            "XXX.equipment.trim.TrimMaterial",
            "XXX.equipment.trim.TrimPattern",
            "XXX.equipment.trim.package-info",
            "XXX.item.trading.ItemCost",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkPos$2",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.DryFoliageColor",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.world.level.LevelAccessor",
            "XXX.world.level.LevelHeightAccessor$1",
            "XXX.world.level.LevelSettings",
            "XXX.world.level.LevelSimulatedReader",
            "XXX.world.level.LevelWriter",
            "XXX.world.level.LocalMobCapCalculator",
            "XXX.world.level.NaturalSpawner",
            "XXX.world.level.NaturalSpawner$ChunkGetter",
            "XXX.world.level.NaturalSpawner$SpawnState",
            "XXX.world.level.PathNavigationRegion",
            "XXX.world.level.PotentialCalculator$PointCharge",
            "XXX.world.level.ServerExplosion",
            "XXX.world.level.ServerLevelAccessor",
            "XXX.world.level.SimpleExplosionDamageCalculator",
            "XXX.world.level.SpawnData$CustomSpawnRules",
            "XXX.world.level.StructureManager",
            "XXX.world.level.TicketStorage$ChunkUpdated",
            "XXX.world.level.WorldGenLevel",
            "XXX.level.biome.AmbientMoodSettings",
            "XXX.level.biome.Biome",
            "XXX.level.biome.Biome$BiomeBuilder",
            "XXX.level.biome.Biome$Precipitation",
            "XXX.level.biome.Biome$TemperatureModifier$1",
            "XXX.level.biome.BiomeGenerationSettings",
            "XXX.level.biome.BiomeGenerationSettings$PlainBuilder",
            "XXX.level.biome.BiomeManager$NoiseBiomeSource",
            "XXX.level.biome.BiomeSource",
            "XXX.level.biome.BiomeSpecialEffects",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier",
            "XXX.level.biome.BiomeSpecialEffects$GrassColorModifier$2",
            "XXX.level.biome.Biomes",
            "XXX.level.biome.Climate",
            "XXX.level.biome.Climate$Parameter",
            "XXX.level.biome.Climate$ParameterPoint",
            "XXX.level.biome.Climate$RTree$Leaf",
            "XXX.level.biome.Climate$RTree$SubTree",
            "XXX.level.biome.Climate$SpawnFinder",
            "XXX.level.biome.Climate$TargetPoint",
            "XXX.level.biome.FeatureSorter$1FeatureData",
            "XXX.level.biome.FixedBiomeSource",
            "XXX.level.biome.MobSpawnSettings$Builder",
            "XXX.level.biome.MobSpawnSettings$SpawnerData",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
            "XXX.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider",
            "XXX.level.biome.OverworldBiomeBuilder",
            "XXX.level.biome.package-info",
            "XXX.level.block.AbstractCandleBlock",
            "XXX.level.block.AbstractChestBlock",
            "XXX.level.block.AbstractSkullBlock",
            "XXX.level.block.AmethystBlock",
            "XXX.level.block.AnvilBlock",
            "XXX.level.block.AzaleaBlock",
            "XXX.level.block.BambooStalkBlock",
            "XXX.level.block.BarrelBlock",
            "XXX.level.block.BaseCoralFanBlock",
            "XXX.level.block.BaseCoralPlantTypeBlock",
            "XXX.level.block.BaseEntityBlock",
            "XXX.level.block.BasePressurePlateBlock",
            "XXX.level.block.BaseRailBlock$1",
            "XXX.level.block.BeaconBeamBlock",
            "XXX.level.block.BedBlock",
            "XXX.level.block.BeetrootBlock",
            "XXX.level.block.BellBlock$1",
            "XXX.level.block.BigDripleafStemBlock",
            "XXX.level.block.Block",
            "XXX.level.block.Block$2",
            "XXX.level.block.BlockTypes",
            "XXX.level.block.BonemealableBlock",
            "XXX.level.block.BonemealableFeaturePlacerBlock",
            "XXX.level.block.BrushableBlock",
            "XXX.level.block.BucketPickup",
            "XXX.level.block.BushBlock",
            "XXX.level.block.CactusBlock",
            "XXX.level.block.CakeBlock",
            "XXX.level.block.CampfireBlock",
            "XXX.level.block.CandleCakeBlock",
            "XXX.level.block.CarrotBlock",
            "XXX.level.block.CarvedPumpkinBlock",
            "XXX.level.block.CaveVines",
            "XXX.level.block.CaveVinesPlantBlock",
            "XXX.level.block.ChainBlock",
            "XXX.level.block.ChestBlock",
            "XXX.level.block.ChestBlock$2",
            "XXX.level.block.ChestBlock$3",
            "XXX.level.block.ChiseledBookShelfBlock",
            "XXX.level.block.ChorusFlowerBlock",
            "XXX.level.block.CocoaBlock",
            "XXX.level.block.CommandBlock",
            "XXX.level.block.ComposterBlock",
            "XXX.level.block.ComposterBlock$InputContainer",
            "XXX.level.block.ConcretePowderBlock",
            "XXX.level.block.CopperBulbBlock",
            "XXX.level.block.CoralFanBlock",
            "XXX.level.block.CoralWallFanBlock",
            "XXX.level.block.CrafterBlock$1",
            "XXX.level.block.CreakingHeartBlock",
            "XXX.level.block.CrossCollisionBlock",
            "XXX.level.block.CryingObsidianBlock",
            "XXX.level.block.DecoratedPotBlock",
            "XXX.level.block.DetectorRailBlock$1",
            "XXX.level.block.DirectionalBlock",
            "XXX.level.block.DispenserBlock",
            "XXX.level.block.DoorBlock$1",
            "XXX.level.block.DoubleBlockCombiner$BlockType",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult",
            "XXX.level.block.DoubleBlockCombiner$NeighborCombineResult$Single",
            "XXX.level.block.DragonEggBlock",
            "XXX.level.block.DropperBlock",
            "XXX.level.block.EnchantingTableBlock",
            "XXX.level.block.EndPortalBlock",
            "XXX.level.block.EndRodBlock",
            "XXX.level.block.EntityBlock",
            "XXX.level.block.EyeblossomBlock$Type",
            "XXX.level.block.FaceAttachedHorizontalDirectionalBlock$1",
            "XXX.level.block.FallingBlock",
            "XXX.level.block.FenceBlock",
            "XXX.level.block.FenceGateBlock$1",
            "XXX.level.block.FireflyBushBlock",
            "XXX.level.block.FlowerBedBlock",
            "XXX.level.block.FlowerPotBlock",
            "XXX.level.block.FrostedIceBlock",
            "XXX.level.block.FurnaceBlock",
            "XXX.level.block.GlazedTerracottaBlock",
            "XXX.level.block.GrassBlock",
            "XXX.level.block.GrowingPlantBlock",
            "XXX.level.block.GrowingPlantHeadBlock",
            "XXX.level.block.HangingMossBlock",
            "XXX.level.block.HayBlock",
            "XXX.level.block.HoneyBlock",
            "XXX.level.block.HorizontalDirectionalBlock",
            "XXX.level.block.IceBlock",
            "XXX.level.block.InfestedRotatedPillarBlock",
            "XXX.level.block.JigsawBlock",
            "XXX.level.block.KelpBlock",
            "XXX.level.block.LadderBlock",
            "XXX.level.block.LavaCauldronBlock",
            "XXX.level.block.LeafLitterBlock",
            "XXX.level.block.LecternBlock",
            "XXX.level.block.LeverBlock",
            "XXX.level.block.LightningRodBlock",
            "XXX.level.block.LiquidBlockContainer",
            "XXX.level.block.MagmaBlock",
            "XXX.level.block.MangrovePropaguleBlock",
            "XXX.level.block.Mirror",
            "XXX.level.block.MossyCarpetBlock$1",
            "XXX.level.block.MultifaceBlock",
            "XXX.level.block.MultifaceSpreader",
            "XXX.level.block.MultifaceSpreader$SpreadConfig",
            "XXX.level.block.MultifaceSpreader$SpreadPredicate",
            "XXX.level.block.MultifaceSpreader$SpreadType$1",
            "XXX.level.block.MultifaceSpreader$SpreadType$3",
            "XXX.level.block.MyceliumBlock",
            "XXX.level.block.NetherPortalBlock$1",
            "XXX.level.block.NetherVines",
            "XXX.level.block.NetherrackBlock",
            "XXX.level.block.NyliumBlock",
            "XXX.level.block.PiglinWallSkullBlock",
            "XXX.level.block.PitcherCropBlock",
            "XXX.level.block.PitcherCropBlock$PosAndState",
            "XXX.level.block.PlayerWallHeadBlock",
            "XXX.level.block.PointedDripstoneBlock$1",
            "XXX.level.block.Portal",
            "XXX.level.block.PotatoBlock",
            "XXX.level.block.PoweredBlock",
            "XXX.level.block.PoweredRailBlock$1",
            "XXX.level.block.PressurePlateBlock$1",
            "XXX.level.block.RailBlock",
            "XXX.level.block.RailState",
            "XXX.level.block.RedStoneOreBlock",
            "XXX.level.block.RedStoneWireBlock$1",
            "XXX.level.block.RedstoneTorchBlock",
            "XXX.level.block.RedstoneWallTorchBlock",
            "XXX.level.block.RepeaterBlock",
            "XXX.level.block.RespawnAnchorBlock$1",
            "XXX.level.block.RootedDirtBlock",
            "XXX.level.block.RotatedPillarBlock",
            "XXX.level.block.Rotation",
            "XXX.level.block.SaplingBlock",
            "XXX.level.block.SculkBehaviour",
            "XXX.level.block.SculkBlock",
            "XXX.level.block.SculkSensorBlock",
            "XXX.level.block.SculkSpreader",
            "XXX.level.block.SculkVeinBlock",
            "XXX.level.block.SeaPickleBlock",
            "XXX.level.block.SegmentableBlock",
            "XXX.level.block.ShulkerBoxBlock",
            "XXX.level.block.SignBlock",
            "XXX.level.block.SkullBlock",
            "XXX.level.block.SkullBlock$Types",
            "XXX.level.block.SlabBlock$1",
            "XXX.level.block.SmallDripleafBlock",
            "XXX.level.block.SmokerBlock",
            "XXX.level.block.SnowLayerBlock",
            "XXX.level.block.SoulFireBlock",
            "XXX.level.block.SoundType",
            "XXX.level.block.SpongeBlock",
            "XXX.level.block.SpreadingSnowyDirtBlock",
            "XXX.level.block.StainedGlassPaneBlock",
            "XXX.level.block.StairBlock$1",
            "XXX.level.block.StemBlock",
            "XXX.level.block.StructureBlock",
            "XXX.level.block.StructureVoidBlock",
            "XXX.level.block.SupportType",
            "XXX.level.block.SupportType$2",
            "XXX.level.block.SuspiciousEffectHolder",
            "XXX.level.block.TallDryGrassBlock",
            "XXX.level.block.TallGrassBlock",
            "XXX.level.block.TargetBlock",
            "XXX.level.block.TestBlock",
            "XXX.level.block.TintedGlassBlock",
            "XXX.level.block.TntBlock",
            "XXX.level.block.TorchflowerCropBlock",
            "XXX.level.block.TrapDoorBlock",
            "XXX.level.block.TrappedChestBlock",
            "XXX.level.block.TripWireBlock",
            "XXX.level.block.TripWireHookBlock",
            "XXX.level.block.TwistingVinesBlock",
            "XXX.level.block.UntintedParticleLeavesBlock",
            "XXX.level.block.VegetationBlock",
            "XXX.level.block.VineBlock$1",
            "XXX.level.block.WallBlock",
            "XXX.level.block.WallHangingSignBlock",
            "XXX.level.block.WallSkullBlock",
            "XXX.level.block.WaterlilyBlock",
            "XXX.level.block.WeatheringCopper",
            "XXX.level.block.WeatheringCopperBulbBlock",
            "XXX.level.block.WeatheringCopperFullBlock",
            "XXX.level.block.WeatheringCopperSlabBlock",
            "XXX.level.block.WeatheringCopperTrapDoorBlock",
            "XXX.level.block.WeepingVinesBlock",
            "XXX.level.block.WeightedPressurePlateBlock",
            "XXX.level.block.WitherRoseBlock",
            "XXX.level.block.WitherWallSkullBlock",
            "XXX.block.entity.AbstractFurnaceBlockEntity",
            "XXX.block.entity.BannerBlockEntity",
            "XXX.block.entity.BannerPatternLayers",
            "XXX.block.entity.BannerPatternLayers$Layer",
            "XXX.block.entity.BarrelBlockEntity",
            "XXX.block.entity.BaseContainerBlockEntity",
            "XXX.block.entity.BeaconBeamOwner$Section",
            "XXX.block.entity.BeaconBlockEntity$1",
            "XXX.block.entity.BeehiveBlockEntity",
            "XXX.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
            "XXX.block.entity.BellBlockEntity",
            "XXX.block.entity.BlastFurnaceBlockEntity",
            "XXX.block.entity.BlockEntity$1",
            "XXX.block.entity.BlockEntityTicker",
            "XXX.block.entity.BlockEntityType$BlockEntitySupplier",
            "XXX.block.entity.BoundingBoxRenderable$Mode",
            "XXX.block.entity.BrewingStandBlockEntity",
            "XXX.block.entity.BrushableBlockEntity",
            "XXX.block.entity.CalibratedSculkSensorBlockEntity$VibrationUser",
            "XXX.block.entity.ChestBlockEntity",
            "XXX.block.entity.ChestLidController",
            "XXX.block.entity.CommandBlockEntity",
            "XXX.block.entity.CommandBlockEntity$Mode",
            "XXX.block.entity.ConduitBlockEntity",
            "XXX.block.entity.CrafterBlockEntity",
            "XXX.block.entity.CreakingHeartBlockEntity",
            "XXX.block.entity.DecoratedPotBlockEntity",
            "XXX.block.entity.DecoratedPotPattern",
            "XXX.block.entity.DispenserBlockEntity",
            "XXX.block.entity.EnchantingTableBlockEntity",
            "XXX.block.entity.EnderChestBlockEntity$1",
            "XXX.block.entity.FuelValues$Builder",
            "XXX.block.entity.HangingSignBlockEntity",
            "XXX.block.entity.HopperBlockEntity",
            "XXX.block.entity.JigsawBlockEntity$JointType",
            "XXX.block.entity.LecternBlockEntity",
            "XXX.block.entity.LecternBlockEntity$2",
            "XXX.block.entity.PotDecorations",
            "XXX.block.entity.SculkCatalystBlockEntity",
            "XXX.block.entity.SculkSensorBlockEntity",
            "XXX.block.entity.SculkShriekerBlockEntity",
            "XXX.block.entity.ShulkerBoxBlockEntity",
            "XXX.block.entity.SignBlockEntity",
            "XXX.block.entity.SkullBlockEntity",
            "XXX.block.entity.SkullBlockEntity$2",
            "XXX.block.entity.SpawnerBlockEntity",
            "XXX.block.entity.StructureBlockEntity",
            "XXX.block.entity.StructureBlockEntity$UpdateType",
            "XXX.block.entity.TestInstanceBlockEntity",
            "XXX.block.entity.TestInstanceBlockEntity$Data",
            "XXX.block.entity.TheEndGatewayBlockEntity",
            "XXX.block.entity.TickingBlockEntity",
            "XXX.block.entity.TrialSpawnerBlockEntity",
            "XXX.entity.trialspawner.PlayerDetector",
            "XXX.entity.trialspawner.PlayerDetector$EntitySelector$1",
            "XXX.entity.trialspawner.TrialSpawner",
            "XXX.entity.trialspawner.TrialSpawner$StateAccessor",
            "XXX.entity.trialspawner.TrialSpawnerConfig$Builder",
            "XXX.entity.trialspawner.TrialSpawnerConfigs$Keys",
            "XXX.entity.trialspawner.TrialSpawnerState",
            "XXX.entity.trialspawner.TrialSpawnerState$ParticleEmission",
            "XXX.entity.trialspawner.package-info",
            "XXX.entity.vault.VaultBlockEntity$Client",
            "XXX.entity.vault.VaultClientData",
            "XXX.entity.vault.VaultServerData",
            "XXX.entity.vault.VaultState",
            "XXX.entity.vault.VaultState$2",
            "XXX.entity.vault.VaultState$4",
            "XXX.entity.vault.package-info",
            "XXX.block.grower.package-info",
            "XXX.block.piston.MovingPistonBlock",
            "XXX.block.piston.PistonBaseBlock$1",
            "XXX.block.piston.PistonMath",
            "XXX.block.piston.PistonMovingBlockEntity",
            "XXX.block.piston.PistonStructureResolver",
            "XXX.block.sounds.AmbientDesertBlockSoundsPlayer",
            "XXX.block.state.BlockBehaviour$1",
            "XXX.block.state.BlockBehaviour$BlockStateBase$Cache",
            "XXX.block.state.BlockBehaviour$OffsetType",
            "XXX.block.state.BlockBehaviour$StateArgumentPredicate",
            "XXX.block.state.BlockState",
            "XXX.block.state.StateDefinition$Builder",
            "XXX.block.state.StateHolder",
            "XXX.block.state.package-info",
            "XXX.state.pattern.BlockPattern",
            "XXX.state.pattern.BlockPattern$BlockPatternMatch",
            "XXX.state.pattern.package-info",
            "XXX.state.predicate.BlockStatePredicate",
            "XXX.state.properties.AttachFace",
            "XXX.state.properties.BedPart",
            "XXX.state.properties.BlockSetType",
            "XXX.state.properties.BlockStateProperties",
            "XXX.state.properties.ChestType",
            "XXX.state.properties.CreakingHeartState",
            "XXX.state.properties.DoubleBlockHalf",
            "XXX.state.properties.EnumProperty",
            "XXX.state.properties.IntegerProperty",
            "XXX.state.properties.NoteBlockInstrument$Type",
            "XXX.state.properties.Property",
            "XXX.state.properties.RailShape",
            "XXX.state.properties.RotationSegment",
            "XXX.state.properties.SlabType",
            "XXX.state.properties.StructureMode",
            "XXX.state.properties.Tilt",
            "XXX.state.properties.WoodType",
            "XXX.level.border.BorderChangeListener",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BlockColumn",
            "XXX.level.chunk.CarvingMask",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGenerators",
            "XXX.level.chunk.DataLayer",
            "XXX.level.chunk.GlobalPalette",
            "XXX.level.chunk.ImposterProtoChunk",
            "XXX.level.chunk.LevelChunk$1",
            "XXX.level.chunk.LevelChunk$EntityCreationType",
            "XXX.level.chunk.LevelChunk$RebindableTickingBlockEntityWrapper",
            "XXX.level.chunk.LevelChunkSection",
            "XXX.level.chunk.LightChunk",
            "XXX.level.chunk.LinearPalette",
            "XXX.level.chunk.Palette",
            "XXX.level.chunk.PaletteResize",
            "XXX.level.chunk.PalettedContainer$Configuration",
            "XXX.level.chunk.PalettedContainer$Data",
            "XXX.level.chunk.PalettedContainer$Strategy$1",
            "XXX.level.chunk.PalettedContainerRO",
            "XXX.level.chunk.PalettedContainerRO$Unpacker",
            "XXX.level.chunk.SingleValuePalette",
            "XXX.level.chunk.UpgradeData",
            "XXX.level.chunk.UpgradeData$BlockFixers",
            "XXX.level.chunk.UpgradeData$BlockFixers$2",
            "XXX.level.chunk.UpgradeData$BlockFixers$4",
            "XXX.level.chunk.package-info",
            "XXX.chunk.status.ChunkPyramid",
            "XXX.chunk.status.ChunkStatus",
            "XXX.chunk.status.ChunkStatusTasks",
            "XXX.chunk.status.ChunkStep$Builder",
            "XXX.chunk.status.WorldGenContext",
            "XXX.chunk.storage.ChunkIOErrorReporter",
            "XXX.chunk.storage.ChunkStorage",
            "XXX.chunk.storage.IOWorker",
            "XXX.chunk.storage.IOWorker$Priority",
            "XXX.chunk.storage.RecreatingChunkStorage",
            "XXX.chunk.storage.RegionBitmap",
            "XXX.chunk.storage.RegionFile$ChunkBuffer",
            "XXX.chunk.storage.RegionFileStorage",
            "XXX.chunk.storage.RegionFileVersion$StreamWrapper",
            "XXX.chunk.storage.SectionStorage",
            "XXX.chunk.storage.SerializableChunkData",
            "XXX.chunk.storage.SerializableChunkData$SectionData",
            "XXX.chunk.storage.package-info",
            "XXX.level.dimension.DimensionDefaults",
            "XXX.level.dimension.DimensionType$MonsterSettings",
            "XXX.dimension.end.DragonRespawnAnimation",
            "XXX.dimension.end.DragonRespawnAnimation$2",
            "XXX.dimension.end.DragonRespawnAnimation$4",
            "XXX.dimension.end.EndDragonFight",
            "XXX.dimension.end.package-info",
            "XXX.level.entity.ChunkEntities",
            "XXX.level.entity.EntityAccess",
            "XXX.level.entity.EntityInLevelCallback$1",
            "XXX.level.entity.EntityPersistentStorage",
            "XXX.level.entity.EntitySectionStorage",
            "XXX.level.entity.EntityTypeTest",
            "XXX.level.entity.EntityTypeTest$2",
            "XXX.level.entity.LevelEntityGetter",
            "XXX.level.entity.PersistentEntitySectionManager",
            "XXX.level.entity.PersistentEntitySectionManager$ChunkLoadStatus",
            "XXX.level.entity.TransientEntitySectionManager$Callback",
            "XXX.level.entity.UniquelyIdentifyable",
            "XXX.level.entity.package-info",
            "XXX.level.gameevent.BlockPositionSource$Type",
            "XXX.level.gameevent.EntityPositionSource",
            "XXX.level.gameevent.EuclideanGameEventListenerRegistry",
            "XXX.level.gameevent.GameEvent",
            "XXX.level.gameevent.GameEvent$ListenerInfo",
            "XXX.level.gameevent.GameEventListener",
            "XXX.level.gameevent.GameEventListener$Provider",
            "XXX.level.gameevent.GameEventListenerRegistry$1",
            "XXX.level.gameevent.PositionSource",
            "XXX.level.gameevent.package-info",
            "XXX.gameevent.vibrations.VibrationSelector",
            "XXX.gameevent.vibrations.VibrationSystem$Data",
            "XXX.gameevent.vibrations.VibrationSystem$Ticker",
            "XXX.gameevent.vibrations.package-info",
            "XXX.level.levelgen.Aquifer$1",
            "XXX.level.levelgen.Aquifer$FluidStatus",
            "XXX.level.levelgen.Beardifier",
            "XXX.level.levelgen.Beardifier$Rigid",
            "XXX.level.levelgen.BelowZeroRetrogen$1",
            "XXX.level.levelgen.Column",
            "XXX.level.levelgen.Column$Range",
            "XXX.level.levelgen.DebugLevelSource",
            "XXX.level.levelgen.DensityFunction",
            "XXX.level.levelgen.DensityFunction$FunctionContext",
            "XXX.level.levelgen.DensityFunction$SimpleFunction",
            "XXX.level.levelgen.DensityFunction$Visitor",
            "XXX.level.levelgen.DensityFunctions$Ap2",
            "XXX.level.levelgen.DensityFunctions$BeardifierOrMarker",
            "XXX.level.levelgen.DensityFunctions$BlendDensity",
            "XXX.level.levelgen.DensityFunctions$Clamp",
            "XXX.level.levelgen.DensityFunctions$EndIslandDensityFunction",
            "XXX.level.levelgen.DensityFunctions$Mapped",
            "XXX.level.levelgen.DensityFunctions$Marker",
            "XXX.level.levelgen.DensityFunctions$MarkerOrMarked",
            "XXX.level.levelgen.DensityFunctions$MulOrAdd$Type",
            "XXX.level.levelgen.DensityFunctions$PureTransformer",
            "XXX.level.levelgen.DensityFunctions$Shift",
            "XXX.level.levelgen.DensityFunctions$ShiftB",
            "XXX.level.levelgen.DensityFunctions$ShiftedNoise",
            "XXX.level.levelgen.DensityFunctions$Spline$Coordinate",
            "XXX.level.levelgen.DensityFunctions$TransformerWithContext",
            "XXX.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction$Type",
            "XXX.level.levelgen.DensityFunctions$WeirdScaledSampler$RarityValueMapper",
            "XXX.level.levelgen.FlatLevelSource",
            "XXX.level.levelgen.GenerationStep$Decoration",
            "XXX.level.levelgen.GeodeCrackSettings",
            "XXX.level.levelgen.Heightmap",
            "XXX.level.levelgen.Heightmap$Usage",
            "XXX.level.levelgen.LegacyRandomSource$LegacyPositionalRandomFactory",
            "XXX.level.levelgen.NoiseBasedChunkGenerator",
            "XXX.level.levelgen.NoiseChunk$1",
            "XXX.level.levelgen.NoiseChunk$BlendAlpha",
            "XXX.level.levelgen.NoiseChunk$BlockStateFiller",
            "XXX.level.levelgen.NoiseChunk$CacheAllInCell",
            "XXX.level.levelgen.NoiseChunk$FlatCache",
            "XXX.level.levelgen.NoiseChunk$NoiseInterpolator",
            "XXX.level.levelgen.NoiseRouter",
            "XXX.level.levelgen.NoiseRouterData$QuantizedSpaghettiRarity",
            "XXX.level.levelgen.Noises",
            "XXX.level.levelgen.OreVeinifier$VeinType",
            "XXX.level.levelgen.PhantomSpawner",
            "XXX.level.levelgen.RandomState",
            "XXX.level.levelgen.RandomState$1NoiseWiringHelper",
            "XXX.level.levelgen.RandomSupport$Seed128bit",
            "XXX.level.levelgen.SurfaceRules",
            "XXX.level.levelgen.SurfaceRules$Bandlands",
            "XXX.level.levelgen.SurfaceRules$BiomeConditionSource$1BiomeCondition",
            "XXX.level.levelgen.SurfaceRules$Condition",
            "XXX.level.levelgen.SurfaceRules$Context",
            "XXX.level.levelgen.SurfaceRules$Context$HoleCondition",
            "XXX.level.levelgen.SurfaceRules$Context$TemperatureHelperCondition",
            "XXX.level.levelgen.SurfaceRules$LazyCondition",
            "XXX.level.levelgen.SurfaceRules$LazyYCondition",
            "XXX.level.levelgen.SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition",
            "XXX.level.levelgen.SurfaceRules$NotConditionSource",
            "XXX.level.levelgen.SurfaceRules$SequenceRule",
            "XXX.level.levelgen.SurfaceRules$StateRule",
            "XXX.level.levelgen.SurfaceRules$StoneDepthCheck",
            "XXX.level.levelgen.SurfaceRules$SurfaceRule",
            "XXX.level.levelgen.SurfaceRules$TestRule",
            "XXX.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
            "XXX.level.levelgen.SurfaceRules$WaterConditionSource",
            "XXX.level.levelgen.SurfaceRules$YConditionSource",
            "XXX.level.levelgen.SurfaceSystem",
            "XXX.level.levelgen.ThreadSafeLegacyRandomSource",
            "XXX.level.levelgen.VerticalAnchor$AboveBottom",
            "XXX.level.levelgen.VerticalAnchor$BelowTop",
            "XXX.level.levelgen.WorldDimensions$1Entry",
            "XXX.level.levelgen.WorldGenSettings",
            "XXX.level.levelgen.WorldOptions",
            "XXX.level.levelgen.WorldgenRandom$Algorithm",
            "XXX.level.levelgen.XoroshiroRandomSource",
            "XXX.levelgen.blending.Blender",
            "XXX.levelgen.blending.Blender$BlendingOutput",
            "XXX.levelgen.blending.Blender$DistanceGetter",
            "XXX.levelgen.blending.BlendingData$BiomeConsumer",
            "XXX.levelgen.blending.BlendingData$HeightConsumer",
            "XXX.levelgen.blending.package-info",
            "XXX.levelgen.blockpredicates.AnyOfPredicate",
            "XXX.levelgen.blockpredicates.BlockPredicateType",
            "XXX.levelgen.blockpredicates.HasSturdyFacePredicate",
            "XXX.levelgen.blockpredicates.MatchingBlockTagPredicate",
            "XXX.levelgen.blockpredicates.MatchingFluidsPredicate",
            "XXX.levelgen.blockpredicates.ReplaceablePredicate",
            "XXX.levelgen.blockpredicates.StateTestingPredicate",
            "XXX.levelgen.blockpredicates.UnobstructedPredicate",
            "XXX.levelgen.blockpredicates.package-info",
            "XXX.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration",
            "XXX.levelgen.carver.CarverConfiguration",
            "XXX.levelgen.carver.CarvingContext",
            "XXX.levelgen.carver.CaveWorldCarver",
            "XXX.levelgen.carver.NetherWorldCarver",
            "XXX.levelgen.carver.WorldCarver$CarveSkipChecker",
            "XXX.levelgen.feature.AbstractHugeMushroomFeature",
            "XXX.levelgen.feature.BasaltColumnsFeature",
            "XXX.levelgen.feature.BlockBlobFeature",
            "XXX.levelgen.feature.BlockPileFeature",
            "XXX.levelgen.feature.BonusChestFeature",
            "XXX.levelgen.feature.ConfiguredFeature",
            "XXX.levelgen.feature.CoralFeature",
            "XXX.levelgen.feature.CoralTreeFeature",
            "XXX.levelgen.feature.DesertWellFeature",
            "XXX.levelgen.feature.DripstoneClusterFeature",
            "XXX.levelgen.feature.EndGatewayFeature",
            "XXX.levelgen.feature.EndPlatformFeature",
            "XXX.levelgen.feature.FallenTreeFeature",
            "XXX.feature.configurations.FallenTreeConfiguration$FallenTreeConfigurationBuilder",
            "XXX.feature.treedecorators.BeehiveDecorator",
            "XXX.feature.treedecorators.CreakingHeartDecorator",
            "XXX.feature.treedecorators.PaleMossDecorator",
            "XXX.feature.treedecorators.TreeDecorator",
            "XXX.feature.treedecorators.TreeDecoratorType",
            "XXX.feature.treedecorators.package-info",
            "XXX.feature.trunkplacers.CherryTrunkPlacer",
            "XXX.feature.trunkplacers.FancyTrunkPlacer",
            "XXX.feature.trunkplacers.ForkingTrunkPlacer",
            "XXX.feature.trunkplacers.MegaJungleTrunkPlacer",
            "XXX.feature.trunkplacers.TrunkPlacer",
            "XXX.feature.trunkplacers.UpwardsBranchingTrunkPlacer",
            "XXX.levelgen.flat.FlatLayerInfo",
            "XXX.levelgen.flat.FlatLevelGeneratorPresets",
            "XXX.levelgen.flat.FlatLevelGeneratorSettings",
            "XXX.levelgen.heightproviders.BiasedToBottomHeight",
            "XXX.levelgen.heightproviders.HeightProvider",
            "XXX.levelgen.heightproviders.TrapezoidHeight",
            "XXX.levelgen.heightproviders.VeryBiasedToBottomHeight",
            "XXX.levelgen.heightproviders.package-info",
            "XXX.levelgen.material.WorldGenMaterialRule",
            "XXX.level.levelgen.package-info",
            "XXX.levelgen.placement.BlockPredicateFilter",
            "XXX.levelgen.placement.CountOnEveryLayerPlacement",
            "XXX.levelgen.placement.EnvironmentScanPlacement",
            "XXX.levelgen.placement.HeightRangePlacement",
            "XXX.levelgen.placement.InSquarePlacement",
            "XXX.levelgen.placement.NoiseThresholdCountPlacement",
            "XXX.levelgen.placement.PlacementContext",
            "XXX.levelgen.placement.PlacementModifier",
            "XXX.levelgen.placement.RandomOffsetPlacement",
            "XXX.levelgen.placement.RepeatingPlacement",
            "XXX.levelgen.placement.SurfaceWaterDepthFilter",
            "XXX.levelgen.presets.WorldPreset",
            "XXX.levelgen.presets.WorldPresets$Bootstrap",
            "XXX.levelgen.structure.BoundingBox",
            "XXX.levelgen.structure.BuiltinStructureSets",
            "XXX.levelgen.structure.LegacyStructureDataHandler",
            "XXX.levelgen.structure.PostPlacementProcessor",
            "XXX.levelgen.structure.SinglePieceStructure",
            "XXX.levelgen.structure.Structure",
            "XXX.levelgen.structure.Structure$GenerationStub",
            "XXX.levelgen.structure.Structure$StructureSettings$Builder",
            "XXX.levelgen.structure.StructureCheckResult",
            "XXX.levelgen.structure.StructurePiece",
            "XXX.levelgen.structure.StructurePiece$BlockSelector",
            "XXX.levelgen.structure.StructureSet",
            "XXX.levelgen.structure.StructureSpawnOverride",
            "XXX.levelgen.structure.StructureStart",
            "XXX.levelgen.structure.TemplateStructurePiece",
            "XXX.levelgen.structure.package-info",
            "XXX.structure.pieces.PieceGenerator$Context",
            "XXX.structure.pieces.PieceGeneratorSupplier$Context",
            "XXX.structure.pieces.StructurePieceSerializationContext",
            "XXX.structure.pieces.StructurePieceType$ContextlessType",
            "XXX.structure.pieces.StructurePiecesBuilder",
            "XXX.structure.placement.ConcentricRingsStructurePlacement",
            "XXX.structure.placement.RandomSpreadType",
            "XXX.structure.placement.StructurePlacement$ExclusionZone",
            "XXX.structure.placement.StructurePlacement$FrequencyReductionMethod",
            "XXX.structure.placement.package-info",
            "XXX.structure.pools.EmptyPoolElement",
            "XXX.structure.pools.JigsawJunction",
            "XXX.structure.pools.JigsawPlacement$PieceState",
            "XXX.structure.pools.LegacySinglePoolElement",
            "XXX.structure.pools.SinglePoolElement",
            "XXX.structure.pools.StructurePoolElementType",
            "XXX.structure.pools.StructureTemplatePool$Projection",
            "XXX.pools.alias.PoolAliasBinding",
            "XXX.pools.alias.PoolAliasLookup",
            "XXX.pools.alias.RandomPoolAlias",
            "XXX.structure.pools.package-info",
            "XXX.structure.structures.BuriedTreasurePieces$BuriedTreasurePiece",
            "XXX.structure.structures.DesertPyramidPiece",
            "XXX.structure.structures.EndCityPieces",
            "XXX.structure.structures.EndCityPieces$2",
            "XXX.structure.structures.EndCityPieces$4",
            "XXX.structure.structures.EndCityPieces$SectionGenerator",
            "XXX.structure.structures.IglooPieces",
            "XXX.structure.structures.IglooStructure",
            "XXX.structure.structures.JigsawStructure$1",
            "XXX.structure.structures.JungleTemplePiece$MossStoneSelector",
            "XXX.structure.structures.MineshaftPieces",
            "XXX.structure.structures.MineshaftPieces$MineShaftCorridor",
            "XXX.structure.structures.MineshaftPieces$MineShaftPiece",
            "XXX.structure.structures.MineshaftPieces$MineShaftStairs",
            "XXX.structure.structures.MineshaftStructure$Type",
            "XXX.structure.structures.NetherFortressPieces$1",
            "XXX.structure.structures.NetherFortressPieces$BridgeEndFiller",
            "XXX.structure.structures.NetherFortressPieces$CastleCorridorStairsPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleEntrance",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorLeftTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$CastleSmallCorridorRightTurnPiece",
            "XXX.structure.structures.NetherFortressPieces$MonsterThrone",
            "XXX.structure.structures.NetherFortressPieces$PieceWeight",
            "XXX.structure.structures.NetherFortressPieces$StairsRoom",
            "XXX.structure.structures.NetherFortressStructure",
            "XXX.structure.structures.NetherFossilPieces$NetherFossilPiece",
            "XXX.structure.structures.OceanMonumentPieces",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$FitSimpleTopRoom",
            "XXX.structure.structures.OceanMonumentPieces$MonumentRoomFitter",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleXRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleYRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentDoubleZRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentPenthouse",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentSimpleRoom",
            "XXX.structure.structures.OceanMonumentPieces$OceanMonumentWingRoom",
            "XXX.structure.structures.OceanMonumentStructure",
            "XXX.structure.structures.OceanRuinPieces$1",
            "XXX.structure.structures.OceanRuinStructure",
            "XXX.structure.structures.RuinedPortalPiece",
            "XXX.structure.structures.RuinedPortalPiece$VerticalPlacement",
            "XXX.structure.structures.RuinedPortalStructure$Setup",
            "XXX.structure.structures.ShipwreckPieces$ShipwreckPiece",
            "XXX.structure.structures.StrongholdPieces",
            "XXX.structure.structures.StrongholdPieces$2",
            "XXX.structure.structures.StrongholdPieces$ChestCorridor",
            "XXX.structure.structures.StrongholdPieces$FiveCrossing",
            "XXX.structure.structures.StrongholdPieces$Library",
            "XXX.structure.structures.StrongholdPieces$PortalRoom",
            "XXX.structure.structures.StrongholdPieces$RightTurn",
            "XXX.structure.structures.StrongholdPieces$SmoothStoneSelector",
            "XXX.structure.structures.StrongholdPieces$StartPiece",
            "XXX.structure.structures.StrongholdPieces$StraightStairsDown",
            "XXX.structure.structures.StrongholdPieces$StrongholdPiece$SmallDoorType",
            "XXX.structure.structures.StrongholdStructure",
            "XXX.structure.structures.SwampHutStructure",
            "XXX.structure.structures.WoodlandMansionPieces$FirstFloorRoomCollection",
            "XXX.structure.structures.WoodlandMansionPieces$MansionGrid",
            "XXX.structure.structures.WoodlandMansionPieces$PlacementData",
            "XXX.structure.structures.WoodlandMansionPieces$SimpleGrid",
            "XXX.structure.structures.WoodlandMansionPieces$WoodlandMansionPiece",
            "XXX.structure.structures.package-info",
            "XXX.structure.templatesystem.AxisAlignedLinearPosTest",
            "XXX.structure.templatesystem.BlockAgeProcessor",
            "XXX.structure.templatesystem.BlockMatchTest",
            "XXX.structure.templatesystem.BlockStateMatchTest",
            "XXX.structure.templatesystem.GravityProcessor",
            "XXX.structure.templatesystem.LavaSubmergedBlockProcessor",
            "XXX.structure.templatesystem.LiquidSettings",
            "XXX.structure.templatesystem.PosAlwaysTrueTest",
            "XXX.structure.templatesystem.PosRuleTestType",
            "XXX.structure.templatesystem.ProtectedBlockProcessor",
            "XXX.structure.templatesystem.RandomBlockStateMatchTest",
            "XXX.structure.templatesystem.RuleTest",
            "XXX.structure.templatesystem.StructurePlaceSettings",
            "XXX.structure.templatesystem.StructureProcessorList",
            "XXX.structure.templatesystem.StructureTemplate",
            "XXX.structure.templatesystem.StructureTemplate$JigsawBlockInfo",
            "XXX.structure.templatesystem.StructureTemplate$SimplePalette",
            "XXX.structure.templatesystem.StructureTemplate$StructureEntityInfo",
            "XXX.structure.templatesystem.StructureTemplateManager$InputStreamOpener",
            "XXX.structure.templatesystem.TagMatchTest",
            "XXX.rule.blockentity.AppendLoot",
            "XXX.rule.blockentity.Clear",
            "XXX.rule.blockentity.RuleBlockEntityModifier",
            "XXX.rule.blockentity.package-info",
            "XXX.levelgen.synth.ImprovedNoise",
            "XXX.levelgen.synth.NormalNoise",
            "XXX.levelgen.synth.PerlinNoise",
            "XXX.levelgen.synth.SimplexNoise",
            "XXX.level.lighting.BlockLightEngine",
            "XXX.level.lighting.BlockLightSectionStorage$BlockDataLayerStorageMap",
            "XXX.level.lighting.DataLayerStorageMap",
            "XXX.level.lighting.DynamicGraphMinFixedPoint$1",
            "XXX.level.lighting.LayerLightEventListener$DummyLightLayerEventListener",
            "XXX.level.lighting.LayerLightSectionStorage$SectionState",
            "XXX.level.lighting.LevelLightEngine",
            "XXX.level.lighting.LeveledPriorityQueue$1",
            "XXX.level.lighting.LightEngine$QueueEntry",
            "XXX.level.lighting.SkyLightEngine",
            "XXX.level.lighting.SkyLightSectionStorage",
            "XXX.level.lighting.SpatialLongSet",
            "XXX.level.lighting.package-info",
            "XXX.level.material.FlowingFluid",
            "XXX.level.material.FlowingFluid$BlockStatePairKey",
            "XXX.level.material.Fluid",
            "XXX.level.material.Fluids",
            "XXX.level.material.LavaFluid",
            "XXX.level.material.LavaFluid$Source",
            "XXX.level.material.MapColor$Brightness",
            "XXX.level.material.WaterFluid",
            "XXX.level.material.WaterFluid$Source",
            "XXX.world.level.package-info",
            "XXX.level.pathfinder.BinaryHeap",
            "XXX.level.pathfinder.Node",
            "XXX.level.pathfinder.Path",
            "XXX.level.pathfinder.PathComputationType",
            "XXX.level.pathfinder.PathType",
            "XXX.level.pathfinder.PathfindingContext",
            "XXX.level.pathfinder.Target",
            "XXX.level.pathfinder.WalkNodeEvaluator$1",
            "XXX.level.portal.PortalForcer",
            "XXX.level.portal.TeleportTransition",
            "XXX.level.portal.package-info",
            "XXX.level.redstone.CollectingNeighborUpdater$FullNeighborUpdate",
            "XXX.level.redstone.CollectingNeighborUpdater$NeighborUpdates",
            "XXX.level.redstone.CollectingNeighborUpdater$SimpleNeighborUpdate",
            "XXX.level.redstone.ExperimentalRedstoneUtils",
            "XXX.level.redstone.InstantNeighborUpdater",
            "XXX.level.redstone.Orientation",
            "XXX.level.redstone.Redstone",
            "XXX.level.redstone.package-info",
            "XXX.level.saveddata.SavedData$Context",
            "XXX.saveddata.maps.MapBanner",
            "XXX.saveddata.maps.MapDecoration",
            "XXX.saveddata.maps.MapDecorationTypes",
            "XXX.saveddata.maps.MapId",
            "XXX.saveddata.maps.MapItemSavedData",
            "XXX.saveddata.maps.MapItemSavedData$MapDecorationLocation",
            "XXX.saveddata.maps.package-info",
            "XXX.level.storage.CommandStorage",
            "XXX.level.storage.DataVersion",
            "XXX.level.storage.DimensionDataStorage",
            "XXX.level.storage.LevelData",
            "XXX.level.storage.LevelResource",
            "XXX.level.storage.LevelStorageSource",
            "XXX.level.storage.LevelStorageSource$LevelDirectory",
            "XXX.level.storage.LevelStorageSource$LevelStorageAccess$1",
            "XXX.level.storage.LevelSummary",
            "XXX.level.storage.LevelSummary$CorruptedLevelSummary",
            "XXX.level.storage.LevelVersion",
            "XXX.level.storage.PrimaryLevelData",
            "XXX.level.storage.ServerLevelData",
            "XXX.level.storage.WritableLevelData",
            "XXX.storage.loot.ContainerComponentManipulator",
            "XXX.storage.loot.ContainerComponentManipulators$1",
            "XXX.storage.loot.ContainerComponentManipulators$3",
            "XXX.storage.loot.IntRange$IntChecker",
            "XXX.storage.loot.LootContext",
            "XXX.storage.loot.LootContext$EntityTarget",
            "XXX.storage.loot.LootContextUser",
            "XXX.storage.loot.LootDataType$Validator",
            "XXX.storage.loot.LootParams$Builder",
            "XXX.storage.loot.LootPool",
            "XXX.storage.loot.LootTable",
            "XXX.storage.loot.ValidationContext",
            "XXX.loot.entries.AlternativesEntry$Builder",
            "XXX.loot.entries.CompositeEntryBase",
            "XXX.loot.entries.DynamicLoot",
            "XXX.loot.entries.EntryGroup",
            "XXX.loot.entries.LootItem",
            "XXX.loot.entries.LootPoolEntry",
            "XXX.loot.entries.LootPoolEntryContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer",
            "XXX.loot.entries.LootPoolSingletonContainer$Builder",
            "XXX.loot.entries.LootPoolSingletonContainer$EntryBase",
            "XXX.loot.entries.NestedLootTable",
            "XXX.loot.entries.SequentialEntry$Builder",
            "XXX.loot.entries.TagEntry$1",
            "XXX.loot.functions.ApplyBonusCount",
            "XXX.loot.functions.ApplyBonusCount$Formula",
            "XXX.loot.functions.ApplyBonusCount$OreDrops",
            "XXX.loot.functions.ApplyExplosionDecay",
            "XXX.loot.functions.CopyBlockState$Builder",
            "XXX.loot.functions.CopyComponentsFunction$Builder",
            "XXX.loot.functions.CopyCustomDataFunction",
            "XXX.loot.functions.CopyCustomDataFunction$CopyOperation",
            "XXX.loot.functions.CopyCustomDataFunction$MergeStrategy$1",
            "XXX.loot.functions.CopyCustomDataFunction$MergeStrategy$3",
            "XXX.loot.functions.CopyNameFunction$NameSource",
            "XXX.loot.functions.EnchantRandomlyFunction$Builder",
            "XXX.loot.functions.EnchantWithLevelsFunction$Builder",
            "XXX.loot.functions.EnchantedCountIncreaseFunction$Builder",
            "XXX.loot.functions.ExplorationMapFunction$Builder",
            "XXX.loot.functions.FilteredFunction",
            "XXX.loot.functions.FunctionUserBuilder",
            "XXX.loot.functions.ListOperation",
            "XXX.loot.functions.ListOperation$Insert",
            "XXX.loot.functions.ListOperation$ReplaceSection",
            "XXX.loot.functions.ListOperation$Type",
            "XXX.loot.functions.LootItemConditionalFunction$Builder",
            "XXX.loot.functions.LootItemFunction",
            "XXX.loot.functions.LootItemFunctionType",
            "XXX.loot.functions.ModifyContainerContents",
            "XXX.loot.functions.SetAttributesFunction",
            "XXX.loot.functions.SetAttributesFunction$Modifier",
            "XXX.loot.functions.SetBannerPatternFunction",
            "XXX.loot.functions.SetBookCoverFunction",
            "XXX.loot.functions.SetContainerContents",
            "XXX.loot.functions.SetContainerLootTable",
            "XXX.loot.functions.SetCustomModelDataFunction",
            "XXX.loot.functions.SetEnchantmentsFunction$Builder",
            "XXX.loot.functions.SetFireworksFunction",
            "XXX.loot.functions.SetItemCountFunction",
            "XXX.loot.functions.SetItemFunction",
            "XXX.loot.functions.SetLoreFunction$Builder",
            "XXX.loot.functions.SetNameFunction$Target",
            "XXX.loot.functions.SetPotionFunction",
            "XXX.loot.functions.SetStewEffectFunction$Builder",
            "XXX.loot.functions.SetWritableBookPagesFunction",
            "XXX.loot.functions.SmeltItemFunction",
            "XXX.loot.functions.package-info",
            "XXX.loot.parameters.LootContextParamSets",
            "XXX.loot.parameters.package-info",
            "XXX.loot.predicates.AllOfCondition$Builder",
            "XXX.loot.predicates.AnyOfCondition$Builder",
            "XXX.loot.predicates.CompositeLootItemCondition",
            "XXX.loot.predicates.ConditionReference",
            "XXX.loot.predicates.DamageSourceCondition",
            "XXX.loot.predicates.EntityHasScoreCondition",
            "XXX.loot.predicates.ExplosionCondition",
            "XXX.loot.predicates.LocationCheck",
            "XXX.loot.predicates.LootItemBlockStatePropertyCondition$Builder",
            "XXX.loot.predicates.LootItemCondition$Builder",
            "XXX.loot.predicates.LootItemConditions",
            "XXX.loot.predicates.LootItemKilledByPlayerCondition",
            "XXX.loot.predicates.LootItemRandomChanceWithEnchantedBonusCondition",
            "XXX.loot.predicates.TimeCheck",
            "XXX.loot.predicates.ValueCheckCondition",
            "XXX.loot.predicates.WeatherCheck$Builder",
            "XXX.providers.nbt.ContextNbtProvider",
            "XXX.providers.nbt.ContextNbtProvider$2",
            "XXX.providers.nbt.LootNbtProviderType",
            "XXX.providers.nbt.NbtProviders",
            "XXX.providers.nbt.package-info",
            "XXX.providers.number.ConstantValue",
            "XXX.providers.number.LootNumberProviderType",
            "XXX.providers.number.NumberProviders",
            "XXX.providers.number.StorageValue",
            "XXX.providers.number.package-info",
            "XXX.providers.score.FixedScoreboardNameProvider",
            "XXX.providers.score.ScoreboardNameProvider",
            "XXX.providers.score.package-info",
            "XXX.level.timers.FunctionCallback",
            "XXX.level.timers.TimerCallback",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.package-info",
            "XXX.level.validation.DirectoryValidator",
            "XXX.level.validation.ForbiddenSymlinkInfo",
            "XXX.level.validation.PathAllowList$ConfigEntry",
            "XXX.level.validation.package-info",
            "XXX.world.phys.AABB",
            "XXX.world.phys.BlockHitResult",
            "XXX.world.phys.HitResult",
            "XXX.world.phys.Vec2",
            "XXX.world.phys.Vec3$1",
            "XXX.phys.shapes.ArrayVoxelShape",
            "XXX.phys.shapes.BitSetDiscreteVoxelShape",
            "XXX.phys.shapes.CollisionContext",
            "XXX.phys.shapes.CubeVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape",
            "XXX.phys.shapes.DiscreteVoxelShape$IntLineConsumer",
            "XXX.phys.shapes.EntityCollisionContext$1",
            "XXX.phys.shapes.IndexMerger",
            "XXX.phys.shapes.IndirectMerger",
            "XXX.phys.shapes.MinecartCollisionContext$1",
            "XXX.phys.shapes.OffsetDoubleList",
            "XXX.phys.shapes.Shapes$DoubleLineConsumer",
            "XXX.phys.shapes.SubShape",
            "XXX.phys.shapes.package-info",
            "XXX.world.scores.DisplaySlot$1",
            "XXX.world.scores.Objective$Packed",
            "XXX.world.scores.PlayerScores",
            "XXX.world.scores.PlayerTeam$Packed",
            "XXX.world.scores.Score",
            "XXX.world.scores.ScoreHolder",
            "XXX.world.scores.ScoreHolder$2",
            "XXX.world.scores.Scoreboard",
            "XXX.world.scores.Scoreboard$PackedScore",
            "XXX.world.scores.ScoreboardSaveData$Packed",
            "XXX.world.scores.Team$CollisionRule",
            "XXX.scores.criteria.ObjectiveCriteria",
            "XXX.scores.criteria.package-info",
            "XXX.world.ticks.BlackholeTickAccess",
            "XXX.world.ticks.BlackholeTickAccess$2",
            "XXX.world.ticks.ContainerSingleItem$BlockContainerSingleItem",
            "XXX.world.ticks.LevelTickAccess",
            "XXX.world.ticks.LevelTicks$PosAndContainerConsumer",
            "XXX.world.ticks.SavedTick",
            "XXX.world.ticks.ScheduledTick",
            "XXX.world.ticks.SerializableTickContainer",
            "XXX.world.ticks.TickContainerAccess",
            "XXX.world.ticks.WorldGenTickAccess"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.blaze3d.pipeline.BlendFunction \u001b[2;32m+6M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.blaze3d.pipeline.RenderPipeline$Builder \u001b[2;32m+5M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.blaze3d.pipeline.RenderPipeline$UniformDescription \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.blaze3d.platform.GLX \u001b[2;31m-2M\u001b[0m",
          "XXX.blaze3d.platform.TextureUtil \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.blaze3d.systems.RenderSystem \u001b[2;32m+6M\u001b[0m \u001b[2;31m-39M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.blaze3d.systems.RenderSystem$AutoStorageIndexBuffer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.minecraft.client.Minecraft \u001b[2;32m+48M\u001b[0m \u001b[2;31m-47M\u001b[0m",
          "XXX.data.models.BlockModelGenerators \u001b[2;32m+77M\u001b[0m \u001b[2;31m-76M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.models.blockstates.MultiVariantGenerator \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.models.blockstates.MultiVariantGenerator$Entry \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.client.renderer.GameRenderer \u001b[2;32m+10M\u001b[0m \u001b[2;31m-8M\u001b[0m",
          "XXX.client.renderer.LevelRenderer \u001b[2;32m+7M\u001b[0m \u001b[2;31m-6M\u001b[0m",
          "XXX.client.renderer.PostChainConfig$Uniform \u001b[2;32m+1M\u001b[0m",
          "XXX.client.renderer.PostPass$Input \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.client.renderer.PostPass$TextureInput \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.renderer.RenderStateShard \u001b[2;32m+7M\u001b[0m \u001b[2;31m-20M\u001b[0m | \u001b[2;31m-4P\u001b[0m",
          "XXX.client.renderer.RenderStateShard$OutputStateShard \u001b[2;32m+4M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.client.renderer.RenderType \u001b[2;31m-13M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-11P\u001b[0m",
          "XXX.client.renderer.RenderType$CompositeState \u001b[2;32m+1P\u001b[0m",
          "XXX.renderer.block.BlockRenderDispatcher \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.block.model.BlockStateModel \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.block.model.Variant \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.block.model.VariantMutator \u001b[2;31m-1P\u001b[0m",
          "XXX.resources.model.ModelBakery$MissingModels$1 \u001b[2;32m+1M\u001b[0m",
          "XXX.resources.model.ModelGroupCollector \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.CompoundTag \u001b[2;32m+30M\u001b[0m \u001b[2;31m-26M\u001b[0m",
          "XXX.minecraft.nbt.DoubleTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.EndTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.FloatTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.IntTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.ListTag \u001b[2;32m+29M\u001b[0m \u001b[2;31m-13M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.minecraft.nbt.LongTag$1 \u001b[2;31m-1M\u001b[0m",
          "XXX.minecraft.nbt.NumericTag \u001b[2;32m+8M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+7P\u001b[0m \u001b[2;31m-7P\u001b[0m",
          "XXX.parsing.packrat.Dictionary \u001b[2;32m+11M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.parsing.packrat.ErrorCollector$LongestOnly \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.packrat.commands.ResourceLocationParseRule \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.packrat.commands.StringReaderTerms \u001b[2;32m+2M\u001b[0m",
          "XXX.packrat.commands.StringReaderTerms$TerminalWord \u001b[2;32m+1M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+2P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.pipeline.BlendFunction",
        "differences": {
          "added": [
            "void <init>(GlStateManager$SourceFactor,GlStateManager$DestFactor)",
            "void <init>(GlStateManager$SourceFactor,GlStateManager$DestFactor,GlStateManager$SourceFactor,GlStateManager$DestFactor)",
            "void apply()",
            "GlStateManager$SourceFactor sourceColor()",
            "GlStateManager$DestFactor destColor()",
            "GlStateManager$SourceFactor sourceAlpha()",
            "GlStateManager$DestFactor destAlpha()"
          ],
          "removed": [
            "void <init>(SourceFactor,DestFactor)",
            "void <init>(SourceFactor,DestFactor,SourceFactor,DestFactor)",
            "SourceFactor sourceColor()",
            "DestFactor destColor()",
            "SourceFactor sourceAlpha()",
            "DestFactor destAlpha()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.pipeline.RenderPipeline$Builder",
        "differences": {
          "added": [
            "RenderPipeline$Builder withUniform(String,Uniform$Type)",
            "RenderPipeline$Builder withDepthTestFunction(DepthTestFunction)",
            "RenderPipeline$Builder withColorLogic(GlStateManager$LogicOp)"
          ],
          "removed": [
            "RenderPipeline$Builder withUniform(String,UniformType)",
            "RenderPipeline$Builder withDepthTestFunction(DepthTestFunction)",
            "RenderPipeline$Builder withPolygonMode(PolygonMode)",
            "RenderPipeline$Builder withColorLogic(LogicOp)",
            "RenderPipeline$Builder withDepthBias(float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.pipeline.RenderPipeline$UniformDescription",
        "differences": {
          "added": [
            "void <init>(String,Uniform$Type)",
            "Uniform$Type type()"
          ],
          "removed": [
            "void <init>(String,UniformType)",
            "UniformType type()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.GLX",
        "differences": {
          "added": [
            "String getOpenGLVersionString()",
            "void _init(int,boolean)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.TextureUtil",
        "differences": {
          "added": [
            "void lambda$writeAsPNG$1(AtomicInteger,int,Runnable)",
            "void lambda$writeAsPNG$0(GpuBuffer,int,GpuTexture,IntUnaryOperator,Path,String)"
          ],
          "removed": [
            "void lambda$writeAsPNG$2(AtomicInteger,int,Runnable)",
            "void lambda$writeAsPNG$1(CommandEncoder,GpuBuffer,int,GpuTexture,IntUnaryOperator,Path,String)",
            "String lambda$writeAsPNG$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.systems.RenderSystem",
        "differences": {
          "added": [
            "void disableDepthTest()",
            "void enableDepthTest()",
            "void depthFunc(int)",
            "void depthMask(boolean)",
            "void enableBlend()",
            "void disableBlend()",
            "void blendFuncSeparate(GlStateManager$SourceFactor,GlStateManager$DestFactor,GlStateManager$SourceFactor,GlStateManager$DestFactor)",
            "void enableCull()",
            "void disableCull()",
            "void polygonMode(int,int)",
            "void enablePolygonOffset()",
            "void disablePolygonOffset()",
            "void polygonOffset(float,float)",
            "void enableColorLogicOp()",
            "void disableColorLogicOp()",
            "void logicOp(GlStateManager$LogicOp)",
            "void bindTexture(int)",
            "void viewport(int,int,int,int)",
            "void colorMask(boolean,boolean,boolean,boolean)",
            "void clearColor(float,float,float,float)",
            "void clear(int)",
            "void setupShaderLights(CompiledShaderProgram)",
            "void drawElements(int,int,int)",
            "void getString(int,Consumer)",
            "void initRenderer(int,boolean)",
            "void setupDefaultState(int,int,int,int)",
            "int maxSupportedTextureSize()",
            "void glDeleteVertexArrays(int)",
            "void glUniform1i(int,int)",
            "void glUniform1(int,IntBuffer)",
            "void glUniform3(int,IntBuffer)",
            "void glUniform1(int,FloatBuffer)",
            "void glUniform2(int,FloatBuffer)",
            "void glUniform3(int,FloatBuffer)",
            "void glUniform4(int,FloatBuffer)",
            "void glUniformMatrix4(int,FloatBuffer)",
            "void defaultBlendFunc()",
            "void setShaderTexture(int,ResourceLocation)",
            "VertexBuffer getQuadVertices()"
          ],
          "removed": [
            "Vector3f[] getShaderLights()",
            "void initRenderer(long,int,boolean,BiFunction,boolean)",
            "void setupDefaultState()",
            "GpuBuffer getQuadVertexBuffer(Supplier)",
            "GpuDevice getDevice()",
            "GpuDevice tryGetDevice()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.systems.RenderSystem$AutoStorageIndexBuffer",
        "differences": {
          "added": [
            "void bind(int)",
            "void lambda$intConsumer$0(ByteBuffer,int)"
          ],
          "removed": [
            "GpuBuffer getBuffer(int)",
            "void lambda$intConsumer$1(ByteBuffer,int)",
            "String lambda$getBuffer$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.Minecraft",
        "differences": {
          "added": [
            "Style lambda$grabPanoramixScreenshot$54(File,Style)",
            "void lambda$grabPanoramixScreenshot$53(Component)",
            "CompletionStage lambda$delayTextureReload$52(CompletableFuture)",
            "String lambda$fillSystemReport$50()",
            "String lambda$fillSystemReport$49(LanguageManager)",
            "String lambda$fillSystemReport$47(Minecraft)",
            "String lambda$fillSystemReport$45()",
            "String lambda$fillSystemReport$44(Minecraft)",
            "String lambda$fillSystemReport$43(String)",
            "String lambda$fillUptime$39()",
            "boolean lambda$setLevel$38()",
            "void lambda$doWorldLoad$37(Component)",
            "String lambda$doWorldLoad$36(WorldStem)",
            "IntegratedServer lambda$doWorldLoad$35(LevelStorageSource$LevelStorageAccess,PackRepository,WorldStem,Services,Thread)",
            "ChunkProgressListener lambda$doWorldLoad$34(int)",
            "boolean lambda$tick$33()",
            "void lambda$debugClientMetricsStart$32(Consumer,ProfileResults)",
            "void lambda$debugClientMetricsStart$31(ProfileResults)",
            "void lambda$debugClientMetricsStart$30(Consumer,CompletableFuture,CompletableFuture)",
            "void lambda$debugClientMetricsStart$29(Consumer,Path)",
            "void lambda$debugClientMetricsStart$28(SystemReport,Consumer,List)",
            "void lambda$debugClientMetricsStart$27(Consumer,Path)",
            "void lambda$debugClientMetricsStart$26(Consumer,Component)",
            "Style lambda$debugClientMetricsStart$25(Path,Style)",
            "void lambda$debugClientMetricsStart$24(Consumer,ProfileResults)",
            "void lambda$debugClientMetricsStart$23(Consumer,double,int)",
            "void lambda$runTick$22(TimerQuery)",
            "void lambda$runTick$21(CompletableFuture)",
            "void lambda$openChatScreen$20(boolean)",
            "void lambda$selfTest$19(Holder$Reference)",
            "void lambda$reloadResourcePacks$18(boolean,Minecraft$GameLoadCookie,CompletableFuture,Optional)",
            "void lambda$reloadResourcePacks$17(CompletableFuture,Minecraft$GameLoadCookie)",
            "void lambda$reloadResourcePacks$16(boolean,Minecraft$GameLoadCookie,Throwable)",
            "CrashReport lambda$delayCrashRaw$15(CrashReport)",
            "CrashReport lambda$delayCrash$14(CrashReport)",
            "void lambda$clearResourcePacksOnError$13(Component)",
            "Screen lambda$addInitialScreens$12(GameProfile,Runnable)",
            "Screen lambda$addInitialScreens$11(BanDetails,Runnable)",
            "void lambda$addInitialScreens$10(Runnable,boolean)",
            "Screen lambda$addInitialScreens$9(Runnable)",
            "void lambda$buildInitialScreens$8(Screen)",
            "void lambda$buildInitialScreens$7(Minecraft$GameLoadCookie)",
            "int lambda$new$6()",
            "void lambda$new$5(Minecraft$GameLoadCookie,Optional)",
            "void lambda$new$4(Minecraft$GameLoadCookie)",
            "void lambda$new$3(Minecraft$GameLoadCookie,Throwable)",
            "void lambda$new$2(ClientLanguage)"
          ],
          "removed": [
            "Style lambda$grabPanoramixScreenshot$55(File,Style)",
            "void lambda$grabPanoramixScreenshot$54(Component)",
            "CompletionStage lambda$delayTextureReload$53(CompletableFuture)",
            "String lambda$fillSystemReport$52()",
            "String lambda$fillSystemReport$50(LanguageManager)",
            "String lambda$fillSystemReport$49(Minecraft)",
            "String lambda$fillSystemReport$47()",
            "String lambda$fillSystemReport$45(Minecraft)",
            "String lambda$fillSystemReport$44(String)",
            "String lambda$fillUptime$43()",
            "boolean lambda$setLevel$39()",
            "void lambda$doWorldLoad$38(Component)",
            "String lambda$doWorldLoad$37(WorldStem)",
            "IntegratedServer lambda$doWorldLoad$36(LevelStorageSource$LevelStorageAccess,PackRepository,WorldStem,Services,Thread)",
            "ChunkProgressListener lambda$doWorldLoad$35(int)",
            "boolean lambda$tick$34()",
            "void lambda$debugClientMetricsStart$33(Consumer,ProfileResults)",
            "void lambda$debugClientMetricsStart$32(ProfileResults)",
            "void lambda$debugClientMetricsStart$31(Consumer,CompletableFuture,CompletableFuture)",
            "void lambda$debugClientMetricsStart$30(Consumer,Path)",
            "void lambda$debugClientMetricsStart$29(SystemReport,Consumer,List)",
            "void lambda$debugClientMetricsStart$28(Consumer,Path)",
            "void lambda$debugClientMetricsStart$27(Consumer,Component)",
            "Style lambda$debugClientMetricsStart$26(Path,Style)",
            "void lambda$debugClientMetricsStart$25(Consumer,ProfileResults)",
            "void lambda$debugClientMetricsStart$24(Consumer,double,int)",
            "void lambda$runTick$23(TimerQuery)",
            "void lambda$runTick$22(CompletableFuture)",
            "void lambda$openChatScreen$21(boolean)",
            "void lambda$selfTest$20(Holder$Reference)",
            "void lambda$reloadResourcePacks$19(boolean,Minecraft$GameLoadCookie,CompletableFuture,Optional)",
            "void lambda$reloadResourcePacks$18(CompletableFuture,Minecraft$GameLoadCookie)",
            "void lambda$reloadResourcePacks$17(boolean,Minecraft$GameLoadCookie,Throwable)",
            "CrashReport lambda$delayCrashRaw$16(CrashReport)",
            "CrashReport lambda$delayCrash$15(CrashReport)",
            "void lambda$clearResourcePacksOnError$14(Component)",
            "Screen lambda$addInitialScreens$13(GameProfile,Runnable)",
            "Screen lambda$addInitialScreens$12(BanDetails,Runnable)",
            "void lambda$addInitialScreens$11(Runnable,boolean)",
            "Screen lambda$addInitialScreens$10(Runnable)",
            "void lambda$buildInitialScreens$9(Screen)",
            "void lambda$buildInitialScreens$8(Minecraft$GameLoadCookie)",
            "int lambda$new$7()",
            "void lambda$new$6(Minecraft$GameLoadCookie,Optional)",
            "void lambda$new$5(Minecraft$GameLoadCookie)",
            "void lambda$new$4(Minecraft$GameLoadCookie,Throwable)",
            "void lambda$new$3(ClientLanguage)",
            "String lambda$new$2(ResourceLocation,ShaderType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.BlockModelGenerators",
        "differences": {
          "added": [
            "MultiVariant variant(Variant)",
            "MultiVariant variants(Variant[])",
            "MultiVariant plainVariant(ResourceLocation)",
            "MultiVariant createRotatedVariants(Variant)",
            "MultiVariant createRotatedVariants(Variant,Variant)",
            "PropertyDispatch createBooleanModelDispatch(BooleanProperty,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createButton(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createDoor(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createCustomFence(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createFence(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createWall(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createFenceGate(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,boolean)",
            "BlockModelDefinitionGenerator createStairs(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createOrientableTrapdoor(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createTrapdoor(Block,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariantGenerator createSimpleBlock(Block,MultiVariant)",
            "BlockModelDefinitionGenerator createAxisAlignedPillarBlock(Block,MultiVariant)",
            "void createAxisAlignedPillarBlockCustomModel(Block,MultiVariant)",
            "BlockModelDefinitionGenerator createRotatedPillarWithHorizontalVariant(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createPressurePlate(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createSlab(Block,MultiVariant,MultiVariant,MultiVariant)",
            "void createDoubleBlock(Block,MultiVariant,MultiVariant)",
            "MultiVariant createParticleOnlyBlockModel(Block,Block)",
            "void createSegmentedBlock(Block,IntegerProperty,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariant createBambooModels(int)",
            "PropertyDispatch createEmptyOrFullDispatch(Property,Comparable,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createCopperBulb(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariant createPointedDripstoneVariant(Direction,DripstoneThickness)",
            "MultiVariant createFloorFireModels(Block)",
            "MultiVariant createSideFireModels(Block)",
            "MultiVariant createTopFireModels(Block)",
            "void createGrassLikeBlock(Block,MultiVariant,MultiVariant)",
            "void createPistonVariant(Block,MultiVariant,TextureMapping)",
            "void lambda$run$49(BlockFamily)",
            "MultiVariant lambda$createRespawnAnchor$48(ResourceLocation[],Integer)",
            "ResourceLocation lambda$addBookSlotModel$47(ModelTemplate,String,TextureMapping,BlockModelGenerators$BookSlotModelCacheKey)",
            "void lambda$addSlotStateAndRotationVariants$46(MultiPartGenerator,Condition,VariantMutator,Pair)",
            "void lambda$createChiseledBookshelf$45(MultiPartGenerator,MultiVariant,Pair)",
            "MultiVariant lambda$createSculkCatalyst$44(MultiVariant,MultiVariant,Boolean)",
            "MultiVariant lambda$createHangingMoss$43(Block,Boolean)",
            "void lambda$createMossyCarpet$42(MultiPartGenerator,MultiVariant,MultiVariant,ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMossyCarpet$40(Block,TextureMapping)",
            "void lambda$createMossyCarpet$39(ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMultifaceBlockStates$38(MultiPartGenerator,MultiVariant,ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMultifaceBlockStates$37(ConditionBuilder,Property,VariantMutator)",
            "void lambda$selectMultifaceProperties$36(Function,StateHolder,ImmutableMap$Builder,Direction,VariantMutator)",
            "MultiVariant lambda$createSnifferEgg$35(Integer)",
            "MultiVariant lambda$createTurtleEgg$34(Integer,Integer)",
            "MultiVariant lambda$createTripwireHook$33(Boolean,Boolean)",
            "MultiVariant lambda$createSweetBerryBush$32(Integer)",
            "MultiVariant lambda$createTestBlock$31(Map,TestBlockMode)",
            "MultiVariant lambda$createStructureBlock$30(StructureMode)",
            "MultiVariant lambda$createSnowBlocks$29(MultiVariant,Integer)",
            "MultiVariant lambda$createRepeater$28(Integer,Boolean,Boolean)",
            "MultiVariant lambda$createCalibratedSculkSensor$27(MultiVariant,MultiVariant,SculkSensorPhase)",
            "MultiVariant lambda$createSculkSensor$26(MultiVariant,MultiVariant,SculkSensorPhase)",
            "MultiVariant lambda$createVault$25(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,VaultState,Boolean)",
            "MultiVariant lambda$createTrialSpawner$24(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,TrialSpawnerState,Boolean)",
            "void lambda$createGrassBlocks$22(ResourceLocation,TextureMapping)",
            "MultiVariant lambda$createMangrovePropagule$21(Block,MultiVariant,Boolean,Integer)",
            "MultiVariant lambda$createCopperBulb$20(MultiVariant,MultiVariant,MultiVariant,MultiVariant,Boolean,Boolean)",
            "TextureMapping lambda$createChorusFlower$19(TextureMapping,ResourceLocation)",
            "void lambda$createFurnace$18(ResourceLocation,TextureMapping)",
            "MultiVariant lambda$createCropBlock$17(int[],Int2ObjectMap,Block,Integer)",
            "ResourceLocation lambda$createCropBlock$16(Block,int)",
            "MultiVariant lambda$createEmptyOrFullDispatch$15(Comparable,MultiVariant,MultiVariant,Comparable)",
            "void lambda$createBarrel$14(ResourceLocation,TextureMapping)",
            "Variant lambda$createBambooModels$13(String,int)",
            "TextureMapping lambda$createCommandBlock$12(TextureMapping,ResourceLocation)",
            "MultiVariant lambda$createActiveRail$11(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,Boolean,RailShape)",
            "MultiVariant lambda$createPitcherCrop$10(Block,Integer,DoubleBlockHalf)",
            "MultiVariant lambda$createStems$9(Block,TextureMapping,Integer)",
            "MultiVariant lambda$createCrossBlock$8(int[],Block,BlockModelGenerators$PlantType,Integer)",
            "void lambda$createCreakingHeartModel$7(Block,String,TextureMapping)",
            "MultiVariant lambda$createBrushableBlock$6(Block,Integer)",
            "void lambda$static$1(TextureMapping)"
          ],
          "removed": [
            "MultiVariant variant(Variant)",
            "MultiVariant variants(Variant[])",
            "MultiVariant plainVariant(ResourceLocation)",
            "MultiVariant createRotatedVariants(Variant)",
            "MultiVariant createRotatedVariants(Variant,Variant)",
            "PropertyDispatch createBooleanModelDispatch(BooleanProperty,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createButton(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createDoor(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createCustomFence(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createFence(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createWall(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createFenceGate(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant,boolean)",
            "BlockModelDefinitionGenerator createStairs(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createOrientableTrapdoor(Block,MultiVariant,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createTrapdoor(Block,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariantGenerator createSimpleBlock(Block,MultiVariant)",
            "BlockModelDefinitionGenerator createAxisAlignedPillarBlock(Block,MultiVariant)",
            "void createAxisAlignedPillarBlockCustomModel(Block,MultiVariant)",
            "BlockModelDefinitionGenerator createRotatedPillarWithHorizontalVariant(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createPressurePlate(Block,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createSlab(Block,MultiVariant,MultiVariant,MultiVariant)",
            "void createDoubleBlock(Block,MultiVariant,MultiVariant)",
            "MultiVariant createParticleOnlyBlockModel(Block,Block)",
            "void createSegmentedBlock(Block,IntegerProperty,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariant createBambooModels(int)",
            "PropertyDispatch createEmptyOrFullDispatch(Property,Comparable,MultiVariant,MultiVariant)",
            "BlockModelDefinitionGenerator createCopperBulb(Block,MultiVariant,MultiVariant,MultiVariant,MultiVariant)",
            "MultiVariant createPointedDripstoneVariant(Direction,DripstoneThickness)",
            "MultiVariant createFloorFireModels(Block)",
            "MultiVariant createSideFireModels(Block)",
            "MultiVariant createTopFireModels(Block)",
            "void createGrassLikeBlock(Block,MultiVariant,MultiVariant)",
            "void createPistonVariant(Block,MultiVariant,TextureMapping)",
            "void lambda$run$50(BlockFamily)",
            "MultiVariant lambda$createRespawnAnchor$49(ResourceLocation[],Integer)",
            "ResourceLocation lambda$addBookSlotModel$48(ModelTemplate,String,TextureMapping,BlockModelGenerators$BookSlotModelCacheKey)",
            "void lambda$addSlotStateAndRotationVariants$47(MultiPartGenerator,Condition,VariantMutator,Pair)",
            "void lambda$createChiseledBookshelf$46(MultiPartGenerator,MultiVariant,Pair)",
            "MultiVariant lambda$createSculkCatalyst$45(MultiVariant,MultiVariant,Boolean)",
            "MultiVariant lambda$createHangingMoss$44(Block,Boolean)",
            "void lambda$createMossyCarpet$43(MultiPartGenerator,MultiVariant,MultiVariant,ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMossyCarpet$42(Block,TextureMapping)",
            "void lambda$createMossyCarpet$40(ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMultifaceBlockStates$39(MultiPartGenerator,MultiVariant,ConditionBuilder,Property,VariantMutator)",
            "void lambda$createMultifaceBlockStates$38(ConditionBuilder,Property,VariantMutator)",
            "void lambda$selectMultifaceProperties$37(Function,StateHolder,ImmutableMap$Builder,Direction,VariantMutator)",
            "MultiVariant lambda$createSnifferEgg$36(Integer)",
            "MultiVariant lambda$createTurtleEgg$35(Integer,Integer)",
            "MultiVariant lambda$createTripwireHook$34(Boolean,Boolean)",
            "MultiVariant lambda$createSweetBerryBush$33(Integer)",
            "MultiVariant lambda$createTestBlock$32(Map,TestBlockMode)",
            "MultiVariant lambda$createStructureBlock$31(StructureMode)",
            "MultiVariant lambda$createSnowBlocks$30(MultiVariant,Integer)",
            "MultiVariant lambda$createRepeater$29(Integer,Boolean,Boolean)",
            "MultiVariant lambda$createCalibratedSculkSensor$28(MultiVariant,MultiVariant,SculkSensorPhase)",
            "MultiVariant lambda$createSculkSensor$27(MultiVariant,MultiVariant,SculkSensorPhase)",
            "MultiVariant lambda$createVault$26(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,VaultState,Boolean)",
            "MultiVariant lambda$createTrialSpawner$25(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,TrialSpawnerState,Boolean)",
            "void lambda$createGrassBlocks$24(ResourceLocation,TextureMapping)",
            "MultiVariant lambda$createMangrovePropagule$22(Block,MultiVariant,Boolean,Integer)",
            "MultiVariant lambda$createCopperBulb$21(MultiVariant,MultiVariant,MultiVariant,MultiVariant,Boolean,Boolean)",
            "TextureMapping lambda$createChorusFlower$20(TextureMapping,ResourceLocation)",
            "void lambda$createFurnace$19(ResourceLocation,TextureMapping)",
            "MultiVariant lambda$createCropBlock$18(int[],Int2ObjectMap,Block,Integer)",
            "ResourceLocation lambda$createCropBlock$17(Block,int)",
            "MultiVariant lambda$createEmptyOrFullDispatch$16(Comparable,MultiVariant,MultiVariant,Comparable)",
            "void lambda$createBarrel$15(ResourceLocation,TextureMapping)",
            "Weighted lambda$createBambooModels$14(String,int)",
            "TextureMapping lambda$createCommandBlock$13(TextureMapping,ResourceLocation)",
            "MultiVariant lambda$createActiveRail$12(MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,MultiVariant,Boolean,RailShape)",
            "MultiVariant lambda$createPitcherCrop$11(Block,Integer,DoubleBlockHalf)",
            "MultiVariant lambda$createStems$10(Block,TextureMapping,Integer)",
            "MultiVariant lambda$createCrossBlock$9(int[],Block,BlockModelGenerators$PlantType,Integer)",
            "void lambda$createCreakingHeartModel$8(Block,String,TextureMapping)",
            "MultiVariant lambda$createBrushableBlock$7(Block,Integer)",
            "void lambda$static$6(TextureMapping)",
            "Weighted lambda$variants$1(Variant)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.MultiVariantGenerator",
        "differences": {
          "added": [
            "MultiVariantGenerator dispatch(Block,MultiVariant)"
          ],
          "removed": [
            "MultiVariantGenerator dispatch(Block,MultiVariant)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.MultiVariantGenerator$Entry",
        "differences": {
          "added": [
            "void <init>(PropertyValueList,MultiVariant)",
            "MultiVariant variant()"
          ],
          "removed": [
            "void <init>(PropertyValueList,MultiVariant)",
            "MultiVariant variant()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.GameRenderer",
        "differences": {
          "added": [
            "void lambda$renderItemActivationAnimation$8(PoseStack,MultiBufferSource)",
            "void lambda$takeAutoScreenshot$7(Path,NativeImage)",
            "void lambda$takeAutoScreenshot$6(NativeImage,Path)",
            "void lambda$tryTakeScreenshotIfNeeded$5(Path)",
            "String lambda$render$4()",
            "String lambda$render$2(int,int)",
            "String lambda$render$1()",
            "String lambda$render$0()"
          ],
          "removed": [
            "void lambda$renderItemActivationAnimation$10(PoseStack,MultiBufferSource)",
            "void lambda$takeAutoScreenshot$9(Path,NativeImage)",
            "void lambda$takeAutoScreenshot$8(NativeImage,Path)",
            "void lambda$tryTakeScreenshotIfNeeded$7(Path)",
            "String lambda$render$6()",
            "String lambda$render$5()",
            "String lambda$render$4(int,int)",
            "String lambda$render$2()",
            "String lambda$preloadUiShader$1(ResourceProvider,ResourceLocation,ShaderType)",
            "void lambda$processBlurEffect$0(float,RenderPass)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.LevelRenderer",
        "differences": {
          "added": [
            "SortedSet lambda$destroyBlockProgress$11(long)",
            "String lambda$addParticle$10(double,double,double)",
            "String lambda$addParticle$9(ParticleOptions)",
            "void lambda$addSkyPass$8(FogParameters,DimensionSpecialEffects$SkyType,float,DimensionSpecialEffects)",
            "void lambda$addLateDebugPass$5(FogParameters,ResourceHandle,Vec3)",
            "void lambda$addMainPass$1(FogParameters,DeltaTracker,Camera,ProfilerFiller,Matrix4f,Matrix4f,ResourceHandle,ResourceHandle,ResourceHandle,boolean,Frustum,ResourceHandle)"
          ],
          "removed": [
            "SortedSet lambda$destroyBlockProgress$12(long)",
            "String lambda$addParticle$11(double,double,double)",
            "String lambda$addParticle$10(ParticleOptions)",
            "void lambda$addSkyPass$9(FogParameters,DimensionSpecialEffects$SkyType,float,DimensionSpecialEffects)",
            "void lambda$renderSectionLayer$8(BlockPos,double,double,double,RenderPass$UniformUploader)",
            "void lambda$addLateDebugPass$5(FogParameters,Vec3)",
            "void lambda$addMainPass$1(FogParameters,DeltaTracker,Camera,ProfilerFiller,Matrix4f,Matrix4f,ResourceHandle,ResourceHandle,boolean,Frustum,ResourceHandle,ResourceHandle)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.PostChainConfig$Uniform",
        "differences": {
          "added": [],
          "removed": [
            "void setOnRenderPass(RenderPass)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.PostPass$TextureInput",
        "differences": {
          "added": [
            "void bindTo(CompiledShaderProgram,Map)"
          ],
          "removed": [
            "void bindTo(RenderPass,Map)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderStateShard",
        "differences": {
          "added": [
            "void lambda$static$31()",
            "void lambda$static$30()",
            "void lambda$static$29()",
            "void lambda$static$28()",
            "void lambda$static$27()",
            "void lambda$static$26()",
            "void lambda$static$25()",
            "void lambda$static$24()",
            "void lambda$static$23()",
            "void lambda$static$22()",
            "void lambda$static$21()",
            "void lambda$static$20()",
            "void lambda$static$19()",
            "void lambda$static$18()",
            "void lambda$static$17()",
            "void lambda$static$16()",
            "void lambda$static$15()",
            "void lambda$static$14()",
            "void lambda$static$13()",
            "void lambda$static$12()"
          ],
          "removed": [
            "String getName()",
            "RenderTarget lambda$static$17()",
            "RenderTarget lambda$static$16()",
            "RenderTarget lambda$static$15()",
            "RenderTarget lambda$static$14()",
            "RenderTarget lambda$static$13()",
            "RenderTarget lambda$static$12()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderStateShard$OutputStateShard",
        "differences": {
          "added": [
            "void <init>(String,Runnable,Runnable)"
          ],
          "removed": [
            "void <init>(String,Supplier)",
            "RenderTarget getRenderTarget()",
            "void lambda$new$1()",
            "void lambda$new$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.RenderType",
        "differences": {
          "added": [
            "RenderType$CompositeRenderType createClouds(RenderPipeline)",
            "RenderType flatClouds()",
            "RenderType clouds()",
            "RenderType cloudsDepthOnly()",
            "RenderType worldBorder()",
            "RenderType sky()",
            "RenderType endSky()",
            "RenderType stars()",
            "RenderType entityOutlineBlit()",
            "RenderType panorama(ResourceLocation)",
            "RenderType createLightmap()",
            "void draw(MeshData)",
            "RenderType lambda$static$37(ResourceLocation)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.BlockRenderDispatcher",
        "differences": {
          "added": [
            "void renderBatched(BlockState,BlockPos,BlockAndTintGetter,PoseStack,VertexConsumer,boolean,RandomSource)"
          ],
          "removed": [
            "void renderBatched(BlockState,BlockPos,BlockAndTintGetter,PoseStack,VertexConsumer,boolean,List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.BlockStateModel",
        "differences": {
          "added": [],
          "removed": [
            "List collectParts(RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.Variant",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,Variant$SimpleModelState,int)",
            "Variant withWeight(int)",
            "int weight()"
          ],
          "removed": [
            "void <init>(ResourceLocation,Variant$SimpleModelState)",
            "BlockModelPart bake(ModelBaker)",
            "void resolveDependencies(ResolvableModel$Resolver)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.model.ModelBakery$MissingModels$1",
        "differences": {
          "added": [],
          "removed": [
            "Object compute(ModelBaker$SharedOperationKey)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.model.ModelGroupCollector",
        "differences": {
          "added": [
            "void lambda$build$2(Map,BlockColors,Map,BlockState,BlockStateModel$Unbaked)"
          ],
          "removed": [
            "void lambda$build$2(Map,BlockColors,Map,BlockState,BlockStateModel$UnbakedRoot)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.CompoundTag",
        "differences": {
          "added": [
            "Set getAllKeys()",
            "void putByteArray(String,List)",
            "void putIntArray(String,List)",
            "void putLongArray(String,List)",
            "byte getTagType(String)",
            "boolean contains(String,int)",
            "byte getByte(String)",
            "short getShort(String)",
            "int getInt(String)",
            "int getIntOrDefault(String,int)",
            "long getLong(String)",
            "long getLongOrDefault(String,long)",
            "float getFloat(String)",
            "float getFloatOrDefault(String,float)",
            "double getDouble(String)",
            "String getString(String)",
            "byte[] getByteArray(String)",
            "int[] getIntArray(String)",
            "long[] getLongArray(String)",
            "CompoundTag getCompound(String)",
            "ListTag getList(String,int)",
            "boolean getBoolean(String)",
            "CrashReport createReport(String,TagType,ClassCastException)",
            "void lambda$read$5(String)",
            "void lambda$read$4(String,Tag,String)",
            "String lambda$createReport$3(String)"
          ],
          "removed": [
            "Set keySet()",
            "Collection values()",
            "void forEach(BiConsumer)",
            "Optional getOptional(String)",
            "Optional getByte(String)",
            "byte getByteOr(String,byte)",
            "Optional getShort(String)",
            "short getShortOr(String,short)",
            "Optional getInt(String)",
            "int getIntOr(String,int)",
            "Optional getLong(String)",
            "long getLongOr(String,long)",
            "Optional getFloat(String)",
            "float getFloatOr(String,float)",
            "Optional getDouble(String)",
            "double getDoubleOr(String,double)",
            "Optional getString(String)",
            "String getStringOr(String,String)",
            "Optional getByteArray(String)",
            "Optional getIntArray(String)",
            "Optional getLongArray(String)",
            "Optional getCompound(String)",
            "CompoundTag getCompoundOrEmpty(String)",
            "Optional getList(String)",
            "ListTag getListOrEmpty(String)",
            "Optional getBoolean(String)",
            "boolean getBooleanOr(String,boolean)",
            "Optional asCompound()",
            "void lambda$read$4(String)",
            "void lambda$read$3(String,Tag,String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.DoubleTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.EndTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.FloatTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.IntTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.ListTag",
        "differences": {
          "added": [
            "void <init>(List,byte)",
            "void updateTypeAfterRemove()",
            "CompoundTag getCompound(int)",
            "ListTag getList(int)",
            "short getShort(int)",
            "int getInt(int)",
            "int[] getIntArray(int)",
            "long[] getLongArray(int)",
            "double getDouble(int)",
            "float getFloat(int)",
            "String getString(int)",
            "boolean updateType(Tag)",
            "byte getElementType()"
          ],
          "removed": [
            "void <init>(List)",
            "Tag tryUnwrap(CompoundTag)",
            "boolean isWrapper(CompoundTag)",
            "Tag wrapIfNeeded(byte,Tag)",
            "CompoundTag wrapElement(Tag)",
            "byte identifyRawElementType()",
            "void addAndUnwrap(Tag)",
            "Optional getCompound(int)",
            "CompoundTag getCompoundOrEmpty(int)",
            "Optional getList(int)",
            "ListTag getListOrEmpty(int)",
            "Optional getShort(int)",
            "short getShortOr(int,short)",
            "Optional getInt(int)",
            "int getIntOr(int,int)",
            "Optional getIntArray(int)",
            "Optional getLongArray(int)",
            "Optional getDouble(int)",
            "double getDoubleOr(int,double)",
            "Optional getFloat(int)",
            "float getFloatOr(int,float)",
            "Optional getString(int)",
            "String getStringOr(int,String)",
            "Tag getNullable(int)",
            "Optional getOptional(int)",
            "Optional asList()",
            "Stream stream()",
            "Stream compoundStream()",
            "void lambda$compoundStream$0(Tag,Consumer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.LongTag$1",
        "differences": {
          "added": [
            "boolean isValue()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.nbt.NumericTag",
        "differences": {
          "added": [
            "void <init>()",
            "String toString()"
          ],
          "removed": [
            "Optional asNumber()",
            "Optional asByte()",
            "Optional asShort()",
            "Optional asInt()",
            "Optional asLong()",
            "Optional asFloat()",
            "Optional asDouble()",
            "Optional asBoolean()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.Dictionary",
        "differences": {
          "added": [
            "void put(Atom,Rule)",
            "void put(Atom,Term,Rule$RuleAction)",
            "void put(Atom,Term,Rule$SimpleRuleAction)",
            "Rule get(Atom)"
          ],
          "removed": [
            "NamedRule put(Atom,Rule)",
            "NamedRule putComplex(Atom,Term,Rule$RuleAction)",
            "NamedRule put(Atom,Term,Rule$SimpleRuleAction)",
            "void checkAllBound()",
            "NamedRule getOrThrow(Atom)",
            "NamedRule forward(Atom)",
            "Dictionary$Entry getOrCreateEntry(Atom)",
            "Term named(Atom)",
            "Term namedWithAlias(Atom,Atom)",
            "String lambda$getOrThrow$1(Atom)",
            "boolean lambda$checkAllBound$0(Map$Entry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.ErrorCollector$LongestOnly",
        "differences": {
          "added": [],
          "removed": [
            "void addErrorEntry(SuggestionSupplier,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.commands.ResourceLocationParseRule",
        "differences": {
          "added": [
            "Optional parse(ParseState)"
          ],
          "removed": [
            "ResourceLocation parse(ParseState)",
            "Object parse(ParseState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.commands.StringReaderTerms",
        "differences": {
          "added": [],
          "removed": [
            "Term characters(char,char)",
            "StringReader createReader(String,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.util.parsing.packrat.commands.StringReaderTerms$TerminalWord",
        "differences": {
          "added": [
            "int hashCode()",
            "boolean equals(Object)",
            "String value()",
            "Stream lambda$parse$0(ParseState)"
          ],
          "removed": [
            "Stream lambda$new$0(String,ParseState)"
          ]
        }
      }
    }
  ],
  "custom": [
    {
      "type": "title",
      "value": {
        "title": "datapacks.json",
        "id": "custom-datapacks-json",
        "size": 2
      }
    }
  ]
}