{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "25w35a",
        "currentLabel": "25w36a",
        "values": [
          {
            "key": "DataPack version",
            "previous": "{\"major\":85,\"minor\":0}",
            "current": "{\"major\":86,\"minor\":0}"
          },
          {
            "key": "ResourcePack version",
            "previous": "{\"major\":67,\"minor\":0}",
            "current": "{\"major\":68,\"minor\":0}"
          },
          {
            "key": "World version",
            "previous": "4542",
            "current": "4545"
          },
          {
            "key": "Protocol version",
            "previous": "1073742089",
            "current": "1073742090"
          }
        ]
      }
    }
  ],
  "registries": [
    {
      "type": "entries",
      "value": {
        "name": "entity_type",
        "differences": {
          "added": [
            "minecraft:mannequin"
          ],
          "removed": []
        }
      }
    }
  ],
  "tags": [
    {
      "type": "entries",
      "value": {
        "name": "all_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:mannequin"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "all_living_entities_without_drop.json",
        "differences": {
          "added": [
            "minecraft:mannequin"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "universal_tags/entity_type.json",
        "differences": {
          "added": [
            "minecraft:mannequin"
          ],
          "removed": []
        }
      }
    }
  ],
  "items": [
    {
      "type": "group",
      "value": {
        "title": "copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "exposed_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "oxidized_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "waxed_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "waxed_exposed_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "waxed_oxidized_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "waxed_weathered_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "group",
      "value": {
        "title": "weathered_copper_golem_statue",
        "comparisons": [
          {
            "name": "Components",
            "value": {
              "type": "table",
              "value": {
                "previousLabel": "25w35a",
                "currentLabel": "25w36a",
                "values": [
                  {
                    "key": "minecraft:block_state",
                    "previous": "/",
                    "current": "{\"copper_golem_pose\":\"standing\"}"
                  }
                ]
              }
            }
          }
        ]
      }
    }
  ],
  "translations": [
    {
      "type": "entries",
      "value": {
        "name": "Keys",
        "differences": {
          "added": [
            "commands.spectate.cannot_spectate: %s cannot be spectated",
            "entity.minecraft.mannequin: Mannequin",
            "entity.minecraft.mannequin.label: NPC",
            "key.categories.spectator: Spectator",
            "key.spectatorHotbar: Select On Hotbar",
            "manageServer.add.title: Add Server",
            "manageServer.edit.title: Edit Server Info",
            "manageServer.enterIp: Server Address",
            "manageServer.enterName: Server Name",
            "manageServer.resourcePack: Server Resource Packs",
            "manageServer.resourcePack.disabled: Disabled",
            "manageServer.resourcePack.enabled: Enabled",
            "manageServer.resourcePack.prompt: Prompt",
            "multiplayer.disconnect.banned.reason.default: Banned by an operator.",
            "multiplayer.status.anonymous_player: Anonymous Player"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "text",
      "value": {
        "title": "Changes",
        "values": [
          {
            "key": "advMode.notEnabled",
            "previous": "Command blocks are not enabled on this server",
            "current": "Command blocks are not enabled"
          },
          {
            "key": "argument.block.tag.disallowed",
            "previous": "Tags aren't allowed here, only actual blocks",
            "current": "Tags aren't allowed here; only actual blocks"
          },
          {
            "key": "argument.double.big",
            "previous": "Double must not be more than %s, found %s",
            "current": "Double must not be more than %s: found %s"
          },
          {
            "key": "argument.double.low",
            "previous": "Double must not be less than %s, found %s",
            "current": "Double must not be less than %s: found %s"
          },
          {
            "key": "argument.float.big",
            "previous": "Float must not be more than %s, found %s",
            "current": "Float must not be more than %s: found %s"
          },
          {
            "key": "argument.float.low",
            "previous": "Float must not be less than %s, found %s",
            "current": "Float must not be less than %s: found %s"
          },
          {
            "key": "argument.integer.big",
            "previous": "Integer must not be more than %s, found %s",
            "current": "Integer must not be more than %s: found %s"
          },
          {
            "key": "argument.integer.low",
            "previous": "Integer must not be less than %s, found %s",
            "current": "Integer must not be less than %s: found %s"
          },
          {
            "key": "argument.item.tag.disallowed",
            "previous": "Tags aren't allowed here, only actual items",
            "current": "Tags aren't allowed here; only actual items"
          },
          {
            "key": "argument.long.big",
            "previous": "Long must not be more than %s, found %s",
            "current": "Long must not be more than %s: found %s"
          },
          {
            "key": "argument.long.low",
            "previous": "Long must not be less than %s, found %s",
            "current": "Long must not be less than %s: found %s"
          },
          {
            "key": "argument.range.ints",
            "previous": "Only whole numbers allowed, not decimals",
            "current": "Only whole numbers allowed; not decimals"
          },
          {
            "key": "argument.time.tick_count_too_low",
            "previous": "The tick count must not be less than %s, found %s",
            "current": "The tick count must not be less than %s: found %s"
          },
          {
            "key": "arguments.swizzle.invalid",
            "previous": "Invalid swizzle, expected combination of 'x', 'y' and 'z'",
            "current": "Invalid swizzle: expected combination of 'x', 'y' and 'z'"
          },
          {
            "key": "chat.disabled.invalid_command_signature",
            "previous": "Command had unexpected or missing command argument signatures.",
            "current": "The command had unexpected or missing command argument signatures."
          },
          {
            "key": "command.unknown.command",
            "previous": "Unknown or incomplete command, see below for error",
            "current": "Unknown or incomplete command. See below for error"
          },
          {
            "key": "commands.attribute.base_value.get.success",
            "previous": "Base value of attribute %s for entity %s is %s",
            "current": "The base value of attribute %s for entity %s is %s"
          },
          {
            "key": "commands.attribute.base_value.reset.success",
            "previous": "Base value for attribute %s for entity %s reset to default %s",
            "current": "The base value for attribute %s for entity %s reset to default %s"
          },
          {
            "key": "commands.attribute.base_value.set.success",
            "previous": "Base value for attribute %s for entity %s set to %s",
            "current": "The base value for attribute %s for entity %s set to %s"
          },
          {
            "key": "commands.attribute.modifier.value.get.success",
            "previous": "Value of modifier %s on attribute %s for entity %s is %s",
            "current": "The value of modifier %s on attribute %s for entity %s is %s"
          },
          {
            "key": "commands.attribute.value.get.success",
            "previous": "Value of attribute %s for entity %s is %s",
            "current": "The value of attribute %s for entity %s is %s"
          },
          {
            "key": "commands.clone.toobig",
            "previous": "Too many blocks in the specified area (maximum %s, specified %s)",
            "current": "Too many blocks in the specified area (maximum %s, but specified %s)"
          },
          {
            "key": "commands.data.modify.expected_list",
            "previous": "Expected list, got: %s",
            "current": "Expected list; got: %s"
          },
          {
            "key": "commands.data.modify.expected_object",
            "previous": "Expected object, got: %s",
            "current": "Expected object; got: %s"
          },
          {
            "key": "commands.data.modify.expected_value",
            "previous": "Expected value, got: %s",
            "current": "Expected value; got: %s"
          },
          {
            "key": "commands.datapack.create.io_failure",
            "previous": "Can't create pack with name '%s', check logs",
            "current": "Can't create pack with name '%s'. Check logs"
          },
          {
            "key": "commands.execute.blocks.toobig",
            "previous": "Too many blocks in the specified area (maximum %s, specified %s)",
            "current": "Too many blocks in the specified area (maximum %s, but specified %s)"
          },
          {
            "key": "commands.execute.conditional.fail_count",
            "previous": "Test failed, count: %s",
            "current": "Test failed. Count: %s"
          },
          {
            "key": "commands.execute.conditional.pass_count",
            "previous": "Test passed, count: %s",
            "current": "Test passed. Count: %s"
          },
          {
            "key": "commands.fill.toobig",
            "previous": "Too many blocks in the specified area (maximum %s, specified %s)",
            "current": "Too many blocks in the specified area (maximum %s, but specified %s)"
          },
          {
            "key": "commands.fillbiome.toobig",
            "previous": "Too many blocks in the specified volume (maximum %s, specified %s)",
            "current": "Too many blocks in the specified volume (maximum %s, but specified %s)"
          },
          {
            "key": "commands.forceload.toobig",
            "previous": "Too many chunks in the specified area (maximum %s, specified %s)",
            "current": "Too many chunks in the specified area (maximum %s, but specified %s)"
          },
          {
            "key": "commands.function.error.argument_not_compound",
            "previous": "Invalid argument type: %s, expected Compound",
            "current": "Invalid argument type: %s. Expected Compound"
          },
          {
            "key": "commands.test.locate.done",
            "previous": "Finished locating, found %s structure(s)",
            "current": "Finished locating: found %s structure(s)"
          },
          {
            "key": "commands.test.locate.started",
            "previous": "Started locating test structures, this might take a while...",
            "current": "Started locating test structures. This might take a while..."
          },
          {
            "key": "commands.tick.query.percentiles",
            "previous": "Percentiles: P50: %sms P95: %sms P99: %sms, sample: %s",
            "current": "Percentiles: P50: %sms P95: %sms P99: %sms. Sample: %s"
          },
          {
            "key": "commands.tick.query.rate.sprinting",
            "previous": "Target tick rate: %s per second (ignored, reference only).\n\nAverage time per tick: %sms",
            "current": "Target tick rate: %s per second (ignored; reference only).\n\nAverage time per tick: %sms"
          },
          {
            "key": "debug.copy_location.help",
            "previous": "F3 + C = Copy location as /tp command, hold F3 + C to crash the game",
            "current": "F3 + C = Copy location as /tp command, or hold for 10 seconds to crash the game"
          },
          {
            "key": "gamerule.allowEnteringNetherUsingPortals.description",
            "previous": "Controls whether players are allowed to enter the Nether or not",
            "current": "Controls whether players are allowed to enter the Nether."
          },
          {
            "key": "gamerule.allowFireTicksAwayFromPlayer.description",
            "previous": "Controls whether or not fire and lava should be able to tick further than 8 chunks away from any player",
            "current": "Controls whether fire and lava should be able to tick further than 8 chunks away from any player."
          },
          {
            "key": "gamerule.commandModificationBlockLimit.description",
            "previous": "Number of blocks that can be changed at once by one command, such as fill or clone.",
            "current": "The number of blocks that can be changed at once by one command, such as fill or clone."
          },
          {
            "key": "gamerule.doVinesSpread.description",
            "previous": "Controls whether or not the Vines block spreads randomly to adjacent blocks. Does not affect other types of vine blocks such as Weeping Vines, Twisting Vines, etc.",
            "current": "Controls whether the Vines block spreads randomly to adjacent blocks. Does not affect other types of vine blocks such as Weeping Vines, Twisting Vines, etc."
          },
          {
            "key": "gamerule.pvp.description",
            "previous": "Controls whether players are allowed to damage other players or not",
            "current": "Controls whether players are allowed to damage other players."
          },
          {
            "key": "gamerule.spawnChunkRadius.description",
            "previous": "Amount of chunks that stay loaded around the overworld spawn position.",
            "current": "The amount of chunks that stay loaded around the overworld spawn position."
          },
          {
            "key": "gamerule.spawnMonsters.description",
            "previous": "Controls whether monsters naturally spawns or not",
            "current": "Controls whether monsters naturally spawn."
          },
          {
            "key": "inventory.hotbarInfo",
            "previous": "Save hotbar with %1$s+%2$s",
            "current": "Save hotbar with %1$s + %2$s"
          },
          {
            "key": "inventory.hotbarSaved",
            "previous": "Item hotbar saved (restore with %1$s+%2$s)",
            "current": "Item hotbar saved (restore with %1$s + %2$s)"
          },
          {
            "key": "item.op_block_warning.line2",
            "previous": "Use of this item might lead to command execution",
            "current": "Use of this item might lead to command execution."
          },
          {
            "key": "key.spectatorOutlines",
            "previous": "Highlight Players (Spectators)",
            "current": "Highlight Players"
          },
          {
            "key": "mco.configure.world.switch.slot.subtitle",
            "previous": "This world is empty, choose how to create your world",
            "current": "This world is empty. Choose how to create your world"
          },
          {
            "key": "mco.errorMessage.connectionFailure",
            "previous": "An error occurred, please try again later.",
            "current": "An error occurred. Please try again later."
          },
          {
            "key": "mco.errorMessage.realmsService.unknownCompatibility",
            "previous": "Could not check compatible version, got response: %s",
            "current": "Could not check compatible version; got response: %s"
          },
          {
            "key": "mco.snapshotRealmsPopup.message",
            "previous": "Realms are now available in Snapshots starting with Snapshot 23w41a. Every Realms subscription comes with a free Snapshot Realm that is separate from your normal Java Realm!",
            "current": "Realms is now available in Snapshots starting with Snapshot 23w41a. Every Realms subscription comes with a free Snapshot Realm that is separate from your normal Java Realm!"
          },
          {
            "key": "mco.snapshotRealmsPopup.title",
            "previous": "Realms now available in Snapshots",
            "current": "Realms is now available in Snapshots"
          },
          {
            "key": "mco.upload.close.failure",
            "previous": "Could not close your Realm, please try again later",
            "current": "Could not close your Realm. Please try again later."
          },
          {
            "key": "multiplayer.disconnect.authservers_down",
            "previous": "Authentication servers are down. Please try again later, sorry!",
            "current": "Authentication servers are down. Please try again later. Sorry!"
          },
          {
            "key": "multiplayer.disconnect.bad_chat_index",
            "previous": "Detected missed or reordered chat message from server",
            "current": "Detected a missed or reordered chat message from the server"
          },
          {
            "key": "multiplayer.disconnect.invalid_packet",
            "previous": "Server sent an invalid packet",
            "current": "The server sent an invalid packet"
          },
          {
            "key": "multiplayer.disconnect.missing_tags",
            "previous": "Incomplete set of tags received from server.\n\nPlease contact server operator.",
            "current": "Incomplete set of tags received from the server.\n\nPlease contact a server operator."
          },
          {
            "key": "multiplayer.disconnect.transfers_disabled",
            "previous": "Server does not accept transfers",
            "current": "This server does not accept transfers"
          },
          {
            "key": "multiplayer.disconnect.unsigned_chat",
            "previous": "Received chat packet with missing or invalid signature.",
            "current": "Received a chat packet with a missing or invalid signature."
          },
          {
            "key": "multiplayer.message_not_delivered",
            "previous": "Can't deliver chat message, check server logs: %s",
            "current": "Can't deliver chat message; check server logs: %s"
          },
          {
            "key": "multiplayer.requiredTexturePrompt.disconnect",
            "previous": "Server requires a custom resource pack",
            "current": "This server requires a custom resource pack"
          },
          {
            "key": "narration.component_list.usage",
            "previous": "Press Tab to navigate to next element",
            "current": "Press Tab to navigate to the next element"
          },
          {
            "key": "narration.selection.usage",
            "previous": "Press up and down buttons to move to another entry",
            "current": "Press the up and down buttons to move to another entry"
          },
          {
            "key": "narration.slider.usage.focused",
            "previous": "Press left or right keyboard buttons to change value",
            "current": "Press the left or right keyboard buttons to change the value"
          },
          {
            "key": "narration.slider.usage.hovered",
            "previous": "Drag slider to change value",
            "current": "Drag the slider to change its value"
          },
          {
            "key": "narration.suggestion.usage.fill.fixed",
            "previous": "Press Tab to use suggestion",
            "current": "Press Tab to use the suggestion"
          },
          {
            "key": "narration.suggestion.usage.fill.hidable",
            "previous": "Press Tab to use suggestion, or Escape to leave suggestions",
            "current": "Press Tab to use the suggestion, or Escape to leave suggestions"
          },
          {
            "key": "options.accessibility.narrator_hotkey.mac.tooltip",
            "previous": "Allows the Narrator to be toggled on and off with 'Cmd+B'.",
            "current": "Allows the Narrator to be toggled on and off with 'Cmd + B'."
          },
          {
            "key": "options.accessibility.narrator_hotkey.tooltip",
            "previous": "Allows the Narrator to be toggled on and off with 'Ctrl+B'.",
            "current": "Allows the Narrator to be toggled on and off with 'Ctrl + B'."
          },
          {
            "key": "options.chunks",
            "previous": "%s chunks",
            "current": "%s Chunks"
          },
          {
            "key": "parsing.bool.invalid",
            "previous": "Invalid boolean, expected 'true' or 'false' but found '%s'",
            "current": "Invalid boolean: expected 'true' or 'false' but found '%s'"
          },
          {
            "key": "selectWorld.locked",
            "previous": "Locked by another running instance of Minecraft",
            "current": "Locked by another running instance of Minecraft."
          },
          {
            "key": "selectWorld.tooltip.fromNewerVersion2",
            "previous": "loading this world could cause problems!",
            "current": "and loading it could cause problems!"
          },
          {
            "key": "slot.only_single_allowed",
            "previous": "Only single slots allowed, got '%s'",
            "current": "Only single slots allowed: got '%s'"
          },
          {
            "key": "test_instance.description.batch",
            "previous": "Batch: %s",
            "current": "Environment: %s"
          },
          {
            "key": "test.error.block_property_mismatch",
            "previous": "Expected property %s to be %s, was %s",
            "current": "Expected property %s to be %s; was %s"
          },
          {
            "key": "test.error.block_property_missing",
            "previous": "Block property missing, expected property %s to be %s",
            "current": "Block property missing. Expected property %s to be %s"
          },
          {
            "key": "test.error.entity_property_details",
            "previous": "Entity %s failed test: %s, expected: %s, was: %s",
            "current": "Entity %s failed test: %s; expected: %s; was: %s"
          },
          {
            "key": "test.error.expected_block",
            "previous": "Expected block %s, got %s",
            "current": "Expected block %s; got %s"
          },
          {
            "key": "test.error.expected_block_tag",
            "previous": "Expected block in #%s, got %s",
            "current": "Expected block in #%s; got %s"
          },
          {
            "key": "test.error.expected_entity_count",
            "previous": "Expected %s entities of type %s, found %s",
            "current": "Expected %s entities of type %s: found %s"
          },
          {
            "key": "test.error.expected_entity_data",
            "previous": "Expected entity data to be: %s, was: %s",
            "current": "Expected entity data to be: %s; was: %s"
          },
          {
            "key": "test.error.expected_items_count",
            "previous": "Expected %s items of type %s, found %s",
            "current": "Expected %s items of type %s: found %s"
          },
          {
            "key": "test.error.state_not_equal",
            "previous": "Incorrect state. Expected %s, was %s",
            "current": "Incorrect state. Expected %s; was %s"
          },
          {
            "key": "test.error.value_not_equal",
            "previous": "Expected %s to be %s, was %s",
            "current": "Expected %s to be %s; was %s"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/loot_table/entities/mannequin.json"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [
            "minecraft/textures/trims/color_palettes/copper_darker.png"
          ],
          "removed": [
            "minecraft/shaders/core/position_color_lightmap.fsh",
            "minecraft/shaders/core/position_color_lightmap.vsh",
            "minecraft/shaders/core/position_color_tex_lightmap.fsh",
            "minecraft/shaders/core/position_color_tex_lightmap.vsh"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Doubles",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandResultCallback",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$2",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.ExecutionCommandSource",
            "XXX.minecraft.commands.ParserUtils",
            "XXX.minecraft.commands.PermissionSource$Check",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$DialogArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootModifierArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootTableArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$Result",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ResourceSelectorArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.SlotsArgument",
            "XXX.commands.arguments.StyleArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.commands.arguments.WaypointArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.ComponentPredicateParser",
            "XXX.arguments.item.ComponentPredicateParser$Context",
            "XXX.arguments.item.ComponentPredicateParser$PredicateLookupRule",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemParser$SuggestionsVisitor",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Context",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.arguments.selector.SelectorPattern",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.execution.ChainModifiers",
            "XXX.commands.execution.CustomCommandExecutor",
            "XXX.commands.execution.CustomCommandExecutor$WithErrorHandling",
            "XXX.commands.execution.CustomModifierExecutor$ModifierAdapter",
            "XXX.commands.execution.ExecutionContext",
            "XXX.commands.execution.ExecutionControl$1",
            "XXX.commands.execution.Frame$FrameControl",
            "XXX.commands.execution.UnboundEntryAction",
            "XXX.execution.tasks.BuildContexts",
            "XXX.execution.tasks.BuildContexts$TopLevel",
            "XXX.execution.tasks.CallFunction",
            "XXX.execution.tasks.ContinuationTask$TaskProvider",
            "XXX.execution.tasks.FallthroughTask",
            "XXX.execution.tasks.package-info",
            "XXX.commands.functions.FunctionBuilder",
            "XXX.commands.functions.MacroFunction",
            "XXX.commands.functions.MacroFunction$MacroEntry",
            "XXX.commands.functions.PlainTextFunction",
            "XXX.commands.functions.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockBox$1",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$6",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.ClientAsset",
            "XXX.minecraft.core.Cloner$Factory",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.MappedRegistry$TagSet",
            "XXX.minecraft.core.MappedRegistry$TagSet$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.RegistrationInfo",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$2",
            "XXX.minecraft.core.RegistrySetBuilder$3$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookupWrapper",
            "XXX.minecraft.core.RegistrySetBuilder$LazyHolder",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$PackedRegistryEntry",
            "XXX.minecraft.core.Rotations$1",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.UUIDUtil$1",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.CauldronInteraction$InteractionMap",
            "XXX.core.component.DataComponentExactPredicate",
            "XXX.core.component.DataComponentGetter",
            "XXX.core.component.DataComponentMap",
            "XXX.core.component.DataComponentMap$2",
            "XXX.core.component.DataComponentMap$Builder",
            "XXX.core.component.DataComponentPatch",
            "XXX.core.component.DataComponentPatch$2",
            "XXX.core.component.DataComponentPatch$Builder",
            "XXX.core.component.DataComponentPatch$PatchKey",
            "XXX.core.component.DataComponentType",
            "XXX.core.component.DataComponentType$Builder$SimpleType",
            "XXX.core.component.PatchedDataComponentMap",
            "XXX.core.component.TypedDataComponent$1",
            "XXX.component.predicates.AttributeModifiersPredicate",
            "XXX.component.predicates.BundlePredicate",
            "XXX.component.predicates.CustomDataPredicate",
            "XXX.component.predicates.DataComponentPredicate",
            "XXX.component.predicates.DataComponentPredicate$Type",
            "XXX.component.predicates.EnchantmentsPredicate",
            "XXX.component.predicates.EnchantmentsPredicate$StoredEnchantments",
            "XXX.component.predicates.FireworkExplosionPredicate$FireworkPredicate",
            "XXX.component.predicates.JukeboxPlayablePredicate",
            "XXX.component.predicates.TrimPredicate",
            "XXX.component.predicates.WritableBookPredicate$PagePredicate",
            "XXX.component.predicates.WrittenBookPredicate$PagePredicate",
            "XXX.core.dispenser.BlockSource",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.MinecartDispenseItemBehavior",
            "XXX.core.dispenser.ProjectileDispenseBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.ColorParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.TrailParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$1",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.DatapackStructureReport$CustomPackEntry",
            "XXX.data.info.DatapackStructureReport$Format",
            "XXX.data.info.ItemListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.TradeRebalanceChestLoot",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaChargedCreeperExplosionLoot$Entry",
            "XXX.loot.packs.VanillaEntityInteractLoot",
            "XXX.loot.packs.VanillaEquipmentLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider$Runner",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.RegistryPatchGenerator",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.BlockItemTagsProvider",
            "XXX.data.tags.DialogTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.KeyTagProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagAppender",
            "XXX.data.tags.TagAppender$2",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TradeRebalanceEnchantmentTagsProvider",
            "XXX.data.tags.VanillaBlockTagsProvider$1",
            "XXX.data.tags.VanillaItemTagsProvider",
            "XXX.data.tags.VanillaItemTagsProvider$BlockToItemConverter",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.AncientCityStructurePools",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.BootstrapContext",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.NoiseData",
            "XXX.data.worldgen.PlainVillagePools",
            "XXX.data.worldgen.ProcessorLists",
            "XXX.data.worldgen.SnowyVillagePools",
            "XXX.data.worldgen.Structures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.data.worldgen.TrailRuinsStructurePools",
            "XXX.data.worldgen.VillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BlockBasedTestInstance",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.FunctionGameTestInstance",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchFactory",
            "XXX.gametest.framework.GameTestBatchListener",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestInstances",
            "XXX.gametest.framework.GameTestMainUtil",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestRunner$GameTestBatcher",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestServer$MockProfileResolver",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.RetryOptions",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestEnvironmentDefinition",
            "XXX.gametest.framework.TestEnvironmentDefinition$Functions",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules$Entry",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather",
            "XXX.gametest.framework.TestFinder",
            "XXX.gametest.framework.TestFunctionLoader",
            "XXX.gametest.framework.TestPosFinder",
            "XXX.gametest.framework.UnknownGameTestException",
            "XXX.minecraft.gametest.package-info",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtException",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtIo$StringFallbackDataOutput",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$GenericListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ReportedNbtException",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtGrammar",
            "XXX.minecraft.nbt.SnbtGrammar$2",
            "XXX.minecraft.nbt.SnbtGrammar$4",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$2",
            "XXX.minecraft.nbt.SnbtGrammar$Base",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerSuffix",
            "XXX.minecraft.nbt.SnbtGrammar$Signed",
            "XXX.minecraft.nbt.SnbtGrammar$SimpleHexLiteralParseRule",
            "XXX.minecraft.nbt.SnbtOperations",
            "XXX.minecraft.nbt.SnbtOperations$2",
            "XXX.minecraft.nbt.SnbtOperations$BuiltinKey",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.CollectToTag$CompoundBuilder",
            "XXX.nbt.visitors.CollectToTag$ListBuilder",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.DisconnectionDetails",
            "XXX.minecraft.network.HandlerNames",
            "XXX.minecraft.network.HashedPatchMap$HashGenerator",
            "XXX.minecraft.network.HashedStack$1",
            "XXX.minecraft.network.HiddenByteBuf",
            "XXX.minecraft.network.LocalFrameEncoder",
            "XXX.minecraft.network.MonitoredLocalFrameDecoder",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.ProtocolInfo$Details",
            "XXX.minecraft.network.ProtocolInfo$DetailsProvider",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.SkipPacketEncoderException",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Inbound",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Outbound",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.ClickEvent$CopyToClipboard",
            "XXX.network.chat.ClickEvent$OpenFile",
            "XXX.network.chat.ClickEvent$RunCommand",
            "XXX.network.chat.ClickEvent$SuggestCommand",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentSerialization",
            "XXX.network.chat.ComponentSerialization$FuzzyCodec",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FontDescription$AtlasSprite",
            "XXX.network.chat.FontDescription$Resource",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.HoverEvent$ShowItem",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenMessagesValidator$ValidationException",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$1",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.PlainTextContents",
            "XXX.chat.contents.PlainTextContents$LiteralContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.contents.data.DataSource",
            "XXX.contents.data.EntityDataSource",
            "XXX.contents.data.package-info",
            "XXX.contents.objects.ObjectInfo",
            "XXX.contents.objects.PlayerSprite",
            "XXX.chat.contents.package-info",
            "XXX.chat.numbers.BlankFormat$1",
            "XXX.chat.numbers.FixedFormat$1",
            "XXX.chat.numbers.NumberFormatType",
            "XXX.chat.numbers.StyledFormat",
            "XXX.chat.numbers.package-info",
            "XXX.network.codec.ByteBufCodecs",
            "XXX.network.codec.ByteBufCodecs$10",
            "XXX.network.codec.ByteBufCodecs$12",
            "XXX.network.codec.ByteBufCodecs$14",
            "XXX.network.codec.ByteBufCodecs$16",
            "XXX.network.codec.ByteBufCodecs$18",
            "XXX.network.codec.ByteBufCodecs$2",
            "XXX.network.codec.ByteBufCodecs$21",
            "XXX.network.codec.ByteBufCodecs$23",
            "XXX.network.codec.ByteBufCodecs$25",
            "XXX.network.codec.ByteBufCodecs$27",
            "XXX.network.codec.ByteBufCodecs$29",
            "XXX.network.codec.ByteBufCodecs$30",
            "XXX.network.codec.ByteBufCodecs$32",
            "XXX.network.codec.ByteBufCodecs$34",
            "XXX.network.codec.ByteBufCodecs$4",
            "XXX.network.codec.ByteBufCodecs$6",
            "XXX.network.codec.ByteBufCodecs$8",
            "XXX.network.codec.IdDispatchCodec",
            "XXX.network.codec.IdDispatchCodec$DontDecorateException",
            "XXX.network.codec.StreamCodec",
            "XXX.network.codec.StreamCodec$10",
            "XXX.network.codec.StreamCodec$12",
            "XXX.network.codec.StreamCodec$14",
            "XXX.network.codec.StreamCodec$16",
            "XXX.network.codec.StreamCodec$2",
            "XXX.network.codec.StreamCodec$4",
            "XXX.network.codec.StreamCodec$6",
            "XXX.network.codec.StreamCodec$8",
            "XXX.network.codec.StreamCodec$CodecOperation",
            "XXX.network.codec.StreamEncoder",
            "XXX.network.codec.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$1$1",
            "XXX.network.protocol.CodecModifier",
            "XXX.network.protocol.PacketFlow",
            "XXX.network.protocol.PacketUtils",
            "XXX.network.protocol.ProtocolInfoBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$2",
            "XXX.network.protocol.ProtocolInfoBuilder$CodecEntry",
            "XXX.network.protocol.SimpleUnboundProtocol",
            "XXX.protocol.common.ClientCommonPacketListener",
            "XXX.protocol.common.ClientboundCustomPayloadPacket",
            "XXX.protocol.common.ClientboundDisconnectPacket",
            "XXX.protocol.common.ClientboundPingPacket",
            "XXX.protocol.common.ClientboundResourcePackPushPacket",
            "XXX.protocol.common.ClientboundShowDialogPacket",
            "XXX.protocol.common.ClientboundTransferPacket",
            "XXX.protocol.common.CommonPacketTypes",
            "XXX.protocol.common.ServerboundClientInformationPacket",
            "XXX.protocol.common.ServerboundCustomPayloadPacket",
            "XXX.protocol.common.ServerboundPongPacket",
            "XXX.protocol.common.ServerboundResourcePackPacket$Action",
            "XXX.common.custom.BeeDebugPayload$BeeInfo",
            "XXX.common.custom.BrainDebugPayload$BrainDump",
            "XXX.common.custom.BreezeDebugPayload",
            "XXX.common.custom.CustomPacketPayload",
            "XXX.common.custom.CustomPacketPayload$FallbackProvider",
            "XXX.common.custom.CustomPacketPayload$TypeAndCodec",
            "XXX.common.custom.GameEventDebugPayload",
            "XXX.common.custom.GameTestAddMarkerDebugPayload",
            "XXX.common.custom.GoalDebugPayload",
            "XXX.common.custom.HiveDebugPayload",
            "XXX.common.custom.NeighborUpdatesDebugPayload",
            "XXX.common.custom.PoiAddedDebugPayload",
            "XXX.common.custom.PoiTicketCountDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload",
            "XXX.common.custom.StructuresDebugPayload",
            "XXX.common.custom.VillageSectionsDebugPayload",
            "XXX.common.custom.package-info",
            "XXX.protocol.configuration.ClientConfigurationPacketListener",
            "XXX.protocol.configuration.ClientboundFinishConfigurationPacket",
            "XXX.protocol.configuration.ClientboundResetChatPacket",
            "XXX.protocol.configuration.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.configuration.ConfigurationProtocols",
            "XXX.protocol.configuration.ServerboundAcceptCodeOfConductPacket",
            "XXX.protocol.configuration.ServerboundSelectKnownPacks",
            "XXX.protocol.cookie.ClientCookiePacketListener",
            "XXX.protocol.cookie.CookiePacketTypes",
            "XXX.protocol.cookie.ServerboundCookieResponsePacket",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundBundlePacket",
            "XXX.protocol.game.ClientboundChunkBatchFinishedPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket",
            "XXX.protocol.game.ClientboundClearTitlesPacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$ArgumentNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$LiteralNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeInspector",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeStub",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket",
            "XXX.protocol.game.ClientboundDamageEventPacket",
            "XXX.protocol.game.ClientboundDeleteChatPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundInitializeBorderPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
            "XXX.protocol.game.ClientboundLevelChunkWithLightPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacketData",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveMinecartPacket",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEndPacket",
            "XXX.protocol.game.ClientboundPlayerCombatKillPacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerRotationPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket",
            "XXX.protocol.game.ClientboundRecipeBookRemovePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResetScorePacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetHeldSlotPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundTestInstanceBlockStatus",
            "XXX.protocol.game.ClientboundTickingStepPacket",
            "XXX.protocol.game.ClientboundTrackedWaypointPacket$Operation",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.CommonPlayerSpawnInfo",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.GameProtocols",
            "XXX.protocol.game.GameProtocols$Context",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundChangeGameModePacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundChunkBatchReceivedPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundDebugSampleSubscriptionPacket",
            "XXX.protocol.game.ServerboundEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundInteractPacket$1",
            "XXX.protocol.game.ServerboundInteractPacket$ActionType",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAction",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMovePlayerPacket$StatusOnly",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPickItemFromEntityPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundPlayerLoadedPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectBundleItemPacket",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket$Action",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.HandshakeProtocols",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ClientboundLoginFinishedPacket",
            "XXX.protocol.login.LoginProtocols",
            "XXX.protocol.login.ServerboundCustomQueryAnswerPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.login.custom.CustomQueryAnswerPayload",
            "XXX.login.custom.DiscardedQueryAnswerPayload",
            "XXX.login.custom.package-info",
            "XXX.network.protocol.package-info",
            "XXX.protocol.ping.ClientboundPongResponsePacket",
            "XXX.protocol.ping.ServerPingPacketListener",
            "XXX.protocol.ping.package-info",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.protocol.status.StatusProtocols",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.ColorRGBA",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DelegateDataOutput",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.EncoderCache$1",
            "XXX.minecraft.util.EncoderCache$Key",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$5",
            "XXX.minecraft.util.ExtraCodecs$7",
            "XXX.minecraft.util.ExtraCodecs$StrictUnboundedMapCodec",
            "XXX.minecraft.util.FastBufferedInputStream",
            "XXX.minecraft.util.FileZipper",
            "XXX.minecraft.util.FormattedCharSink",
            "XXX.minecraft.util.Graph",
            "XXX.minecraft.util.GsonHelper$CountedAppendable",
            "XXX.minecraft.util.HashOps$ListHashBuilder",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.InclusiveRange",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.MemoryReserve",
            "XXX.minecraft.util.ModCheck$Confidence",
            "XXX.minecraft.util.NativeModuleLister",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleVersion",
            "XXX.minecraft.util.NullOps$1",
            "XXX.minecraft.util.NullOps$NullMapBuilder",
            "XXX.minecraft.util.ParticleUtils",
            "XXX.minecraft.util.PlaceholderLookupProvider$1",
            "XXX.minecraft.util.PlaceholderLookupProvider$UniversalLookup",
            "XXX.minecraft.util.ProblemReporter",
            "XXX.minecraft.util.ProblemReporter$Collector",
            "XXX.minecraft.util.ProblemReporter$Collector$ProblemTreeNode",
            "XXX.minecraft.util.ProblemReporter$FieldPathElement",
            "XXX.minecraft.util.ProblemReporter$IndexedPathElement",
            "XXX.minecraft.util.ProblemReporter$Problem",
            "XXX.minecraft.util.ProblemReporter$RootFieldPathElement",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RegistryContextSwapper",
            "XXX.minecraft.util.SegmentedAnglePrecision",
            "XXX.minecraft.util.SignatureUpdater",
            "XXX.minecraft.util.SignatureValidator",
            "XXX.minecraft.util.SimpleBitStorage",
            "XXX.minecraft.util.SingleKeyCache",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SpawnUtil",
            "XXX.minecraft.util.StaticCache2D",
            "XXX.minecraft.util.StrictJsonParser",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.StringRepresentable$EnumCodec",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.TaskChainer$1",
            "XXX.minecraft.util.TickThrottler",
            "XXX.minecraft.util.TimeSource$NanoTimeSource",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.ToFloatFunction$2",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.context.ContextKey",
            "XXX.util.context.ContextKeySet$Builder",
            "XXX.util.context.ContextMap$Builder",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.LegacyComponentDataFixUtils",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFieldFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.AreaEffectCloudPotionFix",
            "XXX.datafix.fixes.AttributeModifierIdFix",
            "XXX.datafix.fixes.AttributesRenameLegacy",
            "XXX.datafix.fixes.BannerPatternFormatFix",
            "XXX.datafix.fixes.BeehiveFieldRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityFurnaceBurnTimeFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockPropertyRenameAndFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CarvingStepRemoveFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChestedHorsesInventoryZeroIndexingFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$MappingConstants",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.ContainerBlockEntityLockPredicateFix",
            "XXX.datafix.fixes.CriteriaRenameFix",
            "XXX.datafix.fixes.DataComponentRemainderFix",
            "XXX.datafix.fixes.DropChancesFormatFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EmptyItemInHotbarFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityFieldsRenameFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntitySalmonSizeFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityVariantFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.EquippableAssetRenameFix",
            "XXX.datafix.fixes.FilteredBooksFix",
            "XXX.datafix.fixes.FireResistantToDamageResistantComponentFix",
            "XXX.datafix.fixes.FixProjectileStoredItem$SubFixer",
            "XXX.datafix.fixes.FoodToConsumableFix",
            "XXX.datafix.fixes.ForcedChunkToTicketFix",
            "XXX.datafix.fixes.GoatHornIdFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.InvalidBlockEntityLockFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix$ItemStackData",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTagRemainderFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.JukeboxTicksSinceSongStartedFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDimensionIdFix",
            "XXX.datafix.fixes.LegacyHoverEventFix",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionStartedAt",
            "XXX.util.debugchart.RemoteDebugSampleType",
            "XXX.util.debugchart.SampleLogger",
            "XXX.util.debugchart.TpsDebugDimensions",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.parsing.packrat.Atom",
            "XXX.parsing.packrat.CachedParseState$CacheEntry",
            "XXX.parsing.packrat.CachedParseState$Silent",
            "XXX.parsing.packrat.Control",
            "XXX.parsing.packrat.DelayedException",
            "XXX.parsing.packrat.Dictionary$Entry",
            "XXX.parsing.packrat.ErrorCollector",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly$MutableErrorEntry",
            "XXX.parsing.packrat.ErrorEntry",
            "XXX.parsing.packrat.ParseState",
            "XXX.parsing.packrat.Rule$RuleAction",
            "XXX.parsing.packrat.Rule$WrappedTerm",
            "XXX.parsing.packrat.Scope$1",
            "XXX.parsing.packrat.Term",
            "XXX.parsing.packrat.Term$2",
            "XXX.parsing.packrat.Term$Alternative",
            "XXX.parsing.packrat.Term$Marker",
            "XXX.parsing.packrat.Term$Repeated",
            "XXX.parsing.packrat.Term$Sequence",
            "XXX.packrat.commands.CommandArgumentParser$1",
            "XXX.packrat.commands.Grammar",
            "XXX.packrat.commands.GreedyPredicateParseRule",
            "XXX.packrat.commands.ParserBasedArgument",
            "XXX.packrat.commands.ResourceLookupRule",
            "XXX.packrat.commands.StringReaderParserState",
            "XXX.packrat.commands.StringReaderTerms$1",
            "XXX.packrat.commands.StringReaderTerms$TerminalCharacters",
            "XXX.packrat.commands.TagParseRule",
            "XXX.packrat.commands.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.Profiler",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.profiling.TracyZoneFiller$PlotAndValue",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.ChunkRegionIoEvent$Fields",
            "XXX.jfr.event.ChunkRegionWriteEvent",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.StructureGenerationEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.IoSummary",
            "XXX.jfr.stats.PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.WeightedList",
            "XXX.util.random.WeightedList$Compact",
            "XXX.util.random.WeightedList$Selector",
            "XXX.util.random.package-info",
            "XXX.util.thread.AbstractConsecutiveExecutor$Status",
            "XXX.util.thread.ConsecutiveExecutor",
            "XXX.util.thread.ParallelMapTransform",
            "XXX.util.thread.ParallelMapTransform$Container",
            "XXX.util.thread.ParallelMapTransform$SplitterBase",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$RunnableWithPriority",
            "XXX.util.thread.TaskScheduler$1",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.WorldUpgrader$AbstractUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$DimensionToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$FileToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$SimpleRegionStorageUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.Container$ContainerIterator",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResult$Fail",
            "XXX.minecraft.world.InteractionResult$Pass",
            "XXX.minecraft.world.InteractionResult$SwingSource",
            "XXX.minecraft.world.ItemStackWithSlot",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.RandomSequence",
            "XXX.minecraft.world.RandomSequences$DirtyMarkingRandomSource",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.TickRateManager",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageEffects",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.DamageSources",
            "XXX.world.damagesource.DamageTypes",
            "XXX.world.damagesource.FallLocation",
            "XXX.world.effect.AbsorptionMobEffect",
            "XXX.world.effect.HealOrHarmMobEffect",
            "XXX.world.effect.InfestedMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectInstance$BlendState",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.OozingMobEffect",
            "XXX.world.effect.PoisonMobEffect",
            "XXX.world.effect.RegenerationMobEffect",
            "XXX.world.effect.WeavingMobEffect",
            "XXX.world.effect.WitherMobEffect",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AnimationState",
            "XXX.world.entity.Attackable",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$IngredientInfo",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.AbstractThrownPotion",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.Projectile$ProjectileFactory",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownLingeringPotion",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.projectile.windcharge.BreezeWindCharge",
            "XXX.projectile.windcharge.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.variant.BiomeCheck",
            "XXX.entity.variant.MoonBrightnessCheck",
            "XXX.entity.variant.PriorityProvider$Selector",
            "XXX.entity.variant.PriorityProvider$UnpackedEntry",
            "XXX.entity.variant.SpawnConditions",
            "XXX.entity.variant.SpawnPrioritySelectors",
            "XXX.entity.variant.VariantUtils",
            "XXX.entity.vehicle.AbstractBoat",
            "XXX.entity.vehicle.AbstractChestBoat",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.ChestBoat",
            "XXX.entity.vehicle.ContainerEntity",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartBehavior",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.entity.vehicle.NewMinecartBehavior$1",
            "XXX.entity.vehicle.NewMinecartBehavior$StepPartialTicks",
            "XXX.entity.vehicle.OldMinecartBehavior",
            "XXX.entity.vehicle.Raft",
            "XXX.entity.vehicle.package-info",
            "XXX.world.flag.FeatureFlag",
            "XXX.world.flag.FeatureFlagRegistry$Builder",
            "XXX.world.flag.FeatureFlagUniverse",
            "XXX.world.flag.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AbstractCraftingMenu$1",
            "XXX.world.inventory.AbstractFurnaceMenu$1",
            "XXX.world.inventory.ArmorSlot",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CrafterMenu",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.NonInteractiveResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.RemoteSlot",
            "XXX.world.inventory.RemoteSlot$Synchronized",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SlotRange$1",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.TransientCraftingContainer",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.CrossbowItem$ChargeType",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$TooltipContext",
            "XXX.world.item.Item$TooltipContext$2",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStack$2",
            "XXX.world.item.ItemStack$4",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.JukeboxPlayable",
            "XXX.world.item.JukeboxSongPlayer",
            "XXX.world.item.JukeboxSongs",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MaceItem",
            "XXX.world.item.MapItem$1",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PlaceOnWaterBlockItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileItem$DispenseConfig",
            "XXX.world.item.ProjectileItem$PositionFunction",
            "XXX.world.item.Rarity",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignApplicator",
            "XXX.world.item.SmithingTemplateItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.ToolMaterial",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.WeatheringCopperItems",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Builder",
            "XXX.item.alchemy.PotionContents",
            "XXX.item.alchemy.package-info",
            "XXX.item.component.BlockItemStateProperties",
            "XXX.item.component.BlocksAttacks$DamageReduction",
            "XXX.item.component.BookContent",
            "XXX.item.component.BundleContents$Mutable",
            "XXX.item.component.Consumable",
            "XXX.item.component.Consumable$OverrideConsumeSound",
            "XXX.item.component.Consumables",
            "XXX.item.component.CustomModelData",
            "XXX.item.component.DeathProtection",
            "XXX.item.component.DyedItemColor",
            "XXX.item.component.FireworkExplosion$Shape",
            "XXX.item.component.InstrumentComponent",
            "XXX.item.component.ItemAttributeModifiers$1",
            "XXX.item.component.ItemAttributeModifiers$Display",
            "XXX.item.component.ItemAttributeModifiers$Display$Hidden",
            "XXX.item.component.ItemAttributeModifiers$Display$Type",
            "XXX.item.component.ItemContainerContents",
            "XXX.item.component.ItemLore",
            "XXX.item.component.MapDecorations",
            "XXX.item.component.MapItemColor",
            "XXX.item.component.OminousBottleAmplifier",
            "XXX.item.component.ResolvableProfile",
            "XXX.item.component.ResolvableProfile$Partial",
            "XXX.item.component.SeededContainerLoot",
            "XXX.item.component.SuspiciousStewEffects$Entry",
            "XXX.item.component.Tool$Rule",
            "XXX.item.component.TooltipProvider",
            "XXX.item.component.TypedEntityData$1",
            "XXX.item.component.UseRemainder",
            "XXX.item.component.Weapon",
            "XXX.item.component.WrittenBookContent",
            "XXX.item.consume_effects.ApplyStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect",
            "XXX.item.consume_effects.PlaySoundConsumeEffect",
            "XXX.item.consume_effects.TeleportRandomlyConsumeEffect",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.AbstractCookingRecipe$Factory",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingInput",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.CustomRecipe$Serializer$Factory",
            "XXX.item.crafting.ExtendedRecipeBookCategory",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeBookCategories",
            "XXX.item.crafting.RecipeCache",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeManager$IngredientExtractor",
            "XXX.item.crafting.RecipeMap",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.SelectableRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputSet",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapedRecipePattern$Data",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.TransmuteRecipe$Serializer",
            "XXX.crafting.display.DisplayContentsFactory",
            "XXX.crafting.display.DisplayContentsFactory$ForStacks",
            "XXX.crafting.display.RecipeDisplay",
            "XXX.crafting.display.RecipeDisplayEntry",
            "XXX.crafting.display.RecipeDisplays",
            "XXX.crafting.display.ShapelessCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay$AnyFuel",
            "XXX.crafting.display.SlotDisplay$Empty",
            "XXX.crafting.display.SlotDisplay$ItemStackContentsFactory",
            "XXX.crafting.display.SlotDisplay$SmithingTrimDemoSlotDisplay",
            "XXX.crafting.display.SlotDisplay$Type",
            "XXX.crafting.display.SlotDisplayContext",
            "XXX.crafting.display.SmithingRecipeDisplay",
            "XXX.crafting.display.package-info",
            "XXX.item.enchantment.ConditionalEffect",
            "XXX.item.enchantment.EnchantedItemInUse",
            "XXX.item.enchantment.Enchantment$1",
            "XXX.item.enchantment.Enchantment$Cost",
            "XXX.item.enchantment.EnchantmentEffectComponents",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.ItemEnchantments$Mutable",
            "XXX.item.enchantment.LevelBasedValue$Clamped",
            "XXX.item.enchantment.LevelBasedValue$Fraction",
            "XXX.item.enchantment.LevelBasedValue$Linear",
            "XXX.item.enchantment.Repairable",
            "XXX.enchantment.effects.AddValue",
            "XXX.enchantment.effects.AllOf$EntityEffects",
            "XXX.enchantment.effects.AllOf$ValueEffects",
            "XXX.enchantment.effects.ChangeItemDamage",
            "XXX.enchantment.effects.DamageImmunity",
            "XXX.enchantment.effects.EnchantmentEntityEffect",
            "XXX.enchantment.effects.EnchantmentValueEffect",
            "XXX.enchantment.effects.Ignite",
            "XXX.enchantment.effects.PlaySoundEffect",
            "XXX.enchantment.effects.ReplaceBlock",
            "XXX.enchantment.effects.RunFunction",
            "XXX.enchantment.effects.SetValue",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSource",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType$CoordinateSource",
            "XXX.enchantment.effects.SummonEntityEffect",
            "XXX.item.enchantment.package-info",
            "XXX.enchantment.providers.EnchantmentProviderTypes",
            "XXX.enchantment.providers.EnchantmentsByCostWithDifficulty",
            "XXX.enchantment.providers.TradeRebalanceEnchantmentProviders",
            "XXX.enchantment.providers.package-info",
            "XXX.item.equipment.ArmorMaterial",
            "XXX.item.equipment.ArmorType",
            "XXX.item.equipment.EquipmentAssets",
            "XXX.item.equipment.Equippable$Builder",
            "XXX.equipment.trim.ArmorTrim",
            "XXX.equipment.trim.MaterialAssetGroup$AssetInfo",
            "XXX.equipment.trim.TrimMaterials",
            "XXX.equipment.trim.TrimPatterns",
            "XXX.world.item.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkPos$2",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.DryFoliageColor",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BlockColumn",
            "XXX.level.chunk.CarvingMask",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkAccess$PackedTicks",
            "XXX.level.chunk.ChunkGeneratorStructureState",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.PalettedContainer$Strategy",
            "XXX.level.chunk.PalettedContainer$Strategy$2",
            "XXX.level.chunk.PalettedContainerRO$PackedData",
            "XXX.level.chunk.ProtoChunk"
          ],
          "removed": [
            "XXX.advancements.critereon.MinMaxBounds$Bounds$1",
            "XXX.advancements.critereon.MinMaxBounds$FloatDegrees",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CacheableFunction",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandResultCallback$1",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$2$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.PermissionSource",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.HexColorArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrIdArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$InlineResult",
            "XXX.commands.arguments.ResourceOrIdArgument$LootPredicateArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$ReferenceResult",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ResourceSelectorArgument",
            "XXX.commands.arguments.ResourceSelectorArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$TagLookupRule",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$1",
            "XXX.arguments.item.ItemParser$State",
            "XXX.arguments.item.ItemParser$Visitor",
            "XXX.arguments.item.ItemPredicateArgument$ComponentWrapper",
            "XXX.arguments.item.ItemPredicateArgument$PredicateWrapper",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.execution.CommandQueueEntry",
            "XXX.commands.execution.CustomCommandExecutor$CommandAdapter",
            "XXX.commands.execution.CustomModifierExecutor",
            "XXX.commands.execution.EntryAction",
            "XXX.commands.execution.ExecutionControl",
            "XXX.commands.execution.Frame",
            "XXX.commands.execution.TraceCallbacks",
            "XXX.commands.execution.package-info",
            "XXX.execution.tasks.BuildContexts$Continuation",
            "XXX.execution.tasks.BuildContexts$Unbound",
            "XXX.execution.tasks.ContinuationTask",
            "XXX.execution.tasks.ExecuteCommand",
            "XXX.execution.tasks.IsolatedCall",
            "XXX.commands.functions.CommandFunction",
            "XXX.commands.functions.InstantiatedFunction",
            "XXX.commands.functions.MacroFunction$Entry",
            "XXX.commands.functions.MacroFunction$PlainTextEntry",
            "XXX.commands.functions.StringTemplate",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$RegisteredSuggestion",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockBox",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockPos$7",
            "XXX.minecraft.core.BlockPos$TraversalNodeStatus",
            "XXX.minecraft.core.Cloner",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$1",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$1",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.MappedRegistry$3",
            "XXX.minecraft.core.MappedRegistry$TagSet$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$PendingTags",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$1Entry",
            "XXX.minecraft.core.RegistrySetBuilder$3",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagRegistryLookup",
            "XXX.minecraft.core.RegistrySetBuilder$PatchedRegistries",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalOwner",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.cauldron.package-info",
            "XXX.core.component.DataComponentExactPredicate$Builder",
            "XXX.core.component.DataComponentHolder",
            "XXX.core.component.DataComponentMap$1",
            "XXX.core.component.DataComponentMap$3",
            "XXX.core.component.DataComponentMap$Builder$SimpleMap",
            "XXX.core.component.DataComponentPatch$1",
            "XXX.core.component.DataComponentPatch$3",
            "XXX.core.component.DataComponentPatch$CodecGetter",
            "XXX.core.component.DataComponentPatch$SplitResult",
            "XXX.core.component.DataComponentType$Builder",
            "XXX.core.component.DataComponents",
            "XXX.core.component.TypedDataComponent",
            "XXX.core.component.package-info",
            "XXX.component.predicates.AttributeModifiersPredicate$EntryPredicate",
            "XXX.component.predicates.ContainerPredicate",
            "XXX.component.predicates.DamagePredicate",
            "XXX.component.predicates.DataComponentPredicate$Single",
            "XXX.component.predicates.DataComponentPredicates",
            "XXX.component.predicates.EnchantmentsPredicate$Enchantments",
            "XXX.component.predicates.FireworkExplosionPredicate",
            "XXX.component.predicates.FireworksPredicate",
            "XXX.component.predicates.PotionsPredicate",
            "XXX.component.predicates.WritableBookPredicate",
            "XXX.component.predicates.WrittenBookPredicate",
            "XXX.component.predicates.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.EquipmentDispenseItemBehavior",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.ExplosionParticleInfo",
            "XXX.core.particles.ParticleLimit",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SpellParticleOption",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.AtlasIds",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.DatapackStructureReport",
            "XXX.data.info.DatapackStructureReport$Entry",
            "XXX.data.info.DatapackStructureReport$Report",
            "XXX.data.info.PacketReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$MissingTableProblem",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.LootData",
            "XXX.loot.packs.TradeRebalanceLootTableProvider",
            "XXX.loot.packs.VanillaBlockInteractLoot",
            "XXX.loot.packs.VanillaChargedCreeperExplosionLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.VanillaShearingLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder$1",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$FamilyRecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner$1",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.TransmuteRecipeBuilder",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.recipes.packs.VanillaRecipeProvider$TrimTemplate",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.TradeRebalanceRegistries",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtDatafixer",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.EnchantmentTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagAppender$1",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.VanillaBlockTagsProvider",
            "XXX.data.tags.VanillaEnchantmentTagsProvider",
            "XXX.data.tags.VanillaItemTagsProvider$1",
            "XXX.data.tags.WorldPresetTagsProvider",
            "XXX.data.worldgen.AncientCityStructurePieces",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.DimensionTypes",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureSets",
            "XXX.data.worldgen.SurfaceRuleData",
            "XXX.data.worldgen.TerrainProvider",
            "XXX.data.worldgen.TrialChambersStructurePools",
            "XXX.worldgen.biome.BiomeData",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.minecraft.gametest.Main",
            "XXX.gametest.framework.BuiltinTestFunctions",
            "XXX.gametest.framework.FailedTestTracker",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchFactory$TestDecorator",
            "XXX.gametest.framework.GameTestEnvironments",
            "XXX.gametest.framework.GameTestException",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestHelper$3",
            "XXX.gametest.framework.GameTestInstance",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestRunner$Builder",
            "XXX.gametest.framework.GameTestRunner$StructureSpawner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestServer$MockUserNameToIdResolver",
            "XXX.gametest.framework.GameTestTicker$State",
            "XXX.gametest.framework.GeneratedTest",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureGridSpawner",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestCommand$TestBatchSummaryDisplayer",
            "XXX.gametest.framework.TestData",
            "XXX.gametest.framework.TestEnvironmentDefinition$AllOf",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules",
            "XXX.gametest.framework.TestEnvironmentDefinition$TimeOfDay",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather$Type",
            "XXX.gametest.framework.TestFinder$Builder",
            "XXX.gametest.framework.TestInstanceFinder",
            "XXX.gametest.framework.TestReporter",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.DeprecatedTranslationsInfo",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CollectionTag$1",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounterException",
            "XXX.minecraft.nbt.NbtFormatException",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.PrimitiveTag",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.SnbtGrammar$1",
            "XXX.minecraft.nbt.SnbtGrammar$3",
            "XXX.minecraft.nbt.SnbtGrammar$5",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$1",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$3",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerLiteral",
            "XXX.minecraft.nbt.SnbtGrammar$Sign",
            "XXX.minecraft.nbt.SnbtGrammar$SignedPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$TypeSuffix",
            "XXX.minecraft.nbt.SnbtOperations$1",
            "XXX.minecraft.nbt.SnbtOperations$3",
            "XXX.minecraft.nbt.SnbtOperations$BuiltinOperation",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.CollectToTag$ContainerBuilder",
            "XXX.nbt.visitors.CollectToTag$RootBuilder",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.HashedPatchMap",
            "XXX.minecraft.network.HashedStack",
            "XXX.minecraft.network.HashedStack$ActualItem",
            "XXX.minecraft.network.LocalFrameDecoder",
            "XXX.minecraft.network.LpVec3",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketProcessor$ListenerAndPacket",
            "XXX.minecraft.network.ProtocolInfo",
            "XXX.minecraft.network.ProtocolInfo$Details$PacketVisitor",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.RegistryFriendlyByteBuf",
            "XXX.minecraft.network.SkipPacketDecoderException",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.UnconfiguredPipelineHandler",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$InboundConfigurationTask",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$OutboundConfigurationTask",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.ClickEvent$ChangePage",
            "XXX.network.chat.ClickEvent$Custom",
            "XXX.network.chat.ClickEvent$OpenUrl",
            "XXX.network.chat.ClickEvent$ShowDialog",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentSerialization$1",
            "XXX.network.chat.ComponentSerialization$StrictEither",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FontDescription",
            "XXX.network.chat.FontDescription$PlayerSprite",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ShowEntity",
            "XXX.network.chat.HoverEvent$ShowText",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.ObjectContents",
            "XXX.chat.contents.PlainTextContents$1",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.contents.data.BlockDataSource",
            "XXX.contents.data.DataSources",
            "XXX.contents.data.StorageDataSource",
            "XXX.contents.objects.AtlasSprite",
            "XXX.contents.objects.ObjectInfos",
            "XXX.contents.objects.package-info",
            "XXX.chat.numbers.BlankFormat",
            "XXX.chat.numbers.FixedFormat",
            "XXX.chat.numbers.NumberFormat",
            "XXX.chat.numbers.NumberFormatTypes",
            "XXX.chat.numbers.StyledFormat$1",
            "XXX.network.chat.package-info",
            "XXX.network.codec.ByteBufCodecs$1",
            "XXX.network.codec.ByteBufCodecs$11",
            "XXX.network.codec.ByteBufCodecs$13",
            "XXX.network.codec.ByteBufCodecs$15",
            "XXX.network.codec.ByteBufCodecs$17",
            "XXX.network.codec.ByteBufCodecs$19",
            "XXX.network.codec.ByteBufCodecs$20",
            "XXX.network.codec.ByteBufCodecs$22",
            "XXX.network.codec.ByteBufCodecs$24",
            "XXX.network.codec.ByteBufCodecs$26",
            "XXX.network.codec.ByteBufCodecs$28",
            "XXX.network.codec.ByteBufCodecs$3",
            "XXX.network.codec.ByteBufCodecs$31",
            "XXX.network.codec.ByteBufCodecs$33",
            "XXX.network.codec.ByteBufCodecs$35",
            "XXX.network.codec.ByteBufCodecs$5",
            "XXX.network.codec.ByteBufCodecs$7",
            "XXX.network.codec.ByteBufCodecs$9",
            "XXX.network.codec.IdDispatchCodec$Builder",
            "XXX.network.codec.IdDispatchCodec$Entry",
            "XXX.network.codec.StreamCodec$1",
            "XXX.network.codec.StreamCodec$11",
            "XXX.network.codec.StreamCodec$13",
            "XXX.network.codec.StreamCodec$15",
            "XXX.network.codec.StreamCodec$17",
            "XXX.network.codec.StreamCodec$3",
            "XXX.network.codec.StreamCodec$5",
            "XXX.network.codec.StreamCodec$7",
            "XXX.network.codec.StreamCodec$9",
            "XXX.network.codec.StreamDecoder",
            "XXX.network.codec.StreamMemberEncoder",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketType",
            "XXX.network.protocol.ProtocolCodecBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$1",
            "XXX.network.protocol.ProtocolInfoBuilder$3",
            "XXX.network.protocol.ProtocolInfoBuilder$Implementation",
            "XXX.network.protocol.UnboundProtocol",
            "XXX.protocol.common.ClientboundClearDialogPacket",
            "XXX.protocol.common.ClientboundCustomReportDetailsPacket",
            "XXX.protocol.common.ClientboundKeepAlivePacket",
            "XXX.protocol.common.ClientboundResourcePackPopPacket",
            "XXX.protocol.common.ClientboundServerLinksPacket",
            "XXX.protocol.common.ClientboundStoreCookiePacket",
            "XXX.protocol.common.ClientboundUpdateTagsPacket",
            "XXX.protocol.common.ServerCommonPacketListener",
            "XXX.protocol.common.ServerboundCustomClickActionPacket",
            "XXX.protocol.common.ServerboundKeepAlivePacket",
            "XXX.protocol.common.ServerboundResourcePackPacket",
            "XXX.common.custom.BeeDebugPayload",
            "XXX.common.custom.BrainDebugPayload",
            "XXX.common.custom.BrandPayload",
            "XXX.common.custom.BreezeDebugPayload$BreezeInfo",
            "XXX.common.custom.CustomPacketPayload$1",
            "XXX.common.custom.CustomPacketPayload$Type",
            "XXX.common.custom.DiscardedPayload",
            "XXX.common.custom.GameEventListenerDebugPayload",
            "XXX.common.custom.GameTestClearMarkersDebugPayload",
            "XXX.common.custom.GoalDebugPayload$DebugGoal",
            "XXX.common.custom.HiveDebugPayload$HiveInfo",
            "XXX.common.custom.PathfindingDebugPayload",
            "XXX.common.custom.PoiRemovedDebugPayload",
            "XXX.common.custom.RaidsDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload$Wire",
            "XXX.common.custom.StructuresDebugPayload$PieceInfo",
            "XXX.common.custom.WorldGenAttemptDebugPayload",
            "XXX.protocol.common.package-info",
            "XXX.protocol.configuration.ClientboundCodeOfConductPacket",
            "XXX.protocol.configuration.ClientboundRegistryDataPacket",
            "XXX.protocol.configuration.ClientboundSelectKnownPacks",
            "XXX.protocol.configuration.ConfigurationPacketTypes",
            "XXX.protocol.configuration.ServerConfigurationPacketListener",
            "XXX.protocol.configuration.ServerboundFinishConfigurationPacket",
            "XXX.protocol.configuration.package-info",
            "XXX.protocol.cookie.ClientboundCookieRequestPacket",
            "XXX.protocol.cookie.ServerCookiePacketListener",
            "XXX.protocol.cookie.package-info",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundBundleDelimiterPacket",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBatchStartPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeBuilder",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeResolver",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket$Action",
            "XXX.protocol.game.ClientboundDebugSamplePacket",
            "XXX.protocol.game.ClientboundDisguisedChatPacket",
            "XXX.protocol.game.ClientboundEntityPositionSyncPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundGameEventPacket$Type",
            "XXX.protocol.game.ClientboundHurtAnimationPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerChatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEnterPacket",
            "XXX.protocol.game.ClientboundPlayerInfoRemovePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundProjectilePowerPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket$Entry",
            "XXX.protocol.game.ClientboundRecipeBookSettingsPacket",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetCursorItemPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerInventoryPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStartConfigurationPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundTickingStatePacket",
            "XXX.protocol.game.ClientboundTrackedWaypointPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.GamePacketTypes",
            "XXX.protocol.game.GameProtocols$1",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatCommandSignedPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientTickEndPacket",
            "XXX.protocol.game.ServerboundConfigurationAcknowledgedPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundContainerSlotStateChangedPacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundInteractPacket$Handler",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAtLocationAction",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemFromBlockPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSetTestBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntent",
            "XXX.protocol.handshake.HandshakePacketTypes",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.LoginPacketTypes",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.ServerboundLoginAcknowledgedPacket",
            "XXX.login.custom.CustomQueryPayload",
            "XXX.login.custom.DiscardedQueryPayload",
            "XXX.protocol.login.package-info",
            "XXX.protocol.ping.ClientPongPacketListener",
            "XXX.protocol.ping.PingPacketTypes",
            "XXX.protocol.ping.ServerboundPingRequestPacket",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.StatusPacketTypes",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.minecraft.util.BoundedFloatFunction$1",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.ClassTreeIdRegistry",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.EncoderCache",
            "XXX.minecraft.util.EncoderCache$2",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$6",
            "XXX.minecraft.util.ExtraCodecs$LateBoundIdMapper",
            "XXX.minecraft.util.ExtraCodecs$TagOrElementLocation",
            "XXX.minecraft.util.FileSystemUtil",
            "XXX.minecraft.util.FormattedCharSequence",
            "XXX.minecraft.util.FutureChain",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HashOps",
            "XXX.minecraft.util.HashOps$MapHashBuilder",
            "XXX.minecraft.util.HttpUtil$DownloadProgressListener",
            "XXX.minecraft.util.KeyDispatchDataCodec",
            "XXX.minecraft.util.LenientJsonParser",
            "XXX.minecraft.util.ListAndDeque",
            "XXX.minecraft.util.ModCheck",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleInfo",
            "XXX.minecraft.util.NullOps",
            "XXX.minecraft.util.NullOps$NullListBuilder",
            "XXX.minecraft.util.OptionEnum",
            "XXX.minecraft.util.PlaceholderLookupProvider",
            "XXX.minecraft.util.PlaceholderLookupProvider$2",
            "XXX.minecraft.util.PngInfo",
            "XXX.minecraft.util.ProblemReporter$1",
            "XXX.minecraft.util.ProblemReporter$Collector$Entry",
            "XXX.minecraft.util.ProblemReporter$ElementReferencePathElement",
            "XXX.minecraft.util.ProblemReporter$IndexedFieldPathElement",
            "XXX.minecraft.util.ProblemReporter$PathElement",
            "XXX.minecraft.util.ProblemReporter$RootElementPathElement",
            "XXX.minecraft.util.ProblemReporter$ScopedCollector",
            "XXX.minecraft.util.RandomSource",
            "XXX.minecraft.util.ResourceLocationPattern",
            "XXX.minecraft.util.SequencedPriorityIterator",
            "XXX.minecraft.util.SignatureUpdater$Output",
            "XXX.minecraft.util.Signer",
            "XXX.minecraft.util.SimpleBitStorage$InitializationException",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.SpawnUtil$Strategy",
            "XXX.minecraft.util.StaticCache2D$Initializer",
            "XXX.minecraft.util.StringDecomposer",
            "XXX.minecraft.util.StringRepresentable$1",
            "XXX.minecraft.util.StringRepresentable$StringRepresentableCodec",
            "XXX.minecraft.util.TaskChainer",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.TimeSource",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.TriState",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.context.ContextKeySet",
            "XXX.util.context.ContextMap",
            "XXX.util.context.package-info",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.ExtraDataFixUtils",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractBlockPropertyFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AreaEffectCloudDurationScaleFix",
            "XXX.datafix.fixes.AttributeIdPrefixFix",
            "XXX.datafix.fixes.AttributesRenameFix",
            "XXX.datafix.fixes.BannerEntityCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockPosFormatAndRenamesFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.BoatSplitFix",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkTicketUnpackPosFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.CopperGolemWeatherStateFix",
            "XXX.datafix.fixes.CustomModelDataExpandFix",
            "XXX.datafix.fixes.DecoratedPotFieldRenameFix",
            "XXX.datafix.fixes.DropInvalidSignDataFix",
            "XXX.datafix.fixes.EffectDurationFix",
            "XXX.datafix.fixes.EmptyItemInVillagerTradeFix",
            "XXX.datafix.fixes.EntityAttributeBaseValueFix",
            "XXX.datafix.fixes.EntityBrushableBlockFieldsRenameFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityFallDistanceFloatToDoubleFix",
            "XXX.datafix.fixes.EntityGoatMissingStateFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix$Fixer",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.EquipmentFormatFix",
            "XXX.datafix.fixes.FeatureFlagRemoveFix",
            "XXX.datafix.fixes.FilteredSignsFix",
            "XXX.datafix.fixes.FixProjectileStoredItem",
            "XXX.datafix.fixes.FixWolfHealth",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.HorseBodyArmorItemFix",
            "XXX.datafix.fixes.InlineBlockPosFormatFix",
            "XXX.datafix.fixes.InvalidLockComponentFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix",
            "XXX.datafix.fixes.ItemStackCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LegacyWorldBorderFix",
            "XXX.datafix.schemas.V4543",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.debugchart.AbstractSampleLogger",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionRequest",
            "XXX.util.debugchart.LocalSampleLogger",
            "XXX.util.debugchart.RemoteSampleLogger",
            "XXX.util.debugchart.SampleStorage",
            "XXX.util.debugchart.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.parsing.package-info",
            "XXX.parsing.packrat.CachedParseState",
            "XXX.parsing.packrat.CachedParseState$PositionCache",
            "XXX.parsing.packrat.CachedParseState$SimpleControl",
            "XXX.parsing.packrat.Control$1",
            "XXX.parsing.packrat.Dictionary",
            "XXX.parsing.packrat.Dictionary$Reference",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly",
            "XXX.parsing.packrat.ErrorCollector$Nop",
            "XXX.parsing.packrat.NamedRule",
            "XXX.parsing.packrat.Rule",
            "XXX.parsing.packrat.Rule$SimpleRuleAction",
            "XXX.parsing.packrat.Scope",
            "XXX.parsing.packrat.SuggestionSupplier",
            "XXX.parsing.packrat.Term$1",
            "XXX.parsing.packrat.Term$3",
            "XXX.parsing.packrat.Term$LookAhead",
            "XXX.parsing.packrat.Term$Maybe",
            "XXX.parsing.packrat.Term$RepeatedWithSeparator",
            "XXX.packrat.commands.CommandArgumentParser",
            "XXX.packrat.commands.CommandArgumentParser$2",
            "XXX.packrat.commands.GreedyPatternParseRule",
            "XXX.packrat.commands.NumberRunParseRule",
            "XXX.packrat.commands.ResourceLocationParseRule",
            "XXX.packrat.commands.ResourceSuggestion",
            "XXX.packrat.commands.StringReaderTerms",
            "XXX.packrat.commands.StringReaderTerms$2",
            "XXX.packrat.commands.StringReaderTerms$TerminalWord",
            "XXX.packrat.commands.UnquotedStringParseRule",
            "XXX.parsing.packrat.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.Profiler$Scope",
            "XXX.util.profiling.ProfilerFiller$CombinedProfileFiller",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.TracyZoneFiller",
            "XXX.util.profiling.Zone",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.ChunkRegionIoEvent",
            "XXX.jfr.event.ChunkRegionReadEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.StructureGenerationEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.ChunkIdentification",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.IoSummary$CountAndSize",
            "XXX.jfr.stats.StructureGenStat",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.Weighted",
            "XXX.util.random.WeightedList$Builder",
            "XXX.util.random.WeightedList$Flat",
            "XXX.util.random.WeightedRandom",
            "XXX.util.thread.AbstractConsecutiveExecutor",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ParallelMapTransform$BatchedTaskSplitter",
            "XXX.util.thread.ParallelMapTransform$SingleTaskSplitter",
            "XXX.util.thread.PriorityConsecutiveExecutor",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.thread.TaskScheduler",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$ChunkUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$EntityUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$PoiUpgrader",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.InteractionResult$ItemContext",
            "XXX.minecraft.world.InteractionResult$Success",
            "XXX.minecraft.world.InteractionResult$TryEmptyHandInteraction",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.RandomSequences",
            "XXX.minecraft.world.RandomizableContainer",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.DamageScaling",
            "XXX.world.damagesource.DamageSource$1",
            "XXX.world.damagesource.DamageType",
            "XXX.world.damagesource.DeathMessageType",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.BadOmenMobEffect",
            "XXX.world.effect.HungerMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffect$AttributeTemplate",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffectInstance$Details",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.OozingMobEffect$NearbySlimes",
            "XXX.world.effect.RaidOmenMobEffect",
            "XXX.world.effect.SaturationMobEffect",
            "XXX.world.effect.WindChargedMobEffect",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Avatar",
            "XXX.entity.decoration.Mannequin",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.StackedContents$Output",
            "XXX.entity.player.StackedItemContents",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ProjectileDeflection",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownSplashPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.projectile.windcharge.AbstractWindCharge",
            "XXX.projectile.windcharge.WindCharge",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.Raids$RaidWithId",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.variant.ModelAndTexture",
            "XXX.entity.variant.PriorityProvider",
            "XXX.entity.variant.PriorityProvider$SelectorCondition",
            "XXX.entity.variant.SpawnCondition",
            "XXX.entity.variant.SpawnContext",
            "XXX.entity.variant.StructureCheck",
            "XXX.entity.variant.package-info",
            "XXX.entity.vehicle.AbstractBoat$Status",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.ChestRaft",
            "XXX.entity.vehicle.ContainerEntity$1",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.NewMinecartBehavior",
            "XXX.entity.vehicle.NewMinecartBehavior$MinecartStep",
            "XXX.entity.vehicle.NewMinecartBehavior$TrackIteration",
            "XXX.entity.vehicle.OldMinecartBehavior$1",
            "XXX.entity.vehicle.VehicleEntity",
            "XXX.world.flag.FeatureElement",
            "XXX.world.flag.FeatureFlagRegistry",
            "XXX.world.flag.FeatureFlagSet",
            "XXX.world.flag.FeatureFlags",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractCraftingMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CrafterSlot",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$4",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookMenu$PostPlaceAction",
            "XXX.world.inventory.RecipeCraftingHolder",
            "XXX.world.inventory.RemoteSlot$1",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SlotRange",
            "XXX.world.inventory.SlotRanges",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModePredicate",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BoneMealItem$1",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.BundleItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.CrossbowItem$ChargingSounds",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.EitherHolder",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.Item$TooltipContext$1",
            "XXX.world.item.Item$TooltipContext$3",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack$1",
            "XXX.world.item.ItemStack$3",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUseAnimation",
            "XXX.world.item.Items",
            "XXX.world.item.JukeboxSong",
            "XXX.world.item.JukeboxSongPlayer$OnSongChanged",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileItem",
            "XXX.world.item.ProjectileItem$DispenseConfig$Builder",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.WindChargeItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.component.Bees",
            "XXX.item.component.BlocksAttacks",
            "XXX.item.component.BlocksAttacks$ItemDamageFunction",
            "XXX.item.component.BundleContents",
            "XXX.item.component.ChargedProjectiles",
            "XXX.item.component.Consumable$Builder",
            "XXX.item.component.ConsumableListener",
            "XXX.item.component.CustomData",
            "XXX.item.component.DamageResistant",
            "XXX.item.component.DebugStickState",
            "XXX.item.component.FireworkExplosion",
            "XXX.item.component.Fireworks",
            "XXX.item.component.ItemAttributeModifiers",
            "XXX.item.component.ItemAttributeModifiers$Builder",
            "XXX.item.component.ItemAttributeModifiers$Display$Default",
            "XXX.item.component.ItemAttributeModifiers$Display$OverrideText",
            "XXX.item.component.ItemAttributeModifiers$Entry",
            "XXX.item.component.ItemContainerContents$Slot",
            "XXX.item.component.LodestoneTracker",
            "XXX.item.component.MapDecorations$Entry",
            "XXX.item.component.MapPostProcessing",
            "XXX.item.component.ProvidesTrimMaterial",
            "XXX.item.component.ResolvableProfile$Dynamic",
            "XXX.item.component.ResolvableProfile$Static",
            "XXX.item.component.SuspiciousStewEffects",
            "XXX.item.component.Tool",
            "XXX.item.component.TooltipDisplay",
            "XXX.item.component.TypedEntityData",
            "XXX.item.component.UseCooldown",
            "XXX.item.component.UseRemainder$OnExtraCreatedRemainder",
            "XXX.item.component.WritableBookContent",
            "XXX.item.component.package-info",
            "XXX.item.consume_effects.ClearAllStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect$Type",
            "XXX.item.consume_effects.RemoveStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.AbstractCookingRecipe$Serializer",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BlastingRecipe$1",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CraftingInput$Positioned",
            "XXX.item.crafting.CraftingRecipe$1",
            "XXX.item.crafting.CustomRecipe$Serializer",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.PlacementInfo",
            "XXX.item.crafting.RecipeAccess",
            "XXX.item.crafting.RecipeBookCategory",
            "XXX.item.crafting.RecipeCache$Entry",
            "XXX.item.crafting.RecipeInput",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeManager$IngredientCollector",
            "XXX.item.crafting.RecipeManager$ServerDisplayInfo",
            "XXX.item.crafting.RecipePropertySet",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputEntry",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapedRecipePattern",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SingleItemRecipe$Factory",
            "XXX.item.crafting.SingleRecipeInput",
            "XXX.item.crafting.SmeltingRecipe$1",
            "XXX.item.crafting.SmithingRecipeInput",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TransmuteRecipe",
            "XXX.item.crafting.TransmuteResult",
            "XXX.crafting.display.DisplayContentsFactory$ForRemainders",
            "XXX.crafting.display.FurnaceRecipeDisplay",
            "XXX.crafting.display.RecipeDisplay$Type",
            "XXX.crafting.display.RecipeDisplayId",
            "XXX.crafting.display.ShapedCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay",
            "XXX.crafting.display.SlotDisplay$Composite",
            "XXX.crafting.display.SlotDisplay$ItemSlotDisplay",
            "XXX.crafting.display.SlotDisplay$ItemStackSlotDisplay",
            "XXX.crafting.display.SlotDisplay$TagSlotDisplay",
            "XXX.crafting.display.SlotDisplay$WithRemainder",
            "XXX.crafting.display.SlotDisplays",
            "XXX.crafting.display.StonecutterRecipeDisplay",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.Enchantable",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.Enchantment$Builder",
            "XXX.item.enchantment.Enchantment$EnchantmentDefinition",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.EnchantmentTarget",
            "XXX.item.enchantment.ItemEnchantments",
            "XXX.item.enchantment.LevelBasedValue",
            "XXX.item.enchantment.LevelBasedValue$Constant",
            "XXX.item.enchantment.LevelBasedValue$LevelsSquared",
            "XXX.item.enchantment.LevelBasedValue$Lookup",
            "XXX.item.enchantment.TargetedConditionalEffect",
            "XXX.enchantment.effects.AllOf",
            "XXX.enchantment.effects.AllOf$LocationBasedEffects",
            "XXX.enchantment.effects.ApplyMobEffect",
            "XXX.enchantment.effects.DamageEntity",
            "XXX.enchantment.effects.EnchantmentAttributeEffect",
            "XXX.enchantment.effects.EnchantmentLocationBasedEffect",
            "XXX.enchantment.effects.ExplodeEffect",
            "XXX.enchantment.effects.MultiplyValue",
            "XXX.enchantment.effects.RemoveBinomial",
            "XXX.enchantment.effects.ReplaceDisk",
            "XXX.enchantment.effects.SetBlockProperties",
            "XXX.enchantment.effects.SpawnParticlesEffect",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType",
            "XXX.enchantment.effects.SpawnParticlesEffect$VelocitySource",
            "XXX.enchantment.effects.package-info",
            "XXX.enchantment.providers.EnchantmentProvider",
            "XXX.enchantment.providers.EnchantmentsByCost",
            "XXX.enchantment.providers.SingleEnchantment",
            "XXX.enchantment.providers.VanillaEnchantmentProviders",
            "XXX.item.equipment.AllowedEntitiesProvider",
            "XXX.item.equipment.ArmorMaterials",
            "XXX.item.equipment.EquipmentAsset",
            "XXX.item.equipment.Equippable",
            "XXX.item.equipment.package-info",
            "XXX.equipment.trim.MaterialAssetGroup",
            "XXX.equipment.trim.TrimMaterial",
            "XXX.equipment.trim.TrimPattern",
            "XXX.equipment.trim.package-info",
            "XXX.item.trading.ItemCost",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseCommandBlock$CloseableCommandBlockSource",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.BlockGetter$BlockStepVisitor",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorMapColorUtil",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EmptyBlockAndTintGetter",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$DistancePerDirection",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.CarvingMask$Mask",
            "XXX.level.chunk.ChunkAccess$ChunkPathElement",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGenerators",
            "XXX.level.chunk.Configuration",
            "XXX.level.chunk.Configuration$Simple",
            "XXX.level.chunk.PalettedContainer$Data",
            "XXX.level.chunk.PalettedContainerRO",
            "XXX.level.chunk.PalettedContainerRO$Unpacker",
            "XXX.level.chunk.SingleValuePalette",
            "XXX.level.chunk.Strategy$1"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.advancements.critereon.MinMaxBounds \u001b[2;32m+2M\u001b[0m \u001b[2;31m-11M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.server.commands.SpectateCommand \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.server.level.ServerPlayer \u001b[2;32m+24M\u001b[0m \u001b[2;31m-13M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.server.players.PlayerList \u001b[2;32m+1M\u001b[0m",
          "XXX.datafix.fixes.References \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.EntityType \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.decoration.HangingEntity \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.decoration.ItemFrame \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.npc.WanderingTraderSpawner \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.player.PlayerModelPart \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CopperGolemStatueBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.SideChainPartBlock$Neighbor \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.SideChainPartBlock$SideChainNeighbor \u001b[2;32m+1M\u001b[0m",
          "XXX.level.border.BorderChangeListener \u001b[2;32m+7P\u001b[0m \u001b[2;31m-7P\u001b[0m",
          "XXX.level.chunk.HashMapPalette \u001b[2;32m+9M\u001b[0m \u001b[2;31m-9M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.level.chunk.Palette$Factory \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.chunk.PalettedContainer \u001b[2;32m+19M\u001b[0m \u001b[2;31m-21M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.level.levelgen.PhantomSpawner \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.storage.DerivedLevelData \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.phys.shapes.EntityCollisionContext \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.MinMaxBounds",
        "differences": {
          "added": [
            "Optional unwrapPoint()",
            "Codec createCodec(Codec,MinMaxBounds$BoundsFactory)",
            "StreamCodec createStreamCodec(StreamCodec,MinMaxBounds$BoundsFactory)",
            "MinMaxBounds fromReader(StringReader,MinMaxBounds$BoundsFromReaderFactory,Function,Supplier,Function)",
            "Optional readNumber(StringReader,Function,Supplier)",
            "boolean isAllowedInputChat(StringReader)",
            "Either lambda$createCodec$4(MinMaxBounds)",
            "MinMaxBounds lambda$createCodec$3(MinMaxBounds$BoundsFactory,Either)",
            "MinMaxBounds lambda$createCodec$2(MinMaxBounds$BoundsFactory,Number)",
            "MinMaxBounds lambda$createCodec$1(MinMaxBounds)",
            "App lambda$createCodec$0(Codec,MinMaxBounds$BoundsFactory,RecordCodecBuilder$Instance)"
          ],
          "removed": [
            "Optional min()",
            "Optional max()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.commands.SpectateCommand",
        "differences": {
          "added": [
            "Component lambda$spectate$5()",
            "Component lambda$spectate$4(Entity)",
            "int lambda$register$1(CommandContext)"
          ],
          "removed": [
            "Component lambda$spectate$6()",
            "Component lambda$spectate$5(Entity)",
            "int lambda$register$4(CommandContext)",
            "Message lambda$static$1(Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ServerPlayer",
        "differences": {
          "added": [
            "void lambda$drop$17(Inventory,int)",
            "Packet lambda$sendSystemMessage$16(Component)",
            "Stream lambda$awardRecipesByKey$15(ResourceKey)",
            "void lambda$awardStat$14(int,ScoreAccess)",
            "void lambda$startSleepInBed$13(Unit)",
            "boolean lambda$startSleepInBed$12(Monster)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$11(BlockPos,Vec3)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$10(BlockPos,Vec3)",
            "void lambda$tellNeutralMobsThatIDied$9(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$8(Mob)",
            "Packet lambda$die$7(Component)",
            "Style lambda$die$6(Component,Style)",
            "void lambda$updateScoreForCriteria$5(int,ScoreAccess)"
          ],
          "removed": [
            "void handleShoulderEntities()",
            "void playShoulderEntityAmbientSound(CompoundTag)",
            "boolean setEntityOnShoulder(CompoundTag)",
            "void removeEntitiesOnShoulder()",
            "void respawnEntityOnShoulder(CompoundTag)",
            "CompoundTag getShoulderEntityLeft()",
            "void setShoulderEntityLeft(CompoundTag)",
            "CompoundTag getShoulderEntityRight()",
            "void setShoulderEntityRight(CompoundTag)",
            "void lambda$drop$19(Inventory,int)",
            "Packet lambda$sendSystemMessage$18(Component)",
            "Stream lambda$awardRecipesByKey$17(ResourceKey)",
            "void lambda$awardStat$16(int,ScoreAccess)",
            "void lambda$startSleepInBed$15(Unit)",
            "boolean lambda$startSleepInBed$14(Monster)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$13(BlockPos,Vec3)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$12(BlockPos,Vec3)",
            "void lambda$tellNeutralMobsThatIDied$11(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$10(Mob)",
            "Packet lambda$die$9(Component)",
            "Style lambda$die$8(Component,Style)",
            "void lambda$updateScoreForCriteria$7(int,ScoreAccess)",
            "void lambda$respawnEntityOnShoulder$6(ServerLevel,Entity)",
            "String lambda$respawnEntityOnShoulder$5()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.players.PlayerList",
        "differences": {
          "added": [],
          "removed": [
            "Component getReasonMessage(BanListEntry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.HangingEntity",
        "differences": {
          "added": [
            "boolean lambda$survives$1(BlockPos)",
            "boolean lambda$static$0(Entity)"
          ],
          "removed": [
            "boolean canCoexist(boolean)",
            "boolean lambda$canCoexist$1(boolean,HangingEntity)",
            "boolean lambda$survives$0(BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.ItemFrame",
        "differences": {
          "added": [
            "boolean lambda$survives$0(Entity)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.npc.WanderingTraderSpawner",
        "differences": {
          "added": [
            "void tick(ServerLevel,boolean,boolean)"
          ],
          "removed": [
            "void tick(ServerLevel,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.PlayerModelPart",
        "differences": {
          "added": [],
          "removed": [
            "String getSerializedName()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CopperGolemStatueBlock",
        "differences": {
          "added": [],
          "removed": [
            "ItemStack getCloneItemStack(LevelReader,BlockPos,BlockState,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SideChainPartBlock$SideChainNeighbor",
        "differences": {
          "added": [],
          "removed": [
            "boolean isConnectable()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.HashMapPalette",
        "differences": {
          "added": [
            "void <init>(IdMap,int,PaletteResize,List)",
            "void <init>(IdMap,int,PaletteResize)",
            "void <init>(IdMap,int,PaletteResize,CrudeIncrementalIntIdentityHashBiMap)",
            "Palette create(int,IdMap,PaletteResize,List)",
            "int idFor(Object)",
            "void read(FriendlyByteBuf)",
            "void write(FriendlyByteBuf)",
            "int getSerializedSize()",
            "Palette copy(PaletteResize)"
          ],
          "removed": [
            "void <init>(int,List)",
            "void <init>(int)",
            "void <init>(int,CrudeIncrementalIntIdentityHashBiMap)",
            "Palette create(int,List)",
            "int idFor(Object,PaletteResize)",
            "void read(FriendlyByteBuf,IdMap)",
            "void write(FriendlyByteBuf,IdMap)",
            "int getSerializedSize(IdMap)",
            "Palette copy()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.PalettedContainer",
        "differences": {
          "added": [
            "Codec codecRW(IdMap,Codec,PalettedContainer$Strategy,Object)",
            "Codec codecRO(IdMap,Codec,PalettedContainer$Strategy,Object)",
            "Codec codec(IdMap,Codec,PalettedContainer$Strategy,Object,PalettedContainerRO$Unpacker)",
            "void <init>(IdMap,PalettedContainer$Strategy,PalettedContainer$Configuration,BitStorage,List)",
            "void <init>(IdMap,Object,PalettedContainer$Strategy)",
            "DataResult unpack(IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO$PackedData pack(IdMap,PalettedContainer$Strategy)",
            "void swapPalette(int[],IntUnaryOperator)",
            "void lambda$count$13(PalettedContainer$CountConsumer,Int2IntMap$Entry)",
            "void lambda$count$12(Int2IntOpenHashMap,int)",
            "int lambda$pack$11(HashMapPalette,int)",
            "String lambda$unpack$10(SimpleBitStorage$InitializationException)",
            "int lambda$unpack$9(IdMap,Palette,int)",
            "int lambda$unpack$8(int,Object)",
            "void lambda$getAll$6(Consumer,Palette,int)",
            "PalettedContainerRO$PackedData lambda$codec$5(IdMap,PalettedContainer$Strategy,PalettedContainerRO)",
            "DataResult lambda$codec$4(PalettedContainerRO$Unpacker,IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "App lambda$codec$3(Codec,Object,RecordCodecBuilder$Instance)",
            "DataResult lambda$codecRO$2(IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO lambda$codecRO$1(PalettedContainer)",
            "int lambda$new$0(int,Object)"
          ],
          "removed": [
            "Codec codecRW(Codec,Strategy,Object)",
            "Codec codecRO(Codec,Strategy,Object)",
            "Codec codec(Codec,Strategy,Object,PalettedContainerRO$Unpacker)",
            "void <init>(Strategy,Configuration,BitStorage,Palette)",
            "void <init>(Object,Strategy)",
            "DataResult unpack(Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO$PackedData pack(Strategy)",
            "int[] reencodeContents(BitStorage,Palette,Palette)",
            "int bitsPerEntry()",
            "void lambda$count$10(PalettedContainer$CountConsumer,Int2IntMap$Entry)",
            "void lambda$count$9(Int2IntOpenHashMap,int)",
            "String lambda$unpack$8(SimpleBitStorage$InitializationException)",
            "String lambda$unpack$6(int,PalettedContainerRO$PackedData)",
            "void lambda$getAll$5(Consumer,Palette,int)",
            "PalettedContainerRO$PackedData lambda$codec$4(Strategy,PalettedContainerRO)",
            "DataResult lambda$codec$3(PalettedContainerRO$Unpacker,Strategy,PalettedContainerRO$PackedData)",
            "App lambda$codec$2(Codec,Object,RecordCodecBuilder$Instance)",
            "DataResult lambda$codecRO$1(Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO lambda$codecRO$0(PalettedContainer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.PhantomSpawner",
        "differences": {
          "added": [
            "void tick(ServerLevel,boolean,boolean)"
          ],
          "removed": [
            "void tick(ServerLevel,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.DerivedLevelData",
        "differences": {
          "added": [
            "WorldBorder$Settings getWorldBorder()",
            "void setWorldBorder(WorldBorder$Settings)"
          ],
          "removed": [
            "Optional getLegacyWorldBorderSettings()",
            "void setLegacyWorldBorderSettings(Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.shapes.EntityCollisionContext",
        "differences": {
          "added": [
            "void <clinit>()"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.blaze3d.vertex.DefaultVertexFormat",
            "XXX.blaze3d.vertex.MeshData$1",
            "XXX.blaze3d.vertex.MeshData$SortState",
            "XXX.blaze3d.vertex.PoseStack$Pose",
            "XXX.blaze3d.vertex.Tesselator",
            "XXX.blaze3d.vertex.VertexFormat",
            "XXX.blaze3d.vertex.VertexFormat$IndexType",
            "XXX.blaze3d.vertex.VertexFormatElement",
            "XXX.blaze3d.vertex.VertexFormatElement$Usage",
            "XXX.blaze3d.vertex.VertexMultiConsumer$Double",
            "XXX.blaze3d.vertex.VertexSorting",
            "XXX.blaze3d.vertex.package-info",
            "XXX.mojang.math.Constants",
            "XXX.mojang.math.FieldsAreNonnullByDefault",
            "XXX.mojang.math.MatrixUtil",
            "XXX.mojang.math.OctahedralGroup",
            "XXX.mojang.math.Quadrant",
            "XXX.mojang.math.Transformation",
            "XXX.mojang.realmsclient.RealmsAvailability",
            "XXX.mojang.realmsclient.RealmsAvailability$Type",
            "XXX.mojang.realmsclient.RealmsMainScreen$1",
            "XXX.mojang.realmsclient.RealmsMainScreen$AvailableSnapshotEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$Entry",
            "XXX.mojang.realmsclient.RealmsMainScreen$NotificationButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$ParentEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmsCall",
            "XXX.mojang.realmsclient.Unit",
            "XXX.realmsclient.client.FileDownload$DownloadCountingOutputStream",
            "XXX.realmsclient.client.FileDownload$ResourcePackProgressListener",
            "XXX.realmsclient.client.FileUpload$CustomInputStreamEntity",
            "XXX.realmsclient.client.Ping$Region",
            "XXX.realmsclient.client.RealmsClient$CompatibleVersionResponse",
            "XXX.realmsclient.client.RealmsClientConfig",
            "XXX.realmsclient.client.RealmsError$AuthenticationError",
            "XXX.realmsclient.client.RealmsError$ErrorWithJsonPayload",
            "XXX.realmsclient.client.Request",
            "XXX.realmsclient.client.Request$Get",
            "XXX.realmsclient.client.Request$Put",
            "XXX.realmsclient.client.package-info",
            "XXX.client.worldupload.RealmsUploadCanceledException",
            "XXX.client.worldupload.RealmsUploadFailedException",
            "XXX.client.worldupload.RealmsUploadWorldNotClosedException",
            "XXX.client.worldupload.RealmsWorldUpload",
            "XXX.client.worldupload.RealmsWorldUploadStatusTracker$1",
            "XXX.realmsclient.dto.Backup",
            "XXX.realmsclient.dto.Exclude",
            "XXX.realmsclient.dto.GuardedSerializer$1",
            "XXX.realmsclient.dto.PendingInvite",
            "XXX.realmsclient.dto.PingResult",
            "XXX.realmsclient.dto.PreferredRegionsDto",
            "XXX.realmsclient.dto.RealmsDescriptionDto",
            "XXX.realmsclient.dto.RealmsJoinInformation$RegionData",
            "XXX.realmsclient.dto.RealmsNotification",
            "XXX.realmsclient.dto.RealmsNotification$UrlButton",
            "XXX.realmsclient.dto.RealmsRegion",
            "XXX.realmsclient.dto.RealmsServer",
            "XXX.realmsclient.dto.RealmsServer$McoServerComparator",
            "XXX.realmsclient.dto.RealmsServer$WorldType",
            "XXX.realmsclient.dto.RealmsServerPlayerLists",
            "XXX.realmsclient.dto.RealmsSlot",
            "XXX.realmsclient.dto.RealmsSlotUpdateDto",
            "XXX.realmsclient.dto.RealmsWorldOptions",
            "XXX.realmsclient.dto.ReflectionBasedSerialization",
            "XXX.realmsclient.dto.RegionPingResult",
            "XXX.realmsclient.dto.RegionSelectionPreference$RegionSelectionPreferenceJsonAdapter",
            "XXX.realmsclient.dto.ServerActivity",
            "XXX.realmsclient.dto.ServiceQuality",
            "XXX.realmsclient.dto.Subscription",
            "XXX.realmsclient.dto.UploadInfo",
            "XXX.realmsclient.dto.WorldDownload",
            "XXX.realmsclient.dto.WorldTemplate$WorldTemplateType",
            "XXX.realmsclient.dto.package-info",
            "XXX.realmsclient.exception.RealmsHttpException",
            "XXX.realmsclient.exception.RetryCallException",
            "XXX.realmsclient.gui.RealmsDataFetcher",
            "XXX.realmsclient.gui.RealmsNewsManager",
            "XXX.realmsclient.gui.RealmsWorldSlotButton",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$State",
            "XXX.gui.screens.AddRealmPopupScreen",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsGenericErrorScreen$ErrorMessage",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$1",
            "XXX.gui.screens.RealmsNotificationsScreen$DataFetcherConfiguration",
            "XXX.gui.screens.RealmsPendingInvitesScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionList",
            "XXX.gui.screens.RealmsResetWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$FrameButton",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$Entry",
            "XXX.gui.screens.RealmsTermsScreen",
            "XXX.gui.screens.UploadResult",
            "XXX.screens.configuration.RealmsBackupInfoScreen",
            "XXX.screens.configuration.RealmsBackupInfoScreen$BackupInfoListEntry",
            "XXX.screens.configuration.RealmsBackupScreen$1",
            "XXX.screens.configuration.RealmsBackupScreen$Entry",
            "XXX.screens.configuration.RealmsConfigureWorldScreen",
            "XXX.screens.configuration.RealmsPlayersTab",
            "XXX.screens.configuration.RealmsPlayersTab$HeaderEntry",
            "XXX.screens.configuration.RealmsPlayersTab$PlayerEntry",
            "XXX.screens.configuration.RealmsPreferredRegionSelectionScreen$RegionSelectionList",
            "XXX.screens.configuration.RealmsSettingsTab",
            "XXX.screens.configuration.RealmsSlotOptionsScreen",
            "XXX.screens.configuration.RealmsSubscriptionTab",
            "XXX.screens.configuration.RealmsWorldsTab$1",
            "XXX.gui.screens.package-info",
            "XXX.gui.task.DataFetcher$ComputationResult",
            "XXX.gui.task.DataFetcher$Subscription",
            "XXX.gui.task.DataFetcher$Task",
            "XXX.gui.task.RepeatedDelayStrategy$1",
            "XXX.gui.task.package-info",
            "XXX.realmsclient.util.JsonUtils",
            "XXX.realmsclient.util.RealmsPersistence",
            "XXX.realmsclient.util.RealmsTextureManager",
            "XXX.realmsclient.util.RealmsUtil",
            "XXX.realmsclient.util.RealmsUtil$RealmsIoFunction",
            "XXX.realmsclient.util.TextRenderingUtils$Line",
            "XXX.realmsclient.util.UploadTokenCache",
            "XXX.util.task.CloseServerTask",
            "XXX.util.task.DownloadTask",
            "XXX.util.task.LongRunningTask",
            "XXX.util.task.RealmCreationTask",
            "XXX.util.task.ResettingWorldTask",
            "XXX.util.task.SwitchMinigameTask",
            "XXX.util.task.package-info",
            "net.minecraft.BlockUtil$FoundRectangle",
            "net.minecraft.CharPredicate",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.Optionull",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.SystemReport",
            "net.minecraft.Util",
            "net.minecraft.Util$10",
            "net.minecraft.Util$2",
            "net.minecraft.Util$6",
            "net.minecraft.Util$8",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "net.minecraft.WorldVersion$1",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.AdvancementHolder",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRequirements$Strategy",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.AdvancementTree$Listener",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.CollectionContentsPredicate",
            "XXX.advancements.critereon.CollectionContentsPredicate$Single",
            "XXX.advancements.critereon.CollectionCountsPredicate",
            "XXX.advancements.critereon.CollectionCountsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionCountsPredicate$Zero",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.ContextAwarePredicate",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DataComponentMatchers",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.DistanceTrigger$TriggerInstance",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$LocationWrapper",
            "XXX.advancements.critereon.EntitySubPredicates",
            "XXX.advancements.critereon.FallAfterExplosionTrigger",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InputPredicate",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger",
            "XXX.advancements.critereon.KilledByArrowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightningBoltPredicate",
            "XXX.advancements.critereon.LightningStrikeTrigger$TriggerInstance",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LootTableTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerInteractTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.PlayerPredicate$StatMatcher",
            "XXX.advancements.critereon.PlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeCraftedTrigger",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.SheepPredicate",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SimpleCriterionTrigger$SimpleInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.SlimePredicate",
            "XXX.advancements.critereon.StartRidingTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TagPredicate",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsingItemTrigger$TriggerInstance",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.Minecraft$ChatStatus",
            "XXX.minecraft.client.Minecraft$ChatStatus$2",
            "XXX.minecraft.client.Minecraft$ChatStatus$4",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.OptionInstance",
            "XXX.minecraft.client.OptionInstance$CaptionBasedToString",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet",
            "XXX.minecraft.client.OptionInstance$Enum",
            "XXX.minecraft.client.OptionInstance$IntRangeBase",
            "XXX.minecraft.client.OptionInstance$LazyEnum",
            "XXX.minecraft.client.OptionInstance$SliderableOrCyclableValueSet",
            "XXX.minecraft.client.OptionInstance$TooltipSupplier",
            "XXX.minecraft.client.OptionInstance$UnitDouble$1",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.Options$4",
            "XXX.minecraft.client.Options$FieldAccess",
            "XXX.minecraft.client.PeriodicNotificationManager",
            "XXX.minecraft.client.PeriodicNotificationManager$NotificationTask",
            "XXX.minecraft.client.ResourceLoadStateTracker",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadReason",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.StringSplitter",
            "XXX.minecraft.client.StringSplitter$FlatComponents",
            "XXX.minecraft.client.StringSplitter$LineComponent",
            "XXX.minecraft.client.StringSplitter$WidthLimitedCharSink",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.client.animation.AnimationChannel",
            "XXX.client.animation.AnimationChannel$Interpolations",
            "XXX.client.animation.AnimationChannel$Targets",
            "XXX.client.animation.AnimationDefinition$Builder",
            "XXX.client.animation.KeyframeAnimation",
            "XXX.client.animation.KeyframeAnimations",
            "XXX.animation.definitions.BatAnimation",
            "XXX.animation.definitions.CamelAnimation",
            "XXX.animation.definitions.CreakingAnimation",
            "XXX.animation.definitions.SnifferAnimation",
            "XXX.animation.definitions.package-info",
            "XXX.client.color.ColorLerper",
            "XXX.color.block.BlockColor",
            "XXX.color.block.BlockTintCache",
            "XXX.color.block.BlockTintCache$LatestCacheInfo",
            "XXX.color.item.Constant",
            "XXX.color.item.Dye",
            "XXX.color.item.GrassColorSource",
            "XXX.color.item.ItemTintSources",
            "XXX.color.item.Potion",
            "XXX.color.item.package-info",
            "XXX.client.data.AtlasProvider",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$BookSlotModelCacheKey",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ItemModelGenerators",
            "XXX.data.models.ItemModelOutput",
            "XXX.data.models.ModelProvider$BlockStateGeneratorCollector",
            "XXX.data.models.ModelProvider$SimpleModelCollector",
            "XXX.data.models.WaypointStyleProvider",
            "XXX.models.blockstates.ConditionBuilder",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.MultiVariantGenerator$Empty",
            "XXX.models.blockstates.PropertyDispatch",
            "XXX.models.blockstates.PropertyDispatch$C2",
            "XXX.models.blockstates.PropertyDispatch$C4",
            "XXX.models.blockstates.PropertyValueList",
            "XXX.models.model.DelegatedModel",
            "XXX.models.model.ModelInstance",
            "XXX.models.model.ModelTemplate",
            "XXX.models.model.TextureMapping",
            "XXX.models.model.TexturedModel",
            "XXX.models.model.package-info",
            "XXX.client.data.package-info",
            "XXX.client.gui.ComponentPath",
            "XXX.client.gui.ComponentPath$Path",
            "XXX.client.gui.Font$DisplayMode",
            "XXX.client.gui.Font$GlyphVisitor$1",
            "XXX.client.gui.Font$PreparedTextBuilder",
            "XXX.client.gui.GlyphSource",
            "XXX.client.gui.Gui$1DisplayEntry",
            "XXX.client.gui.Gui$HeartType",
            "XXX.client.gui.GuiGraphics",
            "XXX.client.gui.GuiGraphics$ScissorStack",
            "XXX.gui.components.AbstractButton",
            "XXX.gui.components.AbstractOptionSliderButton",
            "XXX.gui.components.AbstractSelectionList",
            "XXX.gui.components.AbstractSelectionList$Entry",
            "XXX.gui.components.AbstractSliderButton",
            "XXX.gui.components.AbstractTextAreaWidget",
            "XXX.gui.components.BossHealthOverlay",
            "XXX.gui.components.Button",
            "XXX.gui.components.Button$CreateNarration",
            "XXX.gui.components.ChatComponent",
            "XXX.gui.components.ChatComponent$ChatMethod$1",
            "XXX.gui.components.ChatComponent$DelayedMessageDeletion",
            "XXX.gui.components.ChatComponent$LineConsumer",
            "XXX.gui.components.Checkbox",
            "XXX.gui.components.Checkbox$OnValueChange",
            "XXX.gui.components.CommandSuggestions$SuggestionsList",
            "XXX.gui.components.ComponentRenderUtils",
            "XXX.gui.components.ContainerObjectSelectionList$1",
            "XXX.gui.components.CycleButton",
            "XXX.gui.components.CycleButton$OnValueChange",
            "XXX.gui.components.CycleButton$ValueListSupplier$1",
            "XXX.gui.components.DebugScreenOverlay",
            "XXX.gui.components.EditBox",
            "XXX.gui.components.FittingMultiLineTextWidget",
            "XXX.gui.components.FocusableTextWidget$BackgroundFill",
            "XXX.gui.components.ImageWidget",
            "XXX.gui.components.ImageWidget$Texture",
            "XXX.gui.components.LerpingBossEvent",
            "XXX.gui.components.LockIconButton",
            "XXX.gui.components.LogoRenderer",
            "XXX.gui.components.MultiLineEditBox$Builder",
            "XXX.gui.components.MultiLineLabel$1",
            "XXX.gui.components.MultiLineLabel$Align",
            "XXX.gui.components.MultiLineLabel$Align$2",
            "XXX.gui.components.MultiLineLabel$TextAndWidth",
            "XXX.gui.components.MultiLineTextWidget$CacheKey",
            "XXX.gui.components.MultilineTextField$1",
            "XXX.gui.components.ObjectSelectionList",
            "XXX.gui.components.OptionsList",
            "XXX.gui.components.OptionsList$OptionEntry",
            "XXX.gui.components.PlayerFaceRenderer",
            "XXX.gui.components.PlayerTabOverlay",
            "XXX.gui.components.PlayerTabOverlay$ScoreDisplayEntry",
            "XXX.gui.components.PopupScreen$Builder",
            "XXX.gui.components.Renderable",
            "XXX.gui.components.ScrollableLayout$Container",
            "XXX.gui.components.SpriteIconButton",
            "XXX.gui.components.SpriteIconButton$CenteredIcon",
            "XXX.gui.components.StateSwitchingButton",
            "XXX.gui.components.StringWidget$TextOverflow",
            "XXX.gui.components.SubtitleOverlay$SoundPlayedAt",
            "XXX.gui.components.TabButton",
            "XXX.gui.components.Tooltip",
            "XXX.gui.components.WidgetSprites",
            "XXX.components.debug.DebugEntryBiome",
            "XXX.components.debug.DebugEntryChunkGeneration",
            "XXX.components.debug.DebugEntryChunkSourceStats",
            "XXX.components.debug.DebugEntryFps",
            "XXX.components.debug.DebugEntryHeightmap",
            "XXX.components.debug.DebugEntryLocalDifficulty",
            "XXX.components.debug.DebugEntryLookingAtEntity",
            "XXX.components.debug.DebugEntryMemory",
            "XXX.components.debug.DebugEntryNoop",
            "XXX.components.debug.DebugEntryPosition",
            "XXX.components.debug.DebugEntryPostEffect",
            "XXX.components.debug.DebugEntrySimplePerformanceImpactors",
            "XXX.components.debug.DebugEntrySpawnCounts",
            "XXX.components.debug.DebugEntryTps",
            "XXX.components.debug.DebugScreenDisplayer",
            "XXX.components.debug.DebugScreenEntry",
            "XXX.components.debug.DebugScreenEntryList$SerializedOptions",
            "XXX.components.debug.DebugScreenProfile",
            "XXX.components.debugchart.AbstractDebugChart",
            "XXX.components.debugchart.FpsDebugChart",
            "XXX.components.debugchart.ProfilerPieChart",
            "XXX.components.debugchart.package-info",
            "XXX.components.events.ContainerEventHandler",
            "XXX.components.events.package-info",
            "XXX.components.spectator.SpectatorGui",
            "XXX.components.tabs.GridLayoutTab",
            "XXX.components.tabs.Tab",
            "XXX.components.tabs.TabNavigationBar",
            "XXX.components.tabs.package-info",
            "XXX.components.toasts.NowPlayingToast",
            "XXX.components.toasts.RecipeToast$Entry",
            "XXX.components.toasts.SystemToast$SystemToastId",
            "XXX.components.toasts.Toast$Visibility",
            "XXX.components.toasts.ToastManager$ToastInstance",
            "XXX.components.toasts.TutorialToast$Icons",
            "XXX.gui.contextualbar.ContextualBarRenderer",
            "XXX.gui.contextualbar.ExperienceBarRenderer",
            "XXX.gui.contextualbar.LocatorBarRenderer",
            "XXX.gui.font.AllMissingGlyphProvider",
            "XXX.gui.font.AtlasGlyphProvider",
            "XXX.gui.font.AtlasGlyphProvider$Instance",
            "XXX.gui.font.CodepointMap$Output",
            "XXX.gui.font.FontManager$BuilderId",
            "XXX.gui.font.FontManager$CachedFontProvider",
            "XXX.gui.font.FontManager$FontDefinitionFile",
            "XXX.gui.font.FontManager$UnresolvedBuilderBundle",
            "XXX.gui.font.FontOption$Filter",
            "XXX.gui.font.FontSet$1",
            "XXX.gui.font.FontSet$DelayedBake",
            "XXX.gui.font.FontSet$Source",
            "XXX.gui.font.FontTexture$Node",
            "XXX.gui.font.GlyphRenderTypes$1",
            "XXX.gui.font.PlainTextRenderable",
            "XXX.gui.font.PlayerGlyphProvider$1",
            "XXX.gui.font.PlayerGlyphProvider$Instance",
            "XXX.gui.font.TextFieldHelper",
            "XXX.gui.font.TextRenderable",
            "XXX.font.glyphs.BakedSheetGlyph",
            "XXX.font.glyphs.BakedSheetGlyph$GlyphInstance",
            "XXX.font.glyphs.EmptyGlyph",
            "XXX.font.glyphs.SpecialGlyphs",
            "XXX.font.glyphs.SpecialGlyphs$PixelProvider",
            "XXX.gui.font.package-info",
            "XXX.font.providers.BitmapProvider$Definition",
            "XXX.font.providers.BitmapProvider$Glyph$1",
            "XXX.font.providers.GlyphProviderDefinition",
            "XXX.font.providers.GlyphProviderDefinition$Loader",
            "XXX.font.providers.GlyphProviderType",
            "XXX.font.providers.TrueTypeGlyphProviderDefinition",
            "XXX.font.providers.UnihexProvider",
            "XXX.font.providers.UnihexProvider$Definition",
            "XXX.font.providers.UnihexProvider$Glyph",
            "XXX.font.providers.UnihexProvider$Glyph$2",
            "XXX.font.providers.UnihexProvider$LineData",
            "XXX.font.providers.UnihexProvider$ReaderOutput",
            "XXX.font.providers.package-info",
            "XXX.gui.layouts.AbstractLayout$AbstractChildWrapper",
            "XXX.gui.layouts.EqualSpacingLayout",
            "XXX.gui.layouts.EqualSpacingLayout$Orientation",
            "XXX.gui.layouts.FrameLayout$ChildContainer",
            "XXX.gui.layouts.GridLayout$CellInhabitant",
            "XXX.gui.layouts.HeaderAndFooterLayout",
            "XXX.gui.layouts.LayoutElement",
            "XXX.gui.layouts.LayoutSettings$LayoutSettingsImpl",
            "XXX.gui.layouts.LinearLayout$Orientation",
            "XXX.gui.layouts.package-info",
            "XXX.gui.narration.NarratableEntry$NarrationPriority",
            "XXX.gui.narration.NarrationElementOutput",
            "XXX.gui.narration.NarrationThunk",
            "XXX.gui.narration.ScreenNarrationCollector$1",
            "XXX.gui.narration.ScreenNarrationCollector$NarrationEntry",
            "XXX.gui.narration.package-info",
            "XXX.gui.screens.ErrorScreen",
            "XXX.gui.screens.GenericMessageScreen",
            "XXX.gui.screens.InBedChatScreen",
            "XXX.gui.screens.LevelLoadingScreen$Reason",
            "XXX.gui.screens.LoadingOverlay",
            "XXX.client.main.GameConfig",
            "XXX.client.main.GameConfig$GameData",
            "XXX.client.main.GameConfig$QuickPlayDisabled",
            "XXX.client.main.GameConfig$QuickPlayRealmsData",
            "XXX.client.main.GameConfig$QuickPlayVariant",
            "XXX.client.main.Main",
            "XXX.client.main.Main$2",
            "XXX.client.main.package-info",
            "XXX.client.model.AbstractEquineModel",
            "XXX.client.model.AbstractZombieModel",
            "XXX.client.model.AllayModel",
            "XXX.client.model.ArmadilloModel",
            "XXX.client.model.ArmorStandArmorModel",
            "XXX.client.model.ArrowModel",
            "XXX.client.model.BabyModelTransform",
            "XXX.client.model.BannerModel",
            "XXX.client.model.BeeModel",
            "XXX.client.model.BellModel",
            "XXX.client.model.BellModel$State",
            "XXX.client.model.BoatModel",
            "XXX.client.model.BookModel",
            "XXX.client.model.BreezeModel",
            "XXX.client.model.CamelSaddleModel",
            "XXX.client.model.ChestModel",
            "XXX.client.model.CodModel",
            "XXX.client.model.ColdCowModel",
            "XXX.client.model.CopperGolemModel",
            "XXX.client.model.CowModel",
            "XXX.client.model.CreeperModel",
            "XXX.client.model.DonkeyModel",
            "XXX.client.model.ElytraModel",
            "XXX.client.model.EndermanModel",
            "XXX.client.model.EntityModel",
            "XXX.client.model.EvokerFangsModel",
            "XXX.client.model.FoxModel",
            "XXX.client.model.GhastModel",
            "XXX.client.model.GoatModel",
            "XXX.client.particle.DustColorTransitionParticle",
            "XXX.client.particle.DustParticle",
            "XXX.client.particle.DustParticleBase",
            "XXX.client.particle.DustPlumeParticle$Provider",
            "XXX.client.particle.LargeSmokeParticle",
            "XXX.client.particle.LavaParticle",
            "XXX.client.particle.MobAppearanceParticle",
            "XXX.client.particle.NoRenderParticle",
            "XXX.client.particle.ParticleEngine$MutableSpriteSet",
            "XXX.client.particle.ReversePortalParticle",
            "XXX.client.particle.RisingParticle",
            "XXX.client.particle.SculkChargeParticle$Provider",
            "XXX.client.particle.SculkChargePopParticle$Provider",
            "XXX.client.particle.ShriekParticle$Provider",
            "XXX.client.particle.SingleQuadParticle",
            "XXX.client.particle.TextureSheetParticle",
            "XXX.client.particle.TotemParticle$Provider",
            "XXX.client.particle.TrailParticle",
            "XXX.client.particle.TrialSpawnerDetectionParticle",
            "XXX.client.particle.VibrationSignalParticle",
            "XXX.client.particle.WakeParticle",
            "XXX.client.particle.WaterCurrentDownParticle",
            "XXX.client.particle.WaterDropParticle",
            "XXX.client.particle.WhiteAshParticle",
            "XXX.client.particle.WhiteSmokeParticle",
            "XXX.client.particle.package-info",
            "XXX.client.player.ClientInput",
            "XXX.client.player.LocalPlayer",
            "XXX.client.player.RemotePlayer",
            "XXX.player.inventory.package-info",
            "XXX.client.profiling.ClientMetricsSamplersProvider",
            "XXX.client.quickplay.QuickPlay",
            "XXX.client.quickplay.QuickPlayLog$1",
            "XXX.client.quickplay.QuickPlayLog$QuickPlayWorld",
            "XXX.client.quickplay.package-info",
            "XXX.client.renderer.CachedOrthoProjectionMatrixBuffer",
            "XXX.client.renderer.CloudRenderer",
            "XXX.client.renderer.CloudRenderer$TextureData",
            "XXX.client.renderer.DimensionSpecialEffects",
            "XXX.client.renderer.DimensionSpecialEffects$NetherEffects",
            "XXX.client.renderer.DimensionSpecialEffects$SkyType",
            "XXX.client.renderer.DynamicUniformStorage$DynamicUniform",
            "XXX.client.renderer.DynamicUniforms$Transform",
            "XXX.client.renderer.FaceInfo",
            "XXX.client.renderer.FaceInfo$VertexInfo",
            "XXX.client.renderer.GlobalSettingsUniform",
            "XXX.client.renderer.GpuWarnlistManager$Preparations",
            "XXX.client.renderer.ItemBlockRenderTypes$2",
            "XXX.client.renderer.ItemInHandRenderer$1",
            "XXX.client.renderer.LevelEventHandler",
            "XXX.client.renderer.LevelRenderer",
            "XXX.client.renderer.LevelRenderer$BrightnessGetter",
            "XXX.client.renderer.LightTexture",
            "XXX.client.renderer.MappableRingBuffer",
            "XXX.client.renderer.MultiBufferSource",
            "XXX.client.renderer.Octree",
            "XXX.client.renderer.Octree$Branch",
            "XXX.client.renderer.Octree$Node",
            "XXX.client.renderer.OrderedSubmitNodeCollector",
            "XXX.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
            "XXX.client.renderer.PerspectiveProjectionMatrixBuffer",
            "XXX.client.renderer.PlayerSkinRenderCache$1",
            "XXX.client.renderer.PlayerSkinRenderCache$RenderInfo",
            "XXX.client.renderer.PostChain$TargetBundle",
            "XXX.client.renderer.PostChainConfig",
            "XXX.client.renderer.PostChainConfig$InternalTarget",
            "XXX.client.renderer.PostChainConfig$TargetInput",
            "XXX.client.renderer.PostPass",
            "XXX.client.renderer.PostPass$TargetInput",
            "XXX.client.renderer.SubmitNodeStorage",
            "XXX.client.renderer.SubmitNodeStorage$BlockSubmit",
            "XXX.client.renderer.SubmitNodeStorage$FlameSubmit",
            "XXX.client.renderer.SubmitNodeStorage$ItemSubmit",
            "XXX.client.renderer.SubmitNodeStorage$ModelPartSubmit",
            "XXX.client.renderer.SubmitNodeStorage$MovingBlockSubmit",
            "XXX.client.renderer.SubmitNodeStorage$ShadowSubmit",
            "XXX.client.renderer.SubmitNodeStorage$TranslucentModelSubmit",
            "XXX.client.renderer.UniformValue$FloatUniform",
            "XXX.client.renderer.UniformValue$IntUniform",
            "XXX.client.renderer.UniformValue$Type",
            "XXX.client.renderer.UniformValue$Vec3Uniform",
            "XXX.client.renderer.ViewArea",
            "XXX.client.renderer.WeatherEffectRenderer",
            "XXX.client.renderer.WorldBorderRenderer",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionRenderStorage",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$Deserializer",
            "XXX.block.model.BlockElementFace$Deserializer",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModelDefinition$MultiPartDefinition",
            "XXX.block.model.BlockModelPart",
            "XXX.block.model.BlockStateModel",
            "XXX.block.model.BlockStateModel$SimpleCachedUnbakedRoot$1",
            "XXX.block.model.BlockStateModel$UnbakedRoot",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.SimpleUnbakedGeometry",
            "XXX.block.model.SingleVariant$Unbaked",
            "XXX.block.model.TextureSlots$Data",
            "XXX.block.model.TextureSlots$Reference",
            "XXX.block.model.TextureSlots$SlotContents",
            "XXX.block.model.Variant",
            "XXX.block.model.VariantMutator",
            "XXX.block.model.VariantSelector",
            "XXX.model.multipart.CombinedCondition$Operation",
            "XXX.model.multipart.CombinedCondition$Operation$2",
            "XXX.model.multipart.KeyValueCondition",
            "XXX.model.multipart.KeyValueCondition$Terms",
            "XXX.model.multipart.MultiPartModel$Selector",
            "XXX.model.multipart.MultiPartModel$Unbaked",
            "XXX.model.multipart.MultiPartModel$Unbaked$1Key",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.blockentity.CopperGolemStatueBlockRenderer",
            "XXX.renderer.blockentity.EnchantTableRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$AttachmentType",
            "XXX.renderer.blockentity.LecternRenderer",
            "XXX.renderer.blockentity.ShelfRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer$ShulkerBoxModel",
            "XXX.renderer.blockentity.SignRenderer$Models",
            "XXX.renderer.blockentity.SkullBlockRenderer$1",
            "XXX.renderer.blockentity.TestInstanceRenderer",
            "XXX.renderer.blockentity.TheEndPortalRenderer",
            "XXX.renderer.blockentity.VaultRenderer",
            "XXX.renderer.chunk.ChunkSectionLayer",
            "XXX.renderer.chunk.ChunkSectionsToRender",
            "XXX.renderer.chunk.CompiledSectionMesh",
            "XXX.renderer.chunk.CompiledSectionMesh$2",
            "XXX.renderer.chunk.RenderSectionRegion",
            "XXX.renderer.chunk.SectionCompiler",
            "XXX.renderer.chunk.SectionCopy",
            "XXX.renderer.chunk.SectionRenderDispatcher",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$CompileTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$ResortTransparencyTask",
            "XXX.renderer.chunk.TranslucencyPointOfView",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$HiveDebugInfo",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedGameEvent",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.LightSectionDebugRenderer$SectionData",
            "XXX.renderer.debug.OctreeDebugRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.SupportBlockRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractHoglinRenderer",
            "XXX.renderer.entity.AbstractMinecartRenderer",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.AllayRenderer",
            "XXX.renderer.entity.ArmorModelSet",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.AxolotlRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.BreezeRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CopperGolemRenderer",
            "XXX.renderer.entity.CreakingRenderer",
            "XXX.renderer.entity.DisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$BlockDisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$TextDisplayRenderer",
            "XXX.renderer.entity.DonkeyRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EntityRendererProvider$Context",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.FrogRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.GoatRenderer",
            "XXX.renderer.entity.HappyGhastRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.ParrotRenderer$1",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RabbitRenderer$1",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnifferRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TropicalFishRenderer$1",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WindChargeRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZoglinRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.BlockDecorationLayer",
            "XXX.entity.layers.BreezeWindLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.EquipmentLayerRenderer$LayerTextureKey",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseMarkingLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer$AlphaFunction",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.RopesLayer",
            "XXX.entity.layers.SheepWoolUndercoatLayer",
            "XXX.entity.layers.SkeletonClothingLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer$PlacementStyle",
            "XXX.entity.layers.TropicalFishPatternLayer$1",
            "XXX.entity.layers.WingsLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.entity.state.ArmadilloRenderState",
            "XXX.entity.state.ArmorStandRenderState",
            "XXX.entity.state.PolarBearRenderState",
            "XXX.entity.state.RabbitRenderState",
            "XXX.entity.state.SalmonRenderState",
            "XXX.entity.state.SheepRenderState",
            "XXX.entity.state.ShulkerRenderState",
            "XXX.entity.state.SlimeRenderState",
            "XXX.entity.state.SnowGolemRenderState",
            "XXX.entity.state.StriderRenderState",
            "XXX.entity.state.ThrownItemRenderState",
            "XXX.entity.state.TippableArrowRenderState",
            "XXX.entity.state.TropicalFishRenderState",
            "XXX.entity.state.VexRenderState",
            "XXX.entity.state.VillagerRenderState",
            "XXX.entity.state.WitchRenderState",
            "XXX.entity.state.WitherSkullRenderState",
            "XXX.entity.state.ZombieRenderState",
            "XXX.entity.state.ZombifiedPiglinRenderState",
            "XXX.renderer.feature.BlockFeatureRenderer",
            "XXX.renderer.feature.FeatureRenderDispatcher",
            "XXX.renderer.feature.HitboxFeatureRenderer",
            "XXX.renderer.feature.LeashFeatureRenderer",
            "XXX.renderer.feature.ModelFeatureRenderer$CrumblingOverlay",
            "XXX.renderer.feature.NameTagFeatureRenderer",
            "XXX.client.resources.SkinManager",
            "XXX.client.resources.SkinManager$2",
            "XXX.client.resources.SkinManager$TextureCache",
            "XXX.client.resources.WaypointStyle",
            "XXX.resources.language.ClientLanguage",
            "XXX.resources.language.I18n",
            "XXX.resources.language.LanguageManager",
            "XXX.metadata.animation.AnimationFrame",
            "XXX.metadata.animation.FrameSize",
            "XXX.metadata.animation.VillagerMetadataSection$Hat",
            "XXX.metadata.gui.GuiMetadataSection",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice",
            "XXX.metadata.gui.GuiSpriteScaling$Stretch",
            "XXX.metadata.gui.GuiSpriteScaling$Type",
            "XXX.metadata.language.LanguageMetadataSection",
            "XXX.resources.metadata.package-info",
            "XXX.metadata.texture.package-info",
            "XXX.resources.model.AtlasManager$AtlasConfig",
            "XXX.resources.model.AtlasManager$PendingStitch",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.BlockStateDefinitions",
            "XXX.resources.model.BlockStateModelLoader$LoadedBlockModelDefinition",
            "XXX.resources.model.ClientItemInfoLoader",
            "XXX.resources.model.ClientItemInfoLoader$PendingLoad",
            "XXX.resources.model.EquipmentClientInfo",
            "XXX.resources.model.EquipmentClientInfo$Dyeable",
            "XXX.resources.model.EquipmentClientInfo$LayerType",
            "XXX.resources.model.MaterialSet",
            "XXX.resources.model.ModelBaker",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$MissingModels",
            "XXX.resources.model.ModelBakery$ModelBakerImpl",
            "XXX.resources.model.ModelDiscovery",
            "XXX.resources.model.ModelDiscovery$Slot",
            "XXX.resources.model.ModelGroupCollector$GroupKey",
            "XXX.resources.model.ModelManager$1",
            "XXX.resources.model.ModelManager$ResolvedModels",
            "XXX.resources.model.QuadCollection",
            "XXX.resources.model.ResolvableModel",
            "XXX.resources.model.ResolvedModel",
            "XXX.resources.model.UnbakedGeometry",
            "XXX.resources.model.UnbakedModel$GuiLight",
            "XXX.resources.model.WeightedVariants$Unbaked",
            "XXX.client.resources.package-info",
            "XXX.resources.server.DownloadedPackSource$1",
            "XXX.resources.server.DownloadedPackSource$3",
            "XXX.resources.server.DownloadedPackSource$5",
            "XXX.resources.server.DownloadedPackSource$7",
            "XXX.resources.server.PackDownloader",
            "XXX.resources.server.PackLoadFeedback$FinalResult",
            "XXX.resources.server.PackReloadConfig",
            "XXX.resources.server.PackReloadConfig$IdAndPath",
            "XXX.resources.server.ServerPackManager$1",
            "XXX.resources.server.ServerPackManager$PackDownloadStatus",
            "XXX.resources.server.ServerPackManager$RemovalReason",
            "XXX.resources.server.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.DirectionalSoundInstance",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.SnifferSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.IdSearchTree",
            "XXX.client.searchtree.MergingUniqueIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree$1",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.ChunkedSampleByteBuf",
            "XXX.client.sounds.FloatSampleSource",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.MusicManager$MusicFrequency",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEngine$PlayResult",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.telemetry.TelemetryEventInstance",
            "XXX.client.telemetry.TelemetryEventLogger",
            "XXX.client.telemetry.TelemetryEventType",
            "XXX.client.telemetry.TelemetryLogManager",
            "XXX.client.telemetry.TelemetryProperty$Exporter",
            "XXX.client.telemetry.TelemetryProperty$ServerType",
            "XXX.client.telemetry.TelemetryPropertyMap$1",
            "XXX.client.telemetry.WorldSessionTelemetryManager",
            "XXX.telemetry.events.GameLoadTimesEvent",
            "XXX.telemetry.events.PerformanceMetricsEvent",
            "XXX.telemetry.events.WorldLoadEvent$1",
            "XXX.telemetry.events.WorldUnloadEvent",
            "XXX.client.telemetry.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.client.waypoints.package-info",
            "XXX.minecraft.commands.CacheableFunction",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandResultCallback$1",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$2$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.PermissionSource",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.HexColorArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrIdArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$InlineResult",
            "XXX.commands.arguments.ResourceOrIdArgument$LootPredicateArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$ReferenceResult",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ResourceSelectorArgument",
            "XXX.commands.arguments.ResourceSelectorArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$TagLookupRule",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$1",
            "XXX.arguments.item.ItemParser$State",
            "XXX.arguments.item.ItemParser$Visitor",
            "XXX.arguments.item.ItemPredicateArgument$ComponentWrapper",
            "XXX.arguments.item.ItemPredicateArgument$PredicateWrapper",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.execution.CommandQueueEntry",
            "XXX.commands.execution.CustomCommandExecutor$CommandAdapter",
            "XXX.commands.execution.CustomModifierExecutor",
            "XXX.commands.execution.EntryAction",
            "XXX.commands.execution.ExecutionControl",
            "XXX.commands.execution.Frame",
            "XXX.commands.execution.TraceCallbacks",
            "XXX.commands.execution.package-info",
            "XXX.execution.tasks.BuildContexts$Continuation",
            "XXX.execution.tasks.BuildContexts$Unbound",
            "XXX.execution.tasks.ContinuationTask",
            "XXX.execution.tasks.ExecuteCommand",
            "XXX.execution.tasks.IsolatedCall",
            "XXX.commands.functions.CommandFunction",
            "XXX.commands.functions.InstantiatedFunction",
            "XXX.commands.functions.MacroFunction$Entry",
            "XXX.commands.functions.MacroFunction$PlainTextEntry",
            "XXX.commands.functions.StringTemplate",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$RegisteredSuggestion",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockBox",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockPos$7",
            "XXX.minecraft.core.BlockPos$TraversalNodeStatus",
            "XXX.minecraft.core.Cloner",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$1",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$1",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.MappedRegistry$3",
            "XXX.minecraft.core.MappedRegistry$TagSet$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$PendingTags",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$1Entry",
            "XXX.minecraft.core.RegistrySetBuilder$3",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagRegistryLookup",
            "XXX.minecraft.core.RegistrySetBuilder$PatchedRegistries",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalOwner",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.cauldron.package-info",
            "XXX.core.component.DataComponentExactPredicate$Builder",
            "XXX.core.component.DataComponentHolder",
            "XXX.core.component.DataComponentMap$1",
            "XXX.core.component.DataComponentMap$3",
            "XXX.core.component.DataComponentMap$Builder$SimpleMap",
            "XXX.core.component.DataComponentPatch$1",
            "XXX.core.component.DataComponentPatch$3",
            "XXX.core.component.DataComponentPatch$CodecGetter",
            "XXX.core.component.DataComponentPatch$SplitResult",
            "XXX.core.component.DataComponentType$Builder",
            "XXX.core.component.DataComponents",
            "XXX.core.component.TypedDataComponent",
            "XXX.core.component.package-info",
            "XXX.component.predicates.AttributeModifiersPredicate$EntryPredicate",
            "XXX.component.predicates.ContainerPredicate",
            "XXX.component.predicates.DamagePredicate",
            "XXX.component.predicates.DataComponentPredicate$Single",
            "XXX.component.predicates.DataComponentPredicates",
            "XXX.component.predicates.EnchantmentsPredicate$Enchantments",
            "XXX.component.predicates.FireworkExplosionPredicate",
            "XXX.component.predicates.FireworksPredicate",
            "XXX.component.predicates.PotionsPredicate",
            "XXX.component.predicates.WritableBookPredicate",
            "XXX.component.predicates.WrittenBookPredicate",
            "XXX.component.predicates.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.EquipmentDispenseItemBehavior",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.ExplosionParticleInfo",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.AtlasIds",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.DatapackStructureReport",
            "XXX.data.info.DatapackStructureReport$Entry",
            "XXX.data.info.DatapackStructureReport$Report",
            "XXX.data.info.PacketReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$MissingTableProblem",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.LootData",
            "XXX.loot.packs.TradeRebalanceLootTableProvider",
            "XXX.loot.packs.VanillaBlockInteractLoot",
            "XXX.loot.packs.VanillaChargedCreeperExplosionLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.VanillaShearingLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder$1",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$FamilyRecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner$1",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.TransmuteRecipeBuilder",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.recipes.packs.VanillaRecipeProvider$TrimTemplate",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.TradeRebalanceRegistries",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtDatafixer",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.EnchantmentTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagAppender$1",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.VanillaBlockTagsProvider",
            "XXX.data.tags.VanillaEnchantmentTagsProvider",
            "XXX.data.tags.VanillaItemTagsProvider$1",
            "XXX.data.tags.WorldPresetTagsProvider",
            "XXX.data.worldgen.AncientCityStructurePieces",
            "XXX.data.worldgen.BastionBridgePools",
            "XXX.data.worldgen.BastionHousingUnitsPools",
            "XXX.data.worldgen.BastionSharedPools",
            "XXX.data.worldgen.BiomeDefaultFeatures",
            "XXX.data.worldgen.Carvers",
            "XXX.data.worldgen.DimensionTypes",
            "XXX.data.worldgen.PillagerOutpostPools",
            "XXX.data.worldgen.Pools",
            "XXX.data.worldgen.SavannaVillagePools",
            "XXX.data.worldgen.StructureSets",
            "XXX.data.worldgen.SurfaceRuleData",
            "XXX.data.worldgen.TerrainProvider",
            "XXX.data.worldgen.TrialChambersStructurePools",
            "XXX.worldgen.biome.BiomeData",
            "XXX.worldgen.biome.NetherBiomes",
            "XXX.worldgen.biome.package-info",
            "XXX.worldgen.features.CaveFeatures",
            "XXX.worldgen.features.FeatureUtils",
            "XXX.worldgen.features.NetherFeatures",
            "XXX.worldgen.features.PileFeatures",
            "XXX.worldgen.features.VegetationFeatures",
            "XXX.data.worldgen.package-info",
            "XXX.worldgen.placement.CavePlacements",
            "XXX.worldgen.placement.MiscOverworldPlacements",
            "XXX.worldgen.placement.OrePlacements",
            "XXX.worldgen.placement.TreePlacements",
            "XXX.worldgen.placement.VillagePlacements",
            "XXX.minecraft.gametest.Main",
            "XXX.gametest.framework.BuiltinTestFunctions",
            "XXX.gametest.framework.FailedTestTracker",
            "XXX.gametest.framework.GameTestAssertException",
            "XXX.gametest.framework.GameTestBatch",
            "XXX.gametest.framework.GameTestBatchFactory$TestDecorator",
            "XXX.gametest.framework.GameTestEnvironments",
            "XXX.gametest.framework.GameTestException",
            "XXX.gametest.framework.GameTestHelper$1",
            "XXX.gametest.framework.GameTestHelper$3",
            "XXX.gametest.framework.GameTestInstance",
            "XXX.gametest.framework.GameTestListener",
            "XXX.gametest.framework.GameTestRunner",
            "XXX.gametest.framework.GameTestRunner$Builder",
            "XXX.gametest.framework.GameTestRunner$StructureSpawner",
            "XXX.gametest.framework.GameTestSequence$Condition",
            "XXX.gametest.framework.GameTestServer$1",
            "XXX.gametest.framework.GameTestServer$MockUserNameToIdResolver",
            "XXX.gametest.framework.GameTestTicker$State",
            "XXX.gametest.framework.GeneratedTest",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureGridSpawner",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestCommand$TestBatchSummaryDisplayer",
            "XXX.gametest.framework.TestData",
            "XXX.gametest.framework.TestEnvironmentDefinition$AllOf",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules",
            "XXX.gametest.framework.TestEnvironmentDefinition$TimeOfDay",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather$Type",
            "XXX.gametest.framework.TestFinder$Builder",
            "XXX.gametest.framework.TestInstanceFinder",
            "XXX.gametest.framework.TestReporter",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.DeprecatedTranslationsInfo",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CollectionTag$1",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounterException",
            "XXX.minecraft.nbt.NbtFormatException",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.PrimitiveTag",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.SnbtGrammar$1",
            "XXX.minecraft.nbt.SnbtGrammar$3",
            "XXX.minecraft.nbt.SnbtGrammar$5",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$1",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$3",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerLiteral",
            "XXX.minecraft.nbt.SnbtGrammar$Sign",
            "XXX.minecraft.nbt.SnbtGrammar$SignedPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$TypeSuffix",
            "XXX.minecraft.nbt.SnbtOperations$1",
            "XXX.minecraft.nbt.SnbtOperations$3",
            "XXX.minecraft.nbt.SnbtOperations$BuiltinOperation",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.CollectToTag$ContainerBuilder",
            "XXX.nbt.visitors.CollectToTag$RootBuilder",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.HashedPatchMap",
            "XXX.minecraft.network.HashedStack",
            "XXX.minecraft.network.HashedStack$ActualItem",
            "XXX.minecraft.network.LocalFrameDecoder",
            "XXX.minecraft.network.LpVec3",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.ProtocolInfo",
            "XXX.minecraft.network.ProtocolInfo$Details$PacketVisitor",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.RegistryFriendlyByteBuf",
            "XXX.minecraft.network.SkipPacketDecoderException",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.UnconfiguredPipelineHandler",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$InboundConfigurationTask",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$OutboundConfigurationTask",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.ClickEvent$ChangePage",
            "XXX.network.chat.ClickEvent$Custom",
            "XXX.network.chat.ClickEvent$OpenUrl",
            "XXX.network.chat.ClickEvent$ShowDialog",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentSerialization$1",
            "XXX.network.chat.ComponentSerialization$StrictEither",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FontDescription",
            "XXX.network.chat.FontDescription$PlayerSprite",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ShowEntity",
            "XXX.network.chat.HoverEvent$ShowText",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.ObjectContents",
            "XXX.chat.contents.PlainTextContents$1",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.contents.data.BlockDataSource",
            "XXX.contents.data.DataSources",
            "XXX.contents.data.StorageDataSource",
            "XXX.contents.objects.AtlasSprite",
            "XXX.contents.objects.ObjectInfos",
            "XXX.contents.objects.package-info",
            "XXX.chat.numbers.BlankFormat",
            "XXX.chat.numbers.FixedFormat",
            "XXX.chat.numbers.NumberFormat",
            "XXX.chat.numbers.NumberFormatTypes",
            "XXX.chat.numbers.StyledFormat$1",
            "XXX.network.chat.package-info",
            "XXX.network.codec.ByteBufCodecs$1",
            "XXX.network.codec.ByteBufCodecs$11",
            "XXX.network.codec.ByteBufCodecs$13",
            "XXX.network.codec.ByteBufCodecs$15",
            "XXX.network.codec.ByteBufCodecs$17",
            "XXX.network.codec.ByteBufCodecs$19",
            "XXX.network.codec.ByteBufCodecs$20",
            "XXX.network.codec.ByteBufCodecs$22",
            "XXX.network.codec.ByteBufCodecs$24",
            "XXX.network.codec.ByteBufCodecs$26",
            "XXX.network.codec.ByteBufCodecs$28",
            "XXX.network.codec.ByteBufCodecs$3",
            "XXX.network.codec.ByteBufCodecs$31",
            "XXX.network.codec.ByteBufCodecs$33",
            "XXX.network.codec.ByteBufCodecs$35",
            "XXX.network.codec.ByteBufCodecs$5",
            "XXX.network.codec.ByteBufCodecs$7",
            "XXX.network.codec.ByteBufCodecs$9",
            "XXX.network.codec.IdDispatchCodec$Builder",
            "XXX.network.codec.IdDispatchCodec$Entry",
            "XXX.network.codec.StreamCodec$1",
            "XXX.network.codec.StreamCodec$11",
            "XXX.network.codec.StreamCodec$13",
            "XXX.network.codec.StreamCodec$15",
            "XXX.network.codec.StreamCodec$17",
            "XXX.network.codec.StreamCodec$3",
            "XXX.network.codec.StreamCodec$5",
            "XXX.network.codec.StreamCodec$7",
            "XXX.network.codec.StreamCodec$9",
            "XXX.network.codec.StreamDecoder",
            "XXX.network.codec.StreamMemberEncoder",
            "XXX.minecraft.network.package-info",
            "XXX.network.protocol.BundlePacket",
            "XXX.network.protocol.BundlerInfo$1",
            "XXX.network.protocol.BundlerInfo$Bundler",
            "XXX.network.protocol.Packet",
            "XXX.network.protocol.PacketType",
            "XXX.network.protocol.ProtocolCodecBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$1",
            "XXX.network.protocol.ProtocolInfoBuilder$3",
            "XXX.network.protocol.ProtocolInfoBuilder$Implementation",
            "XXX.network.protocol.UnboundProtocol",
            "XXX.protocol.common.ClientboundClearDialogPacket",
            "XXX.protocol.common.ClientboundCustomReportDetailsPacket",
            "XXX.protocol.common.ClientboundKeepAlivePacket",
            "XXX.protocol.common.ClientboundResourcePackPopPacket",
            "XXX.protocol.common.ClientboundServerLinksPacket",
            "XXX.protocol.common.ClientboundStoreCookiePacket",
            "XXX.protocol.common.ClientboundUpdateTagsPacket",
            "XXX.protocol.common.ServerCommonPacketListener",
            "XXX.protocol.common.ServerboundCustomClickActionPacket",
            "XXX.protocol.common.ServerboundKeepAlivePacket",
            "XXX.protocol.common.ServerboundResourcePackPacket",
            "XXX.common.custom.BeeDebugPayload",
            "XXX.common.custom.BrainDebugPayload",
            "XXX.common.custom.BrandPayload",
            "XXX.common.custom.BreezeDebugPayload$BreezeInfo",
            "XXX.common.custom.CustomPacketPayload$1",
            "XXX.common.custom.CustomPacketPayload$Type",
            "XXX.common.custom.DiscardedPayload",
            "XXX.common.custom.GameEventListenerDebugPayload",
            "XXX.common.custom.GameTestClearMarkersDebugPayload",
            "XXX.common.custom.GoalDebugPayload$DebugGoal",
            "XXX.common.custom.HiveDebugPayload$HiveInfo",
            "XXX.common.custom.PathfindingDebugPayload",
            "XXX.common.custom.PoiRemovedDebugPayload",
            "XXX.common.custom.RaidsDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload$Wire",
            "XXX.common.custom.StructuresDebugPayload$PieceInfo",
            "XXX.common.custom.WorldGenAttemptDebugPayload",
            "XXX.protocol.common.package-info",
            "XXX.protocol.configuration.ClientboundCodeOfConductPacket",
            "XXX.protocol.configuration.ClientboundRegistryDataPacket",
            "XXX.protocol.configuration.ClientboundSelectKnownPacks",
            "XXX.protocol.configuration.ConfigurationPacketTypes",
            "XXX.protocol.configuration.ServerConfigurationPacketListener",
            "XXX.protocol.configuration.ServerboundFinishConfigurationPacket",
            "XXX.protocol.configuration.package-info",
            "XXX.protocol.cookie.ClientboundCookieRequestPacket",
            "XXX.protocol.cookie.ServerCookiePacketListener",
            "XXX.protocol.cookie.package-info",
            "XXX.protocol.game.ClientboundAddEntityPacket",
            "XXX.protocol.game.ClientboundAwardStatsPacket",
            "XXX.protocol.game.ClientboundBlockDestructionPacket",
            "XXX.protocol.game.ClientboundBlockEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket",
            "XXX.protocol.game.ClientboundBossEventPacket$AddOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$Operation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateNameOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdatePropertiesOperation",
            "XXX.protocol.game.ClientboundBundleDelimiterPacket",
            "XXX.protocol.game.ClientboundChangeDifficultyPacket",
            "XXX.protocol.game.ClientboundChunkBatchStartPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket",
            "XXX.protocol.game.ClientboundCommandsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeBuilder",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeResolver",
            "XXX.protocol.game.ClientboundContainerClosePacket",
            "XXX.protocol.game.ClientboundContainerSetDataPacket",
            "XXX.protocol.game.ClientboundCooldownPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket$Action",
            "XXX.protocol.game.ClientboundDebugSamplePacket",
            "XXX.protocol.game.ClientboundDisguisedChatPacket",
            "XXX.protocol.game.ClientboundEntityPositionSyncPacket",
            "XXX.protocol.game.ClientboundForgetLevelChunkPacket",
            "XXX.protocol.game.ClientboundGameEventPacket$Type",
            "XXX.protocol.game.ClientboundHurtAnimationPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput",
            "XXX.protocol.game.ClientboundLevelEventPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacket",
            "XXX.protocol.game.ClientboundLoginPacket",
            "XXX.protocol.game.ClientboundMerchantOffersPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Pos",
            "XXX.protocol.game.ClientboundMoveEntityPacket$Rot",
            "XXX.protocol.game.ClientboundMoveVehiclePacket",
            "XXX.protocol.game.ClientboundOpenScreenPacket",
            "XXX.protocol.game.ClientboundPlaceGhostRecipePacket",
            "XXX.protocol.game.ClientboundPlayerChatPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEnterPacket",
            "XXX.protocol.game.ClientboundPlayerInfoRemovePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder",
            "XXX.protocol.game.ClientboundPlayerPositionPacket",
            "XXX.protocol.game.ClientboundProjectilePowerPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket$Entry",
            "XXX.protocol.game.ClientboundRecipeBookSettingsPacket",
            "XXX.protocol.game.ClientboundRemoveMobEffectPacket",
            "XXX.protocol.game.ClientboundRespawnPacket",
            "XXX.protocol.game.ClientboundSectionBlocksUpdatePacket",
            "XXX.protocol.game.ClientboundServerDataPacket",
            "XXX.protocol.game.ClientboundSetBorderCenterPacket",
            "XXX.protocol.game.ClientboundSetBorderSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDistancePacket",
            "XXX.protocol.game.ClientboundSetChunkCacheCenterPacket",
            "XXX.protocol.game.ClientboundSetCursorItemPacket",
            "XXX.protocol.game.ClientboundSetDisplayObjectivePacket",
            "XXX.protocol.game.ClientboundSetEntityLinkPacket",
            "XXX.protocol.game.ClientboundSetEquipmentPacket",
            "XXX.protocol.game.ClientboundSetHealthPacket",
            "XXX.protocol.game.ClientboundSetObjectivePacket",
            "XXX.protocol.game.ClientboundSetPlayerInventoryPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Action",
            "XXX.protocol.game.ClientboundSetScorePacket",
            "XXX.protocol.game.ClientboundSetSubtitleTextPacket",
            "XXX.protocol.game.ClientboundSetTitleTextPacket",
            "XXX.protocol.game.ClientboundSoundEntityPacket",
            "XXX.protocol.game.ClientboundStartConfigurationPacket",
            "XXX.protocol.game.ClientboundSystemChatPacket",
            "XXX.protocol.game.ClientboundTagQueryPacket",
            "XXX.protocol.game.ClientboundTeleportEntityPacket",
            "XXX.protocol.game.ClientboundTickingStatePacket",
            "XXX.protocol.game.ClientboundTrackedWaypointPacket",
            "XXX.protocol.game.ClientboundUpdateAdvancementsPacket",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot",
            "XXX.protocol.game.ClientboundUpdateRecipesPacket",
            "XXX.protocol.game.DebugEntityNameGenerator",
            "XXX.protocol.game.GamePacketTypes",
            "XXX.protocol.game.GameProtocols$1",
            "XXX.protocol.game.ServerGamePacketListener",
            "XXX.protocol.game.ServerboundAcceptTeleportationPacket",
            "XXX.protocol.game.ServerboundChangeDifficultyPacket",
            "XXX.protocol.game.ServerboundChatAckPacket",
            "XXX.protocol.game.ServerboundChatCommandSignedPacket",
            "XXX.protocol.game.ServerboundChatSessionUpdatePacket",
            "XXX.protocol.game.ServerboundClientCommandPacket",
            "XXX.protocol.game.ServerboundClientTickEndPacket",
            "XXX.protocol.game.ServerboundConfigurationAcknowledgedPacket",
            "XXX.protocol.game.ServerboundContainerClickPacket",
            "XXX.protocol.game.ServerboundContainerSlotStateChangedPacket",
            "XXX.protocol.game.ServerboundEditBookPacket",
            "XXX.protocol.game.ServerboundInteractPacket",
            "XXX.protocol.game.ServerboundInteractPacket$Action",
            "XXX.protocol.game.ServerboundInteractPacket$Handler",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAtLocationAction",
            "XXX.protocol.game.ServerboundLockDifficultyPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Pos",
            "XXX.protocol.game.ServerboundMovePlayerPacket$Rot",
            "XXX.protocol.game.ServerboundMoveVehiclePacket",
            "XXX.protocol.game.ServerboundPickItemFromBlockPacket",
            "XXX.protocol.game.ServerboundPlaceRecipePacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket",
            "XXX.protocol.game.ServerboundPlayerCommandPacket",
            "XXX.protocol.game.ServerboundPlayerInputPacket",
            "XXX.protocol.game.ServerboundRecipeBookChangeSettingsPacket",
            "XXX.protocol.game.ServerboundRenameItemPacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket$Action",
            "XXX.protocol.game.ServerboundSelectTradePacket",
            "XXX.protocol.game.ServerboundSetCarriedItemPacket",
            "XXX.protocol.game.ServerboundSetCommandMinecartPacket",
            "XXX.protocol.game.ServerboundSetJigsawBlockPacket",
            "XXX.protocol.game.ServerboundSetTestBlockPacket",
            "XXX.protocol.game.ServerboundSwingPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket",
            "XXX.protocol.game.ServerboundUseItemOnPacket",
            "XXX.protocol.game.VecDeltaCodec",
            "XXX.protocol.handshake.ClientIntent",
            "XXX.protocol.handshake.HandshakePacketTypes",
            "XXX.protocol.handshake.ServerHandshakePacketListener",
            "XXX.protocol.login.ClientLoginPacketListener",
            "XXX.protocol.login.ClientboundHelloPacket",
            "XXX.protocol.login.ClientboundLoginDisconnectPacket",
            "XXX.protocol.login.LoginPacketTypes",
            "XXX.protocol.login.ServerLoginPacketListener",
            "XXX.protocol.login.ServerboundHelloPacket",
            "XXX.protocol.login.ServerboundLoginAcknowledgedPacket",
            "XXX.login.custom.CustomQueryPayload",
            "XXX.login.custom.DiscardedQueryPayload",
            "XXX.protocol.login.package-info",
            "XXX.protocol.ping.ClientPongPacketListener",
            "XXX.protocol.ping.PingPacketTypes",
            "XXX.protocol.ping.ServerboundPingRequestPacket",
            "XXX.protocol.status.ClientStatusPacketListener",
            "XXX.protocol.status.ServerStatus",
            "XXX.protocol.status.ServerStatus$Players",
            "XXX.protocol.status.ServerStatusPacketListener",
            "XXX.protocol.status.StatusPacketTypes",
            "XXX.protocol.status.package-info",
            "XXX.network.syncher.EntityDataSerializer",
            "XXX.network.syncher.EntityDataSerializers",
            "XXX.network.syncher.EntityDataSerializers$2",
            "XXX.network.syncher.EntityDataSerializers$4",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.ColorRGBA",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DelegateDataOutput",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.EncoderCache$1",
            "XXX.minecraft.util.EncoderCache$Key",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$5",
            "XXX.minecraft.util.ExtraCodecs$7",
            "XXX.minecraft.util.ExtraCodecs$StrictUnboundedMapCodec",
            "XXX.minecraft.util.FastBufferedInputStream",
            "XXX.minecraft.util.FileZipper",
            "XXX.minecraft.util.FormattedCharSink",
            "XXX.minecraft.util.Graph",
            "XXX.minecraft.util.GsonHelper$CountedAppendable",
            "XXX.minecraft.util.HashOps$ListHashBuilder",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.InclusiveRange",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.MemoryReserve",
            "XXX.minecraft.util.ModCheck$Confidence",
            "XXX.minecraft.util.NativeModuleLister",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleVersion",
            "XXX.minecraft.util.NullOps$1",
            "XXX.minecraft.util.NullOps$NullMapBuilder",
            "XXX.minecraft.util.ParticleUtils",
            "XXX.minecraft.util.PlaceholderLookupProvider$1",
            "XXX.minecraft.util.PlaceholderLookupProvider$UniversalLookup",
            "XXX.minecraft.util.ProblemReporter",
            "XXX.minecraft.util.ProblemReporter$Collector",
            "XXX.minecraft.util.ProblemReporter$Collector$ProblemTreeNode",
            "XXX.minecraft.util.ProblemReporter$FieldPathElement",
            "XXX.minecraft.util.ProblemReporter$IndexedPathElement",
            "XXX.minecraft.util.ProblemReporter$Problem",
            "XXX.minecraft.util.ProblemReporter$RootFieldPathElement",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RegistryContextSwapper",
            "XXX.minecraft.util.SegmentedAnglePrecision",
            "XXX.minecraft.util.SignatureUpdater",
            "XXX.minecraft.util.SignatureValidator",
            "XXX.minecraft.util.SimpleBitStorage",
            "XXX.minecraft.util.SingleKeyCache",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SpawnUtil",
            "XXX.minecraft.util.StaticCache2D",
            "XXX.minecraft.util.StrictJsonParser",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.StringRepresentable$EnumCodec",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.TaskChainer$1",
            "XXX.minecraft.util.TickThrottler",
            "XXX.minecraft.util.TimeSource$NanoTimeSource",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.ToFloatFunction$2",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.context.ContextKey",
            "XXX.util.context.ContextKeySet$Builder",
            "XXX.util.context.ContextMap$Builder",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.LegacyComponentDataFixUtils",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFieldFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.AreaEffectCloudPotionFix",
            "XXX.datafix.fixes.AttributeModifierIdFix",
            "XXX.datafix.fixes.AttributesRenameLegacy",
            "XXX.datafix.fixes.BannerPatternFormatFix",
            "XXX.datafix.fixes.BeehiveFieldRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityFurnaceBurnTimeFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockPropertyRenameAndFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CarvingStepRemoveFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChestedHorsesInventoryZeroIndexingFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$MappingConstants",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.ChunkToProtochunkFix",
            "XXX.datafix.fixes.ContainerBlockEntityLockPredicateFix",
            "XXX.datafix.fixes.CriteriaRenameFix",
            "XXX.datafix.fixes.DataComponentRemainderFix",
            "XXX.datafix.fixes.DropChancesFormatFix",
            "XXX.datafix.fixes.DyeItemRenameFix",
            "XXX.datafix.fixes.EmptyItemInHotbarFix",
            "XXX.datafix.fixes.EntityArmorStandSilentFix",
            "XXX.datafix.fixes.EntityBlockStateFix",
            "XXX.datafix.fixes.EntityCatSplitFix",
            "XXX.datafix.fixes.EntityCustomNameToComponentFix",
            "XXX.datafix.fixes.EntityEquipmentToArmorAndHandFix",
            "XXX.datafix.fixes.EntityFieldsRenameFix",
            "XXX.datafix.fixes.EntityHealthFix",
            "XXX.datafix.fixes.EntityHorseSplitFix",
            "XXX.datafix.fixes.EntityItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityPaintingItemFrameDirectionFix",
            "XXX.datafix.fixes.EntityProjectileOwnerFix",
            "XXX.datafix.fixes.EntityRavagerRenameFix",
            "XXX.datafix.fixes.EntityRenameFix",
            "XXX.datafix.fixes.EntitySalmonSizeFix",
            "XXX.datafix.fixes.EntityShulkerRotationFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix",
            "XXX.datafix.fixes.EntityStringUuidFix",
            "XXX.datafix.fixes.EntityTippedArrowFix",
            "XXX.datafix.fixes.EntityVariantFix",
            "XXX.datafix.fixes.EntityZombieSplitFix",
            "XXX.datafix.fixes.EntityZombifiedPiglinRenameFix",
            "XXX.datafix.fixes.EquippableAssetRenameFix",
            "XXX.datafix.fixes.FilteredBooksFix",
            "XXX.datafix.fixes.FireResistantToDamageResistantComponentFix",
            "XXX.datafix.fixes.FixProjectileStoredItem$SubFixer",
            "XXX.datafix.fixes.FoodToConsumableFix",
            "XXX.datafix.fixes.ForcedChunkToTicketFix",
            "XXX.datafix.fixes.GoatHornIdFix",
            "XXX.datafix.fixes.HeightmapRenamingFix",
            "XXX.datafix.fixes.IglooMetadataRemovalFix",
            "XXX.datafix.fixes.InvalidBlockEntityLockFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix$ItemStackData",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTagRemainderFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.JukeboxTicksSinceSongStartedFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDimensionIdFix",
            "XXX.datafix.fixes.LegacyHoverEventFix",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionStartedAt",
            "XXX.util.debugchart.RemoteDebugSampleType",
            "XXX.util.debugchart.SampleLogger",
            "XXX.util.debugchart.TpsDebugDimensions",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.parsing.packrat.Atom",
            "XXX.parsing.packrat.CachedParseState$CacheEntry",
            "XXX.parsing.packrat.CachedParseState$Silent",
            "XXX.parsing.packrat.Control",
            "XXX.parsing.packrat.DelayedException",
            "XXX.parsing.packrat.Dictionary$Entry",
            "XXX.parsing.packrat.ErrorCollector",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly$MutableErrorEntry",
            "XXX.parsing.packrat.ErrorEntry",
            "XXX.parsing.packrat.ParseState",
            "XXX.parsing.packrat.Rule$RuleAction",
            "XXX.parsing.packrat.Rule$WrappedTerm",
            "XXX.parsing.packrat.Scope$1",
            "XXX.parsing.packrat.Term",
            "XXX.parsing.packrat.Term$2",
            "XXX.parsing.packrat.Term$Alternative",
            "XXX.parsing.packrat.Term$Marker",
            "XXX.parsing.packrat.Term$Repeated",
            "XXX.parsing.packrat.Term$Sequence",
            "XXX.packrat.commands.CommandArgumentParser$1",
            "XXX.packrat.commands.Grammar",
            "XXX.packrat.commands.GreedyPredicateParseRule",
            "XXX.packrat.commands.ParserBasedArgument",
            "XXX.packrat.commands.ResourceLookupRule",
            "XXX.packrat.commands.StringReaderParserState",
            "XXX.packrat.commands.StringReaderTerms$1",
            "XXX.packrat.commands.StringReaderTerms$TerminalCharacters",
            "XXX.packrat.commands.TagParseRule",
            "XXX.packrat.commands.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.Profiler",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.profiling.TracyZoneFiller$PlotAndValue",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.ChunkRegionIoEvent$Fields",
            "XXX.jfr.event.ChunkRegionWriteEvent",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.StructureGenerationEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.IoSummary",
            "XXX.jfr.stats.PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.WeightedList",
            "XXX.util.random.WeightedList$Compact",
            "XXX.util.random.WeightedList$Selector",
            "XXX.util.random.package-info",
            "XXX.util.thread.AbstractConsecutiveExecutor$Status",
            "XXX.util.thread.ConsecutiveExecutor",
            "XXX.util.thread.ParallelMapTransform",
            "XXX.util.thread.ParallelMapTransform$Container",
            "XXX.util.thread.ParallelMapTransform$SplitterBase",
            "XXX.util.thread.ReentrantBlockableEventLoop",
            "XXX.util.thread.StrictQueue$FixedPriorityQueue",
            "XXX.util.thread.StrictQueue$RunnableWithPriority",
            "XXX.util.thread.TaskScheduler$1",
            "XXX.util.valueproviders.BiasedToBottomInt",
            "XXX.util.valueproviders.ClampedNormalFloat",
            "XXX.util.valueproviders.ConstantFloat",
            "XXX.util.valueproviders.FloatProvider",
            "XXX.util.valueproviders.IntProvider",
            "XXX.util.valueproviders.MultipliedFloats",
            "XXX.util.valueproviders.TrapezoidFloat",
            "XXX.util.valueproviders.UniformInt",
            "XXX.util.valueproviders.package-info",
            "XXX.util.worldupdate.WorldUpgrader$AbstractUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$DimensionToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$FileToUpgrade",
            "XXX.util.worldupdate.WorldUpgrader$SimpleRegionStorageUpgrader",
            "XXX.minecraft.world.BossEvent",
            "XXX.minecraft.world.BossEvent$BossBarOverlay",
            "XXX.minecraft.world.CompoundContainer",
            "XXX.minecraft.world.Container$ContainerIterator",
            "XXX.minecraft.world.ContainerListener",
            "XXX.minecraft.world.Difficulty",
            "XXX.minecraft.world.InteractionHand",
            "XXX.minecraft.world.InteractionResult$Fail",
            "XXX.minecraft.world.InteractionResult$Pass",
            "XXX.minecraft.world.InteractionResult$SwingSource",
            "XXX.minecraft.world.ItemStackWithSlot",
            "XXX.minecraft.world.MenuProvider",
            "XXX.minecraft.world.RandomSequence",
            "XXX.minecraft.world.RandomSequences$DirtyMarkingRandomSource",
            "XXX.minecraft.world.SimpleContainer",
            "XXX.minecraft.world.TickRateManager",
            "XXX.minecraft.world.WorldlyContainerHolder",
            "XXX.world.damagesource.CombatRules",
            "XXX.world.damagesource.DamageEffects",
            "XXX.world.damagesource.DamageSource",
            "XXX.world.damagesource.DamageSources",
            "XXX.world.damagesource.DamageTypes",
            "XXX.world.damagesource.FallLocation",
            "XXX.world.effect.AbsorptionMobEffect",
            "XXX.world.effect.HealOrHarmMobEffect",
            "XXX.world.effect.InfestedMobEffect",
            "XXX.world.effect.MobEffect",
            "XXX.world.effect.MobEffectCategory",
            "XXX.world.effect.MobEffectInstance$BlendState",
            "XXX.world.effect.MobEffectUtil",
            "XXX.world.effect.OozingMobEffect",
            "XXX.world.effect.PoisonMobEffect",
            "XXX.world.effect.RegenerationMobEffect",
            "XXX.world.effect.WeavingMobEffect",
            "XXX.world.effect.WitherMobEffect",
            "XXX.world.entity.AgeableMob",
            "XXX.world.entity.AnimationState",
            "XXX.world.entity.Attackable",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$IngredientInfo",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.AbstractThrownPotion",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.Projectile$ProjectileFactory",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownLingeringPotion",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.projectile.windcharge.BreezeWindCharge",
            "XXX.projectile.windcharge.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.variant.BiomeCheck",
            "XXX.entity.variant.MoonBrightnessCheck",
            "XXX.entity.variant.PriorityProvider$Selector",
            "XXX.entity.variant.PriorityProvider$UnpackedEntry",
            "XXX.entity.variant.SpawnConditions",
            "XXX.entity.variant.SpawnPrioritySelectors",
            "XXX.entity.variant.VariantUtils",
            "XXX.entity.vehicle.AbstractBoat",
            "XXX.entity.vehicle.AbstractChestBoat",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.ChestBoat",
            "XXX.entity.vehicle.ContainerEntity",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartBehavior",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.entity.vehicle.NewMinecartBehavior$1",
            "XXX.entity.vehicle.NewMinecartBehavior$StepPartialTicks",
            "XXX.entity.vehicle.OldMinecartBehavior",
            "XXX.entity.vehicle.Raft",
            "XXX.entity.vehicle.package-info",
            "XXX.world.flag.FeatureFlag",
            "XXX.world.flag.FeatureFlagRegistry$Builder",
            "XXX.world.flag.FeatureFlagUniverse",
            "XXX.world.flag.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AbstractCraftingMenu$1",
            "XXX.world.inventory.AbstractFurnaceMenu$1",
            "XXX.world.inventory.ArmorSlot",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CrafterMenu",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.NonInteractiveResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.RemoteSlot",
            "XXX.world.inventory.RemoteSlot$Synchronized",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SlotRange$1",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.TransientCraftingContainer",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.CrossbowItem$ChargeType",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$TooltipContext",
            "XXX.world.item.Item$TooltipContext$2",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStack$2",
            "XXX.world.item.ItemStack$4",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.JukeboxPlayable",
            "XXX.world.item.JukeboxSongPlayer",
            "XXX.world.item.JukeboxSongs",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MaceItem",
            "XXX.world.item.MapItem$1",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PlaceOnWaterBlockItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileItem$DispenseConfig",
            "XXX.world.item.ProjectileItem$PositionFunction",
            "XXX.world.item.Rarity",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignApplicator",
            "XXX.world.item.SmithingTemplateItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.ToolMaterial",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.WeatheringCopperItems",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Builder",
            "XXX.item.alchemy.PotionContents",
            "XXX.item.alchemy.package-info",
            "XXX.item.component.BlockItemStateProperties",
            "XXX.item.component.BlocksAttacks$DamageReduction",
            "XXX.item.component.BookContent",
            "XXX.item.component.BundleContents$Mutable",
            "XXX.item.component.Consumable",
            "XXX.item.component.Consumable$OverrideConsumeSound",
            "XXX.item.component.Consumables",
            "XXX.item.component.CustomModelData",
            "XXX.item.component.DeathProtection",
            "XXX.item.component.DyedItemColor",
            "XXX.item.component.FireworkExplosion$Shape",
            "XXX.item.component.InstrumentComponent",
            "XXX.item.component.ItemAttributeModifiers$1",
            "XXX.item.component.ItemAttributeModifiers$Display",
            "XXX.item.component.ItemAttributeModifiers$Display$Hidden",
            "XXX.item.component.ItemAttributeModifiers$Display$Type",
            "XXX.item.component.ItemContainerContents",
            "XXX.item.component.ItemLore",
            "XXX.item.component.MapDecorations",
            "XXX.item.component.MapItemColor",
            "XXX.item.component.OminousBottleAmplifier",
            "XXX.item.component.ResolvableProfile",
            "XXX.item.component.ResolvableProfile$Partial",
            "XXX.item.component.SeededContainerLoot",
            "XXX.item.component.SuspiciousStewEffects$Entry",
            "XXX.item.component.Tool$Rule",
            "XXX.item.component.TooltipProvider",
            "XXX.item.component.TypedEntityData$1",
            "XXX.item.component.UseRemainder",
            "XXX.item.component.Weapon",
            "XXX.item.component.WrittenBookContent",
            "XXX.item.consume_effects.ApplyStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect",
            "XXX.item.consume_effects.PlaySoundConsumeEffect",
            "XXX.item.consume_effects.TeleportRandomlyConsumeEffect",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.AbstractCookingRecipe$Factory",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingInput",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.CustomRecipe$Serializer$Factory",
            "XXX.item.crafting.ExtendedRecipeBookCategory",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeBookCategories",
            "XXX.item.crafting.RecipeCache",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeManager$IngredientExtractor",
            "XXX.item.crafting.RecipeMap",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.SelectableRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputSet",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapedRecipePattern$Data",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.TransmuteRecipe$Serializer",
            "XXX.crafting.display.DisplayContentsFactory",
            "XXX.crafting.display.DisplayContentsFactory$ForStacks",
            "XXX.crafting.display.RecipeDisplay",
            "XXX.crafting.display.RecipeDisplayEntry",
            "XXX.crafting.display.RecipeDisplays",
            "XXX.crafting.display.ShapelessCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay$AnyFuel",
            "XXX.crafting.display.SlotDisplay$Empty",
            "XXX.crafting.display.SlotDisplay$ItemStackContentsFactory",
            "XXX.crafting.display.SlotDisplay$SmithingTrimDemoSlotDisplay",
            "XXX.crafting.display.SlotDisplay$Type",
            "XXX.crafting.display.SlotDisplayContext",
            "XXX.crafting.display.SmithingRecipeDisplay",
            "XXX.crafting.display.package-info",
            "XXX.item.enchantment.ConditionalEffect",
            "XXX.item.enchantment.EnchantedItemInUse",
            "XXX.item.enchantment.Enchantment$1",
            "XXX.item.enchantment.Enchantment$Cost",
            "XXX.item.enchantment.EnchantmentEffectComponents",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.ItemEnchantments$Mutable",
            "XXX.item.enchantment.LevelBasedValue$Clamped",
            "XXX.item.enchantment.LevelBasedValue$Fraction",
            "XXX.item.enchantment.LevelBasedValue$Linear",
            "XXX.item.enchantment.Repairable",
            "XXX.enchantment.effects.AddValue",
            "XXX.enchantment.effects.AllOf$EntityEffects",
            "XXX.enchantment.effects.AllOf$ValueEffects",
            "XXX.enchantment.effects.ChangeItemDamage",
            "XXX.enchantment.effects.DamageImmunity",
            "XXX.enchantment.effects.EnchantmentEntityEffect",
            "XXX.enchantment.effects.EnchantmentValueEffect",
            "XXX.enchantment.effects.Ignite",
            "XXX.enchantment.effects.PlaySoundEffect",
            "XXX.enchantment.effects.ReplaceBlock",
            "XXX.enchantment.effects.RunFunction",
            "XXX.enchantment.effects.SetValue",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSource",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType$CoordinateSource",
            "XXX.enchantment.effects.SummonEntityEffect",
            "XXX.item.enchantment.package-info",
            "XXX.enchantment.providers.EnchantmentProviderTypes",
            "XXX.enchantment.providers.EnchantmentsByCostWithDifficulty",
            "XXX.enchantment.providers.TradeRebalanceEnchantmentProviders",
            "XXX.enchantment.providers.package-info",
            "XXX.item.equipment.ArmorMaterial",
            "XXX.item.equipment.ArmorType",
            "XXX.item.equipment.EquipmentAssets",
            "XXX.item.equipment.Equippable$Builder",
            "XXX.equipment.trim.ArmorTrim",
            "XXX.equipment.trim.MaterialAssetGroup$AssetInfo",
            "XXX.equipment.trim.TrimMaterials",
            "XXX.equipment.trim.TrimPatterns",
            "XXX.world.item.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.world.level.ChunkPos",
            "XXX.world.level.ChunkPos$2",
            "XXX.world.level.ClipContext",
            "XXX.world.level.ClipContext$Fluid",
            "XXX.world.level.CollisionGetter",
            "XXX.world.level.ColorResolver",
            "XXX.world.level.CustomSpawner",
            "XXX.world.level.DryFoliageColor",
            "XXX.world.level.EmptyBlockGetter",
            "XXX.world.level.EntityGetter",
            "XXX.world.level.Explosion$BlockInteraction",
            "XXX.world.level.FoliageColor",
            "XXX.world.level.GameRules$BooleanValue",
            "XXX.world.level.GameRules$GameRuleTypeVisitor",
            "XXX.world.level.GameRules$Key",
            "XXX.world.level.GameRules$Value",
            "XXX.world.level.GameType",
            "XXX.world.level.ItemLike",
            "XXX.world.level.Level$1",
            "XXX.level.border.BorderStatus",
            "XXX.level.border.WorldBorder$BorderExtent",
            "XXX.level.border.WorldBorder$MovingBorderExtent",
            "XXX.level.border.WorldBorder$StaticBorderExtent",
            "XXX.level.chunk.BlockColumn",
            "XXX.level.chunk.CarvingMask",
            "XXX.level.chunk.ChunkAccess",
            "XXX.level.chunk.ChunkAccess$PackedTicks",
            "XXX.level.chunk.ChunkGeneratorStructureState",
            "XXX.level.chunk.ChunkSource",
            "XXX.level.chunk.PalettedContainer$CountConsumer",
            "XXX.level.chunk.PalettedContainer$Strategy",
            "XXX.level.chunk.PalettedContainer$Strategy$2",
            "XXX.level.chunk.PalettedContainerRO$PackedData",
            "XXX.level.chunk.ProtoChunk"
          ],
          "removed": [
            "XXX.blaze3d.vertex.CompactVectorArray",
            "XXX.blaze3d.vertex.MeshData",
            "XXX.blaze3d.vertex.MeshData$DrawState",
            "XXX.blaze3d.vertex.PoseStack",
            "XXX.blaze3d.vertex.SheetedDecalTextureGenerator",
            "XXX.blaze3d.vertex.VertexConsumer",
            "XXX.blaze3d.vertex.VertexFormat$Builder",
            "XXX.blaze3d.vertex.VertexFormat$Mode",
            "XXX.blaze3d.vertex.VertexFormatElement$Type",
            "XXX.blaze3d.vertex.VertexMultiConsumer",
            "XXX.blaze3d.vertex.VertexMultiConsumer$Multiple",
            "XXX.blaze3d.vertex.VertexSorting$DistanceFunction",
            "XXX.mojang.math.Axis",
            "XXX.mojang.math.Divisor",
            "XXX.mojang.math.GivensParameters",
            "XXX.mojang.math.MethodsReturnNonnullByDefault",
            "XXX.mojang.math.OctahedralGroup$1",
            "XXX.mojang.math.SymmetricGroup3",
            "XXX.mojang.math.package-info",
            "XXX.mojang.realmsclient.RealmsAvailability$Result",
            "XXX.mojang.realmsclient.RealmsMainScreen",
            "XXX.mojang.realmsclient.RealmsMainScreen$2",
            "XXX.mojang.realmsclient.RealmsMainScreen$CrossButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$LayoutState",
            "XXX.mojang.realmsclient.RealmsMainScreen$NotificationMessageEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionList",
            "XXX.mojang.realmsclient.RealmsMainScreen$ServerEntry",
            "XXX.realmsclient.client.FileDownload",
            "XXX.realmsclient.client.FileDownload$ProgressListener",
            "XXX.realmsclient.client.FileUpload",
            "XXX.realmsclient.client.Ping",
            "XXX.realmsclient.client.RealmsClient",
            "XXX.realmsclient.client.RealmsClient$Environment",
            "XXX.realmsclient.client.RealmsError",
            "XXX.realmsclient.client.RealmsError$CustomError",
            "XXX.realmsclient.client.RealmsError$ErrorWithRawPayload",
            "XXX.realmsclient.client.Request$Delete",
            "XXX.realmsclient.client.Request$Post",
            "XXX.realmsclient.client.UploadStatus",
            "XXX.client.worldupload.RealmsCreateWorldFlow",
            "XXX.client.worldupload.RealmsUploadException",
            "XXX.client.worldupload.RealmsUploadTooLargeException",
            "XXX.client.worldupload.RealmsUploadWorldPacker",
            "XXX.client.worldupload.RealmsWorldUploadStatusTracker",
            "XXX.client.worldupload.package-info",
            "XXX.realmsclient.dto.BackupList",
            "XXX.realmsclient.dto.GuardedSerializer",
            "XXX.realmsclient.dto.Ops",
            "XXX.realmsclient.dto.PendingInvitesList",
            "XXX.realmsclient.dto.PlayerInfo",
            "XXX.realmsclient.dto.RealmsConfigurationDto",
            "XXX.realmsclient.dto.RealmsJoinInformation",
            "XXX.realmsclient.dto.RealmsNews",
            "XXX.realmsclient.dto.RealmsNotification$InfoPopup",
            "XXX.realmsclient.dto.RealmsNotification$VisitUrl",
            "XXX.realmsclient.dto.RealmsRegion$RealmsRegionJsonAdapter",
            "XXX.realmsclient.dto.RealmsServer$Compatibility",
            "XXX.realmsclient.dto.RealmsServer$State",
            "XXX.realmsclient.dto.RealmsServerList",
            "XXX.realmsclient.dto.RealmsSetting",
            "XXX.realmsclient.dto.RealmsSlot$RealmsWorldOptionsJsonAdapter",
            "XXX.realmsclient.dto.RealmsText",
            "XXX.realmsclient.dto.RealmsWorldResetDto",
            "XXX.realmsclient.dto.RegionDataDto",
            "XXX.realmsclient.dto.RegionSelectionPreference",
            "XXX.realmsclient.dto.RegionSelectionPreferenceDto",
            "XXX.realmsclient.dto.ServerActivityList",
            "XXX.realmsclient.dto.ServiceQuality$RealmsServiceQualityJsonAdapter",
            "XXX.realmsclient.dto.Subscription$SubscriptionType",
            "XXX.realmsclient.dto.ValueObject",
            "XXX.realmsclient.dto.WorldTemplate",
            "XXX.realmsclient.dto.WorldTemplatePaginatedList",
            "XXX.realmsclient.exception.RealmsDefaultUncaughtExceptionHandler",
            "XXX.realmsclient.exception.RealmsServiceException",
            "XXX.realmsclient.exception.package-info",
            "XXX.realmsclient.gui.RealmsDataFetcher$ServerListData",
            "XXX.realmsclient.gui.RealmsServerList",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Action",
            "XXX.realmsclient.gui.package-info",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsLongRunningMcoConnectTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$2",
            "XXX.gui.screens.RealmsParentalConsentScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry",
            "XXX.gui.screens.RealmsPopups",
            "XXX.gui.screens.RealmsResetWorldScreen$1",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$1",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateList",
            "XXX.gui.screens.RealmsUploadScreen",
            "XXX.gui.screens.UploadResult$Builder",
            "XXX.screens.configuration.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.screens.configuration.RealmsBackupScreen",
            "XXX.screens.configuration.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.screens.configuration.RealmsConfigurationTab",
            "XXX.screens.configuration.RealmsInviteScreen",
            "XXX.screens.configuration.RealmsPlayersTab$Entry",
            "XXX.screens.configuration.RealmsPlayersTab$InvitedObjectSelectionList",
            "XXX.screens.configuration.RealmsPreferredRegionSelectionScreen",
            "XXX.screens.configuration.RealmsPreferredRegionSelectionScreen$RegionSelectionList$Entry",
            "XXX.screens.configuration.RealmsSettingsTab$RegionSelection",
            "XXX.screens.configuration.RealmsSlotOptionsScreen$SettingsSlider",
            "XXX.screens.configuration.RealmsWorldsTab",
            "XXX.screens.configuration.package-info",
            "XXX.gui.task.DataFetcher",
            "XXX.gui.task.DataFetcher$SubscribedTask",
            "XXX.gui.task.DataFetcher$SuccessfulComputationResult",
            "XXX.gui.task.RepeatedDelayStrategy",
            "XXX.gui.task.RepeatedDelayStrategy$2",
            "XXX.mojang.realmsclient.package-info",
            "XXX.realmsclient.util.LevelType",
            "XXX.realmsclient.util.RealmsPersistence$RealmsPersistenceData",
            "XXX.realmsclient.util.RealmsTextureManager$RealmsTexture",
            "XXX.realmsclient.util.RealmsUtil$RealmsIoConsumer",
            "XXX.realmsclient.util.TextRenderingUtils",
            "XXX.realmsclient.util.TextRenderingUtils$LineSegment",
            "XXX.realmsclient.util.package-info",
            "XXX.util.task.ConnectTask",
            "XXX.util.task.GetServerDetailsTask",
            "XXX.util.task.OpenServerTask",
            "XXX.util.task.ResettingTemplateWorldTask",
            "XXX.util.task.RestoreTask",
            "XXX.util.task.SwitchSlotTask",
            "net.minecraft.BlockUtil",
            "net.minecraft.BlockUtil$IntBounds",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ReportType",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.SuppressForbidden",
            "net.minecraft.TracingExecutor",
            "net.minecraft.Util$1",
            "net.minecraft.Util$11",
            "net.minecraft.Util$5",
            "net.minecraft.Util$7",
            "net.minecraft.Util$9",
            "net.minecraft.Util$OS$1",
            "net.minecraft.WorldVersion",
            "net.minecraft.WorldVersion$Simple",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementNode",
            "XXX.minecraft.advancements.AdvancementRequirements",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementTree",
            "XXX.minecraft.advancements.AdvancementType",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.CollectionContentsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionContentsPredicate$Zero",
            "XXX.advancements.critereon.CollectionCountsPredicate$Entry",
            "XXX.advancements.critereon.CollectionCountsPredicate$Single",
            "XXX.advancements.critereon.CollectionPredicate",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CriterionValidator",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.DataComponentMatchers$Builder",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.DistanceTrigger",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntitySubPredicate",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.FallAfterExplosionTrigger$TriggerInstance",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.GameTypePredicate",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance$Slots",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByArrowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LightningStrikeTrigger",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationPredicate$PositionPredicate",
            "XXX.advancements.critereon.LootTableTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$Bounds",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$Builder",
            "XXX.advancements.critereon.MovementPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerInteractTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.PlayerTrigger",
            "XXX.advancements.critereon.RaiderPredicate",
            "XXX.advancements.critereon.RecipeCraftedTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SingleComponentItemPredicate",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlotsPredicate",
            "XXX.advancements.critereon.StartRidingTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$ValueMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.UsingItemTrigger",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$2",
            "XXX.minecraft.client.Minecraft$ChatStatus$1",
            "XXX.minecraft.client.Minecraft$ChatStatus$3",
            "XXX.minecraft.client.Minecraft$GameLoadCookie",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.OptionInstance$AltEnum",
            "XXX.minecraft.client.OptionInstance$ClampingLazyMaxIntRange",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter",
            "XXX.minecraft.client.OptionInstance$IntRange",
            "XXX.minecraft.client.OptionInstance$IntRangeBase$1",
            "XXX.minecraft.client.OptionInstance$OptionInstanceSliderButton",
            "XXX.minecraft.client.OptionInstance$SliderableValueSet",
            "XXX.minecraft.client.OptionInstance$UnitDouble",
            "XXX.minecraft.client.OptionInstance$ValueSet",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.Options$3",
            "XXX.minecraft.client.Options$5",
            "XXX.minecraft.client.Options$OptionAccess",
            "XXX.minecraft.client.PeriodicNotificationManager$Notification",
            "XXX.minecraft.client.PrioritizeChunkUpdates",
            "XXX.minecraft.client.ResourceLoadStateTracker$RecoveryInfo",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadState",
            "XXX.minecraft.client.ScrollWheelHandler",
            "XXX.minecraft.client.StringSplitter$1",
            "XXX.minecraft.client.StringSplitter$LineBreakFinder",
            "XXX.minecraft.client.StringSplitter$LinePosConsumer",
            "XXX.minecraft.client.StringSplitter$WidthProvider",
            "XXX.minecraft.client.User",
            "XXX.client.animation.AnimationChannel$Interpolation",
            "XXX.client.animation.AnimationChannel$Target",
            "XXX.client.animation.AnimationDefinition",
            "XXX.client.animation.Keyframe",
            "XXX.client.animation.KeyframeAnimation$Entry",
            "XXX.animation.definitions.ArmadilloAnimation",
            "XXX.animation.definitions.BreezeAnimation",
            "XXX.animation.definitions.CopperGolemAnimation",
            "XXX.animation.definitions.FrogAnimation",
            "XXX.animation.definitions.WardenAnimation",
            "XXX.client.animation.package-info",
            "XXX.client.color.ColorLerper$Type",
            "XXX.color.block.BlockColors",
            "XXX.color.block.BlockTintCache$CacheData",
            "XXX.color.block.package-info",
            "XXX.color.item.CustomModelDataSource",
            "XXX.color.item.Firework",
            "XXX.color.item.ItemTintSource",
            "XXX.color.item.MapColor",
            "XXX.color.item.TeamColor",
            "XXX.client.color.package-info",
            "XXX.client.data.Main",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$PlantType",
            "XXX.data.models.EquipmentAssetProvider",
            "XXX.data.models.ItemModelGenerators$TrimMaterialData",
            "XXX.data.models.ModelProvider",
            "XXX.data.models.ModelProvider$ItemInfoCollector",
            "XXX.data.models.MultiVariant",
            "XXX.models.blockstates.BlockModelDefinitionGenerator",
            "XXX.models.blockstates.MultiPartGenerator",
            "XXX.models.blockstates.MultiVariantGenerator",
            "XXX.models.blockstates.MultiVariantGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch$C1",
            "XXX.models.blockstates.PropertyDispatch$C3",
            "XXX.models.blockstates.PropertyDispatch$C5",
            "XXX.models.blockstates.package-info",
            "XXX.models.model.ItemModelUtils",
            "XXX.models.model.ModelLocationUtils",
            "XXX.models.model.ModelTemplates",
            "XXX.models.model.TextureSlot",
            "XXX.models.model.TexturedModel$Provider",
            "XXX.data.models.package-info",
            "XXX.client.entity.ClientAvatarEntity",
            "XXX.client.entity.ClientMannequin",
            "XXX.client.gui.BundleMouseActions",
            "XXX.client.gui.ComponentPath$Leaf",
            "XXX.client.gui.Font",
            "XXX.client.gui.Font$GlyphVisitor",
            "XXX.client.gui.Font$PreparedText",
            "XXX.client.gui.Font$Provider",
            "XXX.client.gui.Gui",
            "XXX.client.gui.Gui$ContextualInfo",
            "XXX.client.gui.Gui$RenderFunction",
            "XXX.client.gui.GuiGraphics$OutlineBox",
            "XXX.client.gui.ItemSlotMouseAction",
            "XXX.gui.components.AbstractContainerWidget",
            "XXX.gui.components.AbstractScrollArea",
            "XXX.gui.components.AbstractSelectionList$1",
            "XXX.gui.components.AbstractSelectionList$TrackedList",
            "XXX.gui.components.AbstractStringWidget",
            "XXX.gui.components.AbstractWidget",
            "XXX.gui.components.BossHealthOverlay$1",
            "XXX.gui.components.Button$Builder",
            "XXX.gui.components.Button$OnPress",
            "XXX.gui.components.ChatComponent$ChatMethod",
            "XXX.gui.components.ChatComponent$ChatMethod$2",
            "XXX.gui.components.ChatComponent$Draft",
            "XXX.gui.components.ChatComponent$State",
            "XXX.gui.components.Checkbox$Builder",
            "XXX.gui.components.CommandSuggestions",
            "XXX.gui.components.CommonButtons",
            "XXX.gui.components.ContainerObjectSelectionList",
            "XXX.gui.components.ContainerObjectSelectionList$Entry",
            "XXX.gui.components.CycleButton$Builder",
            "XXX.gui.components.CycleButton$ValueListSupplier",
            "XXX.gui.components.CycleButton$ValueListSupplier$2",
            "XXX.gui.components.DebugScreenOverlay$1",
            "XXX.gui.components.EditBox$TextFormatter",
            "XXX.gui.components.FocusableTextWidget",
            "XXX.gui.components.ImageButton",
            "XXX.gui.components.ImageWidget$Sprite",
            "XXX.gui.components.ItemDisplayWidget",
            "XXX.gui.components.LoadingDotsWidget",
            "XXX.gui.components.LockIconButton$Icon",
            "XXX.gui.components.MultiLineEditBox",
            "XXX.gui.components.MultiLineLabel",
            "XXX.gui.components.MultiLineLabel$2",
            "XXX.gui.components.MultiLineLabel$Align$1",
            "XXX.gui.components.MultiLineLabel$Align$3",
            "XXX.gui.components.MultiLineTextWidget",
            "XXX.gui.components.MultilineTextField",
            "XXX.gui.components.MultilineTextField$StringView",
            "XXX.gui.components.ObjectSelectionList$Entry",
            "XXX.gui.components.OptionsList$Entry",
            "XXX.gui.components.PlainTextButton",
            "XXX.gui.components.PlayerSkinWidget",
            "XXX.gui.components.PlayerTabOverlay$HealthState",
            "XXX.gui.components.PopupScreen",
            "XXX.gui.components.PopupScreen$ButtonOption",
            "XXX.gui.components.ScrollableLayout",
            "XXX.gui.components.SplashRenderer",
            "XXX.gui.components.SpriteIconButton$Builder",
            "XXX.gui.components.SpriteIconButton$TextAndIcon",
            "XXX.gui.components.StringWidget",
            "XXX.gui.components.SubtitleOverlay",
            "XXX.gui.components.SubtitleOverlay$Subtitle",
            "XXX.gui.components.TabOrderedElement",
            "XXX.gui.components.Whence",
            "XXX.gui.components.WidgetTooltipHolder",
            "XXX.components.debug.DebugEntryCategory",
            "XXX.components.debug.DebugEntryChunkRenderStats",
            "XXX.components.debug.DebugEntryEntityRenderStats",
            "XXX.components.debug.DebugEntryGpuUtilization",
            "XXX.components.debug.DebugEntryLight",
            "XXX.components.debug.DebugEntryLookingAtBlock",
            "XXX.components.debug.DebugEntryLookingAtFluid",
            "XXX.components.debug.DebugEntryMemory$AllocationRateCalculator",
            "XXX.components.debug.DebugEntryParticleRenderStats",
            "XXX.components.debug.DebugEntryPosition$1",
            "XXX.components.debug.DebugEntrySectionPosition",
            "XXX.components.debug.DebugEntrySoundMood",
            "XXX.components.debug.DebugEntrySystemSpecs",
            "XXX.components.debug.DebugEntryVersion",
            "XXX.components.debug.DebugScreenEntries",
            "XXX.components.debug.DebugScreenEntryList",
            "XXX.components.debug.DebugScreenEntryStatus",
            "XXX.components.debug.package-info",
            "XXX.components.debugchart.BandwidthDebugChart",
            "XXX.components.debugchart.PingDebugChart",
            "XXX.components.debugchart.TpsDebugChart",
            "XXX.components.events.AbstractContainerEventHandler",
            "XXX.components.events.GuiEventListener",
            "XXX.gui.components.package-info",
            "XXX.components.spectator.package-info",
            "XXX.components.tabs.LoadingTab",
            "XXX.components.tabs.TabManager",
            "XXX.components.tabs.TabNavigationBar$Builder",
            "XXX.components.toasts.AdvancementToast",
            "XXX.components.toasts.RecipeToast",
            "XXX.components.toasts.SystemToast",
            "XXX.components.toasts.Toast",
            "XXX.components.toasts.ToastManager",
            "XXX.components.toasts.TutorialToast",
            "XXX.components.toasts.package-info",
            "XXX.gui.contextualbar.ContextualBarRenderer$1",
            "XXX.gui.contextualbar.JumpableVehicleBarRenderer",
            "XXX.gui.contextualbar.package-info",
            "XXX.gui.font.AllMissingGlyphProvider$1",
            "XXX.gui.font.AtlasGlyphProvider$1",
            "XXX.gui.font.CodepointMap",
            "XXX.gui.font.FontManager",
            "XXX.gui.font.FontManager$BuilderResult",
            "XXX.gui.font.FontManager$CachedFontProvider$CachedEntry",
            "XXX.gui.font.FontManager$Preparation",
            "XXX.gui.font.FontOption",
            "XXX.gui.font.FontSet",
            "XXX.gui.font.FontSet$2",
            "XXX.gui.font.FontSet$SelectedGlyphs",
            "XXX.gui.font.FontTexture",
            "XXX.gui.font.GlyphRenderTypes",
            "XXX.gui.font.GlyphStitcher",
            "XXX.gui.font.PlayerGlyphProvider",
            "XXX.gui.font.PlayerGlyphProvider$1$1",
            "XXX.gui.font.SingleSpriteSource",
            "XXX.gui.font.TextFieldHelper$CursorStep",
            "XXX.font.glyphs.BakedGlyph",
            "XXX.font.glyphs.BakedSheetGlyph$EffectInstance",
            "XXX.font.glyphs.EffectGlyph",
            "XXX.font.glyphs.EmptyGlyph$1",
            "XXX.font.glyphs.SpecialGlyphs$1",
            "XXX.font.glyphs.package-info",
            "XXX.font.providers.BitmapProvider",
            "XXX.font.providers.BitmapProvider$Glyph",
            "XXX.font.providers.FreeTypeUtil",
            "XXX.font.providers.GlyphProviderDefinition$Conditional",
            "XXX.font.providers.GlyphProviderDefinition$Reference",
            "XXX.font.providers.ProviderReferenceDefinition",
            "XXX.font.providers.TrueTypeGlyphProviderDefinition$Shift",
            "XXX.font.providers.UnihexProvider$ByteContents",
            "XXX.font.providers.UnihexProvider$Dimensions",
            "XXX.font.providers.UnihexProvider$Glyph$1",
            "XXX.font.providers.UnihexProvider$IntContents",
            "XXX.font.providers.UnihexProvider$OverrideRange",
            "XXX.font.providers.UnihexProvider$ShortContents",
            "XXX.gui.layouts.AbstractLayout",
            "XXX.gui.layouts.CommonLayouts",
            "XXX.gui.layouts.EqualSpacingLayout$ChildContainer",
            "XXX.gui.layouts.FrameLayout",
            "XXX.gui.layouts.GridLayout",
            "XXX.gui.layouts.GridLayout$RowHelper",
            "XXX.gui.layouts.Layout",
            "XXX.gui.layouts.LayoutSettings",
            "XXX.gui.layouts.LinearLayout",
            "XXX.gui.layouts.SpacerElement",
            "XXX.gui.narration.NarratableEntry",
            "XXX.gui.narration.NarratedElementType",
            "XXX.gui.narration.NarrationSupplier",
            "XXX.gui.narration.ScreenNarrationCollector",
            "XXX.gui.narration.ScreenNarrationCollector$EntryKey",
            "XXX.gui.narration.ScreenNarrationCollector$Output",
            "XXX.gui.screens.FaviconTexture",
            "XXX.gui.screens.GenericWaitingScreen",
            "XXX.gui.screens.LevelLoadingScreen",
            "XXX.gui.screens.LoadingDotsText",
            "XXX.gui.screens.LoadingOverlay$LogoTexture",
            "XXX.client.input.CharacterEvent",
            "XXX.client.input.InputWithModifiers",
            "XXX.client.input.MouseButtonEvent",
            "XXX.client.input.package-info",
            "XXX.client.main.GameConfig$FolderData",
            "XXX.client.main.GameConfig$QuickPlayData",
            "XXX.client.main.GameConfig$QuickPlayMultiplayerData",
            "XXX.client.main.GameConfig$QuickPlaySinglePlayerData",
            "XXX.client.main.GameConfig$UserData",
            "XXX.client.main.Main$1",
            "XXX.client.main.SilentInitException",
            "XXX.client.model.AbstractBoatModel",
            "XXX.client.model.AbstractPiglinModel",
            "XXX.client.model.AdultAndBabyModelPair",
            "XXX.client.model.AnimationUtils",
            "XXX.client.model.ArmedModel",
            "XXX.client.model.ArmorStandModel",
            "XXX.client.model.AxolotlModel",
            "XXX.client.model.BannerFlagModel",
            "XXX.client.model.BatModel",
            "XXX.client.model.BeeStingerModel",
            "XXX.client.model.BellModel$1",
            "XXX.client.model.BlazeModel",
            "XXX.client.model.BoggedModel",
            "XXX.client.model.BookModel$State",
            "XXX.client.model.CamelModel",
            "XXX.client.model.CatModel",
            "XXX.client.model.ChickenModel",
            "XXX.client.model.ColdChickenModel",
            "XXX.client.model.ColdPigModel",
            "XXX.client.model.CopperGolemStatueModel",
            "XXX.client.model.CreakingModel",
            "XXX.client.model.DolphinModel",
            "XXX.client.model.DrownedModel",
            "XXX.client.model.EndCrystalModel",
            "XXX.client.model.EndermiteModel",
            "XXX.client.model.EquineSaddleModel",
            "XXX.client.model.FelineModel",
            "XXX.client.model.FrogModel",
            "XXX.client.model.GiantZombieModel",
            "XXX.client.model.GuardianModel",
            "XXX.client.particle.DripParticle$DripstoneLavaHangProvider",
            "XXX.client.particle.DripParticle$DripstoneWaterHangProvider",
            "XXX.client.particle.DripParticle$HoneyFallProvider",
            "XXX.client.particle.DripParticle$HoneyLandProvider",
            "XXX.client.particle.DripParticle$LavaHangProvider",
            "XXX.client.particle.DripParticle$NectarFallProvider",
            "XXX.client.particle.DripParticle$ObsidianTearHangProvider",
            "XXX.client.particle.DripParticle$SporeBlossomFallProvider",
            "XXX.client.particle.DripParticle$WaterHangProvider",
            "XXX.client.particle.DustColorTransitionParticle$Provider",
            "XXX.client.particle.DustParticle$Provider",
            "XXX.client.particle.DustPlumeParticle",
            "XXX.client.particle.ElderGuardianParticle",
            "XXX.client.particle.ElderGuardianParticleGroup",
            "XXX.client.particle.ElderGuardianParticleGroup$State",
            "XXX.client.particle.ItemPickupParticleGroup",
            "XXX.client.particle.ItemPickupParticleGroup$State",
            "XXX.client.particle.LargeSmokeParticle$Provider",
            "XXX.client.particle.LavaParticle$Provider",
            "XXX.client.particle.NoRenderParticleGroup",
            "XXX.client.particle.ParticleResources$1ParticleDefinition",
            "XXX.client.particle.ParticleResources$SpriteParticleRegistration",
            "XXX.client.particle.QuadParticleGroup",
            "XXX.client.particle.ReversePortalParticle$ReversePortalProvider",
            "XXX.client.particle.SculkChargeParticle",
            "XXX.client.particle.SculkChargePopParticle",
            "XXX.client.particle.ShriekParticle",
            "XXX.client.particle.SimpleAnimatedParticle",
            "XXX.client.particle.SingleQuadParticle$FacingCameraMode",
            "XXX.client.particle.TotemParticle",
            "XXX.client.particle.TrackingEmitter",
            "XXX.client.particle.TrailParticle$Provider",
            "XXX.client.particle.TrialSpawnerDetectionParticle$Provider",
            "XXX.client.particle.VibrationSignalParticle$Provider",
            "XXX.client.particle.WakeParticle$Provider",
            "XXX.client.particle.WaterCurrentDownParticle$Provider",
            "XXX.client.particle.WaterDropParticle$Provider",
            "XXX.client.particle.WhiteAshParticle$Provider",
            "XXX.client.particle.WhiteSmokeParticle$Provider",
            "XXX.client.player.AbstractClientPlayer",
            "XXX.client.player.KeyboardInput",
            "XXX.client.player.LocalPlayerResolver",
            "XXX.player.inventory.Hotbar",
            "XXX.client.player.package-info",
            "XXX.client.profiling.package-info",
            "XXX.client.quickplay.QuickPlayLog",
            "XXX.client.quickplay.QuickPlayLog$QuickPlayEntry",
            "XXX.client.quickplay.QuickPlayLog$Type",
            "XXX.client.renderer.BiomeColors",
            "XXX.client.renderer.CachedPerspectiveProjectionMatrixBuffer",
            "XXX.client.renderer.CloudRenderer$RelativeCameraPos",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.DimensionSpecialEffects$EndEffects",
            "XXX.client.renderer.DimensionSpecialEffects$OverworldEffects",
            "XXX.client.renderer.DynamicUniformStorage",
            "XXX.client.renderer.DynamicUniforms",
            "XXX.client.renderer.EndFlashState",
            "XXX.client.renderer.FaceInfo$Constants",
            "XXX.client.renderer.GameRenderer",
            "XXX.client.renderer.GpuWarnlistManager",
            "XXX.client.renderer.ItemBlockRenderTypes",
            "XXX.client.renderer.ItemInHandRenderer",
            "XXX.client.renderer.ItemInHandRenderer$HandRenderSelection",
            "XXX.client.renderer.LevelRenderState",
            "XXX.client.renderer.LevelRenderer$1",
            "XXX.client.renderer.LevelTargetBundle",
            "XXX.client.renderer.MapRenderer",
            "XXX.client.renderer.MaterialMapper",
            "XXX.client.renderer.MultiBufferSource$BufferSource",
            "XXX.client.renderer.Octree$AxisSorting",
            "XXX.client.renderer.Octree$Leaf",
            "XXX.client.renderer.Octree$OctreeVisitor",
            "XXX.client.renderer.OutlineBufferSource",
            "XXX.client.renderer.PanoramaRenderer",
            "XXX.client.renderer.ParticlesRenderState",
            "XXX.client.renderer.PlayerSkinRenderCache",
            "XXX.client.renderer.PlayerSkinRenderCache$2",
            "XXX.client.renderer.PostChain",
            "XXX.client.renderer.PostChain$TargetBundle$1",
            "XXX.client.renderer.PostChainConfig$Input",
            "XXX.client.renderer.PostChainConfig$Pass",
            "XXX.client.renderer.PostChainConfig$TextureInput",
            "XXX.client.renderer.PostPass$Input",
            "XXX.client.renderer.PostPass$TextureInput",
            "XXX.client.renderer.QuadParticleRenderState$ParticleConsumer",
            "XXX.client.renderer.SubmitNodeCollector$ParticleGroupRenderer",
            "XXX.client.renderer.SubmitNodeStorage$BlockModelSubmit",
            "XXX.client.renderer.SubmitNodeStorage$CustomGeometrySubmit",
            "XXX.client.renderer.SubmitNodeStorage$HitboxSubmit",
            "XXX.client.renderer.SubmitNodeStorage$LeashSubmit",
            "XXX.client.renderer.SubmitNodeStorage$ModelSubmit",
            "XXX.client.renderer.SubmitNodeStorage$NameTagSubmit",
            "XXX.client.renderer.SubmitNodeStorage$TextSubmit",
            "XXX.client.renderer.UniformValue",
            "XXX.client.renderer.UniformValue$IVec3Uniform",
            "XXX.client.renderer.UniformValue$Matrix4x4Uniform",
            "XXX.client.renderer.UniformValue$Vec2Uniform",
            "XXX.client.renderer.UniformValue$Vec4Uniform",
            "XXX.client.renderer.VirtualScreen",
            "XXX.client.renderer.WeatherEffectRenderer$ColumnInstance",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$CommonRenderStorage",
            "XXX.renderer.block.MovingBlockRenderState",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElementFace",
            "XXX.block.model.BlockElementFace$UVs",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockModelDefinition$SimpleModelSelectors",
            "XXX.block.model.BlockModelPart$Unbaked",
            "XXX.block.model.BlockStateModel$SimpleCachedUnbakedRoot",
            "XXX.block.model.BlockStateModel$Unbaked",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.SimpleModelWrapper",
            "XXX.block.model.SingleVariant",
            "XXX.block.model.TextureSlots",
            "XXX.block.model.TextureSlots$Data$Builder",
            "XXX.block.model.TextureSlots$Resolver",
            "XXX.block.model.TextureSlots$Value",
            "XXX.block.model.Variant$SimpleModelState",
            "XXX.block.model.VariantMutator$VariantProperty",
            "XXX.model.multipart.CombinedCondition",
            "XXX.model.multipart.CombinedCondition$Operation$1",
            "XXX.model.multipart.Condition",
            "XXX.model.multipart.KeyValueCondition$Term",
            "XXX.model.multipart.MultiPartModel",
            "XXX.model.multipart.MultiPartModel$SharedBakedState",
            "XXX.model.multipart.MultiPartModel$Unbaked$1",
            "XXX.model.multipart.Selector",
            "XXX.block.model.package-info",
            "XXX.renderer.blockentity.AbstractEndPortalRenderer",
            "XXX.renderer.blockentity.ConduitRenderer",
            "XXX.renderer.blockentity.DecoratedPotRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$ModelKey",
            "XXX.renderer.blockentity.PistonHeadRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer",
            "XXX.renderer.blockentity.SignRenderer",
            "XXX.renderer.blockentity.SkullBlockRenderer",
            "XXX.renderer.blockentity.SpawnerRenderer",
            "XXX.renderer.blockentity.TheEndGatewayRenderer",
            "XXX.renderer.blockentity.TrialSpawnerRenderer",
            "XXX.renderer.blockentity.package-info",
            "XXX.blockentity.state.BeaconRenderState",
            "XXX.blockentity.state.BedRenderState",
            "XXX.blockentity.state.BlockEntityRenderState",
            "XXX.blockentity.state.BlockEntityWithBoundingBoxRenderState$InvisibleBlockType",
            "XXX.blockentity.state.CampfireRenderState",
            "XXX.blockentity.state.ChestRenderState$ChestMaterialType",
            "XXX.blockentity.state.CopperGolemStatueRenderState",
            "XXX.blockentity.state.EnchantTableRenderState",
            "XXX.blockentity.state.EndPortalRenderState",
            "XXX.blockentity.state.PistonHeadRenderState",
            "XXX.blockentity.state.ShulkerBoxRenderState",
            "XXX.blockentity.state.SkullBlockRenderState",
            "XXX.blockentity.state.TestInstanceRenderState",
            "XXX.blockentity.state.package-info",
            "XXX.renderer.chunk.ChunkSectionLayerGroup",
            "XXX.renderer.chunk.CompileTaskDynamicQueue",
            "XXX.renderer.chunk.CompiledSectionMesh$1",
            "XXX.renderer.chunk.RenderRegionCache",
            "XXX.renderer.chunk.SectionBuffers",
            "XXX.renderer.chunk.SectionCompiler$Results",
            "XXX.renderer.chunk.SectionMesh",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$RebuildTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$SectionTaskResult",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.BreezeDebugRenderer",
            "XXX.renderer.debug.ChunkCullingDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedListener",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$EntityGoalInfo",
            "XXX.renderer.debug.HeightMapRenderer$1",
            "XXX.renderer.debug.LightSectionDebugRenderer",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.RedstoneWireOrientationsRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractBoatRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AbstractSkeletonRenderer",
            "XXX.renderer.entity.AgeableMobRenderer",
            "XXX.renderer.entity.ArmadilloRenderer",
            "XXX.renderer.entity.ArmorModelSet$1",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.BoggedRenderer",
            "XXX.renderer.entity.CamelRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DisplayRenderer$1",
            "XXX.renderer.entity.DisplayRenderer$ItemDisplayRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DonkeyRenderer$Type",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EntityRendererProvider",
            "XXX.renderer.entity.EntityRenderers",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GlowSquidRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaRenderer$1",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.NoopRenderer",
            "XXX.renderer.entity.OminousItemSpawnerRenderer",
            "XXX.renderer.entity.PaintingRenderer$1",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RaftRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SalmonRenderer$1",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.TadpoleRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer$Type",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WardenRenderer",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.renderer.entity.ZombifiedPiglinRenderer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.BreezeEyesLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.CustomHeadLayer$Transforms",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EquipmentLayerRenderer",
            "XXX.entity.layers.EquipmentLayerRenderer$TrimSpriteKey",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SheepWoolLayer",
            "XXX.entity.layers.SimpleEquipmentLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.AvatarRenderer",
            "XXX.entity.state.AllayRenderState",
            "XXX.entity.state.ArmedEntityRenderState",
            "XXX.entity.state.ArrowRenderState",
            "XXX.entity.state.PufferfishRenderState",
            "XXX.entity.state.RavagerRenderState",
            "XXX.entity.state.ServerHitboxesRenderState",
            "XXX.entity.state.ShulkerBulletRenderState",
            "XXX.entity.state.SkeletonRenderState",
            "XXX.entity.state.SnifferRenderState",
            "XXX.entity.state.SquidRenderState",
            "XXX.entity.state.TextDisplayEntityRenderState",
            "XXX.entity.state.ThrownTridentRenderState",
            "XXX.entity.state.TntRenderState",
            "XXX.entity.state.TurtleRenderState",
            "XXX.entity.state.VillagerDataHolderRenderState",
            "XXX.entity.state.WardenRenderState",
            "XXX.entity.state.WitherRenderState",
            "XXX.entity.state.WolfRenderState",
            "XXX.entity.state.ZombieVillagerRenderState",
            "XXX.entity.state.package-info",
            "XXX.renderer.feature.CustomFeatureRenderer",
            "XXX.renderer.feature.FlameFeatureRenderer",
            "XXX.renderer.feature.ItemFeatureRenderer",
            "XXX.renderer.feature.ModelFeatureRenderer",
            "XXX.renderer.feature.ModelPartFeatureRenderer",
            "XXX.renderer.feature.ParticleFeatureRenderer",
            "XXX.client.resources.SkinManager$1",
            "XXX.client.resources.SkinManager$CacheKey",
            "XXX.client.resources.SplashManager",
            "XXX.client.resources.WaypointStyleManager",
            "XXX.resources.language.FormattedBidiReorder",
            "XXX.resources.language.LanguageInfo",
            "XXX.resources.language.package-info",
            "XXX.metadata.animation.AnimationMetadataSection",
            "XXX.metadata.animation.VillagerMetadataSection",
            "XXX.metadata.animation.package-info",
            "XXX.metadata.gui.GuiSpriteScaling",
            "XXX.metadata.gui.GuiSpriteScaling$NineSlice$Border",
            "XXX.metadata.gui.GuiSpriteScaling$Tile",
            "XXX.metadata.gui.package-info",
            "XXX.metadata.language.package-info",
            "XXX.metadata.texture.TextureMetadataSection",
            "XXX.resources.model.AtlasManager",
            "XXX.resources.model.AtlasManager$AtlasEntry",
            "XXX.resources.model.AtlasManager$PendingStitchResults",
            "XXX.resources.model.BlockModelRotation$WithUvLock",
            "XXX.resources.model.BlockStateModelLoader",
            "XXX.resources.model.BlockStateModelLoader$LoadedModels",
            "XXX.resources.model.ClientItemInfoLoader$LoadedClientInfos",
            "XXX.resources.model.EquipmentAssetManager",
            "XXX.resources.model.EquipmentClientInfo$Builder",
            "XXX.resources.model.EquipmentClientInfo$Layer",
            "XXX.resources.model.Material",
            "XXX.resources.model.MissingBlockModel",
            "XXX.resources.model.ModelBaker$SharedOperationKey",
            "XXX.resources.model.ModelBakery$BakingResult",
            "XXX.resources.model.ModelBakery$MissingModels$1",
            "XXX.resources.model.ModelDebugName",
            "XXX.resources.model.ModelDiscovery$ModelWrapper",
            "XXX.resources.model.ModelGroupCollector",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelManager$ReloadState",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.QuadCollection$Builder",
            "XXX.resources.model.ResolvableModel$Resolver",
            "XXX.resources.model.SpriteGetter",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedVariants",
            "XXX.resources.model.package-info",
            "XXX.resources.server.DownloadedPackSource",
            "XXX.resources.server.DownloadedPackSource$2",
            "XXX.resources.server.DownloadedPackSource$4",
            "XXX.resources.server.DownloadedPackSource$6",
            "XXX.resources.server.DownloadedPackSource$8",
            "XXX.resources.server.PackLoadFeedback",
            "XXX.resources.server.PackLoadFeedback$Update",
            "XXX.resources.server.PackReloadConfig$Callbacks",
            "XXX.resources.server.ServerPackManager",
            "XXX.resources.server.ServerPackManager$ActivationStatus",
            "XXX.resources.server.ServerPackManager$PackPromptStatus",
            "XXX.resources.server.ServerPackManager$ServerPackData",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingHappyGhastSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.FullTextSearchTree",
            "XXX.client.searchtree.IntersectionIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$2",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.FiniteAudioStream",
            "XXX.client.sounds.JOrbisAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicInfo",
            "XXX.client.sounds.MusicManager$1",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngine$DeviceCheckState",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.telemetry.ClientTelemetryManager",
            "XXX.client.telemetry.TelemetryEventLog",
            "XXX.client.telemetry.TelemetryEventSender",
            "XXX.client.telemetry.TelemetryEventType$Builder",
            "XXX.client.telemetry.TelemetryProperty",
            "XXX.client.telemetry.TelemetryProperty$GameMode",
            "XXX.client.telemetry.TelemetryPropertyMap",
            "XXX.client.telemetry.TelemetryPropertyMap$Builder",
            "XXX.telemetry.events.AggregatedTelemetryEvent",
            "XXX.telemetry.events.GameLoadTimesEvent$Measurement",
            "XXX.telemetry.events.WorldLoadEvent",
            "XXX.telemetry.events.WorldLoadTimesEvent",
            "XXX.telemetry.events.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.client.waypoints.ClientWaypointManager",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandResultCallback",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$2",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.ExecutionCommandSource",
            "XXX.minecraft.commands.ParserUtils",
            "XXX.minecraft.commands.PermissionSource$Check",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$DialogArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootModifierArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootTableArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$Result",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ResourceSelectorArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.SlotsArgument",
            "XXX.commands.arguments.StyleArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.commands.arguments.WaypointArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.ComponentPredicateParser",
            "XXX.arguments.item.ComponentPredicateParser$Context",
            "XXX.arguments.item.ComponentPredicateParser$PredicateLookupRule",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemParser$SuggestionsVisitor",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Context",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.arguments.selector.SelectorPattern",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.execution.ChainModifiers",
            "XXX.commands.execution.CustomCommandExecutor",
            "XXX.commands.execution.CustomCommandExecutor$WithErrorHandling",
            "XXX.commands.execution.CustomModifierExecutor$ModifierAdapter",
            "XXX.commands.execution.ExecutionContext",
            "XXX.commands.execution.ExecutionControl$1",
            "XXX.commands.execution.Frame$FrameControl",
            "XXX.commands.execution.UnboundEntryAction",
            "XXX.execution.tasks.BuildContexts",
            "XXX.execution.tasks.BuildContexts$TopLevel",
            "XXX.execution.tasks.CallFunction",
            "XXX.execution.tasks.ContinuationTask$TaskProvider",
            "XXX.execution.tasks.FallthroughTask",
            "XXX.execution.tasks.package-info",
            "XXX.commands.functions.FunctionBuilder",
            "XXX.commands.functions.MacroFunction",
            "XXX.commands.functions.MacroFunction$MacroEntry",
            "XXX.commands.functions.PlainTextFunction",
            "XXX.commands.functions.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockBox$1",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$6",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.ClientAsset",
            "XXX.minecraft.core.Cloner$Factory",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.MappedRegistry$TagSet",
            "XXX.minecraft.core.MappedRegistry$TagSet$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.RegistrationInfo",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$2",
            "XXX.minecraft.core.RegistrySetBuilder$3$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookupWrapper",
            "XXX.minecraft.core.RegistrySetBuilder$LazyHolder",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$PackedRegistryEntry",
            "XXX.minecraft.core.Rotations$1",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.UUIDUtil$1",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.CauldronInteraction$InteractionMap",
            "XXX.core.component.DataComponentExactPredicate",
            "XXX.core.component.DataComponentGetter",
            "XXX.core.component.DataComponentMap",
            "XXX.core.component.DataComponentMap$2",
            "XXX.core.component.DataComponentMap$Builder",
            "XXX.core.component.DataComponentPatch",
            "XXX.core.component.DataComponentPatch$2",
            "XXX.core.component.DataComponentPatch$Builder",
            "XXX.core.component.DataComponentPatch$PatchKey",
            "XXX.core.component.DataComponentType",
            "XXX.core.component.DataComponentType$Builder$SimpleType",
            "XXX.core.component.PatchedDataComponentMap",
            "XXX.core.component.TypedDataComponent$1",
            "XXX.component.predicates.AttributeModifiersPredicate",
            "XXX.component.predicates.BundlePredicate",
            "XXX.component.predicates.CustomDataPredicate",
            "XXX.component.predicates.DataComponentPredicate",
            "XXX.component.predicates.DataComponentPredicate$Type",
            "XXX.component.predicates.EnchantmentsPredicate",
            "XXX.component.predicates.EnchantmentsPredicate$StoredEnchantments",
            "XXX.component.predicates.FireworkExplosionPredicate$FireworkPredicate",
            "XXX.component.predicates.JukeboxPlayablePredicate",
            "XXX.component.predicates.TrimPredicate",
            "XXX.component.predicates.WritableBookPredicate$PagePredicate",
            "XXX.component.predicates.WrittenBookPredicate$PagePredicate",
            "XXX.core.dispenser.BlockSource",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.MinecartDispenseItemBehavior",
            "XXX.core.dispenser.ProjectileDispenseBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.ColorParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.PowerParticleOption",
            "XXX.core.particles.TrailParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$1",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.DatapackStructureReport$CustomPackEntry",
            "XXX.data.info.DatapackStructureReport$Format",
            "XXX.data.info.ItemListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.TradeRebalanceChestLoot",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaChargedCreeperExplosionLoot$Entry",
            "XXX.loot.packs.VanillaEntityInteractLoot",
            "XXX.loot.packs.VanillaEquipmentLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider$Runner",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.RegistryPatchGenerator",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.BlockItemTagsProvider",
            "XXX.data.tags.DialogTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.KeyTagProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagAppender",
            "XXX.data.tags.TagAppender$2",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TradeRebalanceEnchantmentTagsProvider",
            "XXX.data.tags.VanillaBlockTagsProvider$1",
            "XXX.data.tags.VanillaItemTagsProvider",
            "XXX.data.tags.VanillaItemTagsProvider$BlockToItemConverter",
            "XXX.data.tags.package-info",
            "XXX.data.worldgen.AncientCityStructurePools",
            "XXX.data.worldgen.BastionHoglinStablePools",
            "XXX.data.worldgen.BastionPieces",
            "XXX.data.worldgen.BastionTreasureRoomPools",
            "XXX.data.worldgen.BootstrapContext",
            "XXX.data.worldgen.DesertVillagePools",
            "XXX.data.worldgen.NoiseData",
            "XXX.data.worldgen.PlainVillagePools",
            "XXX.data.worldgen.ProcessorLists",
            "XXX.data.worldgen.SnowyVillagePools",
            "XXX.data.worldgen.Structures",
            "XXX.data.worldgen.TaigaVillagePools",
            "XXX.data.worldgen.TrailRuinsStructurePools",
            "XXX.data.worldgen.VillagePools",
            "XXX.worldgen.biome.EndBiomes",
            "XXX.worldgen.biome.OverworldBiomes",
            "XXX.worldgen.features.AquaticFeatures",
            "XXX.worldgen.features.EndFeatures",
            "XXX.worldgen.features.MiscOverworldFeatures",
            "XXX.worldgen.features.OreFeatures",
            "XXX.worldgen.features.TreeFeatures",
            "XXX.worldgen.features.package-info",
            "XXX.worldgen.placement.AquaticPlacements",
            "XXX.worldgen.placement.EndPlacements",
            "XXX.worldgen.placement.NetherPlacements",
            "XXX.worldgen.placement.PlacementUtils",
            "XXX.worldgen.placement.VegetationPlacements",
            "XXX.worldgen.placement.package-info",
            "XXX.gametest.framework.BlockBasedTestInstance",
            "XXX.gametest.framework.ExhaustedAttemptsException",
            "XXX.gametest.framework.FunctionGameTestInstance",
            "XXX.gametest.framework.GameTestAssertPosException",
            "XXX.gametest.framework.GameTestBatchFactory",
            "XXX.gametest.framework.GameTestBatchListener",
            "XXX.gametest.framework.GameTestEvent",
            "XXX.gametest.framework.GameTestHelper",
            "XXX.gametest.framework.GameTestHelper$2",
            "XXX.gametest.framework.GameTestInfo",
            "XXX.gametest.framework.GameTestInstances",
            "XXX.gametest.framework.GameTestMainUtil",
            "XXX.gametest.framework.GameTestRunner$1",
            "XXX.gametest.framework.GameTestRunner$GameTestBatcher",
            "XXX.gametest.framework.GameTestSequence",
            "XXX.gametest.framework.GameTestServer",
            "XXX.gametest.framework.GameTestServer$MockProfileResolver",
            "XXX.gametest.framework.GameTestTicker",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.RetryOptions",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestEnvironmentDefinition",
            "XXX.gametest.framework.TestEnvironmentDefinition$Functions",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules$Entry",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather",
            "XXX.gametest.framework.TestFinder",
            "XXX.gametest.framework.TestFunctionLoader",
            "XXX.gametest.framework.TestPosFinder",
            "XXX.gametest.framework.UnknownGameTestException",
            "XXX.minecraft.gametest.package-info",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtException",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtIo$StringFallbackDataOutput",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$GenericListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ReportedNbtException",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtGrammar",
            "XXX.minecraft.nbt.SnbtGrammar$2",
            "XXX.minecraft.nbt.SnbtGrammar$4",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix",
            "XXX.minecraft.nbt.SnbtGrammar$ArrayPrefix$2",
            "XXX.minecraft.nbt.SnbtGrammar$Base",
            "XXX.minecraft.nbt.SnbtGrammar$IntegerSuffix",
            "XXX.minecraft.nbt.SnbtGrammar$Signed",
            "XXX.minecraft.nbt.SnbtGrammar$SimpleHexLiteralParseRule",
            "XXX.minecraft.nbt.SnbtOperations",
            "XXX.minecraft.nbt.SnbtOperations$2",
            "XXX.minecraft.nbt.SnbtOperations$BuiltinKey",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.CollectToTag$CompoundBuilder",
            "XXX.nbt.visitors.CollectToTag$ListBuilder",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.DisconnectionDetails",
            "XXX.minecraft.network.HandlerNames",
            "XXX.minecraft.network.HashedPatchMap$HashGenerator",
            "XXX.minecraft.network.HashedStack$1",
            "XXX.minecraft.network.HiddenByteBuf",
            "XXX.minecraft.network.LocalFrameEncoder",
            "XXX.minecraft.network.MonitoredLocalFrameDecoder",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketProcessor",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.ProtocolInfo$Details",
            "XXX.minecraft.network.ProtocolInfo$DetailsProvider",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.SkipPacketEncoderException",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Inbound",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Outbound",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.ClickEvent$CopyToClipboard",
            "XXX.network.chat.ClickEvent$OpenFile",
            "XXX.network.chat.ClickEvent$RunCommand",
            "XXX.network.chat.ClickEvent$SuggestCommand",
            "XXX.network.chat.Component",
            "XXX.network.chat.ComponentSerialization",
            "XXX.network.chat.ComponentSerialization$FuzzyCodec",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FontDescription$AtlasSprite",
            "XXX.network.chat.FontDescription$Resource",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.HoverEvent$ShowItem",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenMessagesValidator$ValidationException",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$1",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.PlainTextContents",
            "XXX.chat.contents.PlainTextContents$LiteralContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.contents.data.DataSource",
            "XXX.contents.data.EntityDataSource",
            "XXX.contents.data.package-info",
            "XXX.contents.objects.ObjectInfo",
            "XXX.contents.objects.PlayerSprite",
            "XXX.chat.contents.package-info",
            "XXX.chat.numbers.BlankFormat$1",
            "XXX.chat.numbers.FixedFormat$1",
            "XXX.chat.numbers.NumberFormatType",
            "XXX.chat.numbers.StyledFormat",
            "XXX.chat.numbers.package-info",
            "XXX.network.codec.ByteBufCodecs",
            "XXX.network.codec.ByteBufCodecs$10",
            "XXX.network.codec.ByteBufCodecs$12",
            "XXX.network.codec.ByteBufCodecs$14",
            "XXX.network.codec.ByteBufCodecs$16",
            "XXX.network.codec.ByteBufCodecs$18",
            "XXX.network.codec.ByteBufCodecs$2",
            "XXX.network.codec.ByteBufCodecs$21",
            "XXX.network.codec.ByteBufCodecs$23",
            "XXX.network.codec.ByteBufCodecs$25",
            "XXX.network.codec.ByteBufCodecs$27",
            "XXX.network.codec.ByteBufCodecs$29",
            "XXX.network.codec.ByteBufCodecs$30",
            "XXX.network.codec.ByteBufCodecs$32",
            "XXX.network.codec.ByteBufCodecs$34",
            "XXX.network.codec.ByteBufCodecs$4",
            "XXX.network.codec.ByteBufCodecs$6",
            "XXX.network.codec.ByteBufCodecs$8",
            "XXX.network.codec.IdDispatchCodec",
            "XXX.network.codec.IdDispatchCodec$DontDecorateException",
            "XXX.network.codec.StreamCodec",
            "XXX.network.codec.StreamCodec$10",
            "XXX.network.codec.StreamCodec$12",
            "XXX.network.codec.StreamCodec$14",
            "XXX.network.codec.StreamCodec$16",
            "XXX.network.codec.StreamCodec$2",
            "XXX.network.codec.StreamCodec$4",
            "XXX.network.codec.StreamCodec$6",
            "XXX.network.codec.StreamCodec$8",
            "XXX.network.codec.StreamCodec$CodecOperation",
            "XXX.network.codec.StreamEncoder",
            "XXX.network.codec.package-info",
            "XXX.network.protocol.BundleDelimiterPacket",
            "XXX.network.protocol.BundlerInfo",
            "XXX.network.protocol.BundlerInfo$1$1",
            "XXX.network.protocol.CodecModifier",
            "XXX.network.protocol.PacketFlow",
            "XXX.network.protocol.PacketUtils",
            "XXX.network.protocol.ProtocolInfoBuilder",
            "XXX.network.protocol.ProtocolInfoBuilder$2",
            "XXX.network.protocol.ProtocolInfoBuilder$CodecEntry",
            "XXX.network.protocol.SimpleUnboundProtocol",
            "XXX.protocol.common.ClientCommonPacketListener",
            "XXX.protocol.common.ClientboundCustomPayloadPacket",
            "XXX.protocol.common.ClientboundDisconnectPacket",
            "XXX.protocol.common.ClientboundPingPacket",
            "XXX.protocol.common.ClientboundResourcePackPushPacket",
            "XXX.protocol.common.ClientboundShowDialogPacket",
            "XXX.protocol.common.ClientboundTransferPacket",
            "XXX.protocol.common.CommonPacketTypes",
            "XXX.protocol.common.ServerboundClientInformationPacket",
            "XXX.protocol.common.ServerboundCustomPayloadPacket",
            "XXX.protocol.common.ServerboundPongPacket",
            "XXX.protocol.common.ServerboundResourcePackPacket$Action",
            "XXX.common.custom.BeeDebugPayload$BeeInfo",
            "XXX.common.custom.BrainDebugPayload$BrainDump",
            "XXX.common.custom.BreezeDebugPayload",
            "XXX.common.custom.CustomPacketPayload",
            "XXX.common.custom.CustomPacketPayload$FallbackProvider",
            "XXX.common.custom.CustomPacketPayload$TypeAndCodec",
            "XXX.common.custom.GameEventDebugPayload",
            "XXX.common.custom.GameTestAddMarkerDebugPayload",
            "XXX.common.custom.GoalDebugPayload",
            "XXX.common.custom.HiveDebugPayload",
            "XXX.common.custom.NeighborUpdatesDebugPayload",
            "XXX.common.custom.PoiAddedDebugPayload",
            "XXX.common.custom.PoiTicketCountDebugPayload",
            "XXX.common.custom.RedstoneWireOrientationsDebugPayload",
            "XXX.common.custom.StructuresDebugPayload",
            "XXX.common.custom.VillageSectionsDebugPayload",
            "XXX.common.custom.package-info",
            "XXX.protocol.configuration.ClientConfigurationPacketListener",
            "XXX.protocol.configuration.ClientboundFinishConfigurationPacket",
            "XXX.protocol.configuration.ClientboundResetChatPacket",
            "XXX.protocol.configuration.ClientboundUpdateEnabledFeaturesPacket",
            "XXX.protocol.configuration.ConfigurationProtocols",
            "XXX.protocol.configuration.ServerboundAcceptCodeOfConductPacket",
            "XXX.protocol.configuration.ServerboundSelectKnownPacks",
            "XXX.protocol.cookie.ClientCookiePacketListener",
            "XXX.protocol.cookie.CookiePacketTypes",
            "XXX.protocol.cookie.ServerboundCookieResponsePacket",
            "XXX.protocol.game.ClientGamePacketListener",
            "XXX.protocol.game.ClientboundAnimatePacket",
            "XXX.protocol.game.ClientboundBlockChangedAckPacket",
            "XXX.protocol.game.ClientboundBlockEntityDataPacket",
            "XXX.protocol.game.ClientboundBlockUpdatePacket",
            "XXX.protocol.game.ClientboundBossEventPacket$1",
            "XXX.protocol.game.ClientboundBossEventPacket$Handler",
            "XXX.protocol.game.ClientboundBossEventPacket$OperationType",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateProgressOperation",
            "XXX.protocol.game.ClientboundBossEventPacket$UpdateStyleOperation",
            "XXX.protocol.game.ClientboundBundlePacket",
            "XXX.protocol.game.ClientboundChunkBatchFinishedPacket",
            "XXX.protocol.game.ClientboundChunksBiomesPacket",
            "XXX.protocol.game.ClientboundClearTitlesPacket",
            "XXX.protocol.game.ClientboundCommandSuggestionsPacket$Entry",
            "XXX.protocol.game.ClientboundCommandsPacket$ArgumentNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$LiteralNodeStub",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeInspector",
            "XXX.protocol.game.ClientboundCommandsPacket$NodeStub",
            "XXX.protocol.game.ClientboundContainerSetContentPacket",
            "XXX.protocol.game.ClientboundContainerSetSlotPacket",
            "XXX.protocol.game.ClientboundCustomChatCompletionsPacket",
            "XXX.protocol.game.ClientboundDamageEventPacket",
            "XXX.protocol.game.ClientboundDeleteChatPacket",
            "XXX.protocol.game.ClientboundEntityEventPacket",
            "XXX.protocol.game.ClientboundExplodePacket",
            "XXX.protocol.game.ClientboundGameEventPacket",
            "XXX.protocol.game.ClientboundHorseScreenOpenPacket",
            "XXX.protocol.game.ClientboundInitializeBorderPacket",
            "XXX.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
            "XXX.protocol.game.ClientboundLevelChunkWithLightPacket",
            "XXX.protocol.game.ClientboundLevelParticlesPacket",
            "XXX.protocol.game.ClientboundLightUpdatePacketData",
            "XXX.protocol.game.ClientboundMapItemDataPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket",
            "XXX.protocol.game.ClientboundMoveEntityPacket$PosRot",
            "XXX.protocol.game.ClientboundMoveMinecartPacket",
            "XXX.protocol.game.ClientboundOpenBookPacket",
            "XXX.protocol.game.ClientboundOpenSignEditorPacket",
            "XXX.protocol.game.ClientboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ClientboundPlayerCombatEndPacket",
            "XXX.protocol.game.ClientboundPlayerCombatKillPacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader",
            "XXX.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry",
            "XXX.protocol.game.ClientboundPlayerLookAtPacket",
            "XXX.protocol.game.ClientboundPlayerRotationPacket",
            "XXX.protocol.game.ClientboundRecipeBookAddPacket",
            "XXX.protocol.game.ClientboundRecipeBookRemovePacket",
            "XXX.protocol.game.ClientboundRemoveEntitiesPacket",
            "XXX.protocol.game.ClientboundResetScorePacket",
            "XXX.protocol.game.ClientboundRotateHeadPacket",
            "XXX.protocol.game.ClientboundSelectAdvancementsTabPacket",
            "XXX.protocol.game.ClientboundSetActionBarTextPacket",
            "XXX.protocol.game.ClientboundSetBorderLerpSizePacket",
            "XXX.protocol.game.ClientboundSetBorderWarningDelayPacket",
            "XXX.protocol.game.ClientboundSetCameraPacket",
            "XXX.protocol.game.ClientboundSetChunkCacheRadiusPacket",
            "XXX.protocol.game.ClientboundSetDefaultSpawnPositionPacket",
            "XXX.protocol.game.ClientboundSetEntityDataPacket",
            "XXX.protocol.game.ClientboundSetEntityMotionPacket",
            "XXX.protocol.game.ClientboundSetExperiencePacket",
            "XXX.protocol.game.ClientboundSetHeldSlotPacket",
            "XXX.protocol.game.ClientboundSetPassengersPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket",
            "XXX.protocol.game.ClientboundSetPlayerTeamPacket$Parameters",
            "XXX.protocol.game.ClientboundSetSimulationDistancePacket",
            "XXX.protocol.game.ClientboundSetTimePacket",
            "XXX.protocol.game.ClientboundSetTitlesAnimationPacket",
            "XXX.protocol.game.ClientboundSoundPacket",
            "XXX.protocol.game.ClientboundStopSoundPacket",
            "XXX.protocol.game.ClientboundTabListPacket",
            "XXX.protocol.game.ClientboundTakeItemEntityPacket",
            "XXX.protocol.game.ClientboundTestInstanceBlockStatus",
            "XXX.protocol.game.ClientboundTickingStepPacket",
            "XXX.protocol.game.ClientboundTrackedWaypointPacket$Operation",
            "XXX.protocol.game.ClientboundUpdateAttributesPacket",
            "XXX.protocol.game.ClientboundUpdateMobEffectPacket",
            "XXX.protocol.game.CommonPlayerSpawnInfo",
            "XXX.protocol.game.DebugPackets",
            "XXX.protocol.game.GameProtocols",
            "XXX.protocol.game.GameProtocols$Context",
            "XXX.protocol.game.ServerPacketListener",
            "XXX.protocol.game.ServerboundBlockEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundChangeGameModePacket",
            "XXX.protocol.game.ServerboundChatCommandPacket",
            "XXX.protocol.game.ServerboundChatPacket",
            "XXX.protocol.game.ServerboundChunkBatchReceivedPacket",
            "XXX.protocol.game.ServerboundClientCommandPacket$Action",
            "XXX.protocol.game.ServerboundCommandSuggestionPacket",
            "XXX.protocol.game.ServerboundContainerButtonClickPacket",
            "XXX.protocol.game.ServerboundContainerClosePacket",
            "XXX.protocol.game.ServerboundDebugSampleSubscriptionPacket",
            "XXX.protocol.game.ServerboundEntityTagQueryPacket",
            "XXX.protocol.game.ServerboundInteractPacket$1",
            "XXX.protocol.game.ServerboundInteractPacket$ActionType",
            "XXX.protocol.game.ServerboundInteractPacket$InteractionAction",
            "XXX.protocol.game.ServerboundJigsawGeneratePacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket",
            "XXX.protocol.game.ServerboundMovePlayerPacket$PosRot",
            "XXX.protocol.game.ServerboundMovePlayerPacket$StatusOnly",
            "XXX.protocol.game.ServerboundPaddleBoatPacket",
            "XXX.protocol.game.ServerboundPickItemFromEntityPacket",
            "XXX.protocol.game.ServerboundPlayerAbilitiesPacket",
            "XXX.protocol.game.ServerboundPlayerActionPacket$Action",
            "XXX.protocol.game.ServerboundPlayerCommandPacket$Action",
            "XXX.protocol.game.ServerboundPlayerLoadedPacket",
            "XXX.protocol.game.ServerboundRecipeBookSeenRecipePacket",
            "XXX.protocol.game.ServerboundSeenAdvancementsPacket",
            "XXX.protocol.game.ServerboundSelectBundleItemPacket",
            "XXX.protocol.game.ServerboundSetBeaconPacket",
            "XXX.protocol.game.ServerboundSetCommandBlockPacket",
            "XXX.protocol.game.ServerboundSetCreativeModeSlotPacket",
            "XXX.protocol.game.ServerboundSetStructureBlockPacket",
            "XXX.protocol.game.ServerboundSignUpdatePacket",
            "XXX.protocol.game.ServerboundTeleportToEntityPacket",
            "XXX.protocol.game.ServerboundTestInstanceBlockActionPacket$Action",
            "XXX.protocol.game.ServerboundUseItemPacket",
            "XXX.protocol.game.package-info",
            "XXX.protocol.handshake.ClientIntentionPacket",
            "XXX.protocol.handshake.HandshakeProtocols",
            "XXX.protocol.handshake.package-info",
            "XXX.protocol.login.ClientboundCustomQueryPacket",
            "XXX.protocol.login.ClientboundLoginCompressionPacket",
            "XXX.protocol.login.ClientboundLoginFinishedPacket",
            "XXX.protocol.login.LoginProtocols",
            "XXX.protocol.login.ServerboundCustomQueryAnswerPacket",
            "XXX.protocol.login.ServerboundKeyPacket",
            "XXX.login.custom.CustomQueryAnswerPayload",
            "XXX.login.custom.DiscardedQueryAnswerPayload",
            "XXX.login.custom.package-info",
            "XXX.network.protocol.package-info",
            "XXX.protocol.ping.ClientboundPongResponsePacket",
            "XXX.protocol.ping.ServerPingPacketListener",
            "XXX.protocol.ping.package-info",
            "XXX.protocol.status.ClientboundStatusResponsePacket",
            "XXX.protocol.status.ServerStatus$Favicon",
            "XXX.protocol.status.ServerStatus$Version",
            "XXX.protocol.status.ServerboundStatusRequestPacket",
            "XXX.protocol.status.StatusProtocols",
            "XXX.network.syncher.EntityDataAccessor",
            "XXX.network.syncher.EntityDataSerializer$ForValueType",
            "XXX.network.syncher.EntityDataSerializers$1",
            "XXX.network.syncher.EntityDataSerializers$3",
            "XXX.minecraft.util.BoundedFloatFunction$1",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.ClassTreeIdRegistry",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.EncoderCache",
            "XXX.minecraft.util.EncoderCache$2",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$6",
            "XXX.minecraft.util.ExtraCodecs$LateBoundIdMapper",
            "XXX.minecraft.util.ExtraCodecs$TagOrElementLocation",
            "XXX.minecraft.util.FileSystemUtil",
            "XXX.minecraft.util.FormattedCharSequence",
            "XXX.minecraft.util.FutureChain",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HashOps",
            "XXX.minecraft.util.HashOps$MapHashBuilder",
            "XXX.minecraft.util.HttpUtil$DownloadProgressListener",
            "XXX.minecraft.util.KeyDispatchDataCodec",
            "XXX.minecraft.util.LenientJsonParser",
            "XXX.minecraft.util.ListAndDeque",
            "XXX.minecraft.util.ModCheck",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleInfo",
            "XXX.minecraft.util.NullOps",
            "XXX.minecraft.util.NullOps$NullListBuilder",
            "XXX.minecraft.util.OptionEnum",
            "XXX.minecraft.util.PlaceholderLookupProvider",
            "XXX.minecraft.util.PlaceholderLookupProvider$2",
            "XXX.minecraft.util.PngInfo",
            "XXX.minecraft.util.ProblemReporter$1",
            "XXX.minecraft.util.ProblemReporter$Collector$Entry",
            "XXX.minecraft.util.ProblemReporter$ElementReferencePathElement",
            "XXX.minecraft.util.ProblemReporter$IndexedFieldPathElement",
            "XXX.minecraft.util.ProblemReporter$PathElement",
            "XXX.minecraft.util.ProblemReporter$RootElementPathElement",
            "XXX.minecraft.util.ProblemReporter$ScopedCollector",
            "XXX.minecraft.util.RandomSource",
            "XXX.minecraft.util.ResourceLocationPattern",
            "XXX.minecraft.util.SequencedPriorityIterator",
            "XXX.minecraft.util.SignatureUpdater$Output",
            "XXX.minecraft.util.Signer",
            "XXX.minecraft.util.SimpleBitStorage$InitializationException",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.SpawnUtil$Strategy",
            "XXX.minecraft.util.StaticCache2D$Initializer",
            "XXX.minecraft.util.StringDecomposer",
            "XXX.minecraft.util.StringRepresentable$1",
            "XXX.minecraft.util.StringRepresentable$StringRepresentableCodec",
            "XXX.minecraft.util.TaskChainer",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.TimeSource",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.TriState",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.context.ContextKeySet",
            "XXX.util.context.ContextMap",
            "XXX.util.context.package-info",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.ExtraDataFixUtils",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractBlockPropertyFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AreaEffectCloudDurationScaleFix",
            "XXX.datafix.fixes.AttributeIdPrefixFix",
            "XXX.datafix.fixes.AttributesRenameFix",
            "XXX.datafix.fixes.BannerEntityCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockPosFormatAndRenamesFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.BoatSplitFix",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkTicketUnpackPosFix",
            "XXX.datafix.fixes.ColorlessShulkerEntityFix",
            "XXX.datafix.fixes.CopperGolemWeatherStateFix",
            "XXX.datafix.fixes.CustomModelDataExpandFix",
            "XXX.datafix.fixes.DecoratedPotFieldRenameFix",
            "XXX.datafix.fixes.DropInvalidSignDataFix",
            "XXX.datafix.fixes.EffectDurationFix",
            "XXX.datafix.fixes.EmptyItemInVillagerTradeFix",
            "XXX.datafix.fixes.EntityAttributeBaseValueFix",
            "XXX.datafix.fixes.EntityBrushableBlockFieldsRenameFix",
            "XXX.datafix.fixes.EntityCodSalmonFix",
            "XXX.datafix.fixes.EntityElderGuardianSplitFix",
            "XXX.datafix.fixes.EntityFallDistanceFloatToDoubleFix",
            "XXX.datafix.fixes.EntityGoatMissingStateFix",
            "XXX.datafix.fixes.EntityHorseSaddleFix",
            "XXX.datafix.fixes.EntityIdFix",
            "XXX.datafix.fixes.EntityMinecartIdentifiersFix",
            "XXX.datafix.fixes.EntityPaintingMotiveFix",
            "XXX.datafix.fixes.EntityPufferfishRenameFix",
            "XXX.datafix.fixes.EntityRedundantChanceTagsFix",
            "XXX.datafix.fixes.EntityRidingToPassengersFix",
            "XXX.datafix.fixes.EntityShulkerColorFix",
            "XXX.datafix.fixes.EntitySkeletonSplitFix",
            "XXX.datafix.fixes.EntitySpawnerItemVariantComponentFix$Fixer",
            "XXX.datafix.fixes.EntityTheRenameningFix",
            "XXX.datafix.fixes.EntityUUIDFix",
            "XXX.datafix.fixes.EntityWolfColorFix",
            "XXX.datafix.fixes.EntityZombieVillagerTypeFix",
            "XXX.datafix.fixes.EquipmentFormatFix",
            "XXX.datafix.fixes.FeatureFlagRemoveFix",
            "XXX.datafix.fixes.FilteredSignsFix",
            "XXX.datafix.fixes.FixProjectileStoredItem",
            "XXX.datafix.fixes.FixWolfHealth",
            "XXX.datafix.fixes.ForcePoiRebuild",
            "XXX.datafix.fixes.FurnaceRecipeFix",
            "XXX.datafix.fixes.GossipUUIDFix",
            "XXX.datafix.fixes.HorseBodyArmorItemFix",
            "XXX.datafix.fixes.InlineBlockPosFormatFix",
            "XXX.datafix.fixes.InvalidLockComponentFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix",
            "XXX.datafix.fixes.ItemStackCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LegacyWorldBorderFix",
            "XXX.datafix.schemas.V4543",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.debugchart.AbstractSampleLogger",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionRequest",
            "XXX.util.debugchart.LocalSampleLogger",
            "XXX.util.debugchart.RemoteSampleLogger",
            "XXX.util.debugchart.SampleStorage",
            "XXX.util.debugchart.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.parsing.package-info",
            "XXX.parsing.packrat.CachedParseState",
            "XXX.parsing.packrat.CachedParseState$PositionCache",
            "XXX.parsing.packrat.CachedParseState$SimpleControl",
            "XXX.parsing.packrat.Control$1",
            "XXX.parsing.packrat.Dictionary",
            "XXX.parsing.packrat.Dictionary$Reference",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly",
            "XXX.parsing.packrat.ErrorCollector$Nop",
            "XXX.parsing.packrat.NamedRule",
            "XXX.parsing.packrat.Rule",
            "XXX.parsing.packrat.Rule$SimpleRuleAction",
            "XXX.parsing.packrat.Scope",
            "XXX.parsing.packrat.SuggestionSupplier",
            "XXX.parsing.packrat.Term$1",
            "XXX.parsing.packrat.Term$3",
            "XXX.parsing.packrat.Term$LookAhead",
            "XXX.parsing.packrat.Term$Maybe",
            "XXX.parsing.packrat.Term$RepeatedWithSeparator",
            "XXX.packrat.commands.CommandArgumentParser",
            "XXX.packrat.commands.CommandArgumentParser$2",
            "XXX.packrat.commands.GreedyPatternParseRule",
            "XXX.packrat.commands.NumberRunParseRule",
            "XXX.packrat.commands.ResourceLocationParseRule",
            "XXX.packrat.commands.ResourceSuggestion",
            "XXX.packrat.commands.StringReaderTerms",
            "XXX.packrat.commands.StringReaderTerms$2",
            "XXX.packrat.commands.StringReaderTerms$TerminalWord",
            "XXX.packrat.commands.UnquotedStringParseRule",
            "XXX.parsing.packrat.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.Profiler$Scope",
            "XXX.util.profiling.ProfilerFiller$CombinedProfileFiller",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.TracyZoneFiller",
            "XXX.util.profiling.Zone",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.ChunkRegionIoEvent",
            "XXX.jfr.event.ChunkRegionReadEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.StructureGenerationEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.ChunkIdentification",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.IoSummary$CountAndSize",
            "XXX.jfr.stats.StructureGenStat",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.Weighted",
            "XXX.util.random.WeightedList$Builder",
            "XXX.util.random.WeightedList$Flat",
            "XXX.util.random.WeightedRandom",
            "XXX.util.thread.AbstractConsecutiveExecutor",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ParallelMapTransform$BatchedTaskSplitter",
            "XXX.util.thread.ParallelMapTransform$SingleTaskSplitter",
            "XXX.util.thread.PriorityConsecutiveExecutor",
            "XXX.util.thread.StrictQueue",
            "XXX.util.thread.StrictQueue$QueueStrictQueue",
            "XXX.util.thread.TaskScheduler",
            "XXX.util.thread.package-info",
            "XXX.util.valueproviders.ClampedInt",
            "XXX.util.valueproviders.ClampedNormalInt",
            "XXX.util.valueproviders.ConstantInt",
            "XXX.util.valueproviders.FloatProviderType",
            "XXX.util.valueproviders.IntProviderType",
            "XXX.util.valueproviders.SampledFloat",
            "XXX.util.valueproviders.UniformFloat",
            "XXX.util.valueproviders.WeightedListInt",
            "XXX.util.worldupdate.WorldUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$ChunkUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$EntityUpgrader",
            "XXX.util.worldupdate.WorldUpgrader$PoiUpgrader",
            "XXX.util.worldupdate.package-info",
            "XXX.minecraft.world.BossEvent$BossBarColor",
            "XXX.minecraft.world.Clearable",
            "XXX.minecraft.world.Container",
            "XXX.minecraft.world.ContainerHelper",
            "XXX.minecraft.world.Containers",
            "XXX.minecraft.world.DifficultyInstance",
            "XXX.minecraft.world.InteractionResult",
            "XXX.minecraft.world.InteractionResult$ItemContext",
            "XXX.minecraft.world.InteractionResult$Success",
            "XXX.minecraft.world.InteractionResult$TryEmptyHandInteraction",
            "XXX.minecraft.world.LockCode",
            "XXX.minecraft.world.Nameable",
            "XXX.minecraft.world.RandomSequences",
            "XXX.minecraft.world.RandomizableContainer",
            "XXX.minecraft.world.SimpleMenuProvider",
            "XXX.minecraft.world.WorldlyContainer",
            "XXX.world.damagesource.CombatEntry",
            "XXX.world.damagesource.CombatTracker",
            "XXX.world.damagesource.DamageScaling",
            "XXX.world.damagesource.DamageSource$1",
            "XXX.world.damagesource.DamageType",
            "XXX.world.damagesource.DeathMessageType",
            "XXX.world.damagesource.package-info",
            "XXX.world.effect.BadOmenMobEffect",
            "XXX.world.effect.HungerMobEffect",
            "XXX.world.effect.InstantenousMobEffect",
            "XXX.world.effect.MobEffect$AttributeTemplate",
            "XXX.world.effect.MobEffectInstance",
            "XXX.world.effect.MobEffectInstance$Details",
            "XXX.world.effect.MobEffects",
            "XXX.world.effect.OozingMobEffect$NearbySlimes",
            "XXX.world.effect.RaidOmenMobEffect",
            "XXX.world.effect.SaturationMobEffect",
            "XXX.world.effect.WindChargedMobEffect",
            "XXX.world.effect.package-info",
            "XXX.world.entity.AgeableMob$AgeableMobGroupData",
            "XXX.world.entity.AreaEffectCloud",
            "XXX.world.entity.Avatar",
            "XXX.entity.decoration.Mannequin",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.StackedContents$Output",
            "XXX.entity.player.StackedItemContents",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ProjectileDeflection",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownSplashPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.projectile.windcharge.AbstractWindCharge",
            "XXX.projectile.windcharge.WindCharge",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.Raids$RaidWithId",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.variant.ModelAndTexture",
            "XXX.entity.variant.PriorityProvider",
            "XXX.entity.variant.PriorityProvider$SelectorCondition",
            "XXX.entity.variant.SpawnCondition",
            "XXX.entity.variant.SpawnContext",
            "XXX.entity.variant.StructureCheck",
            "XXX.entity.variant.package-info",
            "XXX.entity.vehicle.AbstractBoat$Status",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.ChestRaft",
            "XXX.entity.vehicle.ContainerEntity$1",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.NewMinecartBehavior",
            "XXX.entity.vehicle.NewMinecartBehavior$MinecartStep",
            "XXX.entity.vehicle.NewMinecartBehavior$TrackIteration",
            "XXX.entity.vehicle.OldMinecartBehavior$1",
            "XXX.entity.vehicle.VehicleEntity",
            "XXX.world.flag.FeatureElement",
            "XXX.world.flag.FeatureFlagRegistry",
            "XXX.world.flag.FeatureFlagSet",
            "XXX.world.flag.FeatureFlags",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractCraftingMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CrafterSlot",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$4",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookMenu$PostPlaceAction",
            "XXX.world.inventory.RecipeCraftingHolder",
            "XXX.world.inventory.RemoteSlot$1",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SlotRange",
            "XXX.world.inventory.SlotRanges",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModePredicate",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BoneMealItem$1",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.BundleItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.CrossbowItem$ChargingSounds",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.EitherHolder",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.Item$TooltipContext$1",
            "XXX.world.item.Item$TooltipContext$3",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack$1",
            "XXX.world.item.ItemStack$3",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUseAnimation",
            "XXX.world.item.Items",
            "XXX.world.item.JukeboxSong",
            "XXX.world.item.JukeboxSongPlayer$OnSongChanged",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileItem",
            "XXX.world.item.ProjectileItem$DispenseConfig$Builder",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.WindChargeItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.component.Bees",
            "XXX.item.component.BlocksAttacks",
            "XXX.item.component.BlocksAttacks$ItemDamageFunction",
            "XXX.item.component.BundleContents",
            "XXX.item.component.ChargedProjectiles",
            "XXX.item.component.Consumable$Builder",
            "XXX.item.component.ConsumableListener",
            "XXX.item.component.CustomData",
            "XXX.item.component.DamageResistant",
            "XXX.item.component.DebugStickState",
            "XXX.item.component.FireworkExplosion",
            "XXX.item.component.Fireworks",
            "XXX.item.component.ItemAttributeModifiers",
            "XXX.item.component.ItemAttributeModifiers$Builder",
            "XXX.item.component.ItemAttributeModifiers$Display$Default",
            "XXX.item.component.ItemAttributeModifiers$Display$OverrideText",
            "XXX.item.component.ItemAttributeModifiers$Entry",
            "XXX.item.component.ItemContainerContents$Slot",
            "XXX.item.component.LodestoneTracker",
            "XXX.item.component.MapDecorations$Entry",
            "XXX.item.component.MapPostProcessing",
            "XXX.item.component.ProvidesTrimMaterial",
            "XXX.item.component.ResolvableProfile$Dynamic",
            "XXX.item.component.ResolvableProfile$Static",
            "XXX.item.component.SuspiciousStewEffects",
            "XXX.item.component.Tool",
            "XXX.item.component.TooltipDisplay",
            "XXX.item.component.TypedEntityData",
            "XXX.item.component.UseCooldown",
            "XXX.item.component.UseRemainder$OnExtraCreatedRemainder",
            "XXX.item.component.WritableBookContent",
            "XXX.item.component.package-info",
            "XXX.item.consume_effects.ClearAllStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect$Type",
            "XXX.item.consume_effects.RemoveStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.AbstractCookingRecipe$Serializer",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BlastingRecipe$1",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CraftingInput$Positioned",
            "XXX.item.crafting.CraftingRecipe$1",
            "XXX.item.crafting.CustomRecipe$Serializer",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.PlacementInfo",
            "XXX.item.crafting.RecipeAccess",
            "XXX.item.crafting.RecipeBookCategory",
            "XXX.item.crafting.RecipeCache$Entry",
            "XXX.item.crafting.RecipeInput",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeManager$IngredientCollector",
            "XXX.item.crafting.RecipeManager$ServerDisplayInfo",
            "XXX.item.crafting.RecipePropertySet",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputEntry",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapedRecipePattern",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SingleItemRecipe$Factory",
            "XXX.item.crafting.SingleRecipeInput",
            "XXX.item.crafting.SmeltingRecipe$1",
            "XXX.item.crafting.SmithingRecipeInput",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TransmuteRecipe",
            "XXX.item.crafting.TransmuteResult",
            "XXX.crafting.display.DisplayContentsFactory$ForRemainders",
            "XXX.crafting.display.FurnaceRecipeDisplay",
            "XXX.crafting.display.RecipeDisplay$Type",
            "XXX.crafting.display.RecipeDisplayId",
            "XXX.crafting.display.ShapedCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay",
            "XXX.crafting.display.SlotDisplay$Composite",
            "XXX.crafting.display.SlotDisplay$ItemSlotDisplay",
            "XXX.crafting.display.SlotDisplay$ItemStackSlotDisplay",
            "XXX.crafting.display.SlotDisplay$TagSlotDisplay",
            "XXX.crafting.display.SlotDisplay$WithRemainder",
            "XXX.crafting.display.SlotDisplays",
            "XXX.crafting.display.StonecutterRecipeDisplay",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.Enchantable",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.Enchantment$Builder",
            "XXX.item.enchantment.Enchantment$EnchantmentDefinition",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.EnchantmentTarget",
            "XXX.item.enchantment.ItemEnchantments",
            "XXX.item.enchantment.LevelBasedValue",
            "XXX.item.enchantment.LevelBasedValue$Constant",
            "XXX.item.enchantment.LevelBasedValue$LevelsSquared",
            "XXX.item.enchantment.LevelBasedValue$Lookup",
            "XXX.item.enchantment.TargetedConditionalEffect",
            "XXX.enchantment.effects.AllOf",
            "XXX.enchantment.effects.AllOf$LocationBasedEffects",
            "XXX.enchantment.effects.ApplyMobEffect",
            "XXX.enchantment.effects.DamageEntity",
            "XXX.enchantment.effects.EnchantmentAttributeEffect",
            "XXX.enchantment.effects.EnchantmentLocationBasedEffect",
            "XXX.enchantment.effects.ExplodeEffect",
            "XXX.enchantment.effects.MultiplyValue",
            "XXX.enchantment.effects.RemoveBinomial",
            "XXX.enchantment.effects.ReplaceDisk",
            "XXX.enchantment.effects.SetBlockProperties",
            "XXX.enchantment.effects.SpawnParticlesEffect",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType",
            "XXX.enchantment.effects.SpawnParticlesEffect$VelocitySource",
            "XXX.enchantment.effects.package-info",
            "XXX.enchantment.providers.EnchantmentProvider",
            "XXX.enchantment.providers.EnchantmentsByCost",
            "XXX.enchantment.providers.SingleEnchantment",
            "XXX.enchantment.providers.VanillaEnchantmentProviders",
            "XXX.item.equipment.AllowedEntitiesProvider",
            "XXX.item.equipment.ArmorMaterials",
            "XXX.item.equipment.EquipmentAsset",
            "XXX.item.equipment.Equippable",
            "XXX.item.equipment.package-info",
            "XXX.equipment.trim.MaterialAssetGroup",
            "XXX.equipment.trim.TrimMaterial",
            "XXX.equipment.trim.TrimPattern",
            "XXX.equipment.trim.package-info",
            "XXX.item.trading.ItemCost",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseCommandBlock$CloseableCommandBlockSource",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.BlockGetter$BlockStepVisitor",
            "XXX.world.level.ChunkPos$1",
            "XXX.world.level.ClipBlockStateContext",
            "XXX.world.level.ClipContext$Block",
            "XXX.world.level.ClipContext$ShapeGetter",
            "XXX.world.level.ColorMapColorUtil",
            "XXX.world.level.CommonLevelAccessor",
            "XXX.world.level.DataPackConfig",
            "XXX.world.level.EmptyBlockAndTintGetter",
            "XXX.world.level.EntityBasedExplosionDamageCalculator",
            "XXX.world.level.Explosion",
            "XXX.world.level.ExplosionDamageCalculator",
            "XXX.world.level.GameRules",
            "XXX.world.level.GameRules$Category",
            "XXX.world.level.GameRules$IntegerValue",
            "XXX.world.level.GameRules$Type",
            "XXX.world.level.GameRules$VisitorCaller",
            "XXX.world.level.GrassColor",
            "XXX.world.level.Level",
            "XXX.level.border.WorldBorder",
            "XXX.level.border.WorldBorder$DistancePerDirection",
            "XXX.level.border.WorldBorder$Settings",
            "XXX.level.border.package-info",
            "XXX.level.chunk.BulkSectionAccess",
            "XXX.level.chunk.CarvingMask$Mask",
            "XXX.level.chunk.ChunkAccess$ChunkPathElement",
            "XXX.level.chunk.ChunkGenerator",
            "XXX.level.chunk.ChunkGenerators",
            "XXX.level.chunk.Configuration",
            "XXX.level.chunk.Configuration$Simple",
            "XXX.level.chunk.PalettedContainer$Data",
            "XXX.level.chunk.PalettedContainerRO",
            "XXX.level.chunk.PalettedContainerRO$Unpacker",
            "XXX.level.chunk.SingleValuePalette",
            "XXX.level.chunk.Strategy$1"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.blaze3d.platform.InputConstants \u001b[2;32m+6M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+7P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.blaze3d.platform.MacosUtil \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.advancements.critereon.MinMaxBounds$Doubles \u001b[2;32m+4M\u001b[0m \u001b[2;31m-11M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.minecraft.client.KeyMapping \u001b[2;32m+11M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-10P\u001b[0m",
          "XXX.gui.screens.BackupConfirmScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.ConfirmScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.DeathScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.Overlay \u001b[2;32m+1M\u001b[0m",
          "XXX.gui.screens.PresetFlatWorldScreen$PresetsList \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.gui.screens.Screen \u001b[2;32m+3M\u001b[0m \u001b[2;31m-10M\u001b[0m",
          "XXX.gui.screens.WinScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.achievement.StatsScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.advancements.AdvancementsScreen \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.screens.debug.GameModeSwitcherScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.inventory.AbstractCommandBlockEditScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.inventory.AbstractContainerScreen \u001b[2;32m+7M\u001b[0m \u001b[2;31m-7M\u001b[0m",
          "XXX.screens.inventory.AbstractSignEditScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.inventory.BeaconScreen$BeaconConfirmButton \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.inventory.BookEditScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.inventory.BookViewScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.inventory.StructureBlockEditScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.multiplayer.CodeOfConductScreen \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.screens.multiplayer.ServerSelectionList$NetworkServerEntry \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.options.VideoSettingsScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.options.controls.KeyBindsScreen \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.packs.TransferableSelectionList \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.recipebook.RecipeBookComponent \u001b[2;32m+7M\u001b[0m \u001b[2;31m-7M\u001b[0m",
          "XXX.screens.recipebook.RecipeBookPage \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.recipebook.RecipeButton \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.reporting.ChatReportScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$Entry \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageEntry \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.screens.reporting.SkinReportScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.social.SocialInteractionsScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.worldselection.CreateWorldScreen \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.screens.worldselection.SelectWorldScreen \u001b[2;32m+8M\u001b[0m \u001b[2;31m-7M\u001b[0m",
          "XXX.client.model.PlayerCapeModel \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.model.PlayerModel \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.model.SpinAttackEffectModel \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.model.geom.LayerDefinitions \u001b[2;32m+5M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.model.geom.ModelPart$Vertex \u001b[2;32m+6M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.geom.builders.CubeDefinition \u001b[2;32m+2P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.client.multiplayer.ClientLevel \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.client.particle.AttackSweepParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.BaseAshSmokeParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.BlockMarker$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BreakingItemParticle$CobwebProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BreakingItemParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BreakingItemParticle$SnowballProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BubbleColumnUpParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BubbleParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.BubblePopParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.CampfireSmokeParticle$CosyProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.CritParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.CritParticle$MagicProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.DragonBreathParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.DripParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-19M\u001b[0m",
          "XXX.client.particle.DripParticle$DripHangParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.DripParticle$DripstoneFallAndLandParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.DripParticle$FallingParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.EndRodParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.ExplodeParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FallingDustParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FallingLeavesParticle$CherryProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FallingLeavesParticle$TintedLeavesProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FireflyParticle$FireflyProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FireworkParticles$OverlayParticle \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.client.particle.FireworkParticles$SparkProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FlameParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FlameParticle$SmallFlameProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FlyStraightTowardsParticle$OminousSpawnProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FlyTowardsPositionParticle$EnchantProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.FlyTowardsPositionParticle$VaultConnectionProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.GlowParticle$ElectricSparkProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.GlowParticle$ScrapeProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.GlowParticle$WaxOnProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.GustParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.HeartParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.HeartParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.HugeExplosionParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.HugeExplosionSeedParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.NoteParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.ParticleEngine \u001b[2;32m+6M\u001b[0m \u001b[2;31m-28M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-5P\u001b[0m",
          "XXX.client.particle.ParticleProvider \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.client.particle.ParticleRenderType \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-5P\u001b[0m",
          "XXX.client.particle.PlayerCloudParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.PortalParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SnowflakeParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.SoulParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.SoulParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SpellParticle$InstantProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SpellParticle$Provider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SplashParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.SpriteSet \u001b[2;32m+1P\u001b[0m",
          "XXX.client.particle.SquidInkParticle$GlowInkProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SuspendedParticle \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.client.particle.SuspendedParticle$SporeBlossomAirProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SuspendedParticle$UnderwaterProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SuspendedTownParticle \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SuspendedTownParticle$DolphinSpeedProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.SuspendedTownParticle$HappyVillagerProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.particle.TerrainParticle \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.TerrainParticle$DustPillarProvider \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.renderer.Sheets \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.BannerRenderer \u001b[2;32m+6M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.blockentity.BedRenderer \u001b[2;32m+7M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.renderer.blockentity.BlockEntityRenderDispatcher \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.blockentity.BlockEntityRenderers \u001b[2;32m+7M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.blockentity.ChestRenderer \u001b[2;32m+7M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.special.ChestSpecialRenderer \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.renderer.special.CopperGolemStatueSpecialRenderer \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.client.resources.DefaultPlayerSkin \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.resources.PlayerSkin \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.server.commands.SpectateCommand \u001b[2;32m+4M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.server.level.ServerPlayer \u001b[2;32m+24M\u001b[0m \u001b[2;31m-13M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.server.players.PlayerList \u001b[2;32m+1M\u001b[0m",
          "XXX.datafix.fixes.References \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.EntityType \u001b[2;32m+1P\u001b[0m",
          "XXX.entity.decoration.HangingEntity \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.entity.decoration.ItemFrame \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.npc.WanderingTraderSpawner \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.player.PlayerModelPart \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.CopperGolemStatueBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.SideChainPartBlock$Neighbor \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.SideChainPartBlock$SideChainNeighbor \u001b[2;32m+1M\u001b[0m",
          "XXX.level.border.BorderChangeListener \u001b[2;32m+7P\u001b[0m \u001b[2;31m-7P\u001b[0m",
          "XXX.level.chunk.HashMapPalette \u001b[2;32m+9M\u001b[0m \u001b[2;31m-9M\u001b[0m | \u001b[2;31m-2P\u001b[0m",
          "XXX.level.chunk.Palette$Factory \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.chunk.PalettedContainer \u001b[2;32m+19M\u001b[0m \u001b[2;31m-21M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.level.levelgen.PhantomSpawner \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.storage.DerivedLevelData \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.phys.shapes.EntityCollisionContext \u001b[2;31m-1M\u001b[0m | \u001b[2;31m-1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.InputConstants",
        "differences": {
          "added": [
            "InputConstants$Key getKey(int,int)",
            "boolean isKeyDown(long,int)",
            "void setupKeyboardCallbacks(long,GLFWKeyCallbackI,GLFWCharModsCallbackI)",
            "void setupMouseCallbacks(long,GLFWCursorPosCallbackI,GLFWMouseButtonCallbackI,GLFWScrollCallbackI,GLFWDropCallbackI)",
            "void grabOrReleaseMouse(long,int,double,double)",
            "void updateRawMouseInput(long,boolean)"
          ],
          "removed": [
            "InputConstants$Key getKey(KeyEvent)",
            "boolean isKeyDown(Window,int)",
            "void setupKeyboardCallbacks(Window,GLFWKeyCallbackI,GLFWCharModsCallbackI)",
            "void setupMouseCallbacks(Window,GLFWCursorPosCallbackI,GLFWMouseButtonCallbackI,GLFWScrollCallbackI,GLFWDropCallbackI)",
            "void grabOrReleaseMouse(Window,int,double,double)",
            "void updateRawMouseInput(Window,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.MacosUtil",
        "differences": {
          "added": [
            "void exitNativeFullscreen(long)",
            "void clearResizableBit(long)",
            "Optional getNsWindow(long)"
          ],
          "removed": [
            "void exitNativeFullscreen(Window)",
            "void clearResizableBit(Window)",
            "Optional getNsWindow(Window)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.advancements.critereon.MinMaxBounds$Doubles",
        "differences": {
          "added": [
            "void <init>(Optional,Optional)",
            "void <init>(Optional,Optional,Optional,Optional)",
            "MinMaxBounds$Doubles create(StringReader,Optional,Optional)",
            "Optional squareOpt(Optional)",
            "MinMaxBounds$Doubles fromReader(StringReader,Function)",
            "Optional min()",
            "Optional max()",
            "Optional minSq()",
            "Optional maxSq()",
            "Double lambda$fromReader$1(Double)",
            "Double lambda$squareOpt$0(Double)"
          ],
          "removed": [
            "void <init>(MinMaxBounds$Bounds)",
            "void <init>(MinMaxBounds$Bounds,MinMaxBounds$Bounds)",
            "MinMaxBounds$Bounds bounds()",
            "MinMaxBounds$Bounds boundsSqr()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.KeyMapping",
        "differences": {
          "added": [
            "void <init>(String,int,String)",
            "void <init>(String,InputConstants$Type,int,String)",
            "String getCategory()",
            "boolean matches(int,int)",
            "boolean matchesMouse(int)",
            "Component lambda$createNameSupplier$1(String)",
            "void lambda$static$0(HashMap)"
          ],
          "removed": [
            "void forAllKeyMappings(InputConstants$Key,Consumer)",
            "void <init>(String,int,KeyMapping$Category)",
            "void <init>(String,InputConstants$Type,int,KeyMapping$Category)",
            "KeyMapping$Category getCategory()",
            "boolean matches(KeyEvent)",
            "boolean matchesMouse(MouseButtonEvent)",
            "void registerMapping(InputConstants$Key)",
            "List lambda$registerMapping$3(InputConstants$Key)",
            "Component lambda$createNameSupplier$2(String)",
            "void lambda$set$1(boolean,KeyMapping)",
            "void lambda$click$0(KeyMapping)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.BackupConfirmScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.ConfirmScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.CreateBuffetWorldScreen$BiomeList$Entry",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.DeathScreen",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.Overlay",
        "differences": {
          "added": [],
          "removed": [
            "void tick()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.PresetFlatWorldScreen$PresetsList",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.Screen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "FocusNavigationEvent$TabNavigation createTabEvent()",
            "boolean hasControlDown()",
            "boolean hasShiftDown()",
            "boolean hasAltDown()",
            "boolean isCut(int)",
            "boolean isPaste(int)",
            "boolean isCopy(int)",
            "boolean isSelectAll(int)",
            "boolean isValidCharacterForName(String,char,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "FocusNavigationEvent$TabNavigation createTabEvent(boolean)",
            "boolean isValidCharacterForName(String,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.WinScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "boolean keyReleased(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "boolean keyReleased(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.achievement.StatsScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.advancements.AdvancementsScreen",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "boolean keyPressed(int,int,int)",
            "boolean mouseDragged(double,double,int,double,double)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "boolean keyPressed(KeyEvent)",
            "boolean mouseDragged(MouseButtonEvent,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.debug.GameModeSwitcherScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.AbstractCommandBlockEditScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "void checkHotbarMouseClicked(int)",
            "boolean hasClickedOutside(double,double,int,int,int)",
            "boolean mouseDragged(double,double,int,double,double)",
            "boolean mouseReleased(double,double,int)",
            "boolean keyPressed(int,int,int)",
            "boolean checkHotbarKeyPressed(int,int)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "void checkHotbarMouseClicked(MouseButtonEvent)",
            "boolean hasClickedOutside(double,double,int,int)",
            "boolean mouseDragged(MouseButtonEvent,double,double)",
            "boolean mouseReleased(MouseButtonEvent)",
            "boolean keyPressed(KeyEvent)",
            "boolean checkHotbarKeyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.AbstractSignEditScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "boolean charTyped(char,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "boolean charTyped(CharacterEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.BeaconScreen$BeaconConfirmButton",
        "differences": {
          "added": [
            "void onPress()"
          ],
          "removed": [
            "void onPress(InputWithModifiers)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.BookEditScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.BookViewScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.inventory.StructureBlockEditScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)",
            "boolean access$000(StructureBlockEditScreen,String,char,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)",
            "boolean access$000(StructureBlockEditScreen,String,int,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.multiplayer.CodeOfConductScreen",
        "differences": {
          "added": [
            "void <init>(ServerData,Component,String,BooleanConsumer)",
            "void <init>(ServerData,String,BooleanConsumer)"
          ],
          "removed": [
            "void <init>(ServerData,Screen,Component,String,BooleanConsumer)",
            "void <init>(ServerData,Screen,String,BooleanConsumer)",
            "void tick()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList$NetworkServerEntry",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.options.VideoSettingsScreen",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.options.controls.KeyBindsScreen",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.packs.TransferableSelectionList",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.recipebook.RecipeBookComponent",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "boolean mouseDragged(double,double,int,double,double)",
            "boolean tryPlaceRecipe(RecipeCollection,RecipeDisplayId)",
            "boolean hasClickedOutside(double,double,int,int,int,int,int)",
            "boolean keyPressed(int,int,int)",
            "boolean keyReleased(int,int,int)",
            "boolean charTyped(char,int)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "boolean mouseDragged(MouseButtonEvent,double,double)",
            "boolean tryPlaceRecipe(RecipeCollection,RecipeDisplayId,boolean)",
            "boolean hasClickedOutside(double,double,int,int,int,int)",
            "boolean keyPressed(KeyEvent)",
            "boolean keyReleased(KeyEvent)",
            "boolean charTyped(CharacterEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.recipebook.RecipeBookPage",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,int,int,int,int,boolean)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,int,int,int,int,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.recipebook.RecipeButton",
        "differences": {
          "added": [
            "boolean isValidClickButton(int)"
          ],
          "removed": [
            "boolean isValidClickButton(MouseButtonInfo)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.reporting.ChatReportScreen",
        "differences": {
          "added": [
            "boolean mouseReleased(double,double,int)"
          ],
          "removed": [
            "boolean mouseReleased(MouseButtonEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.reporting.ChatSelectionScreen$ChatSelectionList",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.reporting.ChatSelectionScreen$ChatSelectionList$Entry",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.reporting.ChatSelectionScreen$ChatSelectionList$MessageEntry",
        "differences": {
          "added": [
            "boolean mouseClicked(double,double,int,boolean)",
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean mouseClicked(MouseButtonEvent,boolean)",
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.reporting.SkinReportScreen",
        "differences": {
          "added": [
            "boolean mouseReleased(double,double,int)"
          ],
          "removed": [
            "boolean mouseReleased(MouseButtonEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.social.SocialInteractionsScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
        "differences": {
          "added": [
            "boolean keyPressed(int,int,int)"
          ],
          "removed": [
            "boolean keyPressed(KeyEvent)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.screens.worldselection.SelectWorldScreen",
        "differences": {
          "added": [
            "void lambda$init$7(SelectWorldScreen,GuiEventListener)",
            "void lambda$init$6(Button)",
            "void lambda$init$5(Button)",
            "void lambda$init$4(Button)",
            "void lambda$init$3(Button)",
            "void lambda$init$2(Button)",
            "void lambda$init$1(Consumer,Button)"
          ],
          "removed": [
            "void createFooterButtons(Consumer,WorldSelectionList)",
            "void lambda$createFooterButtons$7(Button)",
            "void lambda$createFooterButtons$6(WorldSelectionList,Button)",
            "void lambda$createFooterButtons$5(WorldSelectionList,Button)",
            "void lambda$createFooterButtons$4(WorldSelectionList,Button)",
            "void lambda$createFooterButtons$3(WorldSelectionList,Button)",
            "void lambda$createFooterButtons$2(WorldSelectionList,Consumer,Button)",
            "void lambda$init$1(SelectWorldScreen,GuiEventListener)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.PlayerCapeModel",
        "differences": {
          "added": [
            "void setupAnim(PlayerRenderState)"
          ],
          "removed": [
            "void setupAnim(AvatarRenderState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.PlayerModel",
        "differences": {
          "added": [
            "void setupAnim(PlayerRenderState)",
            "void translateToHand(PlayerRenderState,HumanoidArm,PoseStack)"
          ],
          "removed": [
            "void setupAnim(AvatarRenderState)",
            "void translateToHand(AvatarRenderState,HumanoidArm,PoseStack)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.SpinAttackEffectModel",
        "differences": {
          "added": [
            "void setupAnim(PlayerRenderState)"
          ],
          "removed": [
            "void setupAnim(AvatarRenderState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.geom.LayerDefinitions",
        "differences": {
          "added": [
            "boolean lambda$createRoots$10(ImmutableMap,ModelLayerLocation)",
            "void lambda$createRoots$9(ImmutableMap$Builder,LayerDefinition,LayerDefinition,WoodType)",
            "LayerDefinition lambda$createRoots$8(LayerDefinition)"
          ],
          "removed": [
            "boolean lambda$createRoots$12(ImmutableMap,ModelLayerLocation)",
            "void lambda$createRoots$11(ImmutableMap$Builder,LayerDefinition,LayerDefinition,WoodType)",
            "LayerDefinition lambda$createRoots$10(LayerDefinition)",
            "LayerDefinition lambda$createRoots$9(MeshTransformer,LayerDefinition)",
            "LayerDefinition lambda$createRoots$8(MeshTransformer,LayerDefinition)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.model.geom.ModelPart$Vertex",
        "differences": {
          "added": [
            "void <init>(Vector3f,float,float)",
            "Vector3f pos()"
          ],
          "removed": [
            "float worldX()",
            "float worldY()",
            "float worldZ()",
            "float x()",
            "float y()",
            "float z()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.multiplayer.ClientLevel",
        "differences": {
          "added": [],
          "removed": [
            "WorldBorder getWorldBorder()",
            "void addBreakingBlockEffect(BlockPos,Direction)",
            "void lambda$addDestroyBlockEffect$14(BlockPos,BlockState,double,double,double,double,double,double)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.AttackSweepParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BaseAshSmokeParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BlockMarker$Provider",
        "differences": {
          "added": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BreakingItemParticle$CobwebProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BreakingItemParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(ItemParticleOption,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(ItemParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BreakingItemParticle$SnowballProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BubbleColumnUpParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BubbleParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.BubblePopParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.CampfireSmokeParticle$CosyProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.CritParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.CritParticle$MagicProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.DragonBreathParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.DripParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,Fluid)",
            "ParticleRenderType getRenderType()",
            "TextureSheetParticle createWaterHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createWaterFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createLavaHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createLavaFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createLavaLandParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createHoneyHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createHoneyFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createHoneyLandParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createDripstoneWaterHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createDripstoneWaterFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createDripstoneLavaHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createDripstoneLavaFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createNectarFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createSporeBlossomFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createObsidianTearHangParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createObsidianTearFallParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "TextureSheetParticle createObsidianTearLandParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,Fluid,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.DripParticle$DripHangParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,Fluid,ParticleOptions)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,Fluid,ParticleOptions,TextureAtlasSprite)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.DripParticle$DripstoneFallAndLandParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,Fluid,ParticleOptions)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,Fluid,ParticleOptions,TextureAtlasSprite)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.DripParticle$FallingParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,Fluid)",
            "void <init>(ClientLevel,double,double,double,Fluid,int)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,Fluid,TextureAtlasSprite)",
            "void <init>(ClientLevel,double,double,double,Fluid,int,TextureAtlasSprite)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.EndRodParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.ExplodeParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FallingDustParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FallingLeavesParticle$CherryProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FallingLeavesParticle$TintedLeavesProvider",
        "differences": {
          "added": [
            "Particle createParticle(ColorParticleOption,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(ColorParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FireflyParticle$FireflyProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FireworkParticles$OverlayParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double)",
            "ParticleRenderType getRenderType()",
            "void render(VertexConsumer,Camera,float)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()",
            "void extract(QuadParticleRenderState,Camera,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FireworkParticles$SparkProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FlameParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FlameParticle$SmallFlameProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FlyStraightTowardsParticle$OminousSpawnProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FlyTowardsPositionParticle$EnchantProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FlyTowardsPositionParticle$VaultConnectionProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.GlowParticle$ElectricSparkProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.GlowParticle$ScrapeProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.GlowParticle$WaxOnProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.GustParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.HeartParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.HeartParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.HugeExplosionParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.HugeExplosionSeedParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.NoteParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.ParticleEngine",
        "differences": {
          "added": [
            "void <init>(ClientLevel)",
            "void registerProviders()",
            "void register(ParticleType,ParticleProvider)",
            "void register(ParticleType,ParticleProvider$Sprite)",
            "void register(ParticleType,ParticleEngine$SpriteParticleRegistration)",
            "CompletableFuture reload(PreparableReloadListener$SharedState,Executor,PreparableReloadListener$PreparationBarrier,Executor)",
            "Optional loadParticleDescription(ResourceLocation,Resource)",
            "void tickParticleList(Collection)",
            "void updateCount(ParticleGroup,int)",
            "void tickParticle(Particle)",
            "void render(Camera,float,MultiBufferSource$BufferSource)",
            "void renderParticleType(Camera,float,MultiBufferSource$BufferSource,ParticleRenderType,Queue)",
            "void renderCustomParticles(Camera,float,MultiBufferSource$BufferSource,Queue)",
            "void destroy(BlockPos,BlockState)",
            "void crack(BlockPos,Direction)",
            "boolean hasSpaceInParticleLimit(ParticleGroup)",
            "void lambda$destroy$11(BlockPos,BlockState,double,double,double,double,double,double)",
            "void lambda$tickParticleList$10(ParticleGroup)",
            "Queue lambda$tick$9(ParticleRenderType)",
            "void lambda$tick$8(ParticleRenderType,Queue)",
            "void lambda$reload$7(CompletableFuture,CompletableFuture,Void)",
            "void lambda$reload$6(SpriteLoader$Preparations,Set,TextureAtlasSprite,ParticleEngine$1ParticleDefinition)",
            "CompletionStage lambda$reload$5(Executor,Map)",
            "void lambda$reload$4(List,Executor,ResourceLocation,Resource)",
            "ParticleEngine$1ParticleDefinition lambda$reload$3(ResourceLocation,Resource)",
            "Map lambda$reload$2(ResourceManager)",
            "ParticleProvider lambda$register$1(ParticleProvider$Sprite,SpriteSet)",
            "Particle lambda$register$0(ParticleProvider$Sprite,SpriteSet,ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "void <init>(ClientLevel,ParticleResources)",
            "ParticleGroup createParticleGroup(ParticleRenderType)",
            "void updateCount(ParticleLimit,int)",
            "void extract(ParticlesRenderState,Frustum,Camera,float)",
            "boolean hasSpaceInParticleLimit(ParticleLimit)",
            "void lambda$tick$0(ParticleRenderType,ParticleGroup)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.ParticleRenderType",
        "differences": {
          "added": [
            "void <init>(String,RenderType)",
            "RenderType renderType()"
          ],
          "removed": [
            "void <init>(String)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.PlayerCloudParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.PortalParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SnowflakeParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SoulParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SoulParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SpellParticle$InstantProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SpellParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SpellParticle$Provider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SplashParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SquidInkParticle$GlowInkProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,SpriteSet,double,double,double)",
            "void <init>(ClientLevel,SpriteSet,double,double,double,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,TextureAtlasSprite)",
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedParticle$SporeBlossomAirProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedParticle$UnderwaterProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedTownParticle",
        "differences": {
          "added": [
            "void <init>(ClientLevel,double,double,double,double,double,double)",
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "void <init>(ClientLevel,double,double,double,double,double,double,TextureAtlasSprite)",
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedTownParticle$DolphinSpeedProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.SuspendedTownParticle$HappyVillagerProvider",
        "differences": {
          "added": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(SimpleParticleType,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.TerrainParticle",
        "differences": {
          "added": [
            "ParticleRenderType getRenderType()"
          ],
          "removed": [
            "SingleQuadParticle$Layer getLayer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.TerrainParticle$DustPillarProvider",
        "differences": {
          "added": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double)"
          ],
          "removed": [
            "Particle createParticle(BlockParticleOption,ClientLevel,double,double,double,double,double,double,RandomSource)",
            "Particle createParticle(ParticleOptions,ClientLevel,double,double,double,double,double,double,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.Sheets",
        "differences": {
          "added": [
            "Material chooseMaterial(BlockEntity,ChestType,boolean)",
            "Material chooseCopperMaterial(ChestType,CopperChestBlock)"
          ],
          "removed": [
            "Material chooseMaterial(ChestRenderState$ChestMaterialType,ChestType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BannerRenderer",
        "differences": {
          "added": [
            "void submit(BannerBlockEntity,float,PoseStack,int,int,Vec3,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)",
            "void submit(BlockEntity,float,PoseStack,int,int,Vec3,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)"
          ],
          "removed": [
            "BannerRenderState createRenderState()",
            "void extractRenderState(BannerBlockEntity,BannerRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "void submit(BannerRenderState,PoseStack,SubmitNodeCollector)",
            "void submit(BlockEntityRenderState,PoseStack,SubmitNodeCollector)",
            "void extractRenderState(BlockEntity,BlockEntityRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "BlockEntityRenderState createRenderState()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BedRenderer",
        "differences": {
          "added": [
            "void submit(BedBlockEntity,float,PoseStack,int,int,Vec3,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)",
            "void submit(BlockEntity,float,PoseStack,int,int,Vec3,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)",
            "boolean lambda$submit$0(LevelAccessor,BlockPos)"
          ],
          "removed": [
            "BedRenderState createRenderState()",
            "void extractRenderState(BedBlockEntity,BedRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "void submit(BedRenderState,PoseStack,SubmitNodeCollector)",
            "void submit(BlockEntityRenderState,PoseStack,SubmitNodeCollector)",
            "void extractRenderState(BlockEntity,BlockEntityRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "BlockEntityRenderState createRenderState()",
            "boolean lambda$extractRenderState$0(LevelAccessor,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
        "differences": {
          "added": [
            "void submit(BlockEntity,float,PoseStack,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)"
          ],
          "removed": [
            "BlockEntityRenderer getRenderer(BlockEntityRenderState)",
            "BlockEntityRenderState tryExtractRenderState(BlockEntity,float,ModelFeatureRenderer$CrumblingOverlay)",
            "void submit(BlockEntityRenderState,PoseStack,SubmitNodeCollector)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.BlockEntityRenderers",
        "differences": {
          "added": [
            "void lambda$createEntityRenderers$0(ImmutableMap$Builder,BlockEntityRendererProvider$Context,BlockEntityType,BlockEntityRendererProvider)"
          ],
          "removed": [
            "void lambda$createEntityRenderers$6(ImmutableMap$Builder,BlockEntityRendererProvider$Context,BlockEntityType,BlockEntityRendererProvider)",
            "BlockEntityRenderer lambda$static$5(BlockEntityRendererProvider$Context)",
            "BlockEntityRenderer lambda$static$4(BlockEntityRendererProvider$Context)",
            "BlockEntityRenderer lambda$static$3(BlockEntityRendererProvider$Context)",
            "BlockEntityRenderer lambda$static$2(BlockEntityRendererProvider$Context)",
            "BlockEntityRenderer lambda$static$1(BlockEntityRendererProvider$Context)",
            "BlockEntityRenderer lambda$static$0(BlockEntityRendererProvider$Context)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.blockentity.ChestRenderer",
        "differences": {
          "added": [
            "void submit(BlockEntity,float,PoseStack,int,int,Vec3,ModelFeatureRenderer$CrumblingOverlay,SubmitNodeCollector)"
          ],
          "removed": [
            "ChestRenderState createRenderState()",
            "void extractRenderState(BlockEntity,ChestRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "void submit(ChestRenderState,PoseStack,SubmitNodeCollector)",
            "ChestRenderState$ChestMaterialType getChestMaterial(BlockEntity,boolean)",
            "void submit(BlockEntityRenderState,PoseStack,SubmitNodeCollector)",
            "void extractRenderState(BlockEntity,BlockEntityRenderState,float,Vec3,ModelFeatureRenderer$CrumblingOverlay)",
            "BlockEntityRenderState createRenderState()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.special.CopperGolemStatueSpecialRenderer",
        "differences": {
          "added": [],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.DefaultPlayerSkin",
        "differences": {
          "added": [
            "PlayerSkin create(String,PlayerSkin$Model)"
          ],
          "removed": [
            "PlayerSkin create(String,PlayerModelType)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.PlayerSkin",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,String,ResourceLocation,ResourceLocation,PlayerSkin$Model,boolean)",
            "PlayerSkin$Model model()"
          ],
          "removed": [
            "void <init>(ResourceLocation,String,ResourceLocation,ResourceLocation,PlayerModelType,boolean)",
            "PlayerModelType model()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.commands.SpectateCommand",
        "differences": {
          "added": [
            "Component lambda$spectate$5()",
            "Component lambda$spectate$4(Entity)",
            "int lambda$register$1(CommandContext)"
          ],
          "removed": [
            "Component lambda$spectate$6()",
            "Component lambda$spectate$5(Entity)",
            "int lambda$register$4(CommandContext)",
            "Message lambda$static$1(Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ServerPlayer",
        "differences": {
          "added": [
            "void lambda$drop$17(Inventory,int)",
            "Packet lambda$sendSystemMessage$16(Component)",
            "Stream lambda$awardRecipesByKey$15(ResourceKey)",
            "void lambda$awardStat$14(int,ScoreAccess)",
            "void lambda$startSleepInBed$13(Unit)",
            "boolean lambda$startSleepInBed$12(Monster)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$11(BlockPos,Vec3)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$10(BlockPos,Vec3)",
            "void lambda$tellNeutralMobsThatIDied$9(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$8(Mob)",
            "Packet lambda$die$7(Component)",
            "Style lambda$die$6(Component,Style)",
            "void lambda$updateScoreForCriteria$5(int,ScoreAccess)"
          ],
          "removed": [
            "void handleShoulderEntities()",
            "void playShoulderEntityAmbientSound(CompoundTag)",
            "boolean setEntityOnShoulder(CompoundTag)",
            "void removeEntitiesOnShoulder()",
            "void respawnEntityOnShoulder(CompoundTag)",
            "CompoundTag getShoulderEntityLeft()",
            "void setShoulderEntityLeft(CompoundTag)",
            "CompoundTag getShoulderEntityRight()",
            "void setShoulderEntityRight(CompoundTag)",
            "void lambda$drop$19(Inventory,int)",
            "Packet lambda$sendSystemMessage$18(Component)",
            "Stream lambda$awardRecipesByKey$17(ResourceKey)",
            "void lambda$awardStat$16(int,ScoreAccess)",
            "void lambda$startSleepInBed$15(Unit)",
            "boolean lambda$startSleepInBed$14(Monster)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$13(BlockPos,Vec3)",
            "ServerPlayer$RespawnPosAngle lambda$findRespawnAndUseSpawnBlock$12(BlockPos,Vec3)",
            "void lambda$tellNeutralMobsThatIDied$11(Mob)",
            "boolean lambda$tellNeutralMobsThatIDied$10(Mob)",
            "Packet lambda$die$9(Component)",
            "Style lambda$die$8(Component,Style)",
            "void lambda$updateScoreForCriteria$7(int,ScoreAccess)",
            "void lambda$respawnEntityOnShoulder$6(ServerLevel,Entity)",
            "String lambda$respawnEntityOnShoulder$5()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.players.PlayerList",
        "differences": {
          "added": [],
          "removed": [
            "Component getReasonMessage(BanListEntry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.HangingEntity",
        "differences": {
          "added": [
            "boolean lambda$survives$1(BlockPos)",
            "boolean lambda$static$0(Entity)"
          ],
          "removed": [
            "boolean canCoexist(boolean)",
            "boolean lambda$canCoexist$1(boolean,HangingEntity)",
            "boolean lambda$survives$0(BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.decoration.ItemFrame",
        "differences": {
          "added": [
            "boolean lambda$survives$0(Entity)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.npc.WanderingTraderSpawner",
        "differences": {
          "added": [
            "void tick(ServerLevel,boolean,boolean)"
          ],
          "removed": [
            "void tick(ServerLevel,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.player.PlayerModelPart",
        "differences": {
          "added": [],
          "removed": [
            "String getSerializedName()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CopperGolemStatueBlock",
        "differences": {
          "added": [],
          "removed": [
            "ItemStack getCloneItemStack(LevelReader,BlockPos,BlockState,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SideChainPartBlock$SideChainNeighbor",
        "differences": {
          "added": [],
          "removed": [
            "boolean isConnectable()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.HashMapPalette",
        "differences": {
          "added": [
            "void <init>(IdMap,int,PaletteResize,List)",
            "void <init>(IdMap,int,PaletteResize)",
            "void <init>(IdMap,int,PaletteResize,CrudeIncrementalIntIdentityHashBiMap)",
            "Palette create(int,IdMap,PaletteResize,List)",
            "int idFor(Object)",
            "void read(FriendlyByteBuf)",
            "void write(FriendlyByteBuf)",
            "int getSerializedSize()",
            "Palette copy(PaletteResize)"
          ],
          "removed": [
            "void <init>(int,List)",
            "void <init>(int)",
            "void <init>(int,CrudeIncrementalIntIdentityHashBiMap)",
            "Palette create(int,List)",
            "int idFor(Object,PaletteResize)",
            "void read(FriendlyByteBuf,IdMap)",
            "void write(FriendlyByteBuf,IdMap)",
            "int getSerializedSize(IdMap)",
            "Palette copy()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.PalettedContainer",
        "differences": {
          "added": [
            "Codec codecRW(IdMap,Codec,PalettedContainer$Strategy,Object)",
            "Codec codecRO(IdMap,Codec,PalettedContainer$Strategy,Object)",
            "Codec codec(IdMap,Codec,PalettedContainer$Strategy,Object,PalettedContainerRO$Unpacker)",
            "void <init>(IdMap,PalettedContainer$Strategy,PalettedContainer$Configuration,BitStorage,List)",
            "void <init>(IdMap,Object,PalettedContainer$Strategy)",
            "DataResult unpack(IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO$PackedData pack(IdMap,PalettedContainer$Strategy)",
            "void swapPalette(int[],IntUnaryOperator)",
            "void lambda$count$13(PalettedContainer$CountConsumer,Int2IntMap$Entry)",
            "void lambda$count$12(Int2IntOpenHashMap,int)",
            "int lambda$pack$11(HashMapPalette,int)",
            "String lambda$unpack$10(SimpleBitStorage$InitializationException)",
            "int lambda$unpack$9(IdMap,Palette,int)",
            "int lambda$unpack$8(int,Object)",
            "void lambda$getAll$6(Consumer,Palette,int)",
            "PalettedContainerRO$PackedData lambda$codec$5(IdMap,PalettedContainer$Strategy,PalettedContainerRO)",
            "DataResult lambda$codec$4(PalettedContainerRO$Unpacker,IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "App lambda$codec$3(Codec,Object,RecordCodecBuilder$Instance)",
            "DataResult lambda$codecRO$2(IdMap,PalettedContainer$Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO lambda$codecRO$1(PalettedContainer)",
            "int lambda$new$0(int,Object)"
          ],
          "removed": [
            "Codec codecRW(Codec,Strategy,Object)",
            "Codec codecRO(Codec,Strategy,Object)",
            "Codec codec(Codec,Strategy,Object,PalettedContainerRO$Unpacker)",
            "void <init>(Strategy,Configuration,BitStorage,Palette)",
            "void <init>(Object,Strategy)",
            "DataResult unpack(Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO$PackedData pack(Strategy)",
            "int[] reencodeContents(BitStorage,Palette,Palette)",
            "int bitsPerEntry()",
            "void lambda$count$10(PalettedContainer$CountConsumer,Int2IntMap$Entry)",
            "void lambda$count$9(Int2IntOpenHashMap,int)",
            "String lambda$unpack$8(SimpleBitStorage$InitializationException)",
            "String lambda$unpack$6(int,PalettedContainerRO$PackedData)",
            "void lambda$getAll$5(Consumer,Palette,int)",
            "PalettedContainerRO$PackedData lambda$codec$4(Strategy,PalettedContainerRO)",
            "DataResult lambda$codec$3(PalettedContainerRO$Unpacker,Strategy,PalettedContainerRO$PackedData)",
            "App lambda$codec$2(Codec,Object,RecordCodecBuilder$Instance)",
            "DataResult lambda$codecRO$1(Strategy,PalettedContainerRO$PackedData)",
            "PalettedContainerRO lambda$codecRO$0(PalettedContainer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.PhantomSpawner",
        "differences": {
          "added": [
            "void tick(ServerLevel,boolean,boolean)"
          ],
          "removed": [
            "void tick(ServerLevel,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.DerivedLevelData",
        "differences": {
          "added": [
            "WorldBorder$Settings getWorldBorder()",
            "void setWorldBorder(WorldBorder$Settings)"
          ],
          "removed": [
            "Optional getLegacyWorldBorderSettings()",
            "void setLegacyWorldBorderSettings(Optional)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.shapes.EntityCollisionContext",
        "differences": {
          "added": [
            "void <clinit>()"
          ],
          "removed": []
        }
      }
    }
  ],
  "custom": [
    {
      "type": "title",
      "value": {
        "title": "datapacks.json",
        "id": "custom-datapacks-json",
        "size": 2
      }
    }
  ]
}