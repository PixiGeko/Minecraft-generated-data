{
  "version_data": [
    {
      "type": "table",
      "value": {
        "previousLabel": "25w06a",
        "currentLabel": "25w07a",
        "values": [
          {
            "key": "DataPack version",
            "previous": "66",
            "current": "67"
          },
          {
            "key": "ResourcePack version",
            "previous": "51",
            "current": "52"
          },
          {
            "key": "World version",
            "previous": "4313",
            "current": "4315"
          },
          {
            "key": "Protocol version",
            "previous": "1073742057",
            "current": "1073742058"
          }
        ]
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Libraries",
        "id": "version-data-libraries",
        "size": 3
      }
    },
    {
      "type": "table",
      "value": {
        "title": "Versions",
        "previousLabel": "25w06a",
        "currentLabel": "25w07a",
        "values": [
          {
            "key": "io.netty:netty-buffer",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-codec",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-common",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-handler",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-resolver",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-transport-classes-epoll",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-transport-native-epoll (linux-aarch_64)",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-transport-native-epoll (linux-x86_64)",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-transport-native-unix-common",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          },
          {
            "key": "io.netty:netty-transport",
            "previous": "4.1.115.Final",
            "current": "4.1.118.Final"
          }
        ]
      }
    }
  ],
  "file_structure": [
    {
      "type": "entries",
      "value": {
        "name": "data",
        "differences": {
          "added": [
            "minecraft/tags/block/camels_spawnable_on.json",
            "minecraft/tags/worldgen/structure/on_desert_village_maps.json",
            "minecraft/tags/worldgen/structure/on_jungle_explorer_maps.json",
            "minecraft/tags/worldgen/structure/on_plains_village_maps.json",
            "minecraft/tags/worldgen/structure/on_savanna_village_maps.json",
            "minecraft/tags/worldgen/structure/on_snowy_village_maps.json",
            "minecraft/tags/worldgen/structure/on_swamp_explorer_maps.json",
            "minecraft/tags/worldgen/structure/on_taiga_village_maps.json"
          ],
          "removed": [
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_desert_village_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_jungle_explorer_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_plains_village_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_savanna_village_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_snowy_village_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_swamp_explorer_maps.json",
            "minecraft/datapacks/trade_rebalance/data/minecraft/tags/worldgen/structure/on_taiga_village_maps.json",
            "minecraft/worldgen/configured_feature/patch_firefly_bush_near_water.json",
            "minecraft/worldgen/configured_feature/patch_firefly_bush_sparse.json"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "assets",
        "differences": {
          "added": [],
          "removed": [
            "minecraft/shaders/core/blit_screen.json",
            "minecraft/shaders/core/lightmap.json",
            "minecraft/shaders/core/particle.json",
            "minecraft/shaders/core/position.json",
            "minecraft/shaders/core/position_color.json",
            "minecraft/shaders/core/position_color_lightmap.json",
            "minecraft/shaders/core/position_color_tex_lightmap.json",
            "minecraft/shaders/core/position_tex.json",
            "minecraft/shaders/core/position_tex_color.json",
            "minecraft/shaders/core/rendertype_armor_cutout_no_cull.json",
            "minecraft/shaders/core/rendertype_armor_entity_glint.json",
            "minecraft/shaders/core/rendertype_armor_translucent.json",
            "minecraft/shaders/core/rendertype_beacon_beam.json",
            "minecraft/shaders/core/rendertype_breeze_wind.json",
            "minecraft/shaders/core/rendertype_clouds.json",
            "minecraft/shaders/core/rendertype_crumbling.json",
            "minecraft/shaders/core/rendertype_cutout.json",
            "minecraft/shaders/core/rendertype_cutout_mipped.json",
            "minecraft/shaders/core/rendertype_end_gateway.json",
            "minecraft/shaders/core/rendertype_end_portal.json",
            "minecraft/shaders/core/rendertype_energy_swirl.json",
            "minecraft/shaders/core/rendertype_entity_alpha.json",
            "minecraft/shaders/core/rendertype_entity_cutout.json",
            "minecraft/shaders/core/rendertype_entity_cutout_no_cull.json",
            "minecraft/shaders/core/rendertype_entity_cutout_no_cull_z_offset.json",
            "minecraft/shaders/core/rendertype_entity_decal.json",
            "minecraft/shaders/core/rendertype_entity_glint.json",
            "minecraft/shaders/core/rendertype_entity_no_outline.json",
            "minecraft/shaders/core/rendertype_entity_shadow.json",
            "minecraft/shaders/core/rendertype_entity_smooth_cutout.json",
            "minecraft/shaders/core/rendertype_entity_solid.json",
            "minecraft/shaders/core/rendertype_entity_translucent.json",
            "minecraft/shaders/core/rendertype_entity_translucent_emissive.json",
            "minecraft/shaders/core/rendertype_eyes.json",
            "minecraft/shaders/core/rendertype_glint.json",
            "minecraft/shaders/core/rendertype_glint_translucent.json",
            "minecraft/shaders/core/rendertype_gui.json",
            "minecraft/shaders/core/rendertype_gui_ghost_recipe_overlay.json",
            "minecraft/shaders/core/rendertype_gui_overlay.json",
            "minecraft/shaders/core/rendertype_gui_text_highlight.json",
            "minecraft/shaders/core/rendertype_item_entity_translucent_cull.json",
            "minecraft/shaders/core/rendertype_leash.json",
            "minecraft/shaders/core/rendertype_lightning.json",
            "minecraft/shaders/core/rendertype_lines.json",
            "minecraft/shaders/core/rendertype_outline.json",
            "minecraft/shaders/core/rendertype_solid.json",
            "minecraft/shaders/core/rendertype_text.json",
            "minecraft/shaders/core/rendertype_text_background.json",
            "minecraft/shaders/core/rendertype_text_background_see_through.json",
            "minecraft/shaders/core/rendertype_text_intensity.json",
            "minecraft/shaders/core/rendertype_text_intensity_see_through.json",
            "minecraft/shaders/core/rendertype_text_see_through.json",
            "minecraft/shaders/core/rendertype_translucent.json",
            "minecraft/shaders/core/rendertype_translucent_moving_block.json",
            "minecraft/shaders/core/rendertype_tripwire.json",
            "minecraft/shaders/core/rendertype_water_mask.json",
            "minecraft/shaders/core/rendertype_world_border.json",
            "minecraft/shaders/post/bits.json",
            "minecraft/shaders/post/blit.json",
            "minecraft/shaders/post/box_blur.json",
            "minecraft/shaders/post/color_convolve.json",
            "minecraft/shaders/post/entity_outline.json",
            "minecraft/shaders/post/entity_outline_box_blur.json",
            "minecraft/shaders/post/invert.json",
            "minecraft/shaders/post/spider.json",
            "minecraft/shaders/post/transparency.json"
          ]
        }
      }
    }
  ],
  "mappings": [
    {
      "type": "title",
      "value": {
        "title": "Server",
        "id": "server-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.mojang.math.Transformation",
            "net.minecraft.BlockUtil",
            "net.minecraft.BlockUtil$IntBounds",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ReportType",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.SuppressForbidden",
            "net.minecraft.TracingExecutor",
            "net.minecraft.Util$1",
            "net.minecraft.Util$11",
            "net.minecraft.Util$5",
            "net.minecraft.Util$7",
            "net.minecraft.Util$9",
            "net.minecraft.Util$OS$1",
            "net.minecraft.WorldVersion",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementNode",
            "XXX.minecraft.advancements.AdvancementRequirements",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementTree",
            "XXX.minecraft.advancements.AdvancementType",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.CollectionContentsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionContentsPredicate$Zero",
            "XXX.advancements.critereon.CollectionCountsPredicate$Entry",
            "XXX.advancements.critereon.CollectionCountsPredicate$Single",
            "XXX.advancements.critereon.CollectionPredicate",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CriterionValidator",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.DistanceTrigger",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntitySubPredicate",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.FallAfterExplosionTrigger$TriggerInstance",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.GameTypePredicate",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance$Slots",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByArrowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LightningStrikeTrigger",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationPredicate$PositionPredicate",
            "XXX.advancements.critereon.LootTableTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$1",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$Builder",
            "XXX.advancements.critereon.MovementPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerInteractTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.PlayerTrigger",
            "XXX.advancements.critereon.RaiderPredicate",
            "XXX.advancements.critereon.RecipeCraftedTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SingleComponentItemPredicate",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlotsPredicate",
            "XXX.advancements.critereon.StartRidingTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$ValueMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.UsingItemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.commands.CacheableFunction",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandResultCallback$1",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.ExecutionCommandSource",
            "XXX.minecraft.commands.ParserUtils",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrIdArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootPredicateArgument",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ResourceSelectorArgument",
            "XXX.commands.arguments.ResourceSelectorArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.ComponentPredicateParser",
            "XXX.arguments.item.ComponentPredicateParser$Context",
            "XXX.arguments.item.ComponentPredicateParser$PredicateLookupRule",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemParser$SuggestionsVisitor",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Context",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.arguments.selector.SelectorPattern",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.execution.ChainModifiers",
            "XXX.commands.execution.CustomCommandExecutor",
            "XXX.commands.execution.CustomCommandExecutor$WithErrorHandling",
            "XXX.commands.execution.CustomModifierExecutor$ModifierAdapter",
            "XXX.commands.execution.ExecutionContext",
            "XXX.commands.execution.ExecutionControl$1",
            "XXX.commands.execution.Frame$FrameControl",
            "XXX.commands.execution.UnboundEntryAction",
            "XXX.execution.tasks.BuildContexts",
            "XXX.execution.tasks.BuildContexts$TopLevel",
            "XXX.execution.tasks.CallFunction",
            "XXX.execution.tasks.ContinuationTask$TaskProvider",
            "XXX.execution.tasks.FallthroughTask",
            "XXX.execution.tasks.package-info",
            "XXX.commands.functions.FunctionBuilder",
            "XXX.commands.functions.MacroFunction",
            "XXX.commands.functions.MacroFunction$MacroEntry",
            "XXX.commands.functions.PlainTextFunction",
            "XXX.commands.functions.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockBox$1",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$6",
            "XXX.minecraft.core.BlockPos$TraversalNodeStatus",
            "XXX.minecraft.core.Cloner",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$1",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$1",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.MappedRegistry$3",
            "XXX.minecraft.core.MappedRegistry$TagSet$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$PendingTags",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$1Entry",
            "XXX.minecraft.core.RegistrySetBuilder$3",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagRegistryLookup",
            "XXX.minecraft.core.RegistrySetBuilder$PatchedRegistries",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalOwner",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.cauldron.package-info",
            "XXX.core.component.DataComponentExactPredicate$Builder",
            "XXX.core.component.DataComponentHolder",
            "XXX.core.component.DataComponentMap$1",
            "XXX.core.component.DataComponentMap$3",
            "XXX.core.component.DataComponentMap$Builder$SimpleMap",
            "XXX.core.component.DataComponentPatch$1",
            "XXX.core.component.DataComponentPatch$PatchKey",
            "XXX.core.component.DataComponentType",
            "XXX.core.component.DataComponentType$Builder$SimpleType",
            "XXX.core.component.PatchedDataComponentMap",
            "XXX.core.component.TypedDataComponent$1",
            "XXX.component.predicates.AttributeModifiersPredicate",
            "XXX.component.predicates.BundlePredicate",
            "XXX.component.predicates.CustomDataPredicate",
            "XXX.component.predicates.DataComponentPredicate",
            "XXX.component.predicates.DataComponentPredicate$Type",
            "XXX.component.predicates.EnchantmentsPredicate",
            "XXX.component.predicates.EnchantmentsPredicate$StoredEnchantments",
            "XXX.component.predicates.FireworkExplosionPredicate$FireworkPredicate",
            "XXX.component.predicates.JukeboxPlayablePredicate",
            "XXX.component.predicates.TrimPredicate",
            "XXX.component.predicates.WritableBookPredicate$PagePredicate",
            "XXX.component.predicates.WrittenBookPredicate$PagePredicate",
            "XXX.core.dispenser.BlockSource",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.MinecartDispenseItemBehavior",
            "XXX.core.dispenser.ProjectileDispenseBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.ColorParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SculkChargeParticleOptions",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$1",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.DatapackStructureReport$CustomPackEntry",
            "XXX.data.info.DatapackStructureReport$Format",
            "XXX.data.info.ItemListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.LootData",
            "XXX.loot.packs.TradeRebalanceLootTableProvider",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.VanillaShearingLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder$1",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$FamilyRecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner$1",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.TransmuteRecipeBuilder",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.recipes.packs.VanillaRecipeProvider$TrimTemplate",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.TradeRebalanceRegistries",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtDatafixer",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.EnchantmentTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.tags.TradeRebalanceEnchantmentTagsProvider",
            "XXX.gametest.framework.GeneratedTest",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureGridSpawner",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestCommand$TestBatchSummaryDisplayer",
            "XXX.gametest.framework.TestData",
            "XXX.gametest.framework.TestEnvironmentDefinition$AllOf",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules",
            "XXX.gametest.framework.TestEnvironmentDefinition$TimeOfDay",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather$Type",
            "XXX.gametest.framework.TestFinder$Builder",
            "XXX.gametest.framework.TestInstanceFinder",
            "XXX.gametest.framework.TestReporter",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounterException",
            "XXX.minecraft.nbt.NbtFormatException",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ReportedNbtException",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.DisconnectionDetails",
            "XXX.minecraft.network.HandlerNames",
            "XXX.minecraft.network.LocalFrameDecoder",
            "XXX.minecraft.network.MonitoredLocalFrameDecoder",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.ProtocolInfo$Unbound",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.RegistryFriendlyByteBuf",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.UnconfiguredPipelineHandler",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$InboundConfigurationTask",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$OutboundConfigurationTask",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.ClickEvent$ChangePage",
            "XXX.network.chat.ClickEvent$OpenFile",
            "XXX.network.chat.ClickEvent$RunCommand",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentSerialization",
            "XXX.network.chat.ComponentSerialization$FuzzyCodec",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.HoverEvent$ShowItem",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.PlainTextContents",
            "XXX.chat.contents.PlainTextContents$LiteralContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.chat.numbers.BlankFormat$1",
            "XXX.chat.numbers.FixedFormat$1",
            "XXX.chat.numbers.NumberFormatType",
            "XXX.chat.numbers.StyledFormat",
            "XXX.chat.numbers.package-info",
            "XXX.network.codec.ByteBufCodecs",
            "XXX.network.codec.ByteBufCodecs$10",
            "XXX.network.codec.ByteBufCodecs$12",
            "XXX.network.codec.ByteBufCodecs$14",
            "XXX.network.codec.ByteBufCodecs$16",
            "XXX.network.codec.ByteBufCodecs$18",
            "XXX.network.codec.ByteBufCodecs$2",
            "XXX.network.codec.ByteBufCodecs$21",
            "XXX.network.codec.ByteBufCodecs$23",
            "XXX.network.codec.ByteBufCodecs$25",
            "XXX.network.codec.ByteBufCodecs$27",
            "XXX.network.codec.ByteBufCodecs$29",
            "XXX.network.codec.ByteBufCodecs$30",
            "XXX.minecraft.resources.ResourceLocation$Serializer",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.ReloadableServerRegistries$Holder",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerLinks$Entry",
            "XXX.minecraft.server.ServerLinks$UntrustedEntry",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.SuppressedExceptionCollector$LongEntry",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.ThrottlingChunkTaskDispatcher",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenRegion",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.CommonListenerCookie",
            "XXX.server.network.ConfigurationTask$Type",
            "XXX.server.network.FilteredText",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.LegacyTextFilter$1",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.PlayerSafetyServiceTextFilter",
            "XXX.server.network.ServerConfigurationPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.ServerTextFilter$IgnoreStrategy",
            "XXX.server.network.ServerTextFilter$PlayerContext",
            "XXX.server.network.TextFilter",
            "XXX.network.config.JoinWorldTask",
            "XXX.network.config.SynchronizeRegistriesTask",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.CompositePackResources",
            "XXX.server.packs.DownloadCacheCleaner$1",
            "XXX.server.packs.DownloadCacheCleaner$PathAndTime",
            "XXX.server.packs.DownloadQueue$BatchConfig",
            "XXX.server.packs.DownloadQueue$DownloadRequest",
            "XXX.server.packs.DownloadQueue$LogEntry",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.FilePackResources$SharedZipFileAccess",
            "XXX.server.packs.OverlayMetadataSection$OverlayEntry",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.PackSelectionConfig",
            "XXX.server.packs.PathPackResources",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.linkfs.DummyFileAttributes",
            "XXX.packs.linkfs.LinkFSPath",
            "XXX.packs.linkfs.LinkFSPath$2",
            "XXX.packs.linkfs.LinkFSProvider",
            "XXX.packs.linkfs.LinkFSProvider$2",
            "XXX.packs.linkfs.LinkFileSystem$Builder",
            "XXX.packs.linkfs.PathContents",
            "XXX.packs.linkfs.PathContents$2",
            "XXX.packs.linkfs.PathContents$FileContents",
            "XXX.packs.metadata.MetadataSectionType",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.BuiltInPackSource$1",
            "XXX.packs.repository.FolderRepositorySource$FolderPackDetector",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.PackSource$1",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.CloseableResourceManager",
            "XXX.packs.resources.FallbackResourceManager$1ResourceWithSourceAndIndex",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.FallbackResourceManager$ResourceWithSource",
            "XXX.packs.resources.MultiPackResourceManager",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceFilterSection",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceMetadata",
            "XXX.packs.resources.ResourceMetadata$2",
            "XXX.packs.resources.ResourceMetadata$Builder$1",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerRecipeBook$DisplayResolver",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BannerPatternTags",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EnchantmentTags",
            "XXX.minecraft.tags.FlatLevelGeneratorPresetTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.PoiTypeTags",
            "XXX.minecraft.tags.TagBuilder",
            "XXX.minecraft.tags.TagEntry$Lookup",
            "XXX.minecraft.tags.TagKey",
            "XXX.minecraft.tags.TagLoader$1",
            "XXX.minecraft.tags.TagLoader$EntryWithSource",
            "XXX.minecraft.tags.TagLoader$SortingEntry",
            "XXX.minecraft.tags.TagNetworkSerialization$NetworkPayload",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.AbortableIterationConsumer",
            "XXX.minecraft.util.ArrayListDeque",
            "XXX.minecraft.util.ArrayListDeque$ReversedView",
            "XXX.minecraft.util.BinaryAnimator$EasingFunction",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.ClassTreeIdRegistry",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.EncoderCache",
            "XXX.minecraft.util.EncoderCache$2",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$6",
            "XXX.minecraft.util.ExtraCodecs$LateBoundIdMapper",
            "XXX.minecraft.util.ExtraCodecs$TagOrElementLocation",
            "XXX.minecraft.util.FileSystemUtil",
            "XXX.minecraft.util.FormattedCharSequence",
            "XXX.minecraft.util.FutureChain",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.InclusiveRange",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.ListAndDeque",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ModCheck",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleInfo",
            "XXX.minecraft.util.NullOps",
            "XXX.minecraft.util.OptionEnum",
            "XXX.minecraft.util.PlaceholderLookupProvider",
            "XXX.minecraft.util.PlaceholderLookupProvider$2",
            "XXX.minecraft.util.PngInfo",
            "XXX.minecraft.util.ProblemReporter$Collector",
            "XXX.minecraft.util.RandomSource",
            "XXX.minecraft.util.ResourceLocationPattern",
            "XXX.minecraft.util.SequencedPriorityIterator",
            "XXX.minecraft.util.SignatureUpdater$Output",
            "XXX.minecraft.util.Signer",
            "XXX.minecraft.util.SimpleBitStorage$InitializationException",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.SpawnUtil$Strategy",
            "XXX.minecraft.util.StaticCache2D$Initializer",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.StringRepresentable$EnumCodec",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.TaskChainer$1",
            "XXX.minecraft.util.TickThrottler",
            "XXX.minecraft.util.TimeSource$NanoTimeSource",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.ToFloatFunction$2",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.context.ContextKey",
            "XXX.util.context.ContextKeySet$Builder",
            "XXX.util.context.ContextMap$Builder",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.LegacyComponentDataFixUtils",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AreaEffectCloudDurationScaleFix",
            "XXX.datafix.fixes.AttributeIdPrefixFix",
            "XXX.datafix.fixes.AttributesRenameFix",
            "XXX.datafix.fixes.BannerEntityCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockPosFormatAndRenamesFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.BoatSplitFix",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.InvalidBlockEntityLockFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix",
            "XXX.datafix.fixes.ItemStackCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LegacyHoverEventFix",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.LodestoneCompassComponentFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.NamespacedTypeRenameFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRarityFix",
            "XXX.datafix.fixes.OptionsAccessibilityOnboardFix",
            "XXX.datafix.fixes.OptionsAmbientOcclusionFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.OptionsProgrammerArtFix",
            "XXX.datafix.fixes.OverreachingTickFix",
            "XXX.datafix.fixes.PlayerEquipmentFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.PoiTypeRenameFix",
            "XXX.datafix.fixes.ProjectileStoredWeaponFix",
            "XXX.datafix.fixes.RandomSequenceSettingsFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RemapChunkStatusFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.ScoreboardDisplayNameFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsCounterFix$StatType",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.StructureSettingsFlattenFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix$Conversion",
            "XXX.datafix.fixes.TextComponentStrictJsonFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix",
            "XXX.datafix.fixes.TippedArrowPotionToItemFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.TrialSpawnerConfigFix",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix$VanillaTrialChambers",
            "XXX.datafix.fixes.VariantRenameFix",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerSetCanPickUpLootFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1488",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1925",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V3078",
            "XXX.datafix.schemas.V3082",
            "XXX.datafix.schemas.V3202",
            "XXX.datafix.schemas.V3204",
            "XXX.datafix.schemas.V3326",
            "XXX.datafix.schemas.V3328",
            "XXX.datafix.schemas.V3439",
            "XXX.datafix.schemas.V3682",
            "XXX.datafix.schemas.V3685",
            "XXX.datafix.schemas.V3799",
            "XXX.datafix.schemas.V3808",
            "XXX.datafix.schemas.V3808_2",
            "XXX.datafix.schemas.V3816",
            "XXX.datafix.schemas.V3818_3",
            "XXX.datafix.schemas.V3818_5",
            "XXX.datafix.schemas.V3938",
            "XXX.datafix.schemas.V4067",
            "XXX.datafix.schemas.V4071",
            "XXX.datafix.schemas.V4292",
            "XXX.datafix.schemas.V4301",
            "XXX.datafix.schemas.V4306",
            "XXX.datafix.schemas.V4312",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.debugchart.AbstractSampleLogger",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionRequest",
            "XXX.util.debugchart.LocalSampleLogger",
            "XXX.util.debugchart.RemoteSampleLogger",
            "XXX.util.debugchart.SampleStorage",
            "XXX.util.debugchart.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.parsing.package-info",
            "XXX.parsing.packrat.Control",
            "XXX.parsing.packrat.ErrorCollector",
            "XXX.parsing.packrat.ErrorEntry",
            "XXX.parsing.packrat.ParseState$CacheEntry",
            "XXX.parsing.packrat.Rule",
            "XXX.parsing.packrat.Rule$SimpleRuleAction",
            "XXX.parsing.packrat.Scope",
            "XXX.parsing.packrat.Term",
            "XXX.parsing.packrat.Term$2",
            "XXX.parsing.packrat.Term$Marker",
            "XXX.parsing.packrat.Term$Reference",
            "XXX.packrat.commands.Grammar",
            "XXX.packrat.commands.ResourceLookupRule",
            "XXX.packrat.commands.StringReaderParserState",
            "XXX.packrat.commands.StringReaderTerms$TerminalCharacter",
            "XXX.packrat.commands.TagParseRule",
            "XXX.parsing.packrat.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.Profiler$Scope",
            "XXX.util.profiling.ProfilerFiller$CombinedProfileFiller",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.TracyZoneFiller",
            "XXX.util.profiling.Zone",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.ChunkRegionIoEvent",
            "XXX.jfr.event.ChunkRegionReadEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.StructureGenerationEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.ChunkIdentification",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.IoSummary$CountAndSize",
            "XXX.jfr.stats.StructureGenStat",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.Weighted",
            "XXX.util.random.WeightedList$Builder",
            "XXX.util.random.WeightedList$Flat",
            "XXX.util.random.WeightedRandom",
            "XXX.util.thread.AbstractConsecutiveExecutor",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.Entity$StateVisitor",
            "XXX.world.entity.EntityType$1",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.EquipmentSlotGroup$1",
            "XXX.world.entity.EquipmentUser",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.InterpolationHandler",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.Leashable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.PortalProcessor",
            "XXX.world.entity.PositionMoveRotation",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SlotAccess$4",
            "XXX.world.entity.SpawnPlacementType",
            "XXX.world.entity.SpawnPlacementTypes$1",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.Attribute$Sentiment",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LongJumpUtil",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StartAttacking$TargetFinder",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$StopAttackCondition",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.BreezeAttackEntitySensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiRecord$Packed",
            "XXX.village.poi.PoiSection$Packed",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.AgeableWaterCreature",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bee$ValidateFlowerGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.CatVariants",
            "XXX.entity.animal.ChickenVariant",
            "XXX.entity.animal.ChickenVariants",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.CowVariant$ModelType",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow$Variant",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Parrot$Variant",
            "XXX.entity.animal.PigVariant",
            "XXX.entity.animal.PigVariants",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Rabbit$Variant",
            "XXX.entity.animal.Salmon$Variant",
            "XXX.animal.sniffer.Sniffer$State",
            "XXX.animal.sniffer.SnifferAi$1",
            "XXX.animal.sniffer.SnifferAi$3",
            "XXX.animal.sniffer.SnifferAi$FeelingHappy",
            "XXX.animal.sniffer.SnifferAi$Scenting",
            "XXX.animal.sniffer.SnifferAi$Sniffing",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.DragonFlightHistory$Sample",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.BlockAttachedEntity",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.Painting",
            "XXX.entity.decoration.PaintingVariants",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.Bogged",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGoToLavaGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zoglin",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.breeze.Breeze",
            "XXX.monster.breeze.BreezeAi",
            "XXX.monster.breeze.BreezeUtil",
            "XXX.monster.breeze.Shoot",
            "XXX.monster.breeze.Slide",
            "XXX.monster.creaking.Creaking",
            "XXX.monster.creaking.Creaking$CreakingJumpControl",
            "XXX.monster.creaking.Creaking$CreakingMoveControl",
            "XXX.monster.creaking.Creaking$HomeNodeEvaluator",
            "XXX.monster.creaking.CreakingAi$1",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.monster.warden.AngerLevel",
            "XXX.monster.warden.AngerManagement$1",
            "XXX.monster.warden.Warden",
            "XXX.monster.warden.Warden$1$1",
            "XXX.monster.warden.Warden$VibrationUser",
            "XXX.monster.warden.WardenSpawnTracker",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerTrades$TypeSpecificTrade",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Input$1",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$2",
            "XXX.entity.player.PlayerEquipment",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.StackedContents$Output",
            "XXX.entity.player.StackedItemContents",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ProjectileDeflection",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownSplashPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.projectile.windcharge.AbstractWindCharge",
            "XXX.projectile.windcharge.WindCharge",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.Raids$RaidWithId",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.variant.ModelAndTexture",
            "XXX.entity.variant.PriorityProvider",
            "XXX.entity.variant.PriorityProvider$SelectorCondition",
            "XXX.entity.variant.SpawnCondition",
            "XXX.entity.variant.SpawnContext",
            "XXX.entity.variant.StructureCheck",
            "XXX.entity.variant.package-info",
            "XXX.entity.vehicle.AbstractBoat$Status",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.ChestRaft",
            "XXX.entity.vehicle.ContainerEntity$1",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.NewMinecartBehavior",
            "XXX.entity.vehicle.NewMinecartBehavior$MinecartStep",
            "XXX.entity.vehicle.NewMinecartBehavior$TrackIteration",
            "XXX.entity.vehicle.OldMinecartBehavior$1",
            "XXX.entity.vehicle.VehicleEntity",
            "XXX.world.flag.FeatureElement",
            "XXX.world.flag.FeatureFlagRegistry",
            "XXX.world.flag.FeatureFlagSet",
            "XXX.world.flag.FeatureFlags",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractCraftingMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CrafterSlot",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$4",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookMenu$PostPlaceAction",
            "XXX.world.inventory.RecipeCraftingHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SlotRange$1",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.TransientCraftingContainer",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.CrossbowItem$ChargeType",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$TooltipContext",
            "XXX.world.item.Item$TooltipContext$2",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStack$2",
            "XXX.world.item.ItemStack$4",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.JukeboxPlayable",
            "XXX.world.item.JukeboxSongPlayer",
            "XXX.world.item.JukeboxSongs",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MaceItem",
            "XXX.world.item.MapItem$1",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PlaceOnWaterBlockItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileItem$DispenseConfig",
            "XXX.world.item.ProjectileItem$PositionFunction",
            "XXX.world.item.Rarity",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignApplicator",
            "XXX.world.item.SmithingTemplateItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.ToolMaterial",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.WindChargeItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.component.Bees",
            "XXX.item.component.BlocksAttacks",
            "XXX.item.component.BlocksAttacks$ItemDamageFunction",
            "XXX.item.component.BundleContents",
            "XXX.item.component.ChargedProjectiles",
            "XXX.item.component.Consumable$Builder",
            "XXX.item.component.ConsumableListener",
            "XXX.item.component.CustomData",
            "XXX.item.component.DamageResistant",
            "XXX.item.component.DebugStickState",
            "XXX.item.component.FireworkExplosion",
            "XXX.item.component.Fireworks",
            "XXX.item.component.ItemAttributeModifiers",
            "XXX.item.component.ItemAttributeModifiers$Builder",
            "XXX.item.component.ItemContainerContents",
            "XXX.item.component.ItemLore",
            "XXX.item.component.MapDecorations",
            "XXX.item.component.MapItemColor",
            "XXX.item.component.OminousBottleAmplifier",
            "XXX.item.component.ResolvableProfile",
            "XXX.item.component.SuspiciousStewEffects",
            "XXX.item.component.Tool",
            "XXX.item.component.TooltipDisplay",
            "XXX.item.component.UseCooldown",
            "XXX.item.component.UseRemainder$OnExtraCreatedRemainder",
            "XXX.item.component.WritableBookContent",
            "XXX.item.component.package-info",
            "XXX.item.consume_effects.ClearAllStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect$Type",
            "XXX.item.consume_effects.RemoveStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.AbstractCookingRecipe$Serializer",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BlastingRecipe$1",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CraftingInput$Positioned",
            "XXX.item.crafting.CraftingRecipe$1",
            "XXX.item.crafting.CustomRecipe$Serializer",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.PlacementInfo",
            "XXX.item.crafting.RecipeAccess",
            "XXX.item.crafting.RecipeBookCategory",
            "XXX.item.crafting.RecipeCache$Entry",
            "XXX.item.crafting.RecipeInput",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeManager$IngredientCollector",
            "XXX.item.crafting.RecipeManager$ServerDisplayInfo",
            "XXX.item.crafting.RecipePropertySet",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputEntry",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapedRecipePattern",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SingleItemRecipe$Factory",
            "XXX.item.crafting.SingleRecipeInput",
            "XXX.item.crafting.SmeltingRecipe$1",
            "XXX.item.crafting.SmithingRecipeInput",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TransmuteRecipe",
            "XXX.item.crafting.TransmuteResult",
            "XXX.crafting.display.DisplayContentsFactory$ForRemainders",
            "XXX.crafting.display.FurnaceRecipeDisplay",
            "XXX.crafting.display.RecipeDisplay$Type",
            "XXX.crafting.display.RecipeDisplayId",
            "XXX.crafting.display.ShapedCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay",
            "XXX.crafting.display.SlotDisplay$Composite",
            "XXX.crafting.display.SlotDisplay$ItemSlotDisplay",
            "XXX.crafting.display.SlotDisplay$ItemStackSlotDisplay",
            "XXX.crafting.display.SlotDisplay$TagSlotDisplay",
            "XXX.crafting.display.SlotDisplay$WithRemainder",
            "XXX.crafting.display.SlotDisplays",
            "XXX.crafting.display.StonecutterRecipeDisplay",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.Enchantable",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.Enchantment$Builder",
            "XXX.item.enchantment.Enchantment$EnchantmentDefinition",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.EnchantmentTarget",
            "XXX.item.enchantment.ItemEnchantments",
            "XXX.item.enchantment.LevelBasedValue",
            "XXX.item.enchantment.LevelBasedValue$Constant",
            "XXX.item.enchantment.LevelBasedValue$LevelsSquared",
            "XXX.item.enchantment.LevelBasedValue$Lookup",
            "XXX.item.enchantment.TargetedConditionalEffect",
            "XXX.enchantment.effects.AllOf",
            "XXX.enchantment.effects.AllOf$LocationBasedEffects",
            "XXX.enchantment.effects.ApplyMobEffect",
            "XXX.enchantment.effects.DamageEntity",
            "XXX.enchantment.effects.EnchantmentAttributeEffect",
            "XXX.enchantment.effects.EnchantmentLocationBasedEffect",
            "XXX.enchantment.effects.ExplodeEffect",
            "XXX.enchantment.effects.MultiplyValue",
            "XXX.enchantment.effects.RemoveBinomial",
            "XXX.enchantment.effects.ReplaceDisk",
            "XXX.enchantment.effects.SetBlockProperties",
            "XXX.enchantment.effects.SpawnParticlesEffect",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType",
            "XXX.enchantment.effects.SpawnParticlesEffect$VelocitySource",
            "XXX.enchantment.effects.package-info",
            "XXX.enchantment.providers.EnchantmentProvider",
            "XXX.enchantment.providers.EnchantmentsByCost",
            "XXX.enchantment.providers.SingleEnchantment",
            "XXX.enchantment.providers.VanillaEnchantmentProviders",
            "XXX.item.equipment.AllowedEntitiesProvider",
            "XXX.item.equipment.ArmorMaterials",
            "XXX.item.equipment.EquipmentAsset",
            "XXX.item.equipment.Equippable",
            "XXX.item.equipment.package-info",
            "XXX.equipment.trim.MaterialAssetGroup",
            "XXX.equipment.trim.TrimMaterial",
            "XXX.equipment.trim.TrimPattern",
            "XXX.equipment.trim.package-info",
            "XXX.item.trading.ItemCost",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.pools.alias.Direct",
            "XXX.pools.alias.Random",
            "XXX.level.timers.FunctionCallback$Serializer",
            "XXX.level.timers.FunctionTagCallback$Serializer",
            "XXX.level.timers.TimerCallback$Serializer",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.package-info",
            "XXX.level.validation.DirectoryValidator",
            "XXX.level.validation.ForbiddenSymlinkInfo",
            "XXX.level.validation.PathAllowList$ConfigEntry",
            "XXX.level.validation.package-info",
            "XXX.world.phys.AABB"
          ],
          "removed": [
            "XXX.mojang.math.SymmetricGroup3",
            "XXX.mojang.math.package-info",
            "net.minecraft.BlockUtil$FoundRectangle",
            "net.minecraft.CharPredicate",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.Optionull",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.SystemReport",
            "net.minecraft.Util",
            "net.minecraft.Util$10",
            "net.minecraft.Util$2",
            "net.minecraft.Util$6",
            "net.minecraft.Util$8",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.AdvancementHolder",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRequirements$Strategy",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.AdvancementTree$Listener",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.CollectionContentsPredicate",
            "XXX.advancements.critereon.CollectionContentsPredicate$Single",
            "XXX.advancements.critereon.CollectionCountsPredicate",
            "XXX.advancements.critereon.CollectionCountsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionCountsPredicate$Zero",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.ContextAwarePredicate",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.DistanceTrigger$TriggerInstance",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$LocationWrapper",
            "XXX.advancements.critereon.EntitySubPredicates",
            "XXX.advancements.critereon.FallAfterExplosionTrigger",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InputPredicate",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger",
            "XXX.advancements.critereon.KilledByArrowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightningBoltPredicate",
            "XXX.advancements.critereon.LightningStrikeTrigger$TriggerInstance",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LootTableTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Doubles",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerInteractTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.PlayerPredicate$StatMatcher",
            "XXX.advancements.critereon.PlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeCraftedTrigger",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.SheepPredicate",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SimpleCriterionTrigger$SimpleInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.SlimePredicate",
            "XXX.advancements.critereon.StartRidingTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TagPredicate",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsingItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandResultCallback",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$1$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootModifierArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootTableArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ResourceSelectorArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.SlotsArgument",
            "XXX.commands.arguments.StyleArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$TagLookupRule",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$1",
            "XXX.arguments.item.ItemParser$State",
            "XXX.arguments.item.ItemParser$Visitor",
            "XXX.arguments.item.ItemPredicateArgument$ComponentWrapper",
            "XXX.arguments.item.ItemPredicateArgument$PredicateWrapper",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.execution.CommandQueueEntry",
            "XXX.commands.execution.CustomCommandExecutor$CommandAdapter",
            "XXX.commands.execution.CustomModifierExecutor",
            "XXX.commands.execution.EntryAction",
            "XXX.commands.execution.ExecutionControl",
            "XXX.commands.execution.Frame",
            "XXX.commands.execution.TraceCallbacks",
            "XXX.commands.execution.package-info",
            "XXX.execution.tasks.BuildContexts$Continuation",
            "XXX.execution.tasks.BuildContexts$Unbound",
            "XXX.execution.tasks.ContinuationTask",
            "XXX.execution.tasks.ExecuteCommand",
            "XXX.execution.tasks.IsolatedCall",
            "XXX.commands.functions.CommandFunction",
            "XXX.commands.functions.InstantiatedFunction",
            "XXX.commands.functions.MacroFunction$Entry",
            "XXX.commands.functions.MacroFunction$PlainTextEntry",
            "XXX.commands.functions.StringTemplate",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockBox",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.ClientAsset",
            "XXX.minecraft.core.Cloner$Factory",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.MappedRegistry$TagSet",
            "XXX.minecraft.core.MappedRegistry$TagSet$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.RegistrationInfo",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$2",
            "XXX.minecraft.core.RegistrySetBuilder$3$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookupWrapper",
            "XXX.minecraft.core.RegistrySetBuilder$LazyHolder",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$PackedRegistryEntry",
            "XXX.minecraft.core.Rotations$1",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.UUIDUtil$1",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.CauldronInteraction$InteractionMap",
            "XXX.core.component.DataComponentExactPredicate",
            "XXX.core.component.DataComponentGetter",
            "XXX.core.component.DataComponentMap",
            "XXX.core.component.DataComponentMap$2",
            "XXX.core.component.DataComponentMap$Builder",
            "XXX.core.component.DataComponentPatch",
            "XXX.core.component.DataComponentPatch$Builder",
            "XXX.core.component.DataComponentPatch$SplitResult",
            "XXX.core.component.DataComponentType$Builder",
            "XXX.core.component.DataComponents",
            "XXX.core.component.TypedDataComponent",
            "XXX.core.component.package-info",
            "XXX.component.predicates.AttributeModifiersPredicate$EntryPredicate",
            "XXX.component.predicates.ContainerPredicate",
            "XXX.component.predicates.DamagePredicate",
            "XXX.component.predicates.DataComponentPredicate$Single",
            "XXX.component.predicates.DataComponentPredicates",
            "XXX.component.predicates.EnchantmentsPredicate$Enchantments",
            "XXX.component.predicates.FireworkExplosionPredicate",
            "XXX.component.predicates.FireworksPredicate",
            "XXX.component.predicates.PotionsPredicate",
            "XXX.component.predicates.WritableBookPredicate",
            "XXX.component.predicates.WrittenBookPredicate",
            "XXX.component.predicates.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.EquipmentDispenseItemBehavior",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.ScalableParticleOptionsBase",
            "XXX.core.particles.ShriekParticleOption",
            "XXX.core.particles.TrailParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.DatapackStructureReport",
            "XXX.data.info.DatapackStructureReport$Entry",
            "XXX.data.info.DatapackStructureReport$Report",
            "XXX.data.info.PacketReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.TradeRebalanceChestLoot",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaEquipmentLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider$Runner",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.RegistryPatchGenerator",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.RetryOptions",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestEnvironmentDefinition",
            "XXX.gametest.framework.TestEnvironmentDefinition$Functions",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules$Entry",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather",
            "XXX.gametest.framework.TestFinder",
            "XXX.gametest.framework.TestFunctionLoader",
            "XXX.gametest.framework.TestPosFinder",
            "XXX.gametest.framework.UnknownGameTestException",
            "XXX.minecraft.locale.DeprecatedTranslationsInfo",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtException",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtIo$StringFallbackDataOutput",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.HiddenByteBuf",
            "XXX.minecraft.network.LocalFrameEncoder",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.ProtocolInfo",
            "XXX.minecraft.network.ProtocolInfo$Unbound$PacketVisitor",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Inbound",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Outbound",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.ClickEvent$CopyToClipboard",
            "XXX.network.chat.ClickEvent$OpenUrl",
            "XXX.network.chat.ClickEvent$SuggestCommand",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$SerializerAdapter",
            "XXX.network.chat.ComponentContents$Type",
            "XXX.network.chat.ComponentSerialization$1",
            "XXX.network.chat.ComponentSerialization$StrictEither",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ShowEntity",
            "XXX.network.chat.HoverEvent$ShowText",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$1",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.DataSource$Type",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.PlainTextContents$1",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.chat.numbers.BlankFormat",
            "XXX.chat.numbers.FixedFormat",
            "XXX.chat.numbers.NumberFormat",
            "XXX.chat.numbers.NumberFormatTypes",
            "XXX.chat.numbers.StyledFormat$1",
            "XXX.network.chat.package-info",
            "XXX.network.codec.ByteBufCodecs$1",
            "XXX.network.codec.ByteBufCodecs$11",
            "XXX.network.codec.ByteBufCodecs$13",
            "XXX.network.codec.ByteBufCodecs$15",
            "XXX.network.codec.ByteBufCodecs$17",
            "XXX.network.codec.ByteBufCodecs$19",
            "XXX.network.codec.ByteBufCodecs$20",
            "XXX.network.codec.ByteBufCodecs$22",
            "XXX.network.codec.ByteBufCodecs$24",
            "XXX.network.codec.ByteBufCodecs$26",
            "XXX.network.codec.ByteBufCodecs$28",
            "XXX.network.codec.ByteBufCodecs$3",
            "XXX.network.codec.ByteBufCodecs$31",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$Data",
            "XXX.minecraft.server.ReloadableServerRegistries",
            "XXX.minecraft.server.ReloadableServerRegistries$LoadResult",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerInfo",
            "XXX.minecraft.server.ServerLinks",
            "XXX.minecraft.server.ServerLinks$KnownLinkType",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.ServerTickRateManager",
            "XXX.minecraft.server.SuppressedExceptionCollector",
            "XXX.minecraft.server.SuppressedExceptionCollector$ShortEntry",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.level.ServerPlayer$RespawnPosAngle",
            "XXX.server.level.SimulationChunkTracker",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.Ticket",
            "XXX.server.level.TicketType$TicketUse",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.ConfigurationTask",
            "XXX.server.network.Filterable",
            "XXX.server.network.LegacyProtocolUtils",
            "XXX.server.network.LegacyTextFilter",
            "XXX.server.network.LegacyTextFilter$JoinOrLeaveEncoder",
            "XXX.server.network.PlayerChunkSender",
            "XXX.server.network.ServerCommonPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.ServerTextFilter",
            "XXX.server.network.ServerTextFilter$MessageEncoder",
            "XXX.server.network.ServerTextFilter$RequestFailedException",
            "XXX.server.network.TextFilter$1",
            "XXX.network.config.ServerResourcePackConfigurationTask",
            "XXX.network.config.package-info",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.BuiltInMetadata",
            "XXX.server.packs.DownloadCacheCleaner",
            "XXX.server.packs.DownloadCacheCleaner$PathAndPriority",
            "XXX.server.packs.DownloadQueue",
            "XXX.server.packs.DownloadQueue$BatchResult",
            "XXX.server.packs.DownloadQueue$FileInfoEntry",
            "XXX.server.packs.FeatureFlagsMetadataSection",
            "XXX.server.packs.FilePackResources$FileResourcesSupplier",
            "XXX.server.packs.OverlayMetadataSection",
            "XXX.server.packs.PackLocationInfo",
            "XXX.server.packs.PackResources$ResourceOutput",
            "XXX.server.packs.PackType",
            "XXX.server.packs.PathPackResources$PathResourcesSupplier",
            "XXX.server.packs.VanillaPackResourcesBuilder",
            "XXX.packs.linkfs.LinkFSFileStore",
            "XXX.packs.linkfs.LinkFSPath$1",
            "XXX.packs.linkfs.LinkFSPath$3",
            "XXX.packs.linkfs.LinkFSProvider$1",
            "XXX.packs.linkfs.LinkFileSystem",
            "XXX.packs.linkfs.LinkFileSystem$DirectoryEntry",
            "XXX.packs.linkfs.PathContents$1",
            "XXX.packs.linkfs.PathContents$DirectoryContents",
            "XXX.packs.linkfs.package-info",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.BuiltInPackSource",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.KnownPack",
            "XXX.packs.repository.Pack$Metadata",
            "XXX.packs.repository.Pack$ResourcesSupplier",
            "XXX.packs.repository.PackDetector",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.FallbackResourceManager$EntryStack",
            "XXX.packs.resources.FallbackResourceManager$PackEntry",
            "XXX.packs.resources.IoSupplier",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.ResourceMetadata$1",
            "XXX.packs.resources.ResourceMetadata$Builder",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BiomeTags",
            "XXX.minecraft.tags.DamageTypeTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.InstrumentTags",
            "XXX.minecraft.tags.PaintingVariantTags",
            "XXX.minecraft.tags.StructureTags",
            "XXX.minecraft.tags.TagEntry",
            "XXX.minecraft.tags.TagFile",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagLoader$ElementLookup",
            "XXX.minecraft.tags.TagLoader$LoadResult",
            "XXX.minecraft.tags.TagNetworkSerialization",
            "XXX.minecraft.tags.WorldPresetTags",
            "XXX.minecraft.util.ARGB",
            "XXX.minecraft.util.AbortableIterationConsumer$Continuation",
            "XXX.minecraft.util.ArrayListDeque$DescendingIterator",
            "XXX.minecraft.util.BinaryAnimator",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.ColorRGBA",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DelegateDataOutput",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.EncoderCache$1",
            "XXX.minecraft.util.EncoderCache$Key",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$5",
            "XXX.minecraft.util.ExtraCodecs$7",
            "XXX.minecraft.util.ExtraCodecs$StrictUnboundedMapCodec",
            "XXX.minecraft.util.FastBufferedInputStream",
            "XXX.minecraft.util.FileZipper",
            "XXX.minecraft.util.FormattedCharSink",
            "XXX.minecraft.util.Graph",
            "XXX.minecraft.util.GsonHelper$CountedAppendable",
            "XXX.minecraft.util.HttpUtil$DownloadProgressListener",
            "XXX.minecraft.util.KeyDispatchDataCodec",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.MemoryReserve",
            "XXX.minecraft.util.ModCheck$Confidence",
            "XXX.minecraft.util.NativeModuleLister",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleVersion",
            "XXX.minecraft.util.NullOps$NullMapBuilder",
            "XXX.minecraft.util.ParticleUtils",
            "XXX.minecraft.util.PlaceholderLookupProvider$1",
            "XXX.minecraft.util.PlaceholderLookupProvider$UniversalLookup",
            "XXX.minecraft.util.ProblemReporter",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RegistryContextSwapper",
            "XXX.minecraft.util.SegmentedAnglePrecision",
            "XXX.minecraft.util.SignatureUpdater",
            "XXX.minecraft.util.SignatureValidator",
            "XXX.minecraft.util.SimpleBitStorage",
            "XXX.minecraft.util.SingleKeyCache",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SpawnUtil",
            "XXX.minecraft.util.StaticCache2D",
            "XXX.minecraft.util.StringDecomposer",
            "XXX.minecraft.util.StringRepresentable$1",
            "XXX.minecraft.util.StringRepresentable$StringRepresentableCodec",
            "XXX.minecraft.util.TaskChainer",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.TimeSource",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.ToFloatFunction$1",
            "XXX.minecraft.util.TriState",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.context.ContextKeySet",
            "XXX.util.context.ContextMap",
            "XXX.util.context.package-info",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.ExtraDataFixUtils",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractBlockPropertyFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.AreaEffectCloudPotionFix",
            "XXX.datafix.fixes.AttributeModifierIdFix",
            "XXX.datafix.fixes.AttributesRenameLegacy",
            "XXX.datafix.fixes.BannerPatternFormatFix",
            "XXX.datafix.fixes.BeehiveFieldRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityFurnaceBurnTimeFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockPropertyRenameAndFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CarvingStepRemoveFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChestedHorsesInventoryZeroIndexingFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$MappingConstants",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.InlineBlockPosFormatFix",
            "XXX.datafix.fixes.InvalidLockComponentFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRemoveBlockEntityTagFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix$ItemStackData",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTagRemainderFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.JukeboxTicksSinceSongStartedFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelLegacyWorldGenSettingsFix",
            "XXX.datafix.fixes.LockComponentPredicateFix",
            "XXX.datafix.fixes.MapBannerBlockPosFormatFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobEffectIdFix",
            "XXX.datafix.fixes.NamedEntityConvertUncheckedFix",
            "XXX.datafix.fixes.NamedEntityWriteReadFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsMenuBlurrinessFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.ParticleUnflatteningFix",
            "XXX.datafix.fixes.PlayerHeadBlockProfileFix",
            "XXX.datafix.fixes.PoiTypeRemoveFix",
            "XXX.datafix.fixes.PrimedTntBlockStateFixer",
            "XXX.datafix.fixes.RaidRenamesDataFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.References$1",
            "XXX.datafix.fixes.RemoveEmptyItemInBrushableBlockFix",
            "XXX.datafix.fixes.RenameEnchantmentsFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SaddleEquipmentSlotFix",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.ScoreboardDisplaySlotFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix",
            "XXX.datafix.fixes.TextComponentHoverAndClickEventFix",
            "XXX.datafix.fixes.TextComponentStringifiedFlagsFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix$ItemIdFinder",
            "XXX.datafix.fixes.TooltipDisplayComponentFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix",
            "XXX.datafix.fixes.UnflattenTextComponentFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WeaponSmithChestLootTableFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1458",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2511_1",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V3076",
            "XXX.datafix.schemas.V3081",
            "XXX.datafix.schemas.V3083",
            "XXX.datafix.schemas.V3203",
            "XXX.datafix.schemas.V3325",
            "XXX.datafix.schemas.V3327",
            "XXX.datafix.schemas.V3438",
            "XXX.datafix.schemas.V3448",
            "XXX.datafix.schemas.V3683",
            "XXX.datafix.schemas.V3689",
            "XXX.datafix.schemas.V3807",
            "XXX.datafix.schemas.V3808_1",
            "XXX.datafix.schemas.V3813",
            "XXX.datafix.schemas.V3818",
            "XXX.datafix.schemas.V3818_4",
            "XXX.datafix.schemas.V3825",
            "XXX.datafix.schemas.V4059",
            "XXX.datafix.schemas.V4070",
            "XXX.datafix.schemas.V4290",
            "XXX.datafix.schemas.V4300",
            "XXX.datafix.schemas.V4302",
            "XXX.datafix.schemas.V4307",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionStartedAt",
            "XXX.util.debugchart.RemoteDebugSampleType",
            "XXX.util.debugchart.SampleLogger",
            "XXX.util.debugchart.TpsDebugDimensions",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.parsing.packrat.Atom",
            "XXX.parsing.packrat.Dictionary",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly",
            "XXX.parsing.packrat.ParseState",
            "XXX.parsing.packrat.ParseState$CacheKey",
            "XXX.parsing.packrat.Rule$RuleAction",
            "XXX.parsing.packrat.Rule$WrappedTerm",
            "XXX.parsing.packrat.SuggestionSupplier",
            "XXX.parsing.packrat.Term$1",
            "XXX.parsing.packrat.Term$Alternative",
            "XXX.parsing.packrat.Term$Maybe",
            "XXX.parsing.packrat.Term$Sequence",
            "XXX.packrat.commands.ResourceLocationParseRule",
            "XXX.packrat.commands.ResourceSuggestion",
            "XXX.packrat.commands.StringReaderTerms",
            "XXX.packrat.commands.StringReaderTerms$TerminalWord",
            "XXX.packrat.commands.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.Profiler",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.profiling.TracyZoneFiller$PlotAndValue",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.ChunkRegionIoEvent$Fields",
            "XXX.jfr.event.ChunkRegionWriteEvent",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.StructureGenerationEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.IoSummary",
            "XXX.jfr.stats.PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.WeightedList",
            "XXX.util.random.WeightedList$Compact",
            "XXX.util.random.WeightedList$Selector",
            "XXX.util.random.package-info",
            "XXX.util.thread.AbstractConsecutiveExecutor$Status",
            "XXX.util.thread.ConsecutiveExecutor",
            "XXX.util.thread.ParallelMapTransform",
            "XXX.util.thread.ParallelMapTransform$Container",
            "XXX.util.thread.ParallelMapTransform$SplitterBase",
            "XXX.world.entity.Entity$Movement",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.EquipmentSlotGroup",
            "XXX.world.entity.EquipmentTable",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.InsideBlockEffectApplier$1",
            "XXX.world.entity.InsideBlockEffectType",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.InterpolationHandler$InterpolationData",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.Leashable$LeashData",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.Mob$2",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OminousItemSpawner",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.Pose",
            "XXX.world.entity.Relative",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacementTypes",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal$TamableAnimalPanicGoal",
            "XXX.world.entity.TraceableEntity",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartAttacking$StartAttackingCondition",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$TargetErasedCallback",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.MobSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.TargetingConditions$Selector",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractCow",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Bee$ValidateHiveGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.CatVariant",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.ChickenVariant$ModelType",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.CowVariant",
            "XXX.entity.animal.CowVariants",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Variant",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PigVariant$ModelType",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Salmon",
            "XXX.animal.sheep.SheepColorSpawnRules",
            "XXX.animal.sheep.SheepColorSpawnRules$SheepColorSpawnConfiguration",
            "XXX.animal.sniffer.Sniffer",
            "XXX.animal.sniffer.SnifferAi",
            "XXX.animal.sniffer.SnifferAi$2",
            "XXX.animal.sniffer.SnifferAi$Digging",
            "XXX.animal.sniffer.SnifferAi$FinishedDigging",
            "XXX.animal.sniffer.SnifferAi$Searching",
            "XXX.animal.sniffer.package-info",
            "XXX.boss.enderdragon.DragonFlightHistory",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.GlowItemFrame",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.PaintingVariant",
            "XXX.entity.decoration.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.PrimedTnt$1",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerLookControl",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Strider",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.breeze.Breeze$1",
            "XXX.monster.breeze.BreezeAi$SlideToTargetSink",
            "XXX.monster.breeze.LongJump",
            "XXX.monster.breeze.ShootWhenStuck",
            "XXX.monster.breeze.package-info",
            "XXX.monster.creaking.Creaking$CreakingBodyRotationControl",
            "XXX.monster.creaking.Creaking$CreakingLookControl",
            "XXX.monster.creaking.Creaking$CreakingPathNavigation",
            "XXX.monster.creaking.CreakingAi",
            "XXX.monster.creaking.package-info",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.monster.warden.AngerManagement",
            "XXX.monster.warden.AngerManagement$Sorter",
            "XXX.monster.warden.Warden$1",
            "XXX.monster.warden.Warden$2",
            "XXX.monster.warden.WardenAi",
            "XXX.monster.warden.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$FailureItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Input",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$IngredientInfo",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.AbstractThrownPotion",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.Projectile$ProjectileFactory",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownLingeringPotion",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.projectile.windcharge.BreezeWindCharge",
            "XXX.projectile.windcharge.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.variant.BiomeCheck",
            "XXX.entity.variant.MoonBrightnessCheck",
            "XXX.entity.variant.PriorityProvider$Selector",
            "XXX.entity.variant.PriorityProvider$UnpackedEntry",
            "XXX.entity.variant.SpawnConditions",
            "XXX.entity.variant.SpawnPrioritySelectors",
            "XXX.entity.variant.VariantUtils",
            "XXX.entity.vehicle.AbstractBoat",
            "XXX.entity.vehicle.AbstractChestBoat",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.ChestBoat",
            "XXX.entity.vehicle.ContainerEntity",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartBehavior",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.entity.vehicle.NewMinecartBehavior$1",
            "XXX.entity.vehicle.NewMinecartBehavior$StepPartialTicks",
            "XXX.entity.vehicle.OldMinecartBehavior",
            "XXX.entity.vehicle.Raft",
            "XXX.entity.vehicle.package-info",
            "XXX.world.flag.FeatureFlag",
            "XXX.world.flag.FeatureFlagRegistry$Builder",
            "XXX.world.flag.FeatureFlagUniverse",
            "XXX.world.flag.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AbstractCraftingMenu$1",
            "XXX.world.inventory.AbstractFurnaceMenu$1",
            "XXX.world.inventory.ArmorSlot",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CrafterMenu",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.NonInteractiveResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SlotRange",
            "XXX.world.inventory.SlotRanges",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModePredicate",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BoneMealItem$1",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.BundleItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.CrossbowItem$ChargingSounds",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.EitherHolder",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.Item$TooltipContext$1",
            "XXX.world.item.Item$TooltipContext$3",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack$1",
            "XXX.world.item.ItemStack$3",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUseAnimation",
            "XXX.world.item.Items",
            "XXX.world.item.JukeboxSong",
            "XXX.world.item.JukeboxSongPlayer$OnSongChanged",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileItem",
            "XXX.world.item.ProjectileItem$DispenseConfig$Builder",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Builder",
            "XXX.item.alchemy.PotionContents",
            "XXX.item.alchemy.package-info",
            "XXX.item.component.BlockItemStateProperties",
            "XXX.item.component.BlocksAttacks$DamageReduction",
            "XXX.item.component.BookContent",
            "XXX.item.component.BundleContents$Mutable",
            "XXX.item.component.Consumable",
            "XXX.item.component.Consumable$OverrideConsumeSound",
            "XXX.item.component.Consumables",
            "XXX.item.component.CustomModelData",
            "XXX.item.component.DeathProtection",
            "XXX.item.component.DyedItemColor",
            "XXX.item.component.FireworkExplosion$Shape",
            "XXX.item.component.InstrumentComponent",
            "XXX.item.component.ItemAttributeModifiers$1",
            "XXX.item.component.ItemAttributeModifiers$Entry",
            "XXX.item.component.ItemContainerContents$Slot",
            "XXX.item.component.LodestoneTracker",
            "XXX.item.component.MapDecorations$Entry",
            "XXX.item.component.MapPostProcessing",
            "XXX.item.component.ProvidesTrimMaterial",
            "XXX.item.component.SeededContainerLoot",
            "XXX.item.component.SuspiciousStewEffects$Entry",
            "XXX.item.component.Tool$Rule",
            "XXX.item.component.TooltipProvider",
            "XXX.item.component.UseRemainder",
            "XXX.item.component.Weapon",
            "XXX.item.component.WrittenBookContent",
            "XXX.item.consume_effects.ApplyStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect",
            "XXX.item.consume_effects.PlaySoundConsumeEffect",
            "XXX.item.consume_effects.TeleportRandomlyConsumeEffect",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.AbstractCookingRecipe$Factory",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingInput",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.CustomRecipe$Serializer$Factory",
            "XXX.item.crafting.ExtendedRecipeBookCategory",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeBookCategories",
            "XXX.item.crafting.RecipeCache",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeManager$IngredientExtractor",
            "XXX.item.crafting.RecipeMap",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.SelectableRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputSet",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapedRecipePattern$Data",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.TransmuteRecipe$Serializer",
            "XXX.crafting.display.DisplayContentsFactory",
            "XXX.crafting.display.DisplayContentsFactory$ForStacks",
            "XXX.crafting.display.RecipeDisplay",
            "XXX.crafting.display.RecipeDisplayEntry",
            "XXX.crafting.display.RecipeDisplays",
            "XXX.crafting.display.ShapelessCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay$AnyFuel",
            "XXX.crafting.display.SlotDisplay$Empty",
            "XXX.crafting.display.SlotDisplay$ItemStackContentsFactory",
            "XXX.crafting.display.SlotDisplay$SmithingTrimDemoSlotDisplay",
            "XXX.crafting.display.SlotDisplay$Type",
            "XXX.crafting.display.SlotDisplayContext",
            "XXX.crafting.display.SmithingRecipeDisplay",
            "XXX.crafting.display.package-info",
            "XXX.item.enchantment.ConditionalEffect",
            "XXX.item.enchantment.EnchantedItemInUse",
            "XXX.item.enchantment.Enchantment$1",
            "XXX.item.enchantment.Enchantment$Cost",
            "XXX.item.enchantment.EnchantmentEffectComponents",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.ItemEnchantments$Mutable",
            "XXX.item.enchantment.LevelBasedValue$Clamped",
            "XXX.item.enchantment.LevelBasedValue$Fraction",
            "XXX.item.enchantment.LevelBasedValue$Linear",
            "XXX.item.enchantment.Repairable",
            "XXX.enchantment.effects.AddValue",
            "XXX.enchantment.effects.AllOf$EntityEffects",
            "XXX.enchantment.effects.AllOf$ValueEffects",
            "XXX.enchantment.effects.ChangeItemDamage",
            "XXX.enchantment.effects.DamageImmunity",
            "XXX.enchantment.effects.EnchantmentEntityEffect",
            "XXX.enchantment.effects.EnchantmentValueEffect",
            "XXX.enchantment.effects.Ignite",
            "XXX.enchantment.effects.PlaySoundEffect",
            "XXX.enchantment.effects.ReplaceBlock",
            "XXX.enchantment.effects.RunFunction",
            "XXX.enchantment.effects.SetValue",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSource",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType$CoordinateSource",
            "XXX.enchantment.effects.SummonEntityEffect",
            "XXX.item.enchantment.package-info",
            "XXX.enchantment.providers.EnchantmentProviderTypes",
            "XXX.enchantment.providers.EnchantmentsByCostWithDifficulty",
            "XXX.enchantment.providers.TradeRebalanceEnchantmentProviders",
            "XXX.enchantment.providers.package-info",
            "XXX.item.equipment.ArmorMaterial",
            "XXX.item.equipment.ArmorType",
            "XXX.item.equipment.EquipmentAssets",
            "XXX.item.equipment.Equippable$Builder",
            "XXX.equipment.trim.ArmorTrim",
            "XXX.equipment.trim.MaterialAssetGroup$AssetInfo",
            "XXX.equipment.trim.TrimMaterials",
            "XXX.equipment.trim.TrimPatterns",
            "XXX.world.item.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.world.level.BlockGetter$BlockStepVisitor",
            "XXX.pools.alias.DirectPoolAlias",
            "XXX.pools.alias.RandomGroupPoolAlias",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.level.validation.ContentValidationException",
            "XXX.level.validation.DirectoryValidator$1",
            "XXX.level.validation.PathAllowList",
            "XXX.level.validation.PathAllowList$EntryType",
            "XXX.minecraft.world.package-info",
            "XXX.world.phys.AABB$Builder"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.gametest.framework.GameTestTicker \u001b[2;32m+1P\u001b[0m",
          "XXX.protocol.game.ClientboundLevelChunkPacketData \u001b[2;32m+6M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.server.bossevents.CustomBossEvents \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.minecraft.world.BossEvent$BossBarOverlay \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.minecraft.world.LockCode \u001b[2;31m-1M\u001b[0m",
          "XXX.world.entity.EntityReference \u001b[2;32m+1M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.entity.animal.Wolf \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.allay.Allay \u001b[2;32m+1M\u001b[0m",
          "XXX.animal.axolotl.Axolotl$Variant \u001b[2;32m+1P\u001b[0m",
          "XXX.animal.horse.Llama$Variant \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BaseFireBlock \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BigDripleafBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.BubbleColumnBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.ButtonBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CropBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.DetectorRailBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndGatewayBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EyeblossomBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FrogspawnBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.HopperBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LayeredCauldronBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.NetherPortalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.PowderSnowBlock \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.SweetBerryBushBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WebBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.JigsawBlockEntity \u001b[2;32m+1M\u001b[0m",
          "XXX.block.state.BlockBehaviour \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.state.BlockBehaviour$BlockStateBase \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.state.properties.TestBlockMode \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.level.chunk.LevelChunk \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.chunk.storage.EntityStorage \u001b[2;31m-2M\u001b[0m",
          "XXX.level.levelgen.Heightmap$Types \u001b[2;32m+3M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+3P\u001b[0m",
          "XXX.structure.pools.ListPoolElement \u001b[2;32m+1M\u001b[0m",
          "XXX.structure.pools.StructureTemplatePool \u001b[2;32m+1M\u001b[0m",
          "XXX.structure.structures.JigsawStructure \u001b[2;32m+2M\u001b[0m",
          "XXX.structure.structures.OceanRuinStructure$Type \u001b[2;32m+1P\u001b[0m",
          "XXX.level.material.FluidState \u001b[2;32m+1M\u001b[0m",
          "XXX.phys.shapes.EntityCollisionContext \u001b[2;32m+5M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.world.ticks.LevelChunkTicks \u001b[2;31m-2M\u001b[0m",
          "XXX.world.ticks.TickPriority \u001b[2;32m+1P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData",
        "differences": {
          "added": [
            "CompoundTag getHeightmaps()",
            "void lambda$getBlockEntitiesTagsConsumer$0(int,int,ClientboundLevelChunkPacketData$BlockEntityTagOutput)"
          ],
          "removed": [
            "Map getHeightmaps()",
            "void lambda$getBlockEntitiesTagsConsumer$3(int,int,ClientboundLevelChunkPacketData$BlockEntityTagOutput)",
            "long[] lambda$new$2(Map$Entry)",
            "boolean lambda$new$1(Map$Entry)",
            "Map lambda$static$0(int)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.bossevents.CustomBossEvents",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$load$1(ResourceLocation,CustomBossEvent$Packed)",
            "void lambda$load$0(String)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.BossEvent$BossBarOverlay",
        "differences": {
          "added": [
            "BossEvent$BossBarOverlay byName(String)"
          ],
          "removed": [
            "String getSerializedName()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.LockCode",
        "differences": {
          "added": [
            "void lambda$addToTag$0(CompoundTag,Tag)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.EntityReference",
        "differences": {
          "added": [],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.allay.Allay",
        "differences": {
          "added": [],
          "removed": [
            "void setDuplicationCooldown(long)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BaseFireBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)",
            "void fireIgnite(Entity)",
            "void lambda$entityInside$0(Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BigDripleafBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BubbleColumnBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.ButtonBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CropBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.DetectorRailBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndGatewayBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EyeblossomBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FrogspawnBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HopperBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LayeredCauldronBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.NetherPortalBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.PowderSnowBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)",
            "void lambda$entityInside$0(Level,BlockPos,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.SweetBerryBushBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WebBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.JigsawBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "JigsawBlockEntity$JointType lambda$loadAdditional$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "differences": {
          "added": [
            "void entityInside(Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.LevelChunk",
        "differences": {
          "added": [
            "void replaceWithPacketData(FriendlyByteBuf,CompoundTag,Consumer)"
          ],
          "removed": [
            "void replaceWithPacketData(FriendlyByteBuf,Map,Consumer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.storage.EntityStorage",
        "differences": {
          "added": [
            "ChunkPos readChunkPos(CompoundTag)",
            "void writeChunkPos(CompoundTag,ChunkPos)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.Heightmap$Types",
        "differences": {
          "added": [
            "void <init>(String,int,String,Heightmap$Usage,Predicate)"
          ],
          "removed": [
            "void <init>(String,int,int,String,Heightmap$Usage,Predicate)",
            "int lambda$static$3(Heightmap$Types)",
            "int lambda$static$2(Heightmap$Types)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement",
        "differences": {
          "added": [],
          "removed": [
            "List getElements()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool",
        "differences": {
          "added": [],
          "removed": [
            "List getTemplates()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.structures.JigsawStructure",
        "differences": {
          "added": [],
          "removed": [
            "Holder getStartPool()",
            "List getPoolAliases()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.material.FluidState",
        "differences": {
          "added": [],
          "removed": [
            "void entityInside(Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.shapes.EntityCollisionContext",
        "differences": {
          "added": [
            "void <init>(boolean,double,ItemStack,Predicate,Entity)",
            "void <init>(Entity,boolean)",
            "boolean lambda$new$2(FluidState)"
          ],
          "removed": [
            "void <init>(boolean,boolean,double,ItemStack,Predicate,Entity)",
            "void <init>(Entity,boolean,boolean)",
            "boolean isPlacement()",
            "boolean lambda$new$3(FluidState)",
            "boolean lambda$new$2(LivingEntity,FluidState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.ticks.LevelChunkTicks",
        "differences": {
          "added": [
            "ListTag save(long,Function)",
            "LevelChunkTicks load(ListTag,Function,ChunkPos)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "title",
      "value": {
        "title": "Client",
        "id": "client-mappings",
        "size": 2
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "Classes",
        "differences": {
          "added": [
            "XXX.mojang.blaze3d.ProjectionType",
            "XXX.mojang.blaze3d.TracyBootstrap",
            "XXX.mojang.blaze3d.TracyFrameCapture",
            "XXX.blaze3d.audio.Library",
            "XXX.blaze3d.audio.Library$ChannelPool",
            "XXX.blaze3d.audio.Library$Pool",
            "XXX.blaze3d.audio.ListenerTransform",
            "XXX.blaze3d.audio.SoundBuffer",
            "XXX.blaze3d.buffers.BufferType",
            "XXX.blaze3d.buffers.GpuBuffer",
            "XXX.blaze3d.buffers.GpuFence",
            "XXX.blaze3d.font.GlyphInfo",
            "XXX.blaze3d.font.GlyphProvider",
            "XXX.blaze3d.font.SheetGlyphInfo",
            "XXX.blaze3d.font.SpaceProvider$Definition",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$Glyph",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$GlyphEntry",
            "XXX.blaze3d.framegraph.FrameGraphBuilder",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Handle",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Inspector$1",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Pass",
            "XXX.blaze3d.framegraph.FramePass",
            "XXX.mojang.blaze3d.package-info",
            "XXX.blaze3d.pipeline.MainTarget$AttachmentState",
            "XXX.blaze3d.pipeline.RenderCall",
            "XXX.blaze3d.platform.GlStateManager$StencilState",
            "XXX.blaze3d.platform.NativeImage$InternalGlFormat",
            "XXX.blaze3d.platform.ScreenManager",
            "XXX.blaze3d.platform.VideoMode",
            "XXX.blaze3d.platform.Window$WindowInitFailed",
            "XXX.blaze3d.platform.package-info",
            "XXX.blaze3d.preprocessor.GlslPreprocessor$Context",
            "XXX.blaze3d.resource.CrossFrameResourcePool",
            "XXX.blaze3d.resource.GraphicsResourceAllocator",
            "XXX.blaze3d.resource.RenderTargetDescriptor",
            "XXX.blaze3d.resource.ResourceHandle",
            "XXX.blaze3d.shaders.AbstractUniform",
            "XXX.blaze3d.shaders.CompiledShader$Type",
            "XXX.blaze3d.shaders.Uniform",
            "XXX.mojang.math.Transformation",
            "XXX.mojang.realmsclient.RealmsAvailability",
            "XXX.mojang.realmsclient.RealmsAvailability$Type",
            "XXX.mojang.realmsclient.RealmsMainScreen$1",
            "XXX.mojang.realmsclient.RealmsMainScreen$AvailableSnapshotEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$CrossButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$Entry",
            "XXX.mojang.realmsclient.RealmsMainScreen$NotificationButton",
            "XXX.mojang.realmsclient.RealmsMainScreen$ParentEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmsCall",
            "XXX.mojang.realmsclient.Unit",
            "XXX.realmsclient.client.FileDownload$DownloadCountingOutputStream",
            "XXX.realmsclient.client.FileDownload$ResourcePackProgressListener",
            "XXX.realmsclient.client.FileUpload$CustomInputStreamEntity",
            "XXX.realmsclient.client.Ping$Region",
            "XXX.realmsclient.client.RealmsClient$CompatibleVersionResponse",
            "XXX.realmsclient.client.RealmsClientConfig",
            "XXX.realmsclient.client.RealmsError$AuthenticationError",
            "XXX.realmsclient.client.RealmsError$ErrorWithJsonPayload",
            "XXX.realmsclient.client.Request",
            "XXX.realmsclient.client.Request$Get",
            "XXX.realmsclient.client.Request$Put",
            "XXX.realmsclient.client.package-info",
            "XXX.client.worldupload.RealmsUploadCanceledException",
            "XXX.client.worldupload.RealmsUploadFailedException",
            "XXX.client.worldupload.RealmsUploadWorldNotClosedException",
            "XXX.client.worldupload.RealmsWorldUpload",
            "XXX.client.worldupload.RealmsWorldUploadStatusTracker$1",
            "XXX.realmsclient.dto.Backup",
            "XXX.realmsclient.dto.GuardedSerializer",
            "XXX.realmsclient.dto.PendingInvite",
            "XXX.realmsclient.dto.PingResult",
            "XXX.realmsclient.dto.RealmsDescriptionDto",
            "XXX.realmsclient.dto.RealmsNotification",
            "XXX.realmsclient.dto.RealmsNotification$UrlButton",
            "XXX.realmsclient.dto.RealmsServer",
            "XXX.realmsclient.dto.RealmsServer$McoServerComparator",
            "XXX.realmsclient.dto.RealmsServer$WorldType",
            "XXX.realmsclient.dto.RealmsServerList",
            "XXX.realmsclient.dto.RealmsSettings",
            "XXX.realmsclient.dto.RealmsWorldOptions",
            "XXX.realmsclient.dto.ReflectionBasedSerialization",
            "XXX.realmsclient.dto.ServerActivity",
            "XXX.realmsclient.dto.Subscription",
            "XXX.realmsclient.dto.UploadInfo",
            "XXX.realmsclient.dto.WorldDownload",
            "XXX.realmsclient.dto.WorldTemplate$WorldTemplateType",
            "XXX.realmsclient.dto.package-info",
            "XXX.realmsclient.exception.RealmsHttpException",
            "XXX.realmsclient.exception.RetryCallException",
            "XXX.realmsclient.gui.RealmsDataFetcher",
            "XXX.realmsclient.gui.RealmsNewsManager",
            "XXX.realmsclient.gui.RealmsWorldSlotButton",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$State",
            "XXX.realmsclient.gui.package-info",
            "XXX.gui.screens.RealmsBackupInfoScreen",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoListEntry",
            "XXX.gui.screens.RealmsBackupScreen$1",
            "XXX.gui.screens.RealmsBackupScreen$Entry",
            "XXX.gui.screens.RealmsClientOutdatedScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen$1",
            "XXX.gui.screens.RealmsCreateRealmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen$DownloadStatus",
            "XXX.gui.screens.RealmsGenericErrorScreen$ErrorMessage",
            "XXX.gui.screens.RealmsLongRunningMcoTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$2",
            "XXX.gui.screens.RealmsParentalConsentScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$RejectRowButton",
            "XXX.gui.screens.RealmsPlayerScreen",
            "XXX.gui.screens.RealmsPlayerScreen$InvitedObjectSelectionList",
            "XXX.gui.screens.RealmsResetWorldScreen",
            "XXX.gui.screens.RealmsResetWorldScreen$FrameButton",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$Entry",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$Entry",
            "XXX.gui.screens.RealmsSettingsScreen",
            "XXX.gui.screens.RealmsSlotOptionsScreen$SettingsSlider",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen$1",
            "XXX.gui.screens.RealmsUploadScreen",
            "XXX.gui.screens.UploadResult$Builder",
            "XXX.gui.task.DataFetcher",
            "XXX.gui.task.DataFetcher$SubscribedTask",
            "XXX.gui.task.DataFetcher$SuccessfulComputationResult",
            "XXX.gui.task.RepeatedDelayStrategy",
            "XXX.gui.task.RepeatedDelayStrategy$2",
            "XXX.mojang.realmsclient.package-info",
            "XXX.realmsclient.util.LevelType",
            "XXX.realmsclient.util.RealmsPersistence$RealmsPersistenceData",
            "XXX.realmsclient.util.RealmsTextureManager$RealmsTexture",
            "XXX.realmsclient.util.TextRenderingUtils",
            "XXX.realmsclient.util.TextRenderingUtils$LineSegment",
            "XXX.realmsclient.util.package-info",
            "XXX.util.task.ConnectTask",
            "XXX.util.task.GetServerDetailsTask",
            "XXX.util.task.OpenServerTask",
            "XXX.util.task.ResettingTemplateWorldTask",
            "XXX.util.task.RestoreTask",
            "XXX.util.task.SwitchSlotTask",
            "net.minecraft.BlockUtil",
            "net.minecraft.BlockUtil$IntBounds",
            "net.minecraft.ChatFormatting",
            "net.minecraft.CrashReportCategory",
            "net.minecraft.CrashReportDetail",
            "net.minecraft.DefaultUncaughtExceptionHandlerWithName",
            "net.minecraft.FieldsAreNonnullByDefault",
            "net.minecraft.MethodsReturnNonnullByDefault",
            "net.minecraft.ReportType",
            "net.minecraft.ResourceLocationException",
            "net.minecraft.SuppressForbidden",
            "net.minecraft.TracingExecutor",
            "net.minecraft.Util$1",
            "net.minecraft.Util$11",
            "net.minecraft.Util$5",
            "net.minecraft.Util$7",
            "net.minecraft.Util$9",
            "net.minecraft.Util$OS$1",
            "net.minecraft.WorldVersion",
            "XXX.minecraft.advancements.Advancement$Builder",
            "XXX.minecraft.advancements.AdvancementNode",
            "XXX.minecraft.advancements.AdvancementRequirements",
            "XXX.minecraft.advancements.AdvancementRewards",
            "XXX.minecraft.advancements.AdvancementTree",
            "XXX.minecraft.advancements.AdvancementType",
            "XXX.minecraft.advancements.Criterion",
            "XXX.minecraft.advancements.CriterionTrigger",
            "XXX.minecraft.advancements.CriterionTriggerInstance",
            "XXX.minecraft.advancements.TreeNodePosition",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger$TriggerInstance",
            "XXX.advancements.critereon.BlockPredicate$Builder",
            "XXX.advancements.critereon.BredAnimalsTrigger$TriggerInstance",
            "XXX.advancements.critereon.BrewedPotionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChangeDimensionTrigger$TriggerInstance",
            "XXX.advancements.critereon.ChanneledLightningTrigger$TriggerInstance",
            "XXX.advancements.critereon.CollectionContentsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionContentsPredicate$Zero",
            "XXX.advancements.critereon.CollectionCountsPredicate$Entry",
            "XXX.advancements.critereon.CollectionCountsPredicate$Single",
            "XXX.advancements.critereon.CollectionPredicate",
            "XXX.advancements.critereon.ConstructBeaconTrigger$TriggerInstance",
            "XXX.advancements.critereon.ConsumeItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.CriterionValidator",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger$TriggerInstance",
            "XXX.advancements.critereon.DamagePredicate$Builder",
            "XXX.advancements.critereon.DamageSourcePredicate$Builder",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger$TriggerInstance",
            "XXX.advancements.critereon.DistanceTrigger",
            "XXX.advancements.critereon.EffectsChangedTrigger",
            "XXX.advancements.critereon.EnchantedItemTrigger",
            "XXX.advancements.critereon.EnchantmentPredicate",
            "XXX.advancements.critereon.EnterBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityEquipmentPredicate$Builder",
            "XXX.advancements.critereon.EntityFlagsPredicate$Builder",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.EntityPredicate$Builder",
            "XXX.advancements.critereon.EntitySubPredicate",
            "XXX.advancements.critereon.EntityTypePredicate",
            "XXX.advancements.critereon.FallAfterExplosionTrigger$TriggerInstance",
            "XXX.advancements.critereon.FilledBucketTrigger$TriggerInstance",
            "XXX.advancements.critereon.FishingRodHookedTrigger",
            "XXX.advancements.critereon.FluidPredicate",
            "XXX.advancements.critereon.GameTypePredicate",
            "XXX.advancements.critereon.ImpossibleTrigger$TriggerInstance",
            "XXX.advancements.critereon.InventoryChangeTrigger",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance$Slots",
            "XXX.advancements.critereon.ItemDurabilityTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemPredicate$Builder",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledByArrowTrigger$TriggerInstance",
            "XXX.advancements.critereon.KilledTrigger$TriggerInstance",
            "XXX.advancements.critereon.LevitationTrigger$TriggerInstance",
            "XXX.advancements.critereon.LightPredicate$Builder",
            "XXX.advancements.critereon.LightningStrikeTrigger",
            "XXX.advancements.critereon.LocationPredicate",
            "XXX.advancements.critereon.LocationPredicate$PositionPredicate",
            "XXX.advancements.critereon.LootTableTrigger$TriggerInstance",
            "XXX.advancements.critereon.MinMaxBounds$1",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory",
            "XXX.advancements.critereon.MinMaxBounds$Ints",
            "XXX.advancements.critereon.MobEffectsPredicate$Builder",
            "XXX.advancements.critereon.MovementPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger",
            "XXX.advancements.critereon.PlayerInteractTrigger",
            "XXX.advancements.critereon.PlayerPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementDonePredicate",
            "XXX.advancements.critereon.PlayerPredicate$Builder",
            "XXX.advancements.critereon.PlayerTrigger",
            "XXX.advancements.critereon.RaiderPredicate",
            "XXX.advancements.critereon.RecipeCraftedTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeUnlockedTrigger$TriggerInstance",
            "XXX.advancements.critereon.ShotCrossbowTrigger",
            "XXX.advancements.critereon.SimpleCriterionTrigger",
            "XXX.advancements.critereon.SingleComponentItemPredicate",
            "XXX.advancements.critereon.SlideDownBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.SlotsPredicate",
            "XXX.advancements.critereon.StartRidingTrigger$TriggerInstance",
            "XXX.advancements.critereon.StatePropertiesPredicate$Builder",
            "XXX.advancements.critereon.StatePropertiesPredicate$PropertyMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$ValueMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.TameAnimalTrigger",
            "XXX.advancements.critereon.TargetBlockTrigger",
            "XXX.advancements.critereon.TradeTrigger",
            "XXX.advancements.critereon.UsedEnderEyeTrigger",
            "XXX.advancements.critereon.UsedTotemTrigger",
            "XXX.advancements.critereon.UsingItemTrigger",
            "XXX.advancements.critereon.WrappedMinMaxBounds",
            "XXX.minecraft.advancements.package-info",
            "XXX.minecraft.client.Camera",
            "XXX.minecraft.client.CameraType",
            "XXX.minecraft.client.ClientBrandRetriever",
            "XXX.minecraft.client.CloudStatus",
            "XXX.minecraft.client.ComponentCollector",
            "XXX.minecraft.client.DeltaTracker",
            "XXX.minecraft.client.DeltaTracker$Timer",
            "XXX.minecraft.client.GameNarrator$NarratorInitException",
            "XXX.minecraft.client.GuiMessage",
            "XXX.minecraft.client.GuiMessageTag",
            "XXX.minecraft.client.HotbarManager",
            "XXX.minecraft.client.InputType",
            "XXX.minecraft.client.KeyboardHandler",
            "XXX.minecraft.client.Minecraft",
            "XXX.minecraft.client.Minecraft$2",
            "XXX.minecraft.client.Minecraft$ChatStatus$1",
            "XXX.minecraft.client.Minecraft$ChatStatus$3",
            "XXX.minecraft.client.Minecraft$GameLoadCookie",
            "XXX.minecraft.client.NarratorStatus",
            "XXX.minecraft.client.OptionInstance$AltEnum",
            "XXX.minecraft.client.OptionInstance$ClampingLazyMaxIntRange",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter",
            "XXX.minecraft.client.OptionInstance$IntRange",
            "XXX.minecraft.client.OptionInstance$IntRangeBase$1",
            "XXX.minecraft.client.OptionInstance$OptionInstanceSliderButton",
            "XXX.minecraft.client.OptionInstance$SliderableValueSet",
            "XXX.minecraft.client.OptionInstance$UnitDouble",
            "XXX.minecraft.client.OptionInstance$ValueSet",
            "XXX.minecraft.client.Options$1",
            "XXX.minecraft.client.Options$3",
            "XXX.minecraft.client.Options$5",
            "XXX.minecraft.client.Options$OptionAccess",
            "XXX.minecraft.client.PeriodicNotificationManager$Notification",
            "XXX.minecraft.client.PrioritizeChunkUpdates",
            "XXX.minecraft.client.ResourceLoadStateTracker$RecoveryInfo",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadState",
            "XXX.minecraft.client.ScrollWheelHandler",
            "XXX.minecraft.client.StringSplitter$1",
            "XXX.minecraft.client.StringSplitter$LineBreakFinder",
            "XXX.minecraft.client.StringSplitter$LinePosConsumer",
            "XXX.minecraft.client.StringSplitter$WidthProvider",
            "XXX.minecraft.client.User",
            "XXX.client.animation.AnimationChannel",
            "XXX.client.animation.AnimationChannel$Interpolations",
            "XXX.client.animation.AnimationChannel$Targets",
            "XXX.client.animation.AnimationDefinition$Builder",
            "XXX.client.animation.KeyframeAnimations",
            "XXX.animation.definitions.BatAnimation",
            "XXX.animation.definitions.CamelAnimation",
            "XXX.animation.definitions.FrogAnimation",
            "XXX.animation.definitions.WardenAnimation",
            "XXX.client.animation.package-info",
            "XXX.color.block.BlockColors",
            "XXX.color.block.BlockTintCache$CacheData",
            "XXX.color.block.package-info",
            "XXX.color.item.CustomModelDataSource",
            "XXX.color.item.Firework",
            "XXX.color.item.ItemTintSource",
            "XXX.color.item.MapColor",
            "XXX.color.item.TeamColor",
            "XXX.client.data.AtlasProvider",
            "XXX.data.models.BlockModelGenerators",
            "XXX.data.models.BlockModelGenerators$BlockFamilyProvider",
            "XXX.data.models.BlockModelGenerators$BookSlotModelCacheKey",
            "XXX.data.models.BlockModelGenerators$WoodProvider",
            "XXX.data.models.ItemModelGenerators",
            "XXX.data.models.ItemModelOutput",
            "XXX.data.models.ModelProvider$BlockStateGeneratorCollector",
            "XXX.data.models.ModelProvider$SimpleModelCollector",
            "XXX.models.blockstates.Condition",
            "XXX.models.blockstates.Condition$Operation",
            "XXX.models.blockstates.MultiPartGenerator$Entry",
            "XXX.models.blockstates.PropertyDispatch$PentaFunction",
            "XXX.models.blockstates.PropertyDispatch$TriFunction",
            "XXX.models.blockstates.Variant",
            "XXX.models.blockstates.VariantProperties$Rotation",
            "XXX.models.blockstates.VariantProperty$Value",
            "XXX.client.renderer.CoreShaders",
            "XXX.client.renderer.RenderStateShard",
            "XXX.client.renderer.RenderStateShard$ColorLogicStateShard",
            "XXX.client.renderer.RenderStateShard$DepthTestStateShard",
            "XXX.client.renderer.RenderStateShard$TextureStateShard",
            "XXX.client.renderer.RenderStateShard$TransparencyStateShard",
            "XXX.client.renderer.RenderType",
            "XXX.client.renderer.RenderType$CompositeState",
            "XXX.client.renderer.RenderType$OutlineProperty",
            "XXX.client.renderer.ScreenEffectRenderer",
            "XXX.client.renderer.SectionBufferBuilderPool",
            "XXX.client.renderer.SectionOcclusionGraph$GraphEvents",
            "XXX.client.renderer.SectionOcclusionGraph$GraphStorage",
            "XXX.client.renderer.SectionOcclusionGraph$SectionToNodeMap",
            "XXX.client.renderer.ShaderDefines$Builder",
            "XXX.client.renderer.ShaderManager$1",
            "XXX.client.renderer.ShaderManager$CompilationException",
            "XXX.client.renderer.ShaderManager$ShaderCompilationKey",
            "XXX.client.renderer.ShaderProgram",
            "XXX.client.renderer.ShaderProgramConfig$Sampler",
            "XXX.client.renderer.ShapeRenderer",
            "XXX.client.renderer.Sheets",
            "XXX.client.renderer.SkyRenderer",
            "XXX.client.renderer.SpriteCoordinateExpander",
            "XXX.client.renderer.VirtualScreen",
            "XXX.client.renderer.WeatherEffectRenderer$ColumnInstance",
            "XXX.client.renderer.WorldBorderRenderer$1",
            "XXX.renderer.block.BlockRenderDispatcher",
            "XXX.renderer.block.LiquidBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$1",
            "XXX.renderer.block.ModelBlockRenderer$AmbientOcclusionFace",
            "XXX.renderer.block.ModelBlockRenderer$Cache",
            "XXX.renderer.block.ModelBlockRenderer$Cache$2",
            "XXX.block.model.BakedQuad",
            "XXX.block.model.BlockElement$1",
            "XXX.block.model.BlockElementRotation",
            "XXX.block.model.BlockFaceUV$Deserializer",
            "XXX.block.model.BlockModel$Deserializer",
            "XXX.block.model.BlockModelDefinition$Deserializer",
            "XXX.block.model.FaceBakery",
            "XXX.block.model.ItemModelGenerator",
            "XXX.block.model.ItemModelGenerator$SpanFacing",
            "XXX.block.model.ItemTransform$Deserializer",
            "XXX.block.model.ItemTransforms$1",
            "XXX.block.model.MultiVariant",
            "XXX.block.model.Variant",
            "XXX.block.model.VariantSelector",
            "XXX.model.multipart.MultiPart$InstantiatedSelector",
            "XXX.model.multipart.package-info",
            "XXX.renderer.block.package-info",
            "XXX.renderer.blockentity.BannerRenderer",
            "XXX.renderer.blockentity.BedRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderDispatcher",
            "XXX.renderer.blockentity.BlockEntityRendererProvider",
            "XXX.renderer.blockentity.BlockEntityRenderers",
            "XXX.renderer.blockentity.BrightnessCombiner",
            "XXX.renderer.blockentity.BrushableBlockRenderer$1",
            "XXX.renderer.blockentity.ChestRenderer",
            "XXX.renderer.blockentity.DecoratedPotRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$ModelKey",
            "XXX.renderer.blockentity.PistonHeadRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer$ShulkerBoxModel",
            "XXX.renderer.blockentity.SignRenderer$Models",
            "XXX.renderer.blockentity.SkullBlockRenderer$1",
            "XXX.renderer.blockentity.TestInstanceRenderer",
            "XXX.renderer.blockentity.TheEndPortalRenderer",
            "XXX.renderer.blockentity.VaultRenderer",
            "XXX.renderer.chunk.CompileTaskDynamicQueue",
            "XXX.renderer.chunk.RenderChunkRegion",
            "XXX.renderer.chunk.RenderRegionCache$ChunkInfo",
            "XXX.renderer.chunk.SectionCompiler$Results",
            "XXX.renderer.chunk.SectionRenderDispatcher$CompiledSection",
            "XXX.renderer.chunk.SectionRenderDispatcher$CompiledSection$2",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$CompileTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$ResortTransparencyTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$TranslucencyPointOfView",
            "XXX.renderer.chunk.VisGraph$1",
            "XXX.renderer.chunk.package-info",
            "XXX.renderer.culling.package-info",
            "XXX.renderer.debug.BeeDebugRenderer$HiveDebugInfo",
            "XXX.renderer.debug.BrainDebugRenderer$PoiInfo",
            "XXX.renderer.debug.ChunkBorderRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer",
            "XXX.renderer.debug.CollisionBoxRenderer",
            "XXX.renderer.debug.DebugRenderer$SimpleDebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedGameEvent",
            "XXX.renderer.debug.GameTestDebugRenderer",
            "XXX.renderer.debug.GoalSelectorDebugRenderer",
            "XXX.renderer.debug.HeightMapRenderer",
            "XXX.renderer.debug.LightDebugRenderer",
            "XXX.renderer.debug.LightSectionDebugRenderer$SectionData",
            "XXX.renderer.debug.OctreeDebugRenderer",
            "XXX.renderer.debug.RaidDebugRenderer",
            "XXX.renderer.debug.SolidFaceRenderer",
            "XXX.renderer.debug.SupportBlockRenderer",
            "XXX.renderer.debug.WaterDebugRenderer",
            "XXX.renderer.debug.package-info",
            "XXX.renderer.entity.AbstractHoglinRenderer",
            "XXX.renderer.entity.AbstractMinecartRenderer",
            "XXX.renderer.entity.AbstractZombieRenderer",
            "XXX.renderer.entity.AllayRenderer",
            "XXX.renderer.entity.ArmorStandRenderer",
            "XXX.renderer.entity.AxolotlRenderer",
            "XXX.renderer.entity.BeeRenderer",
            "XXX.renderer.entity.BoatRenderer",
            "XXX.renderer.entity.BreezeRenderer",
            "XXX.renderer.entity.CatRenderer",
            "XXX.renderer.entity.ChickenRenderer",
            "XXX.renderer.entity.CowRenderer",
            "XXX.renderer.entity.CreeperRenderer",
            "XXX.renderer.entity.DisplayRenderer$1",
            "XXX.renderer.entity.DisplayRenderer$ItemDisplayRenderer",
            "XXX.renderer.entity.DolphinRenderer",
            "XXX.renderer.entity.DonkeyRenderer$Type",
            "XXX.renderer.entity.DrownedRenderer",
            "XXX.renderer.entity.EndCrystalRenderer",
            "XXX.renderer.entity.EndermanRenderer",
            "XXX.renderer.entity.EntityRenderDispatcher",
            "XXX.renderer.entity.EntityRendererProvider",
            "XXX.renderer.entity.EntityRenderers",
            "XXX.renderer.entity.EvokerRenderer",
            "XXX.renderer.entity.ExperienceOrbRenderer",
            "XXX.renderer.entity.FireworkEntityRenderer",
            "XXX.renderer.entity.FoxRenderer",
            "XXX.renderer.entity.GhastRenderer",
            "XXX.renderer.entity.GlowSquidRenderer",
            "XXX.renderer.entity.GuardianRenderer",
            "XXX.renderer.entity.HorseRenderer",
            "XXX.renderer.entity.HuskRenderer",
            "XXX.renderer.entity.IllusionerRenderer",
            "XXX.renderer.entity.IronGolemRenderer",
            "XXX.renderer.entity.ItemFrameRenderer",
            "XXX.renderer.entity.LeashKnotRenderer",
            "XXX.renderer.entity.LivingEntityRenderer",
            "XXX.renderer.entity.LlamaRenderer",
            "XXX.renderer.entity.LlamaSpitRenderer",
            "XXX.renderer.entity.MinecartRenderer",
            "XXX.renderer.entity.MushroomCowRenderer",
            "XXX.renderer.entity.OcelotRenderer",
            "XXX.renderer.entity.PaintingRenderer",
            "XXX.renderer.entity.PandaRenderer",
            "XXX.renderer.entity.ParrotRenderer$1",
            "XXX.renderer.entity.PigRenderer",
            "XXX.renderer.entity.PillagerRenderer",
            "XXX.renderer.entity.PufferfishRenderer",
            "XXX.renderer.entity.RabbitRenderer$1",
            "XXX.renderer.entity.RavagerRenderer",
            "XXX.renderer.entity.SalmonRenderer",
            "XXX.renderer.entity.ShulkerBulletRenderer",
            "XXX.renderer.entity.SilverfishRenderer",
            "XXX.renderer.entity.SlimeRenderer",
            "XXX.renderer.entity.SnowGolemRenderer",
            "XXX.renderer.entity.SpiderRenderer",
            "XXX.renderer.entity.StrayRenderer",
            "XXX.renderer.entity.TadpoleRenderer",
            "XXX.renderer.entity.ThrownTridentRenderer",
            "XXX.renderer.entity.TntMinecartRenderer",
            "XXX.renderer.entity.TropicalFishRenderer",
            "XXX.renderer.entity.TurtleRenderer",
            "XXX.renderer.entity.UndeadHorseRenderer$Type",
            "XXX.renderer.entity.VillagerRenderer",
            "XXX.renderer.entity.VindicatorRenderer$1",
            "XXX.renderer.entity.WardenRenderer",
            "XXX.renderer.entity.WitchRenderer",
            "XXX.renderer.entity.WitherSkeletonRenderer",
            "XXX.renderer.entity.WolfRenderer",
            "XXX.renderer.entity.ZombieRenderer",
            "XXX.renderer.entity.ZombifiedPiglinRenderer",
            "XXX.entity.layers.BeeStingerLayer",
            "XXX.entity.layers.BreezeWindLayer",
            "XXX.entity.layers.CarriedBlockLayer",
            "XXX.entity.layers.CreeperPowerLayer",
            "XXX.entity.layers.CustomHeadLayer",
            "XXX.entity.layers.Deadmau5EarsLayer",
            "XXX.entity.layers.DrownedOuterLayer",
            "XXX.entity.layers.EnergySwirlLayer",
            "XXX.entity.layers.EquipmentLayerRenderer$LayerTextureKey",
            "XXX.entity.layers.EyesLayer",
            "XXX.entity.layers.HorseMarkingLayer",
            "XXX.entity.layers.HumanoidArmorLayer$1",
            "XXX.entity.layers.IronGolemFlowerLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer$DrawSelector",
            "XXX.entity.layers.MushroomCowMushroomLayer",
            "XXX.entity.layers.ParrotOnShoulderLayer",
            "XXX.entity.layers.PlayerItemInHandLayer",
            "XXX.entity.layers.SheepWoolLayer",
            "XXX.entity.layers.SkeletonClothingLayer",
            "XXX.entity.layers.SnowGolemHeadLayer",
            "XXX.entity.layers.SpinAttackEffectLayer",
            "XXX.entity.layers.StuckInBodyLayer$PlacementStyle",
            "XXX.entity.layers.TropicalFishPatternLayer$1",
            "XXX.entity.layers.WingsLayer",
            "XXX.entity.layers.WitherArmorLayer",
            "XXX.entity.layers.WolfCollarLayer",
            "XXX.renderer.entity.package-info",
            "XXX.entity.player.package-info",
            "XXX.entity.state.ArmadilloRenderState",
            "XXX.entity.state.ArmorStandRenderState",
            "XXX.entity.state.AxolotlRenderState",
            "XXX.entity.state.BeeRenderState",
            "XXX.entity.state.BoatRenderState",
            "XXX.entity.state.BreezeRenderState",
            "XXX.entity.state.CatRenderState",
            "XXX.entity.state.CowRenderState",
            "XXX.entity.state.CreeperRenderState",
            "XXX.entity.state.DolphinRenderState",
            "XXX.entity.state.EndCrystalRenderState",
            "XXX.entity.state.EndermanRenderState",
            "XXX.entity.state.EntityRenderState$LeashState",
            "XXX.entity.state.EvokerFangsRenderState",
            "XXX.entity.state.ExperienceOrbRenderState",
            "XXX.entity.state.FelineRenderState",
            "XXX.entity.state.FishingHookRenderState",
            "XXX.entity.state.FrogRenderState",
            "XXX.entity.state.GoatRenderState",
            "XXX.entity.state.HoglinRenderState",
            "XXX.entity.state.HorseRenderState",
            "XXX.entity.state.IllagerRenderState",
            "XXX.entity.state.IronGolemRenderState",
            "XXX.entity.state.ItemDisplayEntityRenderState",
            "XXX.entity.state.ItemFrameRenderState",
            "XXX.entity.state.LivingEntityRenderState",
            "XXX.entity.state.LlamaSpitRenderState",
            "XXX.entity.state.MinecartTntRenderState",
            "XXX.entity.state.PaintingRenderState",
            "XXX.entity.state.ParrotRenderState",
            "XXX.entity.state.PigRenderState",
            "XXX.entity.state.PlayerRenderState",
            "XXX.entity.state.PufferfishRenderState",
            "XXX.entity.state.RavagerRenderState",
            "XXX.entity.state.SheepRenderState",
            "XXX.entity.state.ShulkerRenderState",
            "XXX.entity.state.SlimeRenderState",
            "XXX.entity.state.SnowGolemRenderState",
            "XXX.entity.state.StriderRenderState",
            "XXX.entity.state.ThrownItemRenderState",
            "XXX.entity.state.TippableArrowRenderState",
            "XXX.entity.state.TropicalFishRenderState",
            "XXX.entity.state.VexRenderState",
            "XXX.entity.state.VillagerRenderState",
            "XXX.entity.state.WitchRenderState",
            "XXX.entity.state.WitherSkullRenderState",
            "XXX.entity.state.ZombieRenderState",
            "XXX.entity.state.ZombifiedPiglinRenderState",
            "XXX.renderer.item.BlockModelWrapper",
            "XXX.renderer.item.BundleSelectedItemSpecialRenderer",
            "XXX.renderer.item.ClientItem",
            "XXX.renderer.item.CompositeModel",
            "XXX.renderer.item.ConditionalItemModel",
            "XXX.renderer.item.EmptyModel",
            "XXX.renderer.item.ItemModel",
            "XXX.renderer.item.ItemModel$Unbaked",
            "XXX.renderer.item.ItemModels",
            "XXX.renderer.item.ItemStackRenderState$FoilType",
            "XXX.renderer.item.MissingItemModel",
            "XXX.resources.model.BakedModel",
            "XXX.resources.model.BlockStateModelLoader",
            "XXX.resources.model.BlockStateModelLoader$LoadedModel",
            "XXX.resources.model.EquipmentAssetManager",
            "XXX.resources.model.EquipmentClientInfo$Builder",
            "XXX.resources.model.EquipmentClientInfo$Layer",
            "XXX.resources.model.Material",
            "XXX.resources.model.ModelBaker",
            "XXX.resources.model.ModelBakery$BakedCacheKey",
            "XXX.resources.model.ModelBakery$TextureGetter$1",
            "XXX.resources.model.ModelGroupCollector",
            "XXX.resources.model.ModelManager",
            "XXX.resources.model.ModelManager$ReloadState",
            "XXX.resources.model.ModelState",
            "XXX.resources.model.MultiPartBakedModel$Selector",
            "XXX.resources.model.ResolvableModel$Resolver",
            "XXX.resources.model.SimpleBakedModel$Builder",
            "XXX.resources.model.UnbakedModel",
            "XXX.resources.model.WeightedBakedModel",
            "XXX.client.resources.package-info",
            "XXX.resources.server.DownloadedPackSource$1",
            "XXX.resources.server.DownloadedPackSource$3",
            "XXX.resources.server.DownloadedPackSource$5",
            "XXX.resources.server.DownloadedPackSource$7",
            "XXX.resources.server.PackDownloader",
            "XXX.resources.server.PackLoadFeedback$FinalResult",
            "XXX.resources.server.PackReloadConfig",
            "XXX.resources.server.PackReloadConfig$IdAndPath",
            "XXX.resources.server.ServerPackManager$1",
            "XXX.resources.server.ServerPackManager$PackDownloadStatus",
            "XXX.resources.server.ServerPackManager$RemovalReason",
            "XXX.resources.server.package-info",
            "XXX.resources.sounds.AbstractTickableSoundInstance",
            "XXX.resources.sounds.BeeAggressiveSoundInstance",
            "XXX.resources.sounds.BeeSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler$LoopSoundInstance",
            "XXX.resources.sounds.ElytraOnPlayerSoundInstance",
            "XXX.resources.sounds.GuardianAttackSoundInstance",
            "XXX.resources.sounds.RidingMinecartSoundInstance",
            "XXX.resources.sounds.SnifferSoundInstance",
            "XXX.resources.sounds.Sound$Type",
            "XXX.resources.sounds.SoundEventRegistrationSerializer",
            "XXX.resources.sounds.SoundInstance$Attenuation",
            "XXX.resources.sounds.UnderwaterAmbientSoundHandler",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$SubSound",
            "XXX.resources.sounds.package-info",
            "XXX.client.searchtree.IdSearchTree",
            "XXX.client.searchtree.MergingUniqueIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree$1",
            "XXX.client.searchtree.SearchTree",
            "XXX.client.searchtree.package-info",
            "XXX.client.server.IntegratedServer",
            "XXX.client.server.LanServerDetection",
            "XXX.client.server.LanServerDetection$LanServerList",
            "XXX.client.server.package-info",
            "XXX.client.sounds.ChannelAccess",
            "XXX.client.sounds.ChunkedSampleByteBuf",
            "XXX.client.sounds.FloatSampleSource",
            "XXX.client.sounds.LoopingAudioStream",
            "XXX.client.sounds.LoopingAudioStream$NoCloseBuffer",
            "XXX.client.sounds.MusicManager",
            "XXX.client.sounds.SoundEngine",
            "XXX.client.sounds.SoundEngineExecutor",
            "XXX.client.sounds.SoundManager",
            "XXX.client.sounds.SoundManager$2",
            "XXX.client.sounds.SoundManager$Preparations$1",
            "XXX.client.sounds.Weighted",
            "XXX.client.telemetry.ClientTelemetryManager",
            "XXX.client.telemetry.TelemetryEventLog",
            "XXX.client.telemetry.TelemetryEventSender",
            "XXX.client.telemetry.TelemetryEventType$Builder",
            "XXX.client.telemetry.TelemetryProperty",
            "XXX.client.telemetry.TelemetryProperty$GameMode",
            "XXX.client.telemetry.TelemetryPropertyMap",
            "XXX.client.telemetry.TelemetryPropertyMap$Builder",
            "XXX.telemetry.events.AggregatedTelemetryEvent",
            "XXX.telemetry.events.GameLoadTimesEvent$Measurement",
            "XXX.telemetry.events.WorldLoadEvent",
            "XXX.telemetry.events.WorldLoadTimesEvent",
            "XXX.telemetry.events.package-info",
            "XXX.client.tutorial.CompletedTutorialStepInstance",
            "XXX.client.tutorial.FindTreeTutorialStepInstance",
            "XXX.client.tutorial.OpenInventoryTutorialStep",
            "XXX.client.tutorial.Tutorial",
            "XXX.client.tutorial.TutorialSteps",
            "XXX.minecraft.commands.BrigadierExceptions",
            "XXX.minecraft.commands.CommandBuildContext",
            "XXX.minecraft.commands.CommandResultCallback",
            "XXX.minecraft.commands.CommandSigningContext",
            "XXX.minecraft.commands.CommandSigningContext$SignedArguments",
            "XXX.minecraft.commands.CommandSource$1",
            "XXX.minecraft.commands.Commands",
            "XXX.minecraft.commands.Commands$1$1",
            "XXX.minecraft.commands.Commands$ParseFunction",
            "XXX.minecraft.commands.FunctionInstantiationException",
            "XXX.minecraft.commands.SharedSuggestionProvider",
            "XXX.minecraft.commands.SharedSuggestionProvider$TextCoordinates",
            "XXX.commands.arguments.AngleArgument$SingleAngle",
            "XXX.commands.arguments.ArgumentSignatures$Entry",
            "XXX.commands.arguments.ColorArgument",
            "XXX.commands.arguments.CompoundTagArgument",
            "XXX.commands.arguments.EntityAnchorArgument",
            "XXX.commands.arguments.EntityArgument",
            "XXX.commands.arguments.EntityArgument$Info$Template",
            "XXX.commands.arguments.GameProfileArgument",
            "XXX.commands.arguments.GameProfileArgument$SelectorResult",
            "XXX.commands.arguments.MessageArgument",
            "XXX.commands.arguments.MessageArgument$Part",
            "XXX.commands.arguments.NbtPathArgument$AllElementsNode",
            "XXX.commands.arguments.NbtPathArgument$IndexedElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchObjectNode",
            "XXX.commands.arguments.NbtPathArgument$NbtPath",
            "XXX.commands.arguments.NbtTagArgument",
            "XXX.commands.arguments.ObjectiveCriteriaArgument",
            "XXX.commands.arguments.OperationArgument$Operation",
            "XXX.commands.arguments.ParticleArgument",
            "XXX.commands.arguments.RangeArgument$Floats",
            "XXX.commands.arguments.ResourceArgument",
            "XXX.commands.arguments.ResourceArgument$Info$Template",
            "XXX.commands.arguments.ResourceKeyArgument$Info",
            "XXX.commands.arguments.ResourceLocationArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootModifierArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootTableArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info",
            "XXX.commands.arguments.ResourceOrTagArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagArgument$TagResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$ResourceResult",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$TagResult",
            "XXX.commands.arguments.ResourceSelectorArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument",
            "XXX.commands.arguments.ScoreHolderArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$SelectorResult",
            "XXX.commands.arguments.SignedArgument",
            "XXX.commands.arguments.SlotsArgument",
            "XXX.commands.arguments.StyleArgument",
            "XXX.commands.arguments.TemplateMirrorArgument",
            "XXX.commands.arguments.TimeArgument",
            "XXX.commands.arguments.TimeArgument$Info$Template",
            "XXX.arguments.blocks.BlockInput",
            "XXX.arguments.blocks.BlockPredicateArgument$BlockPredicate",
            "XXX.arguments.blocks.BlockPredicateArgument$TagPredicate",
            "XXX.arguments.blocks.BlockStateParser",
            "XXX.arguments.blocks.BlockStateParser$TagResult",
            "XXX.arguments.coordinates.BlockPosArgument",
            "XXX.arguments.coordinates.Coordinates",
            "XXX.arguments.coordinates.RotationArgument",
            "XXX.arguments.coordinates.Vec2Argument",
            "XXX.arguments.coordinates.WorldCoordinate",
            "XXX.arguments.coordinates.package-info",
            "XXX.arguments.item.ComponentPredicateParser$ComponentLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$ElementLookupRule",
            "XXX.arguments.item.ComponentPredicateParser$TagLookupRule",
            "XXX.arguments.item.FunctionArgument$1",
            "XXX.arguments.item.FunctionArgument$Result",
            "XXX.arguments.item.ItemInput",
            "XXX.arguments.item.ItemParser$1",
            "XXX.arguments.item.ItemParser$State",
            "XXX.arguments.item.ItemParser$Visitor",
            "XXX.arguments.item.ItemPredicateArgument$ComponentWrapper",
            "XXX.arguments.item.ItemPredicateArgument$PredicateWrapper",
            "XXX.arguments.item.package-info",
            "XXX.arguments.selector.EntitySelector",
            "XXX.arguments.selector.EntitySelectorParser",
            "XXX.selector.options.EntitySelectorOptions",
            "XXX.selector.options.EntitySelectorOptions$Option",
            "XXX.arguments.selector.package-info",
            "XXX.commands.execution.CommandQueueEntry",
            "XXX.commands.execution.CustomCommandExecutor$CommandAdapter",
            "XXX.commands.execution.CustomModifierExecutor",
            "XXX.commands.execution.EntryAction",
            "XXX.commands.execution.ExecutionControl",
            "XXX.commands.execution.Frame",
            "XXX.commands.execution.TraceCallbacks",
            "XXX.commands.execution.package-info",
            "XXX.execution.tasks.BuildContexts$Continuation",
            "XXX.execution.tasks.BuildContexts$Unbound",
            "XXX.execution.tasks.ContinuationTask",
            "XXX.execution.tasks.ExecuteCommand",
            "XXX.execution.tasks.IsolatedCall",
            "XXX.commands.functions.CommandFunction",
            "XXX.commands.functions.InstantiatedFunction",
            "XXX.commands.functions.MacroFunction$Entry",
            "XXX.commands.functions.MacroFunction$PlainTextEntry",
            "XXX.commands.functions.StringTemplate",
            "XXX.minecraft.commands.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo$Template",
            "XXX.commands.synchronization.ArgumentUtils",
            "XXX.commands.synchronization.SingletonArgumentInfo$Template",
            "XXX.commands.synchronization.SuggestionProviders$Wrapper",
            "XXX.synchronization.brigadier.DoubleArgumentInfo$Template",
            "XXX.synchronization.brigadier.FloatArgumentInfo$Template",
            "XXX.synchronization.brigadier.IntegerArgumentInfo$Template",
            "XXX.synchronization.brigadier.LongArgumentInfo$Template",
            "XXX.synchronization.brigadier.StringArgumentSerializer$1",
            "XXX.synchronization.brigadier.package-info",
            "XXX.minecraft.core.AxisCycle",
            "XXX.minecraft.core.AxisCycle$2",
            "XXX.minecraft.core.BlockBox",
            "XXX.minecraft.core.BlockMath",
            "XXX.minecraft.core.BlockPos$1",
            "XXX.minecraft.core.BlockPos$3",
            "XXX.minecraft.core.BlockPos$5",
            "XXX.minecraft.core.BlockPos$MutableBlockPos",
            "XXX.minecraft.core.ClientAsset",
            "XXX.minecraft.core.Cloner$Factory",
            "XXX.minecraft.core.DefaultedMappedRegistry",
            "XXX.minecraft.core.Direction",
            "XXX.minecraft.core.Direction$Axis$1",
            "XXX.minecraft.core.Direction$Axis$3",
            "XXX.minecraft.core.Direction$Plane",
            "XXX.minecraft.core.FrontAndTop",
            "XXX.minecraft.core.Holder",
            "XXX.minecraft.core.Holder$Kind",
            "XXX.minecraft.core.Holder$Reference$Type",
            "XXX.minecraft.core.HolderGetter$Provider",
            "XXX.minecraft.core.HolderLookup$Provider",
            "XXX.minecraft.core.HolderLookup$RegistryLookup",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$Delegate",
            "XXX.minecraft.core.HolderSet",
            "XXX.minecraft.core.HolderSet$Direct",
            "XXX.minecraft.core.HolderSet$Named",
            "XXX.minecraft.core.IdMapper",
            "XXX.minecraft.core.MappedRegistry",
            "XXX.minecraft.core.MappedRegistry$2",
            "XXX.minecraft.core.MappedRegistry$TagSet",
            "XXX.minecraft.core.MappedRegistry$TagSet$2",
            "XXX.minecraft.core.Position",
            "XXX.minecraft.core.RegistrationInfo",
            "XXX.minecraft.core.Registry$1",
            "XXX.minecraft.core.RegistryAccess",
            "XXX.minecraft.core.RegistryAccess$1FrozenAccess",
            "XXX.minecraft.core.RegistryAccess$ImmutableRegistryAccess",
            "XXX.minecraft.core.RegistryCodecs",
            "XXX.minecraft.core.RegistrySetBuilder$1",
            "XXX.minecraft.core.RegistrySetBuilder$2",
            "XXX.minecraft.core.RegistrySetBuilder$3$1",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState$1",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookupWrapper",
            "XXX.minecraft.core.RegistrySetBuilder$LazyHolder",
            "XXX.minecraft.core.RegistrySetBuilder$RegisteredValue",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryContents",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalLookup",
            "XXX.minecraft.core.RegistrySetBuilder$ValueAndHolder",
            "XXX.minecraft.core.RegistrySynchronization$PackedRegistryEntry",
            "XXX.minecraft.core.Rotations$1",
            "XXX.minecraft.core.SectionPos$1",
            "XXX.minecraft.core.UUIDUtil$1",
            "XXX.minecraft.core.WritableRegistry",
            "XXX.core.cauldron.CauldronInteraction$InteractionMap",
            "XXX.core.component.DataComponentExactPredicate",
            "XXX.core.component.DataComponentGetter",
            "XXX.core.component.DataComponentMap",
            "XXX.core.component.DataComponentMap$2",
            "XXX.core.component.DataComponentMap$Builder",
            "XXX.core.component.DataComponentPatch",
            "XXX.core.component.DataComponentPatch$Builder",
            "XXX.core.component.DataComponentPatch$SplitResult",
            "XXX.core.component.DataComponentType$Builder",
            "XXX.core.component.DataComponents",
            "XXX.core.component.TypedDataComponent",
            "XXX.core.component.package-info",
            "XXX.component.predicates.AttributeModifiersPredicate$EntryPredicate",
            "XXX.component.predicates.ContainerPredicate",
            "XXX.component.predicates.DamagePredicate",
            "XXX.component.predicates.DataComponentPredicate$Single",
            "XXX.component.predicates.DataComponentPredicates",
            "XXX.component.predicates.EnchantmentsPredicate$Enchantments",
            "XXX.component.predicates.FireworkExplosionPredicate",
            "XXX.component.predicates.FireworksPredicate",
            "XXX.component.predicates.PotionsPredicate",
            "XXX.component.predicates.WritableBookPredicate",
            "XXX.component.predicates.WrittenBookPredicate",
            "XXX.component.predicates.package-info",
            "XXX.core.dispenser.BoatDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$10",
            "XXX.core.dispenser.DispenseItemBehavior$12",
            "XXX.core.dispenser.DispenseItemBehavior$14",
            "XXX.core.dispenser.DispenseItemBehavior$2",
            "XXX.core.dispenser.DispenseItemBehavior$4",
            "XXX.core.dispenser.DispenseItemBehavior$6",
            "XXX.core.dispenser.DispenseItemBehavior$8",
            "XXX.core.dispenser.EquipmentDispenseItemBehavior",
            "XXX.core.dispenser.OptionalDispenseItemBehavior",
            "XXX.core.dispenser.ShearsDispenseItemBehavior",
            "XXX.core.dispenser.package-info",
            "XXX.core.particles.BlockParticleOption",
            "XXX.core.particles.DustColorTransitionOptions",
            "XXX.core.particles.ItemParticleOption",
            "XXX.core.particles.ParticleOptions",
            "XXX.core.particles.ParticleTypes",
            "XXX.core.particles.ScalableParticleOptionsBase",
            "XXX.core.particles.ShriekParticleOption",
            "XXX.core.particles.TrailParticleOption",
            "XXX.core.particles.package-info",
            "XXX.core.registries.BuiltInRegistries$RegistryBootstrap",
            "XXX.core.registries.package-info",
            "XXX.minecraft.data.BlockFamily",
            "XXX.minecraft.data.BlockFamily$Variant",
            "XXX.minecraft.data.DataGenerator",
            "XXX.minecraft.data.DataProvider",
            "XXX.minecraft.data.HashCache",
            "XXX.minecraft.data.HashCache$CacheUpdater",
            "XXX.minecraft.data.HashCache$ProviderCacheBuilder",
            "XXX.minecraft.data.HashCache$UpdateResult",
            "XXX.minecraft.data.PackOutput",
            "XXX.minecraft.data.PackOutput$Target",
            "XXX.data.advancements.AdvancementSubProvider",
            "XXX.advancements.packs.VanillaAdvancementProvider",
            "XXX.advancements.packs.VanillaHusbandryAdvancements",
            "XXX.advancements.packs.VanillaStoryAdvancements",
            "XXX.advancements.packs.package-info",
            "XXX.data.info.BlockListReport",
            "XXX.data.info.DatapackStructureReport",
            "XXX.data.info.DatapackStructureReport$Entry",
            "XXX.data.info.DatapackStructureReport$Report",
            "XXX.data.info.PacketReport",
            "XXX.data.info.package-info",
            "XXX.data.loot.EntityLootSubProvider",
            "XXX.data.loot.LootTableProvider$SubProviderEntry",
            "XXX.data.loot.package-info",
            "XXX.loot.packs.TradeRebalanceChestLoot",
            "XXX.loot.packs.VanillaArchaeologyLoot",
            "XXX.loot.packs.VanillaChestLoot",
            "XXX.loot.packs.VanillaEquipmentLoot",
            "XXX.loot.packs.VanillaGiftLoot",
            "XXX.loot.packs.VanillaPiglinBarterLoot",
            "XXX.loot.packs.package-info",
            "XXX.data.metadata.package-info",
            "XXX.data.recipes.RecipeBuilder",
            "XXX.data.recipes.RecipeCategory",
            "XXX.data.recipes.RecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner",
            "XXX.data.recipes.ShapedRecipeBuilder",
            "XXX.data.recipes.SimpleCookingRecipeBuilder",
            "XXX.data.recipes.SmithingTransformRecipeBuilder",
            "XXX.data.recipes.SpecialRecipeBuilder",
            "XXX.data.recipes.package-info",
            "XXX.recipes.packs.VanillaRecipeProvider$Runner",
            "XXX.recipes.packs.package-info",
            "XXX.data.registries.RegistryPatchGenerator",
            "XXX.data.registries.VanillaRegistries",
            "XXX.data.structures.NbtToSnbt",
            "XXX.data.structures.SnbtToNbt",
            "XXX.data.structures.SnbtToNbt$StructureConversionException",
            "XXX.data.structures.StructureUpdater",
            "XXX.data.tags.BannerPatternTagsProvider",
            "XXX.data.tags.DamageTypeTagsProvider",
            "XXX.data.tags.EntityTypeTagsProvider",
            "XXX.data.tags.FluidTagsProvider",
            "XXX.data.tags.InstrumentTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender",
            "XXX.data.tags.PaintingVariantTagsProvider",
            "XXX.data.tags.StructureTagsProvider",
            "XXX.data.tags.TagsProvider$1CombinedData",
            "XXX.data.tags.TagsProvider$TagLookup",
            "XXX.data.tags.TradeRebalanceStructureTagsProvider",
            "XXX.gametest.framework.GameTestTimeoutException",
            "XXX.gametest.framework.GlobalTestReporter",
            "XXX.gametest.framework.LogTestReporter",
            "XXX.gametest.framework.MultipleTestTracker$1",
            "XXX.gametest.framework.RetryOptions",
            "XXX.gametest.framework.StructureUtils",
            "XXX.gametest.framework.TestCommand",
            "XXX.gametest.framework.TestCommand$TestSummaryDisplayer",
            "XXX.gametest.framework.TestEnvironmentDefinition",
            "XXX.gametest.framework.TestEnvironmentDefinition$Functions",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules$Entry",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather",
            "XXX.gametest.framework.TestFinder",
            "XXX.gametest.framework.TestFunctionLoader",
            "XXX.gametest.framework.TestPosFinder",
            "XXX.gametest.framework.UnknownGameTestException",
            "XXX.minecraft.locale.DeprecatedTranslationsInfo",
            "XXX.minecraft.locale.Language$1",
            "XXX.minecraft.nbt.ByteArrayTag",
            "XXX.minecraft.nbt.ByteTag",
            "XXX.minecraft.nbt.ByteTag$Cache",
            "XXX.minecraft.nbt.CompoundTag",
            "XXX.minecraft.nbt.CompoundTag$2",
            "XXX.minecraft.nbt.DoubleTag$1",
            "XXX.minecraft.nbt.EndTag$1",
            "XXX.minecraft.nbt.FloatTag$1",
            "XXX.minecraft.nbt.IntArrayTag$1",
            "XXX.minecraft.nbt.IntTag$1",
            "XXX.minecraft.nbt.ListTag",
            "XXX.minecraft.nbt.ListTag$2",
            "XXX.minecraft.nbt.LongArrayTag$1",
            "XXX.minecraft.nbt.LongTag$1",
            "XXX.minecraft.nbt.NbtAccounter",
            "XXX.minecraft.nbt.NbtException",
            "XXX.minecraft.nbt.NbtIo",
            "XXX.minecraft.nbt.NbtIo$StringFallbackDataOutput",
            "XXX.minecraft.nbt.NbtOps$1",
            "XXX.minecraft.nbt.NbtOps$HeterogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$InitialListCollector",
            "XXX.minecraft.nbt.NbtOps$ListCollector",
            "XXX.minecraft.nbt.NbtOps$NbtRecordBuilder",
            "XXX.minecraft.nbt.NumericTag",
            "XXX.minecraft.nbt.ShortTag",
            "XXX.minecraft.nbt.ShortTag$Cache",
            "XXX.minecraft.nbt.StreamTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$ValueResult",
            "XXX.minecraft.nbt.StringTag$1",
            "XXX.minecraft.nbt.Tag",
            "XXX.minecraft.nbt.TagType",
            "XXX.minecraft.nbt.TagType$2",
            "XXX.minecraft.nbt.TagType$VariableSize",
            "XXX.minecraft.nbt.TagVisitor",
            "XXX.minecraft.nbt.package-info",
            "XXX.nbt.visitors.CollectToTag",
            "XXX.nbt.visitors.FieldTree",
            "XXX.nbt.visitors.SkipAll$1",
            "XXX.nbt.visitors.package-info",
            "XXX.minecraft.network.CipherBase",
            "XXX.minecraft.network.CipherEncoder",
            "XXX.minecraft.network.CompressionDecoder",
            "XXX.minecraft.network.Connection",
            "XXX.minecraft.network.Connection$2",
            "XXX.minecraft.network.ConnectionProtocol",
            "XXX.minecraft.network.FriendlyByteBuf",
            "XXX.minecraft.network.HiddenByteBuf",
            "XXX.minecraft.network.LocalFrameEncoder",
            "XXX.minecraft.network.PacketBundlePacker",
            "XXX.minecraft.network.PacketDecoder",
            "XXX.minecraft.network.PacketListener",
            "XXX.minecraft.network.PacketSendListener$1",
            "XXX.minecraft.network.ProtocolInfo",
            "XXX.minecraft.network.ProtocolInfo$Unbound$PacketVisitor",
            "XXX.minecraft.network.RateKickingConnection",
            "XXX.minecraft.network.ServerboundPacketListener",
            "XXX.minecraft.network.TickablePacketListener",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Inbound",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$Outbound",
            "XXX.minecraft.network.Utf8String",
            "XXX.minecraft.network.VarLong",
            "XXX.minecraft.network.Varint21LengthFieldPrepender",
            "XXX.network.chat.ChatType",
            "XXX.network.chat.ChatTypeDecoration",
            "XXX.network.chat.ChatTypeDecoration$Parameter$Selector",
            "XXX.network.chat.ClickEvent$Action",
            "XXX.network.chat.ClickEvent$CopyToClipboard",
            "XXX.network.chat.ClickEvent$OpenUrl",
            "XXX.network.chat.ClickEvent$SuggestCommand",
            "XXX.network.chat.Component",
            "XXX.network.chat.Component$SerializerAdapter",
            "XXX.network.chat.ComponentContents$Type",
            "XXX.network.chat.ComponentSerialization$1",
            "XXX.network.chat.ComponentSerialization$StrictEither",
            "XXX.network.chat.FilterMask",
            "XXX.network.chat.FormattedText",
            "XXX.network.chat.FormattedText$2",
            "XXX.network.chat.FormattedText$4",
            "XXX.network.chat.FormattedText$StyledContentConsumer",
            "XXX.network.chat.HoverEvent$Action",
            "XXX.network.chat.HoverEvent$ShowEntity",
            "XXX.network.chat.HoverEvent$ShowText",
            "XXX.network.chat.LastSeenMessages$Packed",
            "XXX.network.chat.LastSeenMessagesTracker",
            "XXX.network.chat.LastSeenMessagesValidator",
            "XXX.network.chat.LocalChatSession",
            "XXX.network.chat.MessageSignature$Packed",
            "XXX.network.chat.MutableComponent",
            "XXX.network.chat.OutgoingChatMessage$Disguised",
            "XXX.network.chat.PlayerChatMessage",
            "XXX.network.chat.RemoteChatSession$Data",
            "XXX.network.chat.SignableCommand$Argument",
            "XXX.network.chat.SignedMessageBody$Packed",
            "XXX.network.chat.SignedMessageChain$1",
            "XXX.network.chat.SignedMessageChain$Decoder",
            "XXX.network.chat.SignedMessageLink",
            "XXX.network.chat.SignedMessageValidator$KeyBased",
            "XXX.network.chat.Style$1",
            "XXX.network.chat.Style$Serializer",
            "XXX.network.chat.TextColor",
            "XXX.chat.contents.BlockDataSource",
            "XXX.chat.contents.DataSource$Type",
            "XXX.chat.contents.KeybindContents",
            "XXX.chat.contents.NbtContents",
            "XXX.chat.contents.PlainTextContents$1",
            "XXX.chat.contents.ScoreContents",
            "XXX.chat.contents.StorageDataSource",
            "XXX.chat.contents.TranslatableFormatException",
            "XXX.chat.numbers.BlankFormat",
            "XXX.chat.numbers.FixedFormat",
            "XXX.chat.numbers.NumberFormat",
            "XXX.chat.numbers.NumberFormatTypes",
            "XXX.chat.numbers.StyledFormat$1",
            "XXX.network.chat.package-info",
            "XXX.network.codec.ByteBufCodecs$1",
            "XXX.network.codec.ByteBufCodecs$11",
            "XXX.network.codec.ByteBufCodecs$13",
            "XXX.network.codec.ByteBufCodecs$15",
            "XXX.network.codec.ByteBufCodecs$17",
            "XXX.network.codec.ByteBufCodecs$19",
            "XXX.network.codec.ByteBufCodecs$20",
            "XXX.network.codec.ByteBufCodecs$22",
            "XXX.network.codec.ByteBufCodecs$24",
            "XXX.network.codec.ByteBufCodecs$26",
            "XXX.network.codec.ByteBufCodecs$28",
            "XXX.network.codec.ByteBufCodecs$3",
            "XXX.minecraft.resources.package-info",
            "XXX.minecraft.server.Bootstrap$1",
            "XXX.minecraft.server.ChainedJsonException$Entry",
            "XXX.minecraft.server.DebugLoggedPrintStream",
            "XXX.minecraft.server.LoggedPrintStream",
            "XXX.minecraft.server.Main$1",
            "XXX.minecraft.server.MinecraftServer$1",
            "XXX.minecraft.server.MinecraftServer$ServerResourcePackInfo",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler$1",
            "XXX.minecraft.server.PlayerAdvancements$Data",
            "XXX.minecraft.server.ReloadableServerRegistries",
            "XXX.minecraft.server.ReloadableServerRegistries$LoadResult",
            "XXX.minecraft.server.RunningOnDifferentThreadException",
            "XXX.minecraft.server.ServerFunctionLibrary",
            "XXX.minecraft.server.ServerInfo",
            "XXX.minecraft.server.ServerLinks",
            "XXX.minecraft.server.ServerLinks$KnownLinkType",
            "XXX.minecraft.server.ServerScoreboard",
            "XXX.minecraft.server.ServerTickRateManager",
            "XXX.minecraft.server.SuppressedExceptionCollector",
            "XXX.minecraft.server.SuppressedExceptionCollector$ShortEntry",
            "XXX.minecraft.server.WorldLoader",
            "XXX.minecraft.server.WorldLoader$DataLoadOutput",
            "XXX.minecraft.server.WorldLoader$PackConfig",
            "XXX.minecraft.server.WorldLoader$WorldDataSupplier",
            "XXX.server.advancements.AdvancementVisibilityEvaluator",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$VisibilityRule",
            "XXX.server.bossevents.CustomBossEvent",
            "XXX.server.level.ServerPlayer$RespawnPosAngle",
            "XXX.server.level.SimulationChunkTracker",
            "XXX.server.level.ThreadedLevelLightEngine$TaskType",
            "XXX.server.level.Ticket",
            "XXX.server.level.TicketType$TicketUse",
            "XXX.server.level.package-info",
            "XXX.level.progress.ChunkProgressListenerFactory",
            "XXX.level.progress.ProcessorChunkProgressListener",
            "XXX.level.progress.package-info",
            "XXX.server.network.ConfigurationTask",
            "XXX.server.network.Filterable",
            "XXX.server.network.LegacyProtocolUtils",
            "XXX.server.network.LegacyTextFilter",
            "XXX.server.network.LegacyTextFilter$JoinOrLeaveEncoder",
            "XXX.server.network.PlayerChunkSender",
            "XXX.server.network.ServerCommonPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener",
            "XXX.server.network.ServerConnectionListener$2",
            "XXX.server.network.ServerConnectionListener$LatencySimulator$DelayedMessage",
            "XXX.server.network.ServerGamePacketListenerImpl$1",
            "XXX.server.network.ServerGamePacketListenerImpl$EntityInteraction",
            "XXX.server.network.ServerHandshakePacketListenerImpl$1",
            "XXX.server.network.ServerLoginPacketListenerImpl$1",
            "XXX.server.network.ServerPlayerConnection",
            "XXX.server.network.ServerTextFilter",
            "XXX.server.network.ServerTextFilter$MessageEncoder",
            "XXX.server.network.ServerTextFilter$RequestFailedException",
            "XXX.server.network.TextFilter$1",
            "XXX.network.config.ServerResourcePackConfigurationTask",
            "XXX.network.config.package-info",
            "XXX.minecraft.server.package-info",
            "XXX.server.packs.BuiltInMetadata",
            "XXX.server.packs.DownloadCacheCleaner",
            "XXX.server.packs.DownloadCacheCleaner$PathAndPriority",
            "XXX.server.packs.DownloadQueue",
            "XXX.server.packs.DownloadQueue$BatchResult",
            "XXX.server.packs.DownloadQueue$FileInfoEntry",
            "XXX.server.packs.FeatureFlagsMetadataSection",
            "XXX.server.packs.FilePackResources$FileResourcesSupplier",
            "XXX.server.packs.OverlayMetadataSection",
            "XXX.server.packs.PackLocationInfo",
            "XXX.server.packs.PackResources$ResourceOutput",
            "XXX.server.packs.PackType",
            "XXX.server.packs.PathPackResources$PathResourcesSupplier",
            "XXX.server.packs.VanillaPackResourcesBuilder",
            "XXX.packs.linkfs.LinkFSFileStore",
            "XXX.packs.linkfs.LinkFSPath$1",
            "XXX.packs.linkfs.LinkFSPath$3",
            "XXX.packs.linkfs.LinkFSProvider$1",
            "XXX.packs.linkfs.LinkFileSystem",
            "XXX.packs.linkfs.LinkFileSystem$DirectoryEntry",
            "XXX.packs.linkfs.PathContents$1",
            "XXX.packs.linkfs.PathContents$DirectoryContents",
            "XXX.packs.linkfs.package-info",
            "XXX.metadata.pack.PackMetadataSection",
            "XXX.packs.metadata.package-info",
            "XXX.packs.repository.BuiltInPackSource",
            "XXX.packs.repository.FolderRepositorySource",
            "XXX.packs.repository.KnownPack",
            "XXX.packs.repository.Pack$Metadata",
            "XXX.packs.repository.Pack$ResourcesSupplier",
            "XXX.packs.repository.PackDetector",
            "XXX.packs.repository.PackSource",
            "XXX.packs.repository.RepositorySource",
            "XXX.packs.repository.package-info",
            "XXX.packs.resources.FallbackResourceManager",
            "XXX.packs.resources.FallbackResourceManager$EntryStack",
            "XXX.packs.resources.FallbackResourceManager$PackEntry",
            "XXX.packs.resources.IoSupplier",
            "XXX.packs.resources.PreparableReloadListener",
            "XXX.packs.resources.ProfiledReloadInstance",
            "XXX.packs.resources.ReloadInstance",
            "XXX.packs.resources.Resource",
            "XXX.packs.resources.ResourceManager",
            "XXX.packs.resources.ResourceManagerReloadListener",
            "XXX.packs.resources.ResourceMetadata$1",
            "XXX.packs.resources.ResourceMetadata$Builder",
            "XXX.packs.resources.ResourceProvider",
            "XXX.packs.resources.SimplePreparableReloadListener",
            "XXX.packs.resources.SimpleReloadInstance$1",
            "XXX.packs.resources.package-info",
            "XXX.server.players.GameProfileCache",
            "XXX.server.players.IpBanList",
            "XXX.server.players.OldUsersConverter",
            "XXX.server.players.OldUsersConverter$2",
            "XXX.server.players.OldUsersConverter$4",
            "XXX.server.players.OldUsersConverter$ConversionError",
            "XXX.server.players.PlayerList$1",
            "XXX.server.players.ServerOpListEntry",
            "XXX.server.players.StoredUserEntry",
            "XXX.server.players.UserBanList",
            "XXX.server.players.UserWhiteList",
            "XXX.server.players.package-info",
            "XXX.server.rcon.PktUtils",
            "XXX.server.rcon.package-info",
            "XXX.rcon.thread.QueryThreadGs4",
            "XXX.rcon.thread.RconClient",
            "XXX.rcon.thread.package-info",
            "XXX.minecraft.sounds.Musics",
            "XXX.minecraft.sounds.SoundEvents",
            "XXX.minecraft.sounds.package-info",
            "XXX.minecraft.stats.RecipeBookSettings",
            "XXX.minecraft.stats.ServerRecipeBook",
            "XXX.minecraft.stats.ServerStatsCounter",
            "XXX.minecraft.stats.StatFormatter",
            "XXX.minecraft.stats.Stats",
            "XXX.minecraft.stats.package-info",
            "XXX.minecraft.tags.BiomeTags",
            "XXX.minecraft.tags.DamageTypeTags",
            "XXX.minecraft.tags.EntityTypeTags",
            "XXX.minecraft.tags.FluidTags",
            "XXX.minecraft.tags.InstrumentTags",
            "XXX.minecraft.tags.PaintingVariantTags",
            "XXX.minecraft.tags.StructureTags",
            "XXX.minecraft.tags.TagEntry",
            "XXX.minecraft.tags.TagFile",
            "XXX.minecraft.tags.TagLoader",
            "XXX.minecraft.tags.TagLoader$ElementLookup",
            "XXX.minecraft.tags.TagLoader$LoadResult",
            "XXX.minecraft.tags.TagNetworkSerialization",
            "XXX.minecraft.tags.WorldPresetTags",
            "XXX.minecraft.util.ARGB",
            "XXX.minecraft.util.AbortableIterationConsumer$Continuation",
            "XXX.minecraft.util.ArrayListDeque$DescendingIterator",
            "XXX.minecraft.util.BinaryAnimator",
            "XXX.minecraft.util.BitStorage",
            "XXX.minecraft.util.ByIdMap",
            "XXX.minecraft.util.ClassInstanceMultiMap",
            "XXX.minecraft.util.ColorRGBA",
            "XXX.minecraft.util.CommonLinks",
            "XXX.minecraft.util.Crypt",
            "XXX.minecraft.util.Crypt$SaltSignaturePair",
            "XXX.minecraft.util.CryptException",
            "XXX.minecraft.util.CsvOutput$Builder",
            "XXX.minecraft.util.CubicSampler$Vec3Fetcher",
            "XXX.minecraft.util.CubicSpline$1Point",
            "XXX.minecraft.util.CubicSpline$Constant",
            "XXX.minecraft.util.CubicSpline$Multipoint",
            "XXX.minecraft.util.DelegateDataOutput",
            "XXX.minecraft.util.DependencySorter$Entry",
            "XXX.minecraft.util.DirectoryLock$LockException",
            "XXX.minecraft.util.EncoderCache$1",
            "XXX.minecraft.util.EncoderCache$Key",
            "XXX.minecraft.util.ExtraCodecs",
            "XXX.minecraft.util.ExtraCodecs$1ContextRetrievalCodec",
            "XXX.minecraft.util.ExtraCodecs$3",
            "XXX.minecraft.util.ExtraCodecs$5",
            "XXX.minecraft.util.ExtraCodecs$7",
            "XXX.minecraft.util.ExtraCodecs$StrictUnboundedMapCodec",
            "XXX.minecraft.util.FastBufferedInputStream",
            "XXX.minecraft.util.FileZipper",
            "XXX.minecraft.util.FormattedCharSink",
            "XXX.minecraft.util.Graph",
            "XXX.minecraft.util.GsonHelper$CountedAppendable",
            "XXX.minecraft.util.HttpUtil$DownloadProgressListener",
            "XXX.minecraft.util.KeyDispatchDataCodec",
            "XXX.minecraft.util.LinearCongruentialGenerator",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory",
            "XXX.minecraft.util.MemoryReserve",
            "XXX.minecraft.util.ModCheck$Confidence",
            "XXX.minecraft.util.NativeModuleLister",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleVersion",
            "XXX.minecraft.util.NullOps$NullMapBuilder",
            "XXX.minecraft.util.ParticleUtils",
            "XXX.minecraft.util.PlaceholderLookupProvider$1",
            "XXX.minecraft.util.PlaceholderLookupProvider$UniversalLookup",
            "XXX.minecraft.util.ProblemReporter",
            "XXX.minecraft.util.ProgressListener",
            "XXX.minecraft.util.RegistryContextSwapper",
            "XXX.minecraft.util.SegmentedAnglePrecision",
            "XXX.minecraft.util.SignatureUpdater",
            "XXX.minecraft.util.SignatureValidator",
            "XXX.minecraft.util.SimpleBitStorage",
            "XXX.minecraft.util.SingleKeyCache",
            "XXX.minecraft.util.SortedArraySet",
            "XXX.minecraft.util.SpawnUtil",
            "XXX.minecraft.util.StaticCache2D",
            "XXX.minecraft.util.StringDecomposer",
            "XXX.minecraft.util.StringRepresentable$1",
            "XXX.minecraft.util.StringRepresentable$StringRepresentableCodec",
            "XXX.minecraft.util.TaskChainer",
            "XXX.minecraft.util.ThreadingDetector",
            "XXX.minecraft.util.TimeSource",
            "XXX.minecraft.util.TimeUtil",
            "XXX.minecraft.util.ToFloatFunction$1",
            "XXX.minecraft.util.TriState",
            "XXX.minecraft.util.Unit",
            "XXX.minecraft.util.ZeroBitStorage",
            "XXX.util.context.ContextKeySet",
            "XXX.util.context.ContextMap",
            "XXX.util.context.package-info",
            "XXX.util.datafix.DataFixTypes$1",
            "XXX.util.datafix.DataFixers$1",
            "XXX.util.datafix.ExtraDataFixUtils",
            "XXX.util.datafix.PackedBitStorage",
            "XXX.datafix.fixes.AbstractBlockPropertyFix",
            "XXX.datafix.fixes.AbstractUUIDFix",
            "XXX.datafix.fixes.AddNewChoices",
            "XXX.datafix.fixes.AdvancementsRenameFix",
            "XXX.datafix.fixes.AreaEffectCloudPotionFix",
            "XXX.datafix.fixes.AttributeModifierIdFix",
            "XXX.datafix.fixes.AttributesRenameLegacy",
            "XXX.datafix.fixes.BannerPatternFormatFix",
            "XXX.datafix.fixes.BeehiveFieldRenameFix",
            "XXX.datafix.fixes.BitStorageAlignFix",
            "XXX.datafix.fixes.BlendingDataRemoveFromNetherEndFix",
            "XXX.datafix.fixes.BlockEntityBlockStateFix",
            "XXX.datafix.fixes.BlockEntityFurnaceBurnTimeFix",
            "XXX.datafix.fixes.BlockEntityJukeboxFix",
            "XXX.datafix.fixes.BlockEntityRenameFix",
            "XXX.datafix.fixes.BlockEntitySignDoubleSidedEditableTextFix",
            "XXX.datafix.fixes.BlockNameFlatteningFix",
            "XXX.datafix.fixes.BlockPropertyRenameAndFix",
            "XXX.datafix.fixes.BlockRenameFix$1",
            "XXX.datafix.fixes.BlockStateStructureTemplateFix",
            "XXX.datafix.fixes.CarvingStepRemoveFix",
            "XXX.datafix.fixes.CauldronRenameFix",
            "XXX.datafix.fixes.ChestedHorsesInventoryZeroIndexingFix",
            "XXX.datafix.fixes.ChunkBiomeFix",
            "XXX.datafix.fixes.ChunkDeleteLightFix",
            "XXX.datafix.fixes.ChunkLightRemoveFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$DataLayer",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$Axis",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$MappingConstants",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$UpgradeChunk",
            "XXX.datafix.fixes.ChunkProtoTickListFix$PoorMansPalettedContainer",
            "XXX.datafix.fixes.ChunkStatusFix",
            "XXX.datafix.fixes.ChunkStructuresTemplateRenameFix",
            "XXX.datafix.fixes.InvalidLockComponentFix",
            "XXX.datafix.fixes.ItemCustomNameToComponentFix",
            "XXX.datafix.fixes.ItemLoreFix",
            "XXX.datafix.fixes.ItemRemoveBlockEntityTagFix",
            "XXX.datafix.fixes.ItemRenameFix$1",
            "XXX.datafix.fixes.ItemSpawnEggFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix$ItemStackData",
            "XXX.datafix.fixes.ItemStackEnchantmentNamesFix",
            "XXX.datafix.fixes.ItemStackSpawnEggFix",
            "XXX.datafix.fixes.ItemStackTagRemainderFix",
            "XXX.datafix.fixes.ItemStackUUIDFix",
            "XXX.datafix.fixes.JigsawPropertiesFix",
            "XXX.datafix.fixes.JukeboxTicksSinceSongStartedFix",
            "XXX.datafix.fixes.LeavesFix$LeavesSection",
            "XXX.datafix.fixes.LegacyDragonFightFix",
            "XXX.datafix.fixes.LevelDataGeneratorOptionsFix",
            "XXX.datafix.fixes.LevelLegacyWorldGenSettingsFix",
            "XXX.datafix.fixes.LockComponentPredicateFix",
            "XXX.datafix.fixes.MapBannerBlockPosFormatFix",
            "XXX.datafix.fixes.MemoryExpiryDataFix",
            "XXX.datafix.fixes.MobEffectIdFix",
            "XXX.datafix.fixes.NamedEntityConvertUncheckedFix",
            "XXX.datafix.fixes.NamedEntityWriteReadFix",
            "XXX.datafix.fixes.NewVillageFix",
            "XXX.datafix.fixes.OminousBannerBlockEntityRenameFix",
            "XXX.datafix.fixes.OminousBannerRenameFix",
            "XXX.datafix.fixes.OptionsAddTextBackgroundFix",
            "XXX.datafix.fixes.OptionsForceVBOFix",
            "XXX.datafix.fixes.OptionsKeyTranslationFix",
            "XXX.datafix.fixes.OptionsMenuBlurrinessFix",
            "XXX.datafix.fixes.OptionsRenameFieldFix",
            "XXX.datafix.fixes.ParticleUnflatteningFix",
            "XXX.datafix.fixes.PlayerHeadBlockProfileFix",
            "XXX.datafix.fixes.PoiTypeRemoveFix",
            "XXX.datafix.fixes.PrimedTntBlockStateFixer",
            "XXX.datafix.fixes.RaidRenamesDataFix",
            "XXX.datafix.fixes.RecipesFix",
            "XXX.datafix.fixes.RedstoneWireConnectionsFix",
            "XXX.datafix.fixes.References$1",
            "XXX.datafix.fixes.RemoveEmptyItemInBrushableBlockFix",
            "XXX.datafix.fixes.RenameEnchantmentsFix",
            "XXX.datafix.fixes.RenamedCoralFix",
            "XXX.datafix.fixes.SaddleEquipmentSlotFix",
            "XXX.datafix.fixes.SavedDataUUIDFix",
            "XXX.datafix.fixes.ScoreboardDisplaySlotFix",
            "XXX.datafix.fixes.SimplestEntityRenameFix",
            "XXX.datafix.fixes.StatsCounterFix",
            "XXX.datafix.fixes.StatsRenameFix",
            "XXX.datafix.fixes.StructureReferenceCountFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix",
            "XXX.datafix.fixes.TextComponentHoverAndClickEventFix",
            "XXX.datafix.fixes.TextComponentStringifiedFlagsFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix$ItemIdFinder",
            "XXX.datafix.fixes.TooltipDisplayComponentFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix$TrappedChestSection",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix",
            "XXX.datafix.fixes.UnflattenTextComponentFix",
            "XXX.datafix.fixes.VillagerDataFix",
            "XXX.datafix.fixes.VillagerRebuildLevelAndXpFix",
            "XXX.datafix.fixes.VillagerTradeFix",
            "XXX.datafix.fixes.WeaponSmithChestLootTableFix",
            "XXX.datafix.fixes.WorldGenSettingsFix",
            "XXX.datafix.fixes.WorldGenSettingsHeightAndBiomeFix",
            "XXX.datafix.fixes.ZombieVillagerRebuildXpFix",
            "XXX.util.datafix.package-info",
            "XXX.datafix.schemas.NamespacedSchema$1",
            "XXX.datafix.schemas.V102",
            "XXX.datafix.schemas.V106",
            "XXX.datafix.schemas.V1125",
            "XXX.datafix.schemas.V143",
            "XXX.datafix.schemas.V1451_1",
            "XXX.datafix.schemas.V1451_3",
            "XXX.datafix.schemas.V1451_5",
            "XXX.datafix.schemas.V1451_6$1",
            "XXX.datafix.schemas.V1458",
            "XXX.datafix.schemas.V1466",
            "XXX.datafix.schemas.V1481",
            "XXX.datafix.schemas.V1486",
            "XXX.datafix.schemas.V1510",
            "XXX.datafix.schemas.V1801",
            "XXX.datafix.schemas.V1906",
            "XXX.datafix.schemas.V1920",
            "XXX.datafix.schemas.V1928",
            "XXX.datafix.schemas.V1931",
            "XXX.datafix.schemas.V2501",
            "XXX.datafix.schemas.V2505",
            "XXX.datafix.schemas.V2511_1",
            "XXX.datafix.schemas.V2522",
            "XXX.datafix.schemas.V2568",
            "XXX.datafix.schemas.V2684",
            "XXX.datafix.schemas.V2688",
            "XXX.datafix.schemas.V2707",
            "XXX.datafix.schemas.V2832",
            "XXX.datafix.schemas.V3076",
            "XXX.datafix.schemas.V3081",
            "XXX.datafix.schemas.V3083",
            "XXX.datafix.schemas.V3203",
            "XXX.datafix.schemas.V3325",
            "XXX.datafix.schemas.V3327",
            "XXX.datafix.schemas.V3438",
            "XXX.datafix.schemas.V3448",
            "XXX.datafix.schemas.V3683",
            "XXX.datafix.schemas.V3689",
            "XXX.datafix.schemas.V3807",
            "XXX.datafix.schemas.V3808_1",
            "XXX.datafix.schemas.V3813",
            "XXX.datafix.schemas.V3818",
            "XXX.datafix.schemas.V3818_4",
            "XXX.datafix.schemas.V3825",
            "XXX.datafix.schemas.V4059",
            "XXX.datafix.schemas.V4070",
            "XXX.datafix.schemas.V4290",
            "XXX.datafix.schemas.V4300",
            "XXX.datafix.schemas.V4302",
            "XXX.datafix.schemas.V4307",
            "XXX.datafix.schemas.V501",
            "XXX.datafix.schemas.V701",
            "XXX.datafix.schemas.V703",
            "XXX.datafix.schemas.V704$1",
            "XXX.datafix.schemas.V705$1",
            "XXX.datafix.schemas.V99",
            "XXX.datafix.schemas.package-info",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionStartedAt",
            "XXX.util.debugchart.RemoteDebugSampleType",
            "XXX.util.debugchart.SampleLogger",
            "XXX.util.debugchart.TpsDebugDimensions",
            "XXX.util.eventlog.EventLogDirectory",
            "XXX.util.eventlog.EventLogDirectory$File",
            "XXX.util.eventlog.EventLogDirectory$FileList",
            "XXX.util.eventlog.JsonEventLog",
            "XXX.util.eventlog.JsonEventLogReader",
            "XXX.util.eventlog.package-info",
            "XXX.monitoring.jmx.MinecraftServerStatistics$AttributeDescription",
            "XXX.minecraft.util.package-info",
            "XXX.parsing.packrat.Atom",
            "XXX.parsing.packrat.Dictionary",
            "XXX.parsing.packrat.ErrorCollector$LongestOnly",
            "XXX.parsing.packrat.ParseState",
            "XXX.parsing.packrat.ParseState$CacheKey",
            "XXX.parsing.packrat.Rule$RuleAction",
            "XXX.parsing.packrat.Rule$WrappedTerm",
            "XXX.parsing.packrat.SuggestionSupplier",
            "XXX.parsing.packrat.Term$1",
            "XXX.parsing.packrat.Term$Alternative",
            "XXX.parsing.packrat.Term$Maybe",
            "XXX.parsing.packrat.Term$Sequence",
            "XXX.packrat.commands.ResourceLocationParseRule",
            "XXX.packrat.commands.ResourceSuggestion",
            "XXX.packrat.commands.StringReaderTerms",
            "XXX.packrat.commands.StringReaderTerms$TerminalWord",
            "XXX.packrat.commands.package-info",
            "XXX.util.profiling.ActiveProfiler",
            "XXX.util.profiling.ContinuousProfiler",
            "XXX.util.profiling.FilledProfileResults",
            "XXX.util.profiling.FilledProfileResults$CounterCollector",
            "XXX.util.profiling.ProfileCollector",
            "XXX.util.profiling.Profiler",
            "XXX.util.profiling.ProfilerFiller",
            "XXX.util.profiling.ProfilerPathEntry",
            "XXX.util.profiling.SingleTickProfiler",
            "XXX.util.profiling.TracyZoneFiller$PlotAndValue",
            "XXX.profiling.jfr.Environment",
            "XXX.profiling.jfr.JfrProfiler$1",
            "XXX.profiling.jfr.JvmProfiler$NoOpProfiler",
            "XXX.profiling.jfr.SummaryReporter",
            "XXX.jfr.callback.package-info",
            "XXX.jfr.event.ChunkGenerationEvent$Fields",
            "XXX.jfr.event.ChunkRegionIoEvent$Fields",
            "XXX.jfr.event.ChunkRegionWriteEvent",
            "XXX.jfr.event.NetworkSummaryEvent$Fields",
            "XXX.jfr.event.PacketEvent",
            "XXX.jfr.event.PacketReceivedEvent",
            "XXX.jfr.event.ServerTickTimeEvent",
            "XXX.jfr.event.StructureGenerationEvent",
            "XXX.jfr.event.WorldLoadFinishedEvent",
            "XXX.profiling.jfr.package-info",
            "XXX.jfr.parse.JfrStatsParser$1",
            "XXX.jfr.parse.JfrStatsResult",
            "XXX.jfr.serialize.JfrResultJsonSerializer",
            "XXX.jfr.stats.ChunkGenStat",
            "XXX.jfr.stats.CpuLoadStat",
            "XXX.jfr.stats.FileIOStat$Summary",
            "XXX.jfr.stats.GcHeapStat$Summary",
            "XXX.jfr.stats.IoSummary",
            "XXX.jfr.stats.PacketIdentification",
            "XXX.jfr.stats.ThreadAllocationStat",
            "XXX.jfr.stats.TickTimeStat",
            "XXX.jfr.stats.TimedStatSummary",
            "XXX.profiling.metrics.MetricCategory",
            "XXX.profiling.metrics.MetricSampler$MetricSamplerBuilder",
            "XXX.profiling.metrics.MetricSampler$ThresholdTest",
            "XXX.profiling.metrics.MetricsRegistry",
            "XXX.profiling.metrics.MetricsSamplerProvider",
            "XXX.profiling.metrics.package-info",
            "XXX.metrics.profiling.InactiveMetricsRecorder",
            "XXX.metrics.profiling.ProfilerSamplerAdapter",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$1",
            "XXX.metrics.profiling.package-info",
            "XXX.metrics.storage.RecordedDeviation",
            "XXX.util.profiling.package-info",
            "XXX.util.random.WeightedList",
            "XXX.util.random.WeightedList$Compact",
            "XXX.util.random.WeightedList$Selector",
            "XXX.util.random.package-info",
            "XXX.util.thread.AbstractConsecutiveExecutor$Status",
            "XXX.util.thread.ConsecutiveExecutor",
            "XXX.world.entity.Entity$FireStateVisitor",
            "XXX.world.entity.Entity$Movement",
            "XXX.world.entity.Entity$RemovalReason",
            "XXX.world.entity.EntityType$Builder",
            "XXX.world.entity.EquipmentSlot",
            "XXX.world.entity.EquipmentSlotGroup",
            "XXX.world.entity.EquipmentTable",
            "XXX.world.entity.ExperienceOrb",
            "XXX.world.entity.GlowSquid",
            "XXX.world.entity.HumanoidArm",
            "XXX.world.entity.Interaction$PlayerAction",
            "XXX.world.entity.InterpolationHandler$InterpolationData",
            "XXX.world.entity.ItemSteerable",
            "XXX.world.entity.Leashable$LeashData",
            "XXX.world.entity.LivingEntity",
            "XXX.world.entity.LivingEntity$Fallsounds",
            "XXX.world.entity.Mob",
            "XXX.world.entity.Mob$2",
            "XXX.world.entity.MoverType",
            "XXX.world.entity.OminousItemSpawner",
            "XXX.world.entity.PathfinderMob",
            "XXX.world.entity.PlayerRideableJumping",
            "XXX.world.entity.Pose",
            "XXX.world.entity.Relative",
            "XXX.world.entity.Shearable",
            "XXX.world.entity.SlotAccess$1",
            "XXX.world.entity.SlotAccess$3",
            "XXX.world.entity.SpawnGroupData",
            "XXX.world.entity.SpawnPlacementTypes",
            "XXX.world.entity.SpawnPlacements",
            "XXX.world.entity.SpawnPlacements$SpawnPredicate",
            "XXX.world.entity.TamableAnimal$TamableAnimalPanicGoal",
            "XXX.world.entity.TraceableEntity",
            "XXX.entity.ai.Brain",
            "XXX.entity.ai.Brain$MemoryValue",
            "XXX.ai.attributes.Attribute",
            "XXX.ai.attributes.AttributeInstance",
            "XXX.ai.attributes.AttributeModifier",
            "XXX.ai.attributes.AttributeSupplier",
            "XXX.ai.attributes.Attributes",
            "XXX.ai.attributes.RangedAttribute",
            "XXX.ai.behavior.AcquirePoi",
            "XXX.ai.behavior.AnimalMakeLove",
            "XXX.ai.behavior.AssignProfessionFromJobSite",
            "XXX.ai.behavior.BackUpIfTooClose",
            "XXX.ai.behavior.Behavior",
            "XXX.ai.behavior.BehaviorControl",
            "XXX.ai.behavior.BlockPosTracker",
            "XXX.ai.behavior.CopyMemoryWithExpiry",
            "XXX.ai.behavior.Croak",
            "XXX.ai.behavior.CrossbowAttack$CrossbowState",
            "XXX.ai.behavior.DoNothing",
            "XXX.ai.behavior.EraseMemoryIf",
            "XXX.ai.behavior.GateBehavior",
            "XXX.ai.behavior.GateBehavior$RunningPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$2",
            "XXX.ai.behavior.GoAndGiveItemsToTarget",
            "XXX.ai.behavior.GoToPotentialJobSite",
            "XXX.ai.behavior.GoToWantedItem",
            "XXX.ai.behavior.InsideBrownianWalk",
            "XXX.ai.behavior.InteractWithDoor",
            "XXX.ai.behavior.LocateHidingPlace",
            "XXX.ai.behavior.LongJumpToPreferredBlock",
            "XXX.ai.behavior.LongJumpToRandomPos$PossibleJump",
            "XXX.ai.behavior.LookAndFollowTradingPlayerSink",
            "XXX.ai.behavior.MeleeAttack",
            "XXX.ai.behavior.MoveToSkySeeingSpot",
            "XXX.ai.behavior.OneShot",
            "XXX.ai.behavior.PoiCompetitorScan",
            "XXX.ai.behavior.PrepareRamNearestTarget",
            "XXX.ai.behavior.RamTarget",
            "XXX.ai.behavior.RandomStroll",
            "XXX.ai.behavior.ResetProfession",
            "XXX.ai.behavior.RingBell",
            "XXX.ai.behavior.SetClosestHomeAsWalkTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes",
            "XXX.ai.behavior.SetHiddenState",
            "XXX.ai.behavior.SetRaidStatus",
            "XXX.ai.behavior.SetWalkTargetFromAttackTargetIfTargetOutOfReach",
            "XXX.ai.behavior.SetWalkTargetFromLookTarget",
            "XXX.ai.behavior.ShufflingList",
            "XXX.ai.behavior.ShufflingList$WeightedEntry$1",
            "XXX.ai.behavior.SocializeAtBell",
            "XXX.ai.behavior.StartAttacking$StartAttackingCondition",
            "XXX.ai.behavior.StartCelebratingIfTargetDead",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$TargetErasedCallback",
            "XXX.ai.behavior.StrollAroundPoi",
            "XXX.ai.behavior.StrollToPoiList",
            "XXX.ai.behavior.TradeWithVillager",
            "XXX.ai.behavior.TryFindLand",
            "XXX.ai.behavior.TryFindWater",
            "XXX.ai.behavior.UpdateActivityFromSchedule",
            "XXX.ai.behavior.ValidateNearbyPoi",
            "XXX.ai.behavior.VillagerCalmDown",
            "XXX.ai.behavior.VillagerMakeLove",
            "XXX.ai.behavior.WakeUp",
            "XXX.ai.behavior.WorkAtPoi",
            "XXX.behavior.declarative.BehaviorBuilder",
            "XXX.behavior.declarative.BehaviorBuilder$Constant",
            "XXX.behavior.declarative.BehaviorBuilder$Instance",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$2",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$4",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWithResult",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper$1",
            "XXX.behavior.declarative.MemoryCondition",
            "XXX.behavior.declarative.MemoryCondition$Present",
            "XXX.behavior.declarative.Trigger",
            "XXX.ai.behavior.package-info",
            "XXX.behavior.warden.Emerging",
            "XXX.behavior.warden.Roar",
            "XXX.behavior.warden.SetWardenLookTarget",
            "XXX.behavior.warden.SonicBoom",
            "XXX.behavior.warden.package-info",
            "XXX.ai.control.Control",
            "XXX.ai.control.JumpControl",
            "XXX.ai.control.MoveControl",
            "XXX.ai.control.SmoothSwimmingLookControl",
            "XXX.ai.control.package-info",
            "XXX.ai.goal.BegGoal",
            "XXX.ai.goal.BreakDoorGoal",
            "XXX.ai.goal.BreedGoal",
            "XXX.ai.goal.CatSitOnBlockGoal",
            "XXX.ai.goal.DolphinJumpGoal",
            "XXX.ai.goal.EatBlockGoal",
            "XXX.ai.goal.FloatGoal",
            "XXX.ai.goal.FollowFlockLeaderGoal",
            "XXX.ai.goal.FollowOwnerGoal",
            "XXX.ai.goal.Goal",
            "XXX.ai.goal.GoalSelector",
            "XXX.ai.goal.GoalSelector$2",
            "XXX.ai.goal.InteractGoal",
            "XXX.ai.goal.LandOnOwnersShoulderGoal",
            "XXX.ai.goal.LlamaFollowCaravanGoal",
            "XXX.ai.goal.LookAtTradingPlayerGoal",
            "XXX.ai.goal.MoveBackToVillageGoal",
            "XXX.ai.goal.MoveToBlockGoal",
            "XXX.ai.goal.MoveTowardsTargetGoal",
            "XXX.ai.goal.OfferFlowerGoal",
            "XXX.ai.goal.PanicGoal",
            "XXX.ai.goal.RandomLookAroundGoal",
            "XXX.ai.goal.RandomStrollGoal",
            "XXX.ai.goal.RangedAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal",
            "XXX.ai.goal.RemoveBlockGoal",
            "XXX.ai.goal.RunAroundLikeCrazyGoal",
            "XXX.ai.goal.StrollThroughVillageGoal",
            "XXX.ai.goal.TemptGoal",
            "XXX.ai.goal.TryFindWaterGoal",
            "XXX.ai.goal.WaterAvoidingRandomFlyingGoal",
            "XXX.ai.goal.WrappedGoal",
            "XXX.ai.goal.package-info",
            "XXX.goal.target.HurtByTargetGoal",
            "XXX.goal.target.NearestAttackableWitchTargetGoal",
            "XXX.goal.target.NonTameRandomTargetGoal",
            "XXX.goal.target.OwnerHurtTargetGoal",
            "XXX.goal.target.TargetGoal",
            "XXX.ai.gossip.GossipContainer",
            "XXX.ai.gossip.GossipContainer$GossipEntry",
            "XXX.ai.gossip.package-info",
            "XXX.ai.memory.MemoryModuleType",
            "XXX.ai.memory.NearestVisibleLivingEntities",
            "XXX.ai.memory.package-info",
            "XXX.ai.navigation.FlyingPathNavigation",
            "XXX.ai.navigation.PathNavigation",
            "XXX.ai.navigation.WaterBoundPathNavigation",
            "XXX.entity.ai.package-info",
            "XXX.ai.sensing.AxolotlAttackablesSensor",
            "XXX.ai.sensing.DummySensor",
            "XXX.ai.sensing.GolemSensor",
            "XXX.ai.sensing.HurtBySensor",
            "XXX.ai.sensing.MobSensor",
            "XXX.ai.sensing.NearestItemSensor",
            "XXX.ai.sensing.NearestVisibleLivingEntitySensor",
            "XXX.ai.sensing.PiglinSpecificSensor",
            "XXX.ai.sensing.SecondaryPoiSensor",
            "XXX.ai.sensing.Sensor",
            "XXX.ai.sensing.TemptingSensor",
            "XXX.ai.sensing.VillagerHostilesSensor",
            "XXX.ai.sensing.package-info",
            "XXX.ai.targeting.TargetingConditions$Selector",
            "XXX.ai.util.AirAndWaterRandomPos",
            "XXX.ai.util.DefaultRandomPos",
            "XXX.ai.util.HoverRandomPos",
            "XXX.ai.util.RandomPos",
            "XXX.ai.village.ReputationEventType",
            "XXX.ai.village.VillageSiege",
            "XXX.ai.village.package-info",
            "XXX.village.poi.PoiManager$DistanceTracker",
            "XXX.village.poi.PoiRecord",
            "XXX.village.poi.PoiSection",
            "XXX.village.poi.PoiType",
            "XXX.village.poi.package-info",
            "XXX.entity.ambient.Bat",
            "XXX.entity.animal.AbstractCow",
            "XXX.entity.animal.AbstractFish$FishMoveControl",
            "XXX.entity.animal.AbstractGolem",
            "XXX.entity.animal.AbstractSchoolingFish$SchoolSpawnGroupData",
            "XXX.entity.animal.Animal",
            "XXX.entity.animal.Bee$1",
            "XXX.entity.animal.Bee$BeeAttackGoal",
            "XXX.entity.animal.Bee$BeeEnterHiveGoal",
            "XXX.entity.animal.Bee$BeeGoToKnownFlowerGoal",
            "XXX.entity.animal.Bee$BeeHurtByOtherGoal",
            "XXX.entity.animal.Bee$BeeLookControl",
            "XXX.entity.animal.Bee$BeeWanderGoal",
            "XXX.entity.animal.Bee$ValidateHiveGoal",
            "XXX.entity.animal.Cat",
            "XXX.entity.animal.Cat$CatRelaxOnOwnerGoal",
            "XXX.entity.animal.CatVariant",
            "XXX.entity.animal.Chicken",
            "XXX.entity.animal.ChickenVariant$ModelType",
            "XXX.entity.animal.Cod",
            "XXX.entity.animal.CowVariant",
            "XXX.entity.animal.CowVariants",
            "XXX.entity.animal.Dolphin$DolphinSwimToTreasureGoal",
            "XXX.entity.animal.Dolphin$PlayWithItemsGoal",
            "XXX.entity.animal.Fox",
            "XXX.entity.animal.Fox$FaceplantGoal",
            "XXX.entity.animal.Fox$FoxBehaviorGoal",
            "XXX.entity.animal.Fox$FoxEatBerriesGoal",
            "XXX.entity.animal.Fox$FoxFollowParentGoal",
            "XXX.entity.animal.Fox$FoxLookAtPlayerGoal",
            "XXX.entity.animal.Fox$FoxMeleeAttackGoal",
            "XXX.entity.animal.Fox$FoxPanicGoal",
            "XXX.entity.animal.Fox$FoxSearchForItemsGoal",
            "XXX.entity.animal.Fox$PerchAndSearchGoal",
            "XXX.entity.animal.Fox$SleepGoal",
            "XXX.entity.animal.Fox$Variant",
            "XXX.entity.animal.MushroomCow",
            "XXX.entity.animal.Ocelot",
            "XXX.entity.animal.Ocelot$OcelotTemptGoal",
            "XXX.entity.animal.Panda$Gene",
            "XXX.entity.animal.Panda$PandaAvoidGoal",
            "XXX.entity.animal.Panda$PandaHurtByTargetGoal",
            "XXX.entity.animal.Panda$PandaLookAtPlayerGoal",
            "XXX.entity.animal.Panda$PandaPanicGoal",
            "XXX.entity.animal.Panda$PandaSitGoal",
            "XXX.entity.animal.Parrot",
            "XXX.entity.animal.Parrot$ParrotWanderGoal",
            "XXX.entity.animal.Pig",
            "XXX.entity.animal.PigVariant$ModelType",
            "XXX.entity.animal.PolarBear",
            "XXX.entity.animal.PolarBear$PolarBearHurtByTargetGoal",
            "XXX.entity.animal.Pufferfish",
            "XXX.entity.animal.Rabbit",
            "XXX.entity.animal.Rabbit$RabbitGroupData",
            "XXX.entity.animal.Rabbit$RabbitMoveControl",
            "XXX.entity.animal.Rabbit$RaidGardenGoal",
            "XXX.entity.animal.Salmon",
            "XXX.entity.animal.Sheep",
            "XXX.animal.sniffer.Sniffer",
            "XXX.animal.sniffer.SnifferAi",
            "XXX.animal.sniffer.SnifferAi$2",
            "XXX.animal.sniffer.SnifferAi$Digging",
            "XXX.animal.sniffer.SnifferAi$FinishedDigging",
            "XXX.animal.sniffer.SnifferAi$Searching",
            "XXX.animal.sniffer.package-info",
            "XXX.boss.enderdragon.DragonFlightHistory",
            "XXX.boss.enderdragon.EndCrystal",
            "XXX.boss.enderdragon.package-info",
            "XXX.enderdragon.phases.AbstractDragonSittingPhase",
            "XXX.enderdragon.phases.DragonDeathPhase",
            "XXX.enderdragon.phases.DragonHoverPhase",
            "XXX.enderdragon.phases.DragonLandingPhase",
            "XXX.enderdragon.phases.DragonSittingAttackingPhase",
            "XXX.enderdragon.phases.DragonSittingScanningPhase",
            "XXX.enderdragon.phases.DragonTakeoffPhase",
            "XXX.enderdragon.phases.EnderDragonPhaseManager",
            "XXX.entity.boss.package-info",
            "XXX.boss.wither.WitherBoss$WitherDoNothingGoal",
            "XXX.entity.decoration.ArmorStand",
            "XXX.entity.decoration.GlowItemFrame",
            "XXX.entity.decoration.HangingEntity$1",
            "XXX.entity.decoration.LeashFenceKnotEntity",
            "XXX.entity.decoration.PaintingVariant",
            "XXX.entity.decoration.package-info",
            "XXX.entity.item.ItemEntity",
            "XXX.entity.item.PrimedTnt$1",
            "XXX.entity.monster.AbstractIllager",
            "XXX.entity.monster.AbstractIllager$RaiderOpenDoorGoal",
            "XXX.entity.monster.AbstractSkeleton$1",
            "XXX.entity.monster.Blaze$BlazeAttackGoal",
            "XXX.entity.monster.CaveSpider",
            "XXX.entity.monster.CrossbowAttackMob",
            "XXX.entity.monster.Drowned$DrownedAttackGoal",
            "XXX.entity.monster.Drowned$DrownedGoToWaterGoal",
            "XXX.entity.monster.Drowned$DrownedSwimUpGoal",
            "XXX.entity.monster.ElderGuardian",
            "XXX.entity.monster.EnderMan$EndermanFreezeWhenLookedAt",
            "XXX.entity.monster.EnderMan$EndermanLookForPlayerGoal",
            "XXX.entity.monster.Endermite",
            "XXX.entity.monster.Evoker",
            "XXX.entity.monster.Evoker$EvokerCastingSpellGoal",
            "XXX.entity.monster.Evoker$EvokerWololoSpellGoal",
            "XXX.entity.monster.Ghast$GhastLookGoal",
            "XXX.entity.monster.Ghast$GhastShootFireballGoal",
            "XXX.entity.monster.Giant",
            "XXX.entity.monster.Guardian$GuardianAttackGoal",
            "XXX.entity.monster.Guardian$GuardianMoveControl",
            "XXX.entity.monster.Illusioner",
            "XXX.entity.monster.Illusioner$IllusionerMirrorSpellGoal",
            "XXX.entity.monster.Monster",
            "XXX.entity.monster.PatrollingMonster$LongDistancePatrolGoal",
            "XXX.entity.monster.Phantom$AttackPhase",
            "XXX.entity.monster.Phantom$PhantomAttackStrategyGoal",
            "XXX.entity.monster.Phantom$PhantomCircleAroundAnchorGoal",
            "XXX.entity.monster.Phantom$PhantomMoveControl",
            "XXX.entity.monster.Phantom$PhantomSweepAttackGoal",
            "XXX.entity.monster.RangedAttackMob",
            "XXX.entity.monster.Shulker",
            "XXX.entity.monster.Shulker$ShulkerBodyRotationControl",
            "XXX.entity.monster.Shulker$ShulkerLookControl",
            "XXX.entity.monster.Shulker$ShulkerPeekGoal",
            "XXX.entity.monster.Silverfish$SilverfishMergeWithStoneGoal",
            "XXX.entity.monster.Skeleton",
            "XXX.entity.monster.Slime$SlimeAttackGoal",
            "XXX.entity.monster.Slime$SlimeKeepOnJumpingGoal",
            "XXX.entity.monster.Slime$SlimeRandomDirectionGoal",
            "XXX.entity.monster.SpellcasterIllager$IllagerSpell",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterUseSpellGoal",
            "XXX.entity.monster.Spider$SpiderAttackGoal",
            "XXX.entity.monster.Spider$SpiderTargetGoal",
            "XXX.entity.monster.Strider",
            "XXX.entity.monster.Strider$StriderPathNavigation",
            "XXX.entity.monster.Vex$VexChargeAttackGoal",
            "XXX.entity.monster.Vex$VexMoveControl",
            "XXX.entity.monster.Vindicator",
            "XXX.entity.monster.Vindicator$VindicatorJohnnyAttackGoal",
            "XXX.entity.monster.WitherSkeleton",
            "XXX.entity.monster.Zombie",
            "XXX.entity.monster.Zombie$ZombieGroupData",
            "XXX.entity.monster.ZombifiedPiglin",
            "XXX.monster.breeze.Breeze$1",
            "XXX.monster.breeze.BreezeAi$SlideToTargetSink",
            "XXX.monster.breeze.LongJump",
            "XXX.monster.breeze.ShootWhenStuck",
            "XXX.monster.breeze.package-info",
            "XXX.monster.creaking.Creaking$CreakingBodyRotationControl",
            "XXX.monster.creaking.Creaking$CreakingLookControl",
            "XXX.monster.creaking.Creaking$CreakingPathNavigation",
            "XXX.monster.creaking.CreakingAi",
            "XXX.monster.creaking.package-info",
            "XXX.monster.hoglin.HoglinAi",
            "XXX.monster.hoglin.package-info",
            "XXX.monster.piglin.AbstractPiglin",
            "XXX.monster.piglin.PiglinAi",
            "XXX.monster.piglin.PiglinBrute",
            "XXX.monster.piglin.RememberIfHoglinWasKilled",
            "XXX.monster.piglin.StartHuntingHoglin",
            "XXX.monster.piglin.StopAdmiringIfTiredOfTryingToReachItem",
            "XXX.monster.piglin.package-info",
            "XXX.monster.warden.AngerManagement",
            "XXX.monster.warden.AngerManagement$Sorter",
            "XXX.monster.warden.Warden$1",
            "XXX.monster.warden.Warden$2",
            "XXX.monster.warden.WardenAi",
            "XXX.monster.warden.package-info",
            "XXX.entity.npc.CatSpawner",
            "XXX.entity.npc.InventoryCarrier",
            "XXX.entity.npc.Villager",
            "XXX.entity.npc.VillagerDataHolder",
            "XXX.entity.npc.VillagerTrades",
            "XXX.entity.npc.VillagerTrades$EmeraldForItems",
            "XXX.entity.npc.VillagerTrades$EnchantBookForEmeralds",
            "XXX.entity.npc.VillagerTrades$FailureItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
            "XXX.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
            "XXX.entity.npc.VillagerTrades$TreasureMapForEmeralds",
            "XXX.entity.npc.VillagerType",
            "XXX.entity.npc.WanderingTrader$WanderToPositionGoal",
            "XXX.entity.npc.package-info",
            "XXX.entity.player.Abilities",
            "XXX.entity.player.Input",
            "XXX.entity.player.Inventory",
            "XXX.entity.player.Player$1",
            "XXX.entity.player.Player$BedSleepingProblem",
            "XXX.entity.player.PlayerModelPart",
            "XXX.entity.player.ProfilePublicKey",
            "XXX.entity.player.ProfilePublicKey$ValidationException",
            "XXX.entity.player.StackedContents$IngredientInfo",
            "XXX.entity.player.StackedContents$RecipePicker",
            "XXX.entity.player.package-info",
            "XXX.entity.projectile.AbstractArrow$Pickup",
            "XXX.entity.projectile.AbstractThrownPotion",
            "XXX.entity.projectile.DragonFireball",
            "XXX.entity.projectile.EyeOfEnder",
            "XXX.entity.projectile.FireworkRocketEntity",
            "XXX.entity.projectile.FishingHook$FishHookState",
            "XXX.entity.projectile.ItemSupplier",
            "XXX.entity.projectile.LlamaSpit",
            "XXX.entity.projectile.Projectile$ProjectileFactory",
            "XXX.entity.projectile.ProjectileUtil",
            "XXX.entity.projectile.SmallFireball",
            "XXX.entity.projectile.SpectralArrow",
            "XXX.entity.projectile.ThrowableProjectile",
            "XXX.entity.projectile.ThrownEnderpearl",
            "XXX.entity.projectile.ThrownLingeringPotion",
            "XXX.entity.projectile.ThrownTrident",
            "XXX.entity.projectile.package-info",
            "XXX.projectile.windcharge.BreezeWindCharge",
            "XXX.projectile.windcharge.package-info",
            "XXX.entity.raid.Raid$1",
            "XXX.entity.raid.Raid$RaiderType",
            "XXX.entity.raid.Raider$HoldGroundAttackGoal",
            "XXX.entity.raid.Raider$RaiderCelebration",
            "XXX.entity.raid.Raids",
            "XXX.entity.raid.package-info",
            "XXX.entity.schedule.Keyframe",
            "XXX.entity.schedule.ScheduleBuilder",
            "XXX.entity.schedule.Timeline",
            "XXX.entity.variant.BiomeCheck",
            "XXX.entity.variant.MoonBrightnessCheck",
            "XXX.entity.variant.PriorityProvider$Selector",
            "XXX.entity.variant.PriorityProvider$UnpackedEntry",
            "XXX.entity.variant.SpawnConditions",
            "XXX.entity.variant.SpawnPrioritySelectors",
            "XXX.entity.variant.VariantUtils",
            "XXX.entity.vehicle.AbstractBoat",
            "XXX.entity.vehicle.AbstractChestBoat",
            "XXX.entity.vehicle.AbstractMinecartContainer",
            "XXX.entity.vehicle.ChestBoat",
            "XXX.entity.vehicle.ContainerEntity",
            "XXX.entity.vehicle.DismountHelper",
            "XXX.entity.vehicle.MinecartBehavior",
            "XXX.entity.vehicle.MinecartCommandBlock",
            "XXX.entity.vehicle.MinecartFurnace",
            "XXX.entity.vehicle.MinecartSpawner",
            "XXX.entity.vehicle.MinecartTNT",
            "XXX.entity.vehicle.NewMinecartBehavior$1",
            "XXX.entity.vehicle.NewMinecartBehavior$StepPartialTicks",
            "XXX.entity.vehicle.OldMinecartBehavior",
            "XXX.entity.vehicle.Raft",
            "XXX.entity.vehicle.package-info",
            "XXX.world.flag.FeatureFlag",
            "XXX.world.flag.FeatureFlagRegistry$Builder",
            "XXX.world.flag.FeatureFlagUniverse",
            "XXX.world.flag.package-info",
            "XXX.world.food.FoodData",
            "XXX.world.food.FoodProperties$Builder",
            "XXX.world.food.package-info",
            "XXX.world.inventory.AbstractContainerMenu$1",
            "XXX.world.inventory.AbstractCraftingMenu$1",
            "XXX.world.inventory.AbstractFurnaceMenu$1",
            "XXX.world.inventory.ArmorSlot",
            "XXX.world.inventory.BeaconMenu$1",
            "XXX.world.inventory.BlastFurnaceMenu",
            "XXX.world.inventory.BrewingStandMenu$FuelSlot",
            "XXX.world.inventory.BrewingStandMenu$PotionSlot",
            "XXX.world.inventory.CartographyTableMenu$1",
            "XXX.world.inventory.CartographyTableMenu$3",
            "XXX.world.inventory.CartographyTableMenu$5",
            "XXX.world.inventory.ClickAction",
            "XXX.world.inventory.ContainerData",
            "XXX.world.inventory.ContainerLevelAccess$1",
            "XXX.world.inventory.ContainerListener",
            "XXX.world.inventory.CrafterMenu",
            "XXX.world.inventory.CraftingContainer",
            "XXX.world.inventory.DataSlot",
            "XXX.world.inventory.DataSlot$2",
            "XXX.world.inventory.DispenserMenu",
            "XXX.world.inventory.EnchantmentMenu$1",
            "XXX.world.inventory.EnchantmentMenu$3",
            "XXX.world.inventory.FurnaceMenu",
            "XXX.world.inventory.GrindstoneMenu",
            "XXX.world.inventory.GrindstoneMenu$2",
            "XXX.world.inventory.GrindstoneMenu$4",
            "XXX.world.inventory.HorseInventoryMenu",
            "XXX.world.inventory.HorseInventoryMenu$2",
            "XXX.world.inventory.InventoryMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$1",
            "XXX.world.inventory.ItemCombinerMenu$3",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition",
            "XXX.world.inventory.LecternMenu$1",
            "XXX.world.inventory.LoomMenu$1",
            "XXX.world.inventory.LoomMenu$3",
            "XXX.world.inventory.LoomMenu$5",
            "XXX.world.inventory.MenuConstructor",
            "XXX.world.inventory.MenuType$MenuSupplier",
            "XXX.world.inventory.MerchantMenu",
            "XXX.world.inventory.NonInteractiveResultSlot",
            "XXX.world.inventory.RecipeBookMenu",
            "XXX.world.inventory.RecipeBookType",
            "XXX.world.inventory.ResultContainer",
            "XXX.world.inventory.ShulkerBoxMenu",
            "XXX.world.inventory.SimpleContainerData",
            "XXX.world.inventory.SlotRange",
            "XXX.world.inventory.SlotRanges",
            "XXX.world.inventory.SmokerMenu",
            "XXX.world.inventory.StonecutterMenu",
            "XXX.world.inventory.StonecutterMenu$2",
            "XXX.world.inventory.package-info",
            "XXX.inventory.tooltip.TooltipComponent",
            "XXX.world.item.AdventureModePredicate",
            "XXX.world.item.ArmorStandItem",
            "XXX.world.item.AxeItem",
            "XXX.world.item.BedItem",
            "XXX.world.item.BoatItem",
            "XXX.world.item.BoneMealItem$1",
            "XXX.world.item.BowItem",
            "XXX.world.item.BrushItem$1",
            "XXX.world.item.BucketItem",
            "XXX.world.item.BundleItem$1",
            "XXX.world.item.CreativeModeTab",
            "XXX.world.item.CreativeModeTab$DisplayItemsGenerator",
            "XXX.world.item.CreativeModeTab$ItemDisplayParameters",
            "XXX.world.item.CreativeModeTab$Row",
            "XXX.world.item.CreativeModeTab$Type",
            "XXX.world.item.CrossbowItem",
            "XXX.world.item.CrossbowItem$ChargingSounds",
            "XXX.world.item.DiscFragmentItem",
            "XXX.world.item.DoubleHighBlockItem",
            "XXX.world.item.DyeItem",
            "XXX.world.item.EitherHolder",
            "XXX.world.item.EndCrystalItem",
            "XXX.world.item.EnderpearlItem",
            "XXX.world.item.FireChargeItem",
            "XXX.world.item.FishingRodItem",
            "XXX.world.item.FoodOnAStickItem",
            "XXX.world.item.GlowInkSacItem",
            "XXX.world.item.HangingSignItem",
            "XXX.world.item.HoneycombItem",
            "XXX.world.item.Instrument",
            "XXX.world.item.Instruments",
            "XXX.world.item.Item$Properties",
            "XXX.world.item.Item$TooltipContext$1",
            "XXX.world.item.Item$TooltipContext$3",
            "XXX.world.item.ItemCooldowns$CooldownInstance",
            "XXX.world.item.ItemFrameItem",
            "XXX.world.item.ItemStack$1",
            "XXX.world.item.ItemStack$3",
            "XXX.world.item.ItemStackLinkedSet",
            "XXX.world.item.ItemUseAnimation",
            "XXX.world.item.Items",
            "XXX.world.item.JukeboxSong",
            "XXX.world.item.JukeboxSongPlayer$OnSongChanged",
            "XXX.world.item.KnowledgeBookItem",
            "XXX.world.item.LingeringPotionItem",
            "XXX.world.item.MapItem",
            "XXX.world.item.MinecartItem",
            "XXX.world.item.NameTagItem",
            "XXX.world.item.PlayerHeadItem",
            "XXX.world.item.ProjectileItem",
            "XXX.world.item.ProjectileItem$DispenseConfig$Builder",
            "XXX.world.item.ProjectileWeaponItem",
            "XXX.world.item.ScaffoldingBlockItem",
            "XXX.world.item.ShearsItem",
            "XXX.world.item.ShovelItem",
            "XXX.world.item.SignItem",
            "XXX.world.item.SnowballItem",
            "XXX.world.item.SpawnEggItem",
            "XXX.world.item.SplashPotionItem",
            "XXX.world.item.StandingAndWallBlockItem",
            "XXX.world.item.TippedArrowItem",
            "XXX.world.item.TooltipFlag",
            "XXX.world.item.TridentItem",
            "XXX.world.item.WritableBookItem",
            "XXX.item.alchemy.Potion",
            "XXX.item.alchemy.PotionBrewing$Builder",
            "XXX.item.alchemy.PotionContents",
            "XXX.item.alchemy.package-info",
            "XXX.item.component.BlockItemStateProperties",
            "XXX.item.component.BlocksAttacks$DamageReduction",
            "XXX.item.component.BookContent",
            "XXX.item.component.BundleContents$Mutable",
            "XXX.item.component.Consumable",
            "XXX.item.component.Consumable$OverrideConsumeSound",
            "XXX.item.component.Consumables",
            "XXX.item.component.CustomModelData",
            "XXX.item.component.DeathProtection",
            "XXX.item.component.DyedItemColor",
            "XXX.item.component.FireworkExplosion$Shape",
            "XXX.item.component.InstrumentComponent",
            "XXX.item.component.ItemAttributeModifiers$1",
            "XXX.item.component.ItemAttributeModifiers$Entry",
            "XXX.item.component.ItemContainerContents$Slot",
            "XXX.item.component.LodestoneTracker",
            "XXX.item.component.MapDecorations$Entry",
            "XXX.item.component.MapPostProcessing",
            "XXX.item.component.ProvidesTrimMaterial",
            "XXX.item.component.SeededContainerLoot",
            "XXX.item.component.SuspiciousStewEffects$Entry",
            "XXX.item.component.Tool$Rule",
            "XXX.item.component.TooltipProvider",
            "XXX.item.component.UseRemainder",
            "XXX.item.component.Weapon",
            "XXX.item.component.WrittenBookContent",
            "XXX.item.consume_effects.ApplyStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect",
            "XXX.item.consume_effects.PlaySoundConsumeEffect",
            "XXX.item.consume_effects.TeleportRandomlyConsumeEffect",
            "XXX.item.context.BlockPlaceContext",
            "XXX.item.context.DirectionalPlaceContext$1",
            "XXX.item.context.package-info",
            "XXX.item.crafting.AbstractCookingRecipe$Factory",
            "XXX.item.crafting.ArmorDyeRecipe",
            "XXX.item.crafting.BlastingRecipe",
            "XXX.item.crafting.BookCloningRecipe",
            "XXX.item.crafting.CookingBookCategory",
            "XXX.item.crafting.CraftingInput",
            "XXX.item.crafting.CraftingRecipe",
            "XXX.item.crafting.CustomRecipe",
            "XXX.item.crafting.CustomRecipe$Serializer$Factory",
            "XXX.item.crafting.ExtendedRecipeBookCategory",
            "XXX.item.crafting.FireworkStarFadeRecipe",
            "XXX.item.crafting.Ingredient",
            "XXX.item.crafting.MapExtendingRecipe",
            "XXX.item.crafting.Recipe",
            "XXX.item.crafting.RecipeBookCategories",
            "XXX.item.crafting.RecipeCache",
            "XXX.item.crafting.RecipeHolder",
            "XXX.item.crafting.RecipeManager",
            "XXX.item.crafting.RecipeManager$CachedCheck",
            "XXX.item.crafting.RecipeManager$IngredientExtractor",
            "XXX.item.crafting.RecipeMap",
            "XXX.item.crafting.RecipeSerializer",
            "XXX.item.crafting.RecipeType$1",
            "XXX.item.crafting.SelectableRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputSet",
            "XXX.item.crafting.ShapedRecipe$Serializer",
            "XXX.item.crafting.ShapedRecipePattern$Data",
            "XXX.item.crafting.ShapelessRecipe$Serializer",
            "XXX.item.crafting.SingleItemRecipe",
            "XXX.item.crafting.SingleItemRecipe$Serializer",
            "XXX.item.crafting.SmeltingRecipe",
            "XXX.item.crafting.SmithingRecipe",
            "XXX.item.crafting.SmithingTransformRecipe",
            "XXX.item.crafting.SmithingTrimRecipe",
            "XXX.item.crafting.SmokingRecipe",
            "XXX.item.crafting.TippedArrowRecipe",
            "XXX.item.crafting.TransmuteRecipe$Serializer",
            "XXX.crafting.display.DisplayContentsFactory",
            "XXX.crafting.display.DisplayContentsFactory$ForStacks",
            "XXX.crafting.display.RecipeDisplay",
            "XXX.crafting.display.RecipeDisplayEntry",
            "XXX.crafting.display.RecipeDisplays",
            "XXX.crafting.display.ShapelessCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay$AnyFuel",
            "XXX.crafting.display.SlotDisplay$Empty",
            "XXX.crafting.display.SlotDisplay$ItemStackContentsFactory",
            "XXX.crafting.display.SlotDisplay$SmithingTrimDemoSlotDisplay",
            "XXX.crafting.display.SlotDisplay$Type",
            "XXX.crafting.display.SlotDisplayContext",
            "XXX.crafting.display.SmithingRecipeDisplay",
            "XXX.crafting.display.package-info",
            "XXX.item.enchantment.ConditionalEffect",
            "XXX.item.enchantment.EnchantedItemInUse",
            "XXX.item.enchantment.Enchantment$1",
            "XXX.item.enchantment.Enchantment$Cost",
            "XXX.item.enchantment.EnchantmentEffectComponents",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor",
            "XXX.item.enchantment.EnchantmentInstance",
            "XXX.item.enchantment.Enchantments",
            "XXX.item.enchantment.ItemEnchantments$Mutable",
            "XXX.item.enchantment.LevelBasedValue$Clamped",
            "XXX.item.enchantment.LevelBasedValue$Fraction",
            "XXX.item.enchantment.LevelBasedValue$Linear",
            "XXX.item.enchantment.Repairable",
            "XXX.enchantment.effects.AddValue",
            "XXX.enchantment.effects.AllOf$EntityEffects",
            "XXX.enchantment.effects.AllOf$ValueEffects",
            "XXX.enchantment.effects.ChangeItemDamage",
            "XXX.enchantment.effects.DamageImmunity",
            "XXX.enchantment.effects.EnchantmentEntityEffect",
            "XXX.enchantment.effects.EnchantmentValueEffect",
            "XXX.enchantment.effects.Ignite",
            "XXX.enchantment.effects.PlaySoundEffect",
            "XXX.enchantment.effects.ReplaceBlock",
            "XXX.enchantment.effects.RunFunction",
            "XXX.enchantment.effects.SetValue",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSource",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType$CoordinateSource",
            "XXX.enchantment.effects.SummonEntityEffect",
            "XXX.item.enchantment.package-info",
            "XXX.enchantment.providers.EnchantmentProviderTypes",
            "XXX.enchantment.providers.EnchantmentsByCostWithDifficulty",
            "XXX.enchantment.providers.TradeRebalanceEnchantmentProviders",
            "XXX.enchantment.providers.package-info",
            "XXX.item.equipment.ArmorMaterial",
            "XXX.item.equipment.ArmorType",
            "XXX.item.equipment.EquipmentAssets",
            "XXX.item.equipment.Equippable$Builder",
            "XXX.equipment.trim.ArmorTrim",
            "XXX.equipment.trim.MaterialAssetGroup$AssetInfo",
            "XXX.equipment.trim.TrimMaterials",
            "XXX.equipment.trim.TrimPatterns",
            "XXX.world.item.package-info",
            "XXX.item.trading.Merchant",
            "XXX.item.trading.MerchantOffers",
            "XXX.world.level.BaseCommandBlock",
            "XXX.world.level.BlockAndTintGetter",
            "XXX.world.level.BlockEventData",
            "XXX.pools.alias.RandomGroup",
            "XXX.level.timers.FunctionTagCallback",
            "XXX.level.timers.TimerCallbacks",
            "XXX.level.timers.TimerQueue$Event",
            "XXX.level.validation.ContentValidationException",
            "XXX.level.validation.DirectoryValidator$1",
            "XXX.level.validation.PathAllowList",
            "XXX.level.validation.PathAllowList$EntryType",
            "XXX.minecraft.world.package-info"
          ],
          "removed": [
            "XXX.mojang.blaze3d.MethodsReturnNonnullByDefault",
            "XXX.mojang.blaze3d.ProjectionType$LayeringTransform",
            "XXX.mojang.blaze3d.TracyBootstrap$1",
            "XXX.blaze3d.audio.Channel",
            "XXX.blaze3d.audio.Library$1",
            "XXX.blaze3d.audio.Library$CountingChannelPool",
            "XXX.blaze3d.audio.Listener",
            "XXX.blaze3d.audio.OpenAlUtil",
            "XXX.blaze3d.audio.package-info",
            "XXX.blaze3d.buffers.BufferUsage",
            "XXX.blaze3d.buffers.GpuBuffer$ReadView",
            "XXX.blaze3d.buffers.package-info",
            "XXX.blaze3d.font.GlyphInfo$SpaceGlyphInfo",
            "XXX.blaze3d.font.GlyphProvider$Conditional",
            "XXX.blaze3d.font.SpaceProvider",
            "XXX.blaze3d.font.TrueTypeGlyphProvider",
            "XXX.blaze3d.font.TrueTypeGlyphProvider$Glyph$1",
            "XXX.blaze3d.font.package-info",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$ExternalResource",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$Inspector",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$InternalVirtualResource",
            "XXX.blaze3d.framegraph.FrameGraphBuilder$VirtualResource",
            "XXX.blaze3d.framegraph.package-info",
            "XXX.blaze3d.pipeline.BlendFunction",
            "XXX.blaze3d.pipeline.MainTarget$Dimension",
            "XXX.blaze3d.pipeline.RenderPipeline",
            "XXX.blaze3d.pipeline.RenderPipeline$Builder",
            "XXX.blaze3d.pipeline.RenderPipeline$UniformDescription",
            "XXX.blaze3d.platform.NativeImage$WriteCallback",
            "XXX.blaze3d.platform.TextureUtil",
            "XXX.blaze3d.platform.Window",
            "XXX.blaze3d.platform.WindowEventHandler",
            "XXX.blaze3d.preprocessor.GlslPreprocessor",
            "XXX.blaze3d.preprocessor.package-info",
            "XXX.blaze3d.resource.CrossFrameResourcePool$ResourceEntry",
            "XXX.blaze3d.resource.GraphicsResourceAllocator$1",
            "XXX.blaze3d.resource.ResourceDescriptor",
            "XXX.blaze3d.resource.package-info",
            "XXX.blaze3d.shaders.CompiledShader",
            "XXX.blaze3d.shaders.FogShape",
            "XXX.blaze3d.shaders.Uniform$Type",
            "XXX.blaze3d.textures.AddressMode",
            "XXX.blaze3d.textures.GpuTexture",
            "XXX.blaze3d.textures.TextureFormat",
            "XXX.mojang.math.SymmetricGroup3",
            "XXX.mojang.math.package-info",
            "XXX.mojang.realmsclient.RealmsAvailability$Result",
            "XXX.mojang.realmsclient.RealmsMainScreen",
            "XXX.mojang.realmsclient.RealmsMainScreen$2",
            "XXX.mojang.realmsclient.RealmsMainScreen$ButtonEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$EmptyEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$LayoutState",
            "XXX.mojang.realmsclient.RealmsMainScreen$NotificationMessageEntry",
            "XXX.mojang.realmsclient.RealmsMainScreen$RealmSelectionList",
            "XXX.mojang.realmsclient.RealmsMainScreen$ServerEntry",
            "XXX.realmsclient.client.FileDownload",
            "XXX.realmsclient.client.FileDownload$ProgressListener",
            "XXX.realmsclient.client.FileUpload",
            "XXX.realmsclient.client.Ping",
            "XXX.realmsclient.client.RealmsClient",
            "XXX.realmsclient.client.RealmsClient$Environment",
            "XXX.realmsclient.client.RealmsError",
            "XXX.realmsclient.client.RealmsError$CustomError",
            "XXX.realmsclient.client.RealmsError$ErrorWithRawPayload",
            "XXX.realmsclient.client.Request$Delete",
            "XXX.realmsclient.client.Request$Post",
            "XXX.realmsclient.client.UploadStatus",
            "XXX.client.worldupload.RealmsCreateWorldFlow",
            "XXX.client.worldupload.RealmsUploadException",
            "XXX.client.worldupload.RealmsUploadTooLargeException",
            "XXX.client.worldupload.RealmsUploadWorldPacker",
            "XXX.client.worldupload.RealmsWorldUploadStatusTracker",
            "XXX.client.worldupload.package-info",
            "XXX.realmsclient.dto.BackupList",
            "XXX.realmsclient.dto.Ops",
            "XXX.realmsclient.dto.PendingInvitesList",
            "XXX.realmsclient.dto.PlayerInfo",
            "XXX.realmsclient.dto.RealmsNews",
            "XXX.realmsclient.dto.RealmsNotification$InfoPopup",
            "XXX.realmsclient.dto.RealmsNotification$VisitUrl",
            "XXX.realmsclient.dto.RealmsServer$Compatibility",
            "XXX.realmsclient.dto.RealmsServer$State",
            "XXX.realmsclient.dto.RealmsServerAddress",
            "XXX.realmsclient.dto.RealmsServerPlayerLists",
            "XXX.realmsclient.dto.RealmsText",
            "XXX.realmsclient.dto.RealmsWorldResetDto",
            "XXX.realmsclient.dto.RegionPingResult",
            "XXX.realmsclient.dto.ServerActivityList",
            "XXX.realmsclient.dto.Subscription$SubscriptionType",
            "XXX.realmsclient.dto.ValueObject",
            "XXX.realmsclient.dto.WorldTemplate",
            "XXX.realmsclient.dto.WorldTemplatePaginatedList",
            "XXX.realmsclient.exception.RealmsDefaultUncaughtExceptionHandler",
            "XXX.realmsclient.exception.RealmsServiceException",
            "XXX.realmsclient.exception.package-info",
            "XXX.realmsclient.gui.RealmsDataFetcher$ServerListData",
            "XXX.realmsclient.gui.RealmsServerList",
            "XXX.realmsclient.gui.RealmsWorldSlotButton$Action",
            "XXX.realmsclient.gui.RowButton",
            "XXX.gui.screens.AddRealmPopupScreen",
            "XXX.gui.screens.RealmsBackupInfoScreen$BackupInfoList",
            "XXX.gui.screens.RealmsBackupScreen",
            "XXX.gui.screens.RealmsBackupScreen$BackupObjectSelectionList",
            "XXX.gui.screens.RealmsBrokenWorldScreen",
            "XXX.gui.screens.RealmsConfigureWorldScreen",
            "XXX.gui.screens.RealmsConfirmScreen",
            "XXX.gui.screens.RealmsDownloadLatestWorldScreen",
            "XXX.gui.screens.RealmsGenericErrorScreen",
            "XXX.gui.screens.RealmsInviteScreen",
            "XXX.gui.screens.RealmsLongRunningMcoTickTaskScreen",
            "XXX.gui.screens.RealmsNotificationsScreen$1",
            "XXX.gui.screens.RealmsNotificationsScreen$DataFetcherConfiguration",
            "XXX.gui.screens.RealmsPendingInvitesScreen",
            "XXX.gui.screens.RealmsPendingInvitesScreen$Entry$AcceptRowButton",
            "XXX.gui.screens.RealmsPendingInvitesScreen$PendingInvitationSelectionList",
            "XXX.gui.screens.RealmsPlayerScreen$Entry",
            "XXX.gui.screens.RealmsPopups",
            "XXX.gui.screens.RealmsResetWorldScreen$1",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen",
            "XXX.gui.screens.RealmsSelectFileToUploadScreen$WorldSelectionList",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$1",
            "XXX.gui.screens.RealmsSelectWorldTemplateScreen$WorldTemplateList",
            "XXX.gui.screens.RealmsSlotOptionsScreen",
            "XXX.gui.screens.RealmsSubscriptionInfoScreen",
            "XXX.gui.screens.RealmsTermsScreen",
            "XXX.gui.screens.UploadResult",
            "XXX.gui.screens.package-info",
            "XXX.gui.task.DataFetcher$ComputationResult",
            "XXX.gui.task.DataFetcher$Subscription",
            "XXX.gui.task.DataFetcher$Task",
            "XXX.gui.task.RepeatedDelayStrategy$1",
            "XXX.gui.task.package-info",
            "XXX.realmsclient.util.JsonUtils",
            "XXX.realmsclient.util.RealmsPersistence",
            "XXX.realmsclient.util.RealmsTextureManager",
            "XXX.realmsclient.util.RealmsUtil",
            "XXX.realmsclient.util.TextRenderingUtils$Line",
            "XXX.realmsclient.util.UploadTokenCache",
            "XXX.util.task.CloseServerTask",
            "XXX.util.task.DownloadTask",
            "XXX.util.task.LongRunningTask",
            "XXX.util.task.RealmCreationTask",
            "XXX.util.task.ResettingWorldTask",
            "XXX.util.task.SwitchMinigameTask",
            "XXX.util.task.package-info",
            "net.minecraft.BlockUtil$FoundRectangle",
            "net.minecraft.CharPredicate",
            "net.minecraft.CrashReport",
            "net.minecraft.CrashReportCategory$Entry",
            "net.minecraft.DefaultUncaughtExceptionHandler",
            "net.minecraft.DetectedVersion",
            "net.minecraft.FileUtil",
            "net.minecraft.Optionull",
            "net.minecraft.ReportedException",
            "net.minecraft.SharedConstants",
            "net.minecraft.SystemReport",
            "net.minecraft.Util",
            "net.minecraft.Util$10",
            "net.minecraft.Util$2",
            "net.minecraft.Util$6",
            "net.minecraft.Util$8",
            "net.minecraft.Util$OS",
            "net.minecraft.Util$OS$2",
            "XXX.minecraft.advancements.Advancement",
            "XXX.minecraft.advancements.AdvancementHolder",
            "XXX.minecraft.advancements.AdvancementProgress",
            "XXX.minecraft.advancements.AdvancementRequirements$Strategy",
            "XXX.minecraft.advancements.AdvancementRewards$Builder",
            "XXX.minecraft.advancements.AdvancementTree$Listener",
            "XXX.minecraft.advancements.CriteriaTriggers",
            "XXX.minecraft.advancements.CriterionProgress",
            "XXX.minecraft.advancements.CriterionTrigger$Listener",
            "XXX.minecraft.advancements.DisplayInfo",
            "XXX.advancements.critereon.AnyBlockInteractionTrigger",
            "XXX.advancements.critereon.BeeNestDestroyedTrigger",
            "XXX.advancements.critereon.BlockPredicate",
            "XXX.advancements.critereon.BredAnimalsTrigger",
            "XXX.advancements.critereon.BrewedPotionTrigger",
            "XXX.advancements.critereon.ChangeDimensionTrigger",
            "XXX.advancements.critereon.ChanneledLightningTrigger",
            "XXX.advancements.critereon.CollectionContentsPredicate",
            "XXX.advancements.critereon.CollectionContentsPredicate$Single",
            "XXX.advancements.critereon.CollectionCountsPredicate",
            "XXX.advancements.critereon.CollectionCountsPredicate$Multiple",
            "XXX.advancements.critereon.CollectionCountsPredicate$Zero",
            "XXX.advancements.critereon.ConstructBeaconTrigger",
            "XXX.advancements.critereon.ConsumeItemTrigger",
            "XXX.advancements.critereon.ContextAwarePredicate",
            "XXX.advancements.critereon.CuredZombieVillagerTrigger",
            "XXX.advancements.critereon.DamagePredicate",
            "XXX.advancements.critereon.DamageSourcePredicate",
            "XXX.advancements.critereon.DefaultBlockInteractionTrigger",
            "XXX.advancements.critereon.DistancePredicate",
            "XXX.advancements.critereon.DistanceTrigger$TriggerInstance",
            "XXX.advancements.critereon.EffectsChangedTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnchantedItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.EnterBlockTrigger",
            "XXX.advancements.critereon.EntityEquipmentPredicate",
            "XXX.advancements.critereon.EntityFlagsPredicate",
            "XXX.advancements.critereon.EntityHurtPlayerTrigger",
            "XXX.advancements.critereon.EntityPredicate",
            "XXX.advancements.critereon.EntityPredicate$LocationWrapper",
            "XXX.advancements.critereon.EntitySubPredicates",
            "XXX.advancements.critereon.FallAfterExplosionTrigger",
            "XXX.advancements.critereon.FilledBucketTrigger",
            "XXX.advancements.critereon.FishingHookPredicate",
            "XXX.advancements.critereon.FishingRodHookedTrigger$TriggerInstance",
            "XXX.advancements.critereon.FluidPredicate$Builder",
            "XXX.advancements.critereon.ImpossibleTrigger",
            "XXX.advancements.critereon.InputPredicate",
            "XXX.advancements.critereon.InventoryChangeTrigger$TriggerInstance",
            "XXX.advancements.critereon.ItemDurabilityTrigger",
            "XXX.advancements.critereon.ItemPredicate",
            "XXX.advancements.critereon.ItemUsedOnLocationTrigger",
            "XXX.advancements.critereon.KilledByArrowTrigger",
            "XXX.advancements.critereon.KilledTrigger",
            "XXX.advancements.critereon.LevitationTrigger",
            "XXX.advancements.critereon.LightPredicate",
            "XXX.advancements.critereon.LightningBoltPredicate",
            "XXX.advancements.critereon.LightningStrikeTrigger$TriggerInstance",
            "XXX.advancements.critereon.LocationPredicate$Builder",
            "XXX.advancements.critereon.LootTableTrigger",
            "XXX.advancements.critereon.MinMaxBounds",
            "XXX.advancements.critereon.MinMaxBounds$BoundsFactory",
            "XXX.advancements.critereon.MinMaxBounds$Doubles",
            "XXX.advancements.critereon.MobEffectsPredicate",
            "XXX.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate",
            "XXX.advancements.critereon.NbtPredicate",
            "XXX.advancements.critereon.PickedUpItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerHurtEntityTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerInteractTrigger$TriggerInstance",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementCriterionsPredicate",
            "XXX.advancements.critereon.PlayerPredicate$AdvancementPredicate",
            "XXX.advancements.critereon.PlayerPredicate$StatMatcher",
            "XXX.advancements.critereon.PlayerTrigger$TriggerInstance",
            "XXX.advancements.critereon.RecipeCraftedTrigger",
            "XXX.advancements.critereon.RecipeUnlockedTrigger",
            "XXX.advancements.critereon.SheepPredicate",
            "XXX.advancements.critereon.ShotCrossbowTrigger$TriggerInstance",
            "XXX.advancements.critereon.SimpleCriterionTrigger$SimpleInstance",
            "XXX.advancements.critereon.SlideDownBlockTrigger",
            "XXX.advancements.critereon.SlimePredicate",
            "XXX.advancements.critereon.StartRidingTrigger",
            "XXX.advancements.critereon.StatePropertiesPredicate",
            "XXX.advancements.critereon.StatePropertiesPredicate$ExactMatcher",
            "XXX.advancements.critereon.StatePropertiesPredicate$RangedMatcher",
            "XXX.advancements.critereon.SummonedEntityTrigger",
            "XXX.advancements.critereon.TagPredicate",
            "XXX.advancements.critereon.TameAnimalTrigger$TriggerInstance",
            "XXX.advancements.critereon.TargetBlockTrigger$TriggerInstance",
            "XXX.advancements.critereon.TradeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedEnderEyeTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsedTotemTrigger$TriggerInstance",
            "XXX.advancements.critereon.UsingItemTrigger$TriggerInstance",
            "XXX.advancements.critereon.package-info",
            "XXX.minecraft.client.AttackIndicatorStatus",
            "XXX.minecraft.client.Camera$NearPlane",
            "XXX.minecraft.client.ClientBootstrap",
            "XXX.minecraft.client.ClientRecipeBook",
            "XXX.minecraft.client.CommandHistory",
            "XXX.minecraft.client.DebugQueryHandler",
            "XXX.minecraft.client.DeltaTracker$DefaultValue",
            "XXX.minecraft.client.GameNarrator",
            "XXX.minecraft.client.GraphicsStatus",
            "XXX.minecraft.client.GuiMessage$Line",
            "XXX.minecraft.client.GuiMessageTag$Icon",
            "XXX.minecraft.client.InactivityFpsLimit",
            "XXX.minecraft.client.KeyMapping",
            "XXX.minecraft.client.KeyboardHandler$1",
            "XXX.minecraft.client.Minecraft$1",
            "XXX.minecraft.client.Minecraft$ChatStatus",
            "XXX.minecraft.client.Minecraft$ChatStatus$2",
            "XXX.minecraft.client.Minecraft$ChatStatus$4",
            "XXX.minecraft.client.MouseHandler",
            "XXX.minecraft.client.OptionInstance",
            "XXX.minecraft.client.OptionInstance$CaptionBasedToString",
            "XXX.minecraft.client.OptionInstance$CycleableValueSet",
            "XXX.minecraft.client.OptionInstance$Enum",
            "XXX.minecraft.client.OptionInstance$IntRangeBase",
            "XXX.minecraft.client.OptionInstance$LazyEnum",
            "XXX.minecraft.client.OptionInstance$SliderableOrCyclableValueSet",
            "XXX.minecraft.client.OptionInstance$TooltipSupplier",
            "XXX.minecraft.client.OptionInstance$UnitDouble$1",
            "XXX.minecraft.client.Options",
            "XXX.minecraft.client.Options$2",
            "XXX.minecraft.client.Options$4",
            "XXX.minecraft.client.Options$FieldAccess",
            "XXX.minecraft.client.PeriodicNotificationManager",
            "XXX.minecraft.client.PeriodicNotificationManager$NotificationTask",
            "XXX.minecraft.client.ResourceLoadStateTracker",
            "XXX.minecraft.client.ResourceLoadStateTracker$ReloadReason",
            "XXX.minecraft.client.Screenshot",
            "XXX.minecraft.client.StringSplitter",
            "XXX.minecraft.client.StringSplitter$FlatComponents",
            "XXX.minecraft.client.StringSplitter$LineComponent",
            "XXX.minecraft.client.StringSplitter$WidthLimitedCharSink",
            "XXX.minecraft.client.ToggleKeyMapping",
            "XXX.minecraft.client.User$Type",
            "XXX.client.animation.AnimationChannel$Interpolation",
            "XXX.client.animation.AnimationChannel$Target",
            "XXX.client.animation.AnimationDefinition",
            "XXX.client.animation.Keyframe",
            "XXX.animation.definitions.ArmadilloAnimation",
            "XXX.animation.definitions.BreezeAnimation",
            "XXX.animation.definitions.CreakingAnimation",
            "XXX.animation.definitions.SnifferAnimation",
            "XXX.animation.definitions.package-info",
            "XXX.color.block.BlockColor",
            "XXX.color.block.BlockTintCache",
            "XXX.color.block.BlockTintCache$LatestCacheInfo",
            "XXX.color.item.Constant",
            "XXX.color.item.Dye",
            "XXX.color.item.GrassColorSource",
            "XXX.color.item.ItemTintSources",
            "XXX.color.item.Potion",
            "XXX.color.item.package-info",
            "XXX.client.data.Main",
            "XXX.data.models.BlockModelGenerators$1",
            "XXX.data.models.BlockModelGenerators$BlockStateGeneratorSupplier",
            "XXX.data.models.BlockModelGenerators$PlantType",
            "XXX.data.models.EquipmentAssetProvider",
            "XXX.data.models.ItemModelGenerators$TrimMaterialData",
            "XXX.data.models.ModelProvider",
            "XXX.data.models.ModelProvider$ItemInfoCollector",
            "XXX.models.blockstates.BlockModelDefinitionGenerator",
            "XXX.models.blockstates.MultiVariantGenerator$Empty",
            "XXX.models.blockstates.PropertyValueList",
            "XXX.client.renderer.CubeMap",
            "XXX.client.renderer.RenderPipelines",
            "XXX.client.renderer.RenderStateShard$BooleanStateShard",
            "XXX.client.renderer.RenderStateShard$TexturingStateShard",
            "XXX.client.renderer.RenderType$CompositeRenderType",
            "XXX.client.renderer.RenderType$CompositeState$CompositeStateBuilder",
            "XXX.client.renderer.RunningTrimmedMean",
            "XXX.client.renderer.SectionBufferBuilderPack",
            "XXX.client.renderer.SectionOcclusionGraph",
            "XXX.client.renderer.SectionOcclusionGraph$GraphState",
            "XXX.client.renderer.SectionOcclusionGraph$Node",
            "XXX.client.renderer.ShaderDefines",
            "XXX.client.renderer.ShaderManager",
            "XXX.client.renderer.ShaderManager$CompilationCache",
            "XXX.client.renderer.ShaderManager$Configs",
            "XXX.client.renderer.ShaderManager$ShaderSourceKey",
            "XXX.client.renderer.ShapeRenderer$1",
            "XXX.client.renderer.Sheets$1",
            "XXX.client.renderer.SpecialBlockModelRenderer",
            "XXX.client.renderer.ViewArea",
            "XXX.client.renderer.WeatherEffectRenderer",
            "XXX.client.renderer.WorldBorderRenderer",
            "XXX.renderer.block.BlockModelShaper",
            "XXX.renderer.block.LiquidBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer",
            "XXX.renderer.block.ModelBlockRenderer$AdjacencyInfo",
            "XXX.renderer.block.ModelBlockRenderer$AmbientVertexRemap",
            "XXX.renderer.block.ModelBlockRenderer$Cache$1",
            "XXX.renderer.block.ModelBlockRenderer$SizeInfo",
            "XXX.block.model.BlockElement",
            "XXX.block.model.BlockElementFace$UVs",
            "XXX.block.model.BlockModel",
            "XXX.block.model.BlockModelDefinition",
            "XXX.block.model.BlockStateModel$Unbaked",
            "XXX.block.model.FaceBakery$1",
            "XXX.block.model.ItemModelGenerator$Span",
            "XXX.block.model.ItemTransform",
            "XXX.block.model.ItemTransforms",
            "XXX.block.model.ItemTransforms$Deserializer",
            "XXX.block.model.SimpleModelWrapper",
            "XXX.block.model.Variant$SimpleModelState",
            "XXX.block.model.VariantMutator$VariantProperty",
            "XXX.model.multipart.CombinedCondition",
            "XXX.model.multipart.CombinedCondition$Operation$1",
            "XXX.model.multipart.KeyValueCondition$Term",
            "XXX.block.model.package-info",
            "XXX.renderer.blockentity.AbstractSignRenderer",
            "XXX.renderer.blockentity.BeaconRenderer",
            "XXX.renderer.blockentity.BellRenderer",
            "XXX.renderer.blockentity.BlockEntityRenderer",
            "XXX.renderer.blockentity.BlockEntityRendererProvider$Context",
            "XXX.renderer.blockentity.BlockEntityWithBoundingBoxRenderer",
            "XXX.renderer.blockentity.BrushableBlockRenderer",
            "XXX.renderer.blockentity.CampfireRenderer",
            "XXX.renderer.blockentity.ConduitRenderer",
            "XXX.renderer.blockentity.EnchantTableRenderer",
            "XXX.renderer.blockentity.HangingSignRenderer$AttachmentType",
            "XXX.renderer.blockentity.LecternRenderer",
            "XXX.renderer.blockentity.ShulkerBoxRenderer",
            "XXX.renderer.blockentity.SignRenderer",
            "XXX.renderer.blockentity.SkullBlockRenderer",
            "XXX.renderer.blockentity.SpawnerRenderer",
            "XXX.renderer.blockentity.TheEndGatewayRenderer",
            "XXX.renderer.blockentity.TrialSpawnerRenderer",
            "XXX.renderer.blockentity.package-info",
            "XXX.renderer.chunk.RenderChunk",
            "XXX.renderer.chunk.RenderRegionCache",
            "XXX.renderer.chunk.SectionCompiler",
            "XXX.renderer.chunk.SectionRenderDispatcher",
            "XXX.renderer.chunk.SectionRenderDispatcher$CompiledSection$1",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection",
            "XXX.renderer.chunk.SectionRenderDispatcher$RenderSection$RebuildTask",
            "XXX.renderer.chunk.SectionRenderDispatcher$SectionTaskResult",
            "XXX.renderer.chunk.VisGraph",
            "XXX.renderer.chunk.VisibilitySet",
            "XXX.renderer.culling.Frustum",
            "XXX.renderer.debug.BeeDebugRenderer",
            "XXX.renderer.debug.BrainDebugRenderer",
            "XXX.renderer.debug.BreezeDebugRenderer",
            "XXX.renderer.debug.ChunkCullingDebugRenderer",
            "XXX.renderer.debug.ChunkDebugRenderer$ChunkData",
            "XXX.renderer.debug.DebugRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer",
            "XXX.renderer.debug.GameEventListenerRenderer$TrackedListener",
            "XXX.renderer.debug.GameTestDebugRenderer$Marker",
            "XXX.renderer.debug.GoalSelectorDebugRenderer$EntityGoalInfo",
            "XXX.renderer.debug.HeightMapRenderer$1",
            "XXX.renderer.debug.LightSectionDebugRenderer",
            "XXX.renderer.debug.NeighborsUpdateRenderer",
            "XXX.renderer.debug.PathfindingRenderer",
            "XXX.renderer.debug.RedstoneWireOrientationsRenderer",
            "XXX.renderer.debug.StructureRenderer",
            "XXX.renderer.debug.VillageSectionsDebugRenderer",
            "XXX.renderer.debug.WorldGenAttemptRenderer",
            "XXX.renderer.entity.AbstractBoatRenderer",
            "XXX.renderer.entity.AbstractHorseRenderer",
            "XXX.renderer.entity.AbstractSkeletonRenderer",
            "XXX.renderer.entity.AgeableMobRenderer",
            "XXX.renderer.entity.ArmadilloRenderer",
            "XXX.renderer.entity.ArrowRenderer",
            "XXX.renderer.entity.BatRenderer",
            "XXX.renderer.entity.BlazeRenderer",
            "XXX.renderer.entity.BoggedRenderer",
            "XXX.renderer.entity.CamelRenderer",
            "XXX.renderer.entity.CaveSpiderRenderer",
            "XXX.renderer.entity.CodRenderer",
            "XXX.renderer.entity.CreakingRenderer",
            "XXX.renderer.entity.DisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$BlockDisplayRenderer",
            "XXX.renderer.entity.DisplayRenderer$TextDisplayRenderer",
            "XXX.renderer.entity.DonkeyRenderer",
            "XXX.renderer.entity.DragonFireballRenderer",
            "XXX.renderer.entity.ElderGuardianRenderer",
            "XXX.renderer.entity.EnderDragonRenderer",
            "XXX.renderer.entity.EndermiteRenderer",
            "XXX.renderer.entity.EntityRenderer",
            "XXX.renderer.entity.EntityRendererProvider$Context",
            "XXX.renderer.entity.EvokerFangsRenderer",
            "XXX.renderer.entity.EvokerRenderer$1",
            "XXX.renderer.entity.FallingBlockRenderer",
            "XXX.renderer.entity.FishingHookRenderer",
            "XXX.renderer.entity.FrogRenderer",
            "XXX.renderer.entity.GiantMobRenderer",
            "XXX.renderer.entity.GoatRenderer",
            "XXX.renderer.entity.HoglinRenderer",
            "XXX.renderer.entity.HumanoidMobRenderer",
            "XXX.renderer.entity.IllagerRenderer",
            "XXX.renderer.entity.IllusionerRenderer$1",
            "XXX.renderer.entity.ItemEntityRenderer",
            "XXX.renderer.entity.ItemRenderer",
            "XXX.renderer.entity.LightningBoltRenderer",
            "XXX.renderer.entity.LivingEntityRenderer$1",
            "XXX.renderer.entity.LlamaRenderer$1",
            "XXX.renderer.entity.MagmaCubeRenderer",
            "XXX.renderer.entity.MobRenderer",
            "XXX.renderer.entity.NoopRenderer",
            "XXX.renderer.entity.OminousItemSpawnerRenderer",
            "XXX.renderer.entity.PaintingRenderer$1",
            "XXX.renderer.entity.ParrotRenderer",
            "XXX.renderer.entity.PhantomRenderer",
            "XXX.renderer.entity.PiglinRenderer",
            "XXX.renderer.entity.PolarBearRenderer",
            "XXX.renderer.entity.RabbitRenderer",
            "XXX.renderer.entity.RaftRenderer",
            "XXX.renderer.entity.RenderLayerParent",
            "XXX.renderer.entity.SheepRenderer",
            "XXX.renderer.entity.ShulkerRenderer",
            "XXX.renderer.entity.SkeletonRenderer",
            "XXX.renderer.entity.SnifferRenderer",
            "XXX.renderer.entity.SpectralArrowRenderer",
            "XXX.renderer.entity.SquidRenderer",
            "XXX.renderer.entity.StriderRenderer",
            "XXX.renderer.entity.ThrownItemRenderer",
            "XXX.renderer.entity.TippableArrowRenderer",
            "XXX.renderer.entity.TntRenderer",
            "XXX.renderer.entity.TropicalFishRenderer$1",
            "XXX.renderer.entity.UndeadHorseRenderer",
            "XXX.renderer.entity.VexRenderer",
            "XXX.renderer.entity.VindicatorRenderer",
            "XXX.renderer.entity.WanderingTraderRenderer",
            "XXX.renderer.entity.WindChargeRenderer",
            "XXX.renderer.entity.WitherBossRenderer",
            "XXX.renderer.entity.WitherSkullRenderer",
            "XXX.renderer.entity.ZoglinRenderer",
            "XXX.renderer.entity.ZombieVillagerRenderer",
            "XXX.entity.layers.ArrowLayer",
            "XXX.entity.layers.BreezeEyesLayer",
            "XXX.entity.layers.CapeLayer",
            "XXX.entity.layers.CatCollarLayer",
            "XXX.entity.layers.CrossedArmsItemLayer",
            "XXX.entity.layers.CustomHeadLayer$Transforms",
            "XXX.entity.layers.DolphinCarryingItemLayer",
            "XXX.entity.layers.EnderEyesLayer",
            "XXX.entity.layers.EquipmentLayerRenderer",
            "XXX.entity.layers.EquipmentLayerRenderer$TrimSpriteKey",
            "XXX.entity.layers.FoxHeldItemLayer",
            "XXX.entity.layers.HumanoidArmorLayer",
            "XXX.entity.layers.IronGolemCrackinessLayer",
            "XXX.entity.layers.ItemInHandLayer",
            "XXX.entity.layers.LivingEntityEmissiveLayer$AlphaFunction",
            "XXX.entity.layers.LlamaDecorLayer",
            "XXX.entity.layers.PandaHoldsItemLayer",
            "XXX.entity.layers.PhantomEyesLayer",
            "XXX.entity.layers.RenderLayer",
            "XXX.entity.layers.SimpleEquipmentLayer",
            "XXX.entity.layers.SlimeOuterLayer",
            "XXX.entity.layers.SpiderEyesLayer",
            "XXX.entity.layers.StuckInBodyLayer",
            "XXX.entity.layers.TropicalFishPatternLayer",
            "XXX.entity.layers.VillagerProfessionLayer",
            "XXX.entity.layers.WitchItemLayer",
            "XXX.entity.layers.WolfArmorLayer",
            "XXX.entity.layers.package-info",
            "XXX.entity.player.PlayerRenderer",
            "XXX.entity.state.AllayRenderState",
            "XXX.entity.state.ArmedEntityRenderState",
            "XXX.entity.state.ArrowRenderState",
            "XXX.entity.state.BatRenderState",
            "XXX.entity.state.BlockDisplayEntityRenderState",
            "XXX.entity.state.BoggedRenderState",
            "XXX.entity.state.CamelRenderState",
            "XXX.entity.state.ChickenRenderState",
            "XXX.entity.state.CreakingRenderState",
            "XXX.entity.state.DisplayEntityRenderState",
            "XXX.entity.state.DonkeyRenderState",
            "XXX.entity.state.EnderDragonRenderState",
            "XXX.entity.state.EntityRenderState",
            "XXX.entity.state.EquineRenderState",
            "XXX.entity.state.EvokerRenderState",
            "XXX.entity.state.FallingBlockRenderState",
            "XXX.entity.state.FireworkRocketRenderState",
            "XXX.entity.state.FoxRenderState",
            "XXX.entity.state.GhastRenderState",
            "XXX.entity.state.GuardianRenderState",
            "XXX.entity.state.HoldingEntityRenderState",
            "XXX.entity.state.HumanoidRenderState",
            "XXX.entity.state.IllusionerRenderState",
            "XXX.entity.state.ItemClusterRenderState",
            "XXX.entity.state.ItemEntityRenderState",
            "XXX.entity.state.LightningBoltRenderState",
            "XXX.entity.state.LlamaRenderState",
            "XXX.entity.state.MinecartRenderState",
            "XXX.entity.state.MushroomCowRenderState",
            "XXX.entity.state.PandaRenderState",
            "XXX.entity.state.PhantomRenderState",
            "XXX.entity.state.PiglinRenderState",
            "XXX.entity.state.PolarBearRenderState",
            "XXX.entity.state.RabbitRenderState",
            "XXX.entity.state.SalmonRenderState",
            "XXX.entity.state.ShulkerBulletRenderState",
            "XXX.entity.state.SkeletonRenderState",
            "XXX.entity.state.SnifferRenderState",
            "XXX.entity.state.SquidRenderState",
            "XXX.entity.state.TextDisplayEntityRenderState",
            "XXX.entity.state.ThrownTridentRenderState",
            "XXX.entity.state.TntRenderState",
            "XXX.entity.state.TurtleRenderState",
            "XXX.entity.state.VillagerDataHolderRenderState",
            "XXX.entity.state.WardenRenderState",
            "XXX.entity.state.WitherRenderState",
            "XXX.entity.state.WolfRenderState",
            "XXX.entity.state.ZombieVillagerRenderState",
            "XXX.entity.state.package-info",
            "XXX.renderer.item.BlockModelWrapper$Unbaked",
            "XXX.renderer.item.BundleSelectedItemSpecialRenderer$Unbaked",
            "XXX.renderer.item.ClientItem$Properties",
            "XXX.renderer.item.CompositeModel$Unbaked",
            "XXX.renderer.item.ConditionalItemModel$Unbaked",
            "XXX.renderer.item.EmptyModel$Unbaked",
            "XXX.renderer.item.ItemModel$BakingContext",
            "XXX.renderer.item.ItemModelResolver",
            "XXX.renderer.item.ItemStackRenderState",
            "XXX.renderer.item.ItemStackRenderState$LayerRenderState",
            "XXX.renderer.item.ModelRenderProperties",
            "XXX.resources.model.BlockModelRotation",
            "XXX.resources.model.BlockStateDefinitions",
            "XXX.resources.model.BlockStateModelLoader$LoadedBlockModelDefinition",
            "XXX.resources.model.EquipmentClientInfo",
            "XXX.resources.model.EquipmentClientInfo$Dyeable",
            "XXX.resources.model.EquipmentClientInfo$LayerType",
            "XXX.resources.model.MissingBlockModel",
            "XXX.resources.model.ModelBakery",
            "XXX.resources.model.ModelBakery$MissingModels",
            "XXX.resources.model.ModelDiscovery$Slot",
            "XXX.resources.model.ModelGroupCollector$GroupKey",
            "XXX.resources.model.ModelManager$1",
            "XXX.resources.model.ModelManager$ResolvedModels",
            "XXX.resources.model.MultiPartBakedModel",
            "XXX.resources.model.QuadCollection",
            "XXX.resources.model.ResolvableModel",
            "XXX.resources.model.ResolvedModel",
            "XXX.resources.model.UnbakedGeometry",
            "XXX.resources.model.UnbakedModel$GuiLight",
            "XXX.resources.model.package-info",
            "XXX.resources.server.DownloadedPackSource",
            "XXX.resources.server.DownloadedPackSource$2",
            "XXX.resources.server.DownloadedPackSource$4",
            "XXX.resources.server.DownloadedPackSource$6",
            "XXX.resources.server.DownloadedPackSource$8",
            "XXX.resources.server.PackLoadFeedback",
            "XXX.resources.server.PackLoadFeedback$Update",
            "XXX.resources.server.PackReloadConfig$Callbacks",
            "XXX.resources.server.ServerPackManager",
            "XXX.resources.server.ServerPackManager$ActivationStatus",
            "XXX.resources.server.ServerPackManager$PackPromptStatus",
            "XXX.resources.server.ServerPackManager$ServerPackData",
            "XXX.resources.sounds.AbstractSoundInstance",
            "XXX.resources.sounds.AmbientSoundHandler",
            "XXX.resources.sounds.BeeFlyingSoundInstance",
            "XXX.resources.sounds.BiomeAmbientSoundsHandler",
            "XXX.resources.sounds.BubbleColumnAmbientSoundHandler",
            "XXX.resources.sounds.EntityBoundSoundInstance",
            "XXX.resources.sounds.MinecartSoundInstance",
            "XXX.resources.sounds.SimpleSoundInstance",
            "XXX.resources.sounds.Sound",
            "XXX.resources.sounds.SoundEventRegistration",
            "XXX.resources.sounds.SoundInstance",
            "XXX.resources.sounds.TickableSoundInstance",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances",
            "XXX.resources.sounds.UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance",
            "XXX.client.searchtree.FullTextSearchTree",
            "XXX.client.searchtree.IntersectionIterator",
            "XXX.client.searchtree.ResourceLocationSearchTree",
            "XXX.client.searchtree.ResourceLocationSearchTree$2",
            "XXX.client.searchtree.SuffixArray",
            "XXX.client.server.IntegratedPlayerList",
            "XXX.client.server.LanServer",
            "XXX.client.server.LanServerDetection$LanServerDetector",
            "XXX.client.server.LanServerPinger",
            "XXX.client.sounds.AudioStream",
            "XXX.client.sounds.ChannelAccess$ChannelHandle",
            "XXX.client.sounds.FiniteAudioStream",
            "XXX.client.sounds.JOrbisAudioStream",
            "XXX.client.sounds.LoopingAudioStream$AudioStreamProvider",
            "XXX.client.sounds.MusicInfo",
            "XXX.client.sounds.SoundBufferLibrary",
            "XXX.client.sounds.SoundEngine$DeviceCheckState",
            "XXX.client.sounds.SoundEventListener",
            "XXX.client.sounds.SoundManager$1",
            "XXX.client.sounds.SoundManager$Preparations",
            "XXX.client.sounds.WeighedSoundEvents",
            "XXX.client.sounds.package-info",
            "XXX.client.telemetry.TelemetryEventInstance",
            "XXX.client.telemetry.TelemetryEventLogger",
            "XXX.client.telemetry.TelemetryEventType",
            "XXX.client.telemetry.TelemetryLogManager",
            "XXX.client.telemetry.TelemetryProperty$Exporter",
            "XXX.client.telemetry.TelemetryProperty$ServerType",
            "XXX.client.telemetry.TelemetryPropertyMap$1",
            "XXX.client.telemetry.WorldSessionTelemetryManager",
            "XXX.telemetry.events.GameLoadTimesEvent",
            "XXX.telemetry.events.PerformanceMetricsEvent",
            "XXX.telemetry.events.WorldLoadEvent$1",
            "XXX.telemetry.events.WorldUnloadEvent",
            "XXX.client.telemetry.package-info",
            "XXX.client.tutorial.CraftPlanksTutorialStep",
            "XXX.client.tutorial.MovementTutorialStepInstance",
            "XXX.client.tutorial.PunchTreeTutorialStepInstance",
            "XXX.client.tutorial.TutorialStepInstance",
            "XXX.client.tutorial.package-info",
            "XXX.minecraft.commands.CacheableFunction",
            "XXX.minecraft.commands.CommandBuildContext$1",
            "XXX.minecraft.commands.CommandResultCallback$1",
            "XXX.minecraft.commands.CommandSigningContext$1",
            "XXX.minecraft.commands.CommandSource",
            "XXX.minecraft.commands.CommandSourceStack",
            "XXX.minecraft.commands.Commands$1",
            "XXX.minecraft.commands.Commands$CommandSelection",
            "XXX.minecraft.commands.ExecutionCommandSource",
            "XXX.minecraft.commands.ParserUtils",
            "XXX.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType",
            "XXX.commands.arguments.AngleArgument",
            "XXX.commands.arguments.ArgumentSignatures",
            "XXX.commands.arguments.ArgumentSignatures$Signer",
            "XXX.commands.arguments.ComponentArgument",
            "XXX.commands.arguments.DimensionArgument",
            "XXX.commands.arguments.EntityAnchorArgument$Anchor",
            "XXX.commands.arguments.EntityArgument$Info",
            "XXX.commands.arguments.GameModeArgument",
            "XXX.commands.arguments.GameProfileArgument$Result",
            "XXX.commands.arguments.HeightmapTypeArgument",
            "XXX.commands.arguments.MessageArgument$Message",
            "XXX.commands.arguments.NbtPathArgument",
            "XXX.commands.arguments.NbtPathArgument$CompoundChildNode",
            "XXX.commands.arguments.NbtPathArgument$MatchElementNode",
            "XXX.commands.arguments.NbtPathArgument$MatchRootObjectNode",
            "XXX.commands.arguments.NbtPathArgument$Node",
            "XXX.commands.arguments.ObjectiveArgument",
            "XXX.commands.arguments.OperationArgument",
            "XXX.commands.arguments.OperationArgument$SimpleOperation",
            "XXX.commands.arguments.RangeArgument",
            "XXX.commands.arguments.RangeArgument$Ints",
            "XXX.commands.arguments.ResourceArgument$Info",
            "XXX.commands.arguments.ResourceKeyArgument",
            "XXX.commands.arguments.ResourceKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrIdArgument",
            "XXX.commands.arguments.ResourceOrIdArgument$LootPredicateArgument",
            "XXX.commands.arguments.ResourceOrTagArgument",
            "XXX.commands.arguments.ResourceOrTagArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagArgument$Result",
            "XXX.commands.arguments.ResourceOrTagKeyArgument",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Info$Template",
            "XXX.commands.arguments.ResourceOrTagKeyArgument$Result",
            "XXX.commands.arguments.ResourceSelectorArgument",
            "XXX.commands.arguments.ResourceSelectorArgument$Info$Template",
            "XXX.commands.arguments.ScoreHolderArgument$Info",
            "XXX.commands.arguments.ScoreHolderArgument$Result",
            "XXX.commands.arguments.ScoreboardSlotArgument",
            "XXX.commands.arguments.SlotArgument",
            "XXX.commands.arguments.StringRepresentableArgument",
            "XXX.commands.arguments.TeamArgument",
            "XXX.commands.arguments.TemplateRotationArgument",
            "XXX.commands.arguments.TimeArgument$Info",
            "XXX.commands.arguments.UuidArgument",
            "XXX.arguments.blocks.BlockPredicateArgument",
            "XXX.arguments.blocks.BlockPredicateArgument$Result",
            "XXX.arguments.blocks.BlockStateArgument",
            "XXX.arguments.blocks.BlockStateParser$BlockResult",
            "XXX.arguments.blocks.package-info",
            "XXX.arguments.coordinates.ColumnPosArgument",
            "XXX.arguments.coordinates.LocalCoordinates",
            "XXX.arguments.coordinates.SwizzleArgument",
            "XXX.arguments.coordinates.Vec3Argument",
            "XXX.arguments.coordinates.WorldCoordinates",
            "XXX.arguments.item.ComponentPredicateParser",
            "XXX.arguments.item.ComponentPredicateParser$Context",
            "XXX.arguments.item.ComponentPredicateParser$PredicateLookupRule",
            "XXX.arguments.item.FunctionArgument",
            "XXX.arguments.item.FunctionArgument$2",
            "XXX.arguments.item.ItemArgument",
            "XXX.arguments.item.ItemParser",
            "XXX.arguments.item.ItemParser$ItemResult",
            "XXX.arguments.item.ItemParser$SuggestionsVisitor",
            "XXX.arguments.item.ItemPredicateArgument",
            "XXX.arguments.item.ItemPredicateArgument$Context",
            "XXX.arguments.item.ItemPredicateArgument$Result",
            "XXX.commands.arguments.package-info",
            "XXX.arguments.selector.EntitySelector$1",
            "XXX.arguments.selector.SelectorPattern",
            "XXX.selector.options.EntitySelectorOptions$Modifier",
            "XXX.selector.options.package-info",
            "XXX.commands.execution.ChainModifiers",
            "XXX.commands.execution.CustomCommandExecutor",
            "XXX.commands.execution.CustomCommandExecutor$WithErrorHandling",
            "XXX.commands.execution.CustomModifierExecutor$ModifierAdapter",
            "XXX.commands.execution.ExecutionContext",
            "XXX.commands.execution.ExecutionControl$1",
            "XXX.commands.execution.Frame$FrameControl",
            "XXX.commands.execution.UnboundEntryAction",
            "XXX.execution.tasks.BuildContexts",
            "XXX.execution.tasks.BuildContexts$TopLevel",
            "XXX.execution.tasks.CallFunction",
            "XXX.execution.tasks.ContinuationTask$TaskProvider",
            "XXX.execution.tasks.FallthroughTask",
            "XXX.execution.tasks.package-info",
            "XXX.commands.functions.FunctionBuilder",
            "XXX.commands.functions.MacroFunction",
            "XXX.commands.functions.MacroFunction$MacroEntry",
            "XXX.commands.functions.PlainTextFunction",
            "XXX.commands.functions.package-info",
            "XXX.commands.synchronization.ArgumentTypeInfo",
            "XXX.commands.synchronization.ArgumentTypeInfos",
            "XXX.commands.synchronization.SingletonArgumentInfo",
            "XXX.commands.synchronization.SuggestionProviders",
            "XXX.synchronization.brigadier.DoubleArgumentInfo",
            "XXX.synchronization.brigadier.FloatArgumentInfo",
            "XXX.synchronization.brigadier.IntegerArgumentInfo",
            "XXX.synchronization.brigadier.LongArgumentInfo",
            "XXX.synchronization.brigadier.StringArgumentSerializer",
            "XXX.synchronization.brigadier.StringArgumentSerializer$Template",
            "XXX.commands.synchronization.package-info",
            "XXX.minecraft.core.AxisCycle$1",
            "XXX.minecraft.core.AxisCycle$3",
            "XXX.minecraft.core.BlockBox$1",
            "XXX.minecraft.core.BlockPos",
            "XXX.minecraft.core.BlockPos$2",
            "XXX.minecraft.core.BlockPos$4",
            "XXX.minecraft.core.BlockPos$6",
            "XXX.minecraft.core.BlockPos$TraversalNodeStatus",
            "XXX.minecraft.core.Cloner",
            "XXX.minecraft.core.Cursor3D",
            "XXX.minecraft.core.DefaultedRegistry",
            "XXX.minecraft.core.Direction$Axis",
            "XXX.minecraft.core.Direction$Axis$2",
            "XXX.minecraft.core.Direction$AxisDirection",
            "XXX.minecraft.core.Direction8",
            "XXX.minecraft.core.GlobalPos",
            "XXX.minecraft.core.Holder$Direct",
            "XXX.minecraft.core.Holder$Reference",
            "XXX.minecraft.core.HolderGetter",
            "XXX.minecraft.core.HolderLookup",
            "XXX.minecraft.core.HolderLookup$Provider$1",
            "XXX.minecraft.core.HolderLookup$RegistryLookup$1",
            "XXX.minecraft.core.HolderOwner",
            "XXX.minecraft.core.HolderSet$1",
            "XXX.minecraft.core.HolderSet$ListBacked",
            "XXX.minecraft.core.IdMap",
            "XXX.minecraft.core.LayeredRegistryAccess",
            "XXX.minecraft.core.MappedRegistry$1",
            "XXX.minecraft.core.MappedRegistry$3",
            "XXX.minecraft.core.MappedRegistry$TagSet$1",
            "XXX.minecraft.core.NonNullList",
            "XXX.minecraft.core.QuartPos",
            "XXX.minecraft.core.Registry",
            "XXX.minecraft.core.Registry$PendingTags",
            "XXX.minecraft.core.RegistryAccess$1",
            "XXX.minecraft.core.RegistryAccess$Frozen",
            "XXX.minecraft.core.RegistryAccess$RegistryEntry",
            "XXX.minecraft.core.RegistrySetBuilder",
            "XXX.minecraft.core.RegistrySetBuilder$1Entry",
            "XXX.minecraft.core.RegistrySetBuilder$3",
            "XXX.minecraft.core.RegistrySetBuilder$BuildState",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagLookup",
            "XXX.minecraft.core.RegistrySetBuilder$EmptyTagRegistryLookup",
            "XXX.minecraft.core.RegistrySetBuilder$PatchedRegistries",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryBootstrap",
            "XXX.minecraft.core.RegistrySetBuilder$RegistryStub",
            "XXX.minecraft.core.RegistrySetBuilder$UniversalOwner",
            "XXX.minecraft.core.RegistrySynchronization",
            "XXX.minecraft.core.Rotations",
            "XXX.minecraft.core.SectionPos",
            "XXX.minecraft.core.UUIDUtil",
            "XXX.minecraft.core.Vec3i",
            "XXX.core.cauldron.CauldronInteraction",
            "XXX.core.cauldron.package-info",
            "XXX.core.component.DataComponentExactPredicate$Builder",
            "XXX.core.component.DataComponentHolder",
            "XXX.core.component.DataComponentMap$1",
            "XXX.core.component.DataComponentMap$3",
            "XXX.core.component.DataComponentMap$Builder$SimpleMap",
            "XXX.core.component.DataComponentPatch$1",
            "XXX.core.component.DataComponentPatch$PatchKey",
            "XXX.core.component.DataComponentType",
            "XXX.core.component.DataComponentType$Builder$SimpleType",
            "XXX.core.component.PatchedDataComponentMap",
            "XXX.core.component.TypedDataComponent$1",
            "XXX.component.predicates.AttributeModifiersPredicate",
            "XXX.component.predicates.BundlePredicate",
            "XXX.component.predicates.CustomDataPredicate",
            "XXX.component.predicates.DataComponentPredicate",
            "XXX.component.predicates.DataComponentPredicate$Type",
            "XXX.component.predicates.EnchantmentsPredicate",
            "XXX.component.predicates.EnchantmentsPredicate$StoredEnchantments",
            "XXX.component.predicates.FireworkExplosionPredicate$FireworkPredicate",
            "XXX.component.predicates.JukeboxPlayablePredicate",
            "XXX.component.predicates.TrimPredicate",
            "XXX.component.predicates.WritableBookPredicate$PagePredicate",
            "XXX.component.predicates.WrittenBookPredicate$PagePredicate",
            "XXX.core.dispenser.BlockSource",
            "XXX.core.dispenser.DefaultDispenseItemBehavior",
            "XXX.core.dispenser.DispenseItemBehavior$1",
            "XXX.core.dispenser.DispenseItemBehavior$11",
            "XXX.core.dispenser.DispenseItemBehavior$13",
            "XXX.core.dispenser.DispenseItemBehavior$15",
            "XXX.core.dispenser.DispenseItemBehavior$3",
            "XXX.core.dispenser.DispenseItemBehavior$5",
            "XXX.core.dispenser.DispenseItemBehavior$7",
            "XXX.core.dispenser.DispenseItemBehavior$9",
            "XXX.core.dispenser.MinecartDispenseItemBehavior",
            "XXX.core.dispenser.ProjectileDispenseBehavior",
            "XXX.core.dispenser.ShulkerBoxDispenseBehavior",
            "XXX.minecraft.core.package-info",
            "XXX.core.particles.ColorParticleOption",
            "XXX.core.particles.DustParticleOptions",
            "XXX.core.particles.ParticleGroup",
            "XXX.core.particles.ParticleType",
            "XXX.core.particles.ParticleTypes$1",
            "XXX.core.particles.SculkChargeParticleOptions",
            "XXX.core.particles.SimpleParticleType",
            "XXX.core.particles.VibrationParticleOption",
            "XXX.core.registries.BuiltInRegistries",
            "XXX.core.registries.Registries",
            "XXX.minecraft.data.BlockFamilies",
            "XXX.minecraft.data.BlockFamily$Builder",
            "XXX.minecraft.data.CachedOutput",
            "XXX.minecraft.data.DataGenerator$PackGenerator",
            "XXX.minecraft.data.DataProvider$Factory",
            "XXX.minecraft.data.HashCache$1",
            "XXX.minecraft.data.HashCache$ProviderCache",
            "XXX.minecraft.data.HashCache$UpdateFunction",
            "XXX.minecraft.data.Main",
            "XXX.minecraft.data.PackOutput$PathProvider",
            "XXX.data.advancements.AdvancementProvider",
            "XXX.data.advancements.package-info",
            "XXX.advancements.packs.VanillaAdventureAdvancements",
            "XXX.advancements.packs.VanillaNetherAdvancements",
            "XXX.advancements.packs.VanillaTheEndAdvancements",
            "XXX.data.info.BiomeParametersDumpReport",
            "XXX.data.info.CommandsReport",
            "XXX.data.info.DatapackStructureReport$CustomPackEntry",
            "XXX.data.info.DatapackStructureReport$Format",
            "XXX.data.info.ItemListReport",
            "XXX.data.info.RegistryDumpReport",
            "XXX.data.loot.BlockLootSubProvider",
            "XXX.data.loot.LootTableProvider",
            "XXX.data.loot.LootTableSubProvider",
            "XXX.loot.packs.LootData",
            "XXX.loot.packs.TradeRebalanceLootTableProvider",
            "XXX.loot.packs.VanillaBlockLoot",
            "XXX.loot.packs.VanillaEntityLoot",
            "XXX.loot.packs.VanillaFishingLoot",
            "XXX.loot.packs.VanillaLootTableProvider",
            "XXX.loot.packs.VanillaShearingLoot",
            "XXX.data.metadata.PackMetadataGenerator",
            "XXX.minecraft.data.package-info",
            "XXX.data.recipes.RecipeBuilder$1",
            "XXX.data.recipes.RecipeOutput",
            "XXX.data.recipes.RecipeProvider$FamilyRecipeProvider",
            "XXX.data.recipes.RecipeProvider$Runner$1",
            "XXX.data.recipes.ShapelessRecipeBuilder",
            "XXX.data.recipes.SingleItemRecipeBuilder",
            "XXX.data.recipes.SmithingTrimRecipeBuilder",
            "XXX.data.recipes.TransmuteRecipeBuilder",
            "XXX.recipes.packs.VanillaRecipeProvider",
            "XXX.recipes.packs.VanillaRecipeProvider$TrimTemplate",
            "XXX.data.registries.RegistriesDatapackGenerator",
            "XXX.data.registries.TradeRebalanceRegistries",
            "XXX.data.registries.package-info",
            "XXX.data.structures.SnbtDatafixer",
            "XXX.data.structures.SnbtToNbt$Filter",
            "XXX.data.structures.SnbtToNbt$TaskResult",
            "XXX.data.structures.package-info",
            "XXX.data.tags.BiomeTagsProvider",
            "XXX.data.tags.EnchantmentTagsProvider",
            "XXX.data.tags.FlatLevelGeneratorPresetTagsProvider",
            "XXX.data.tags.GameEventTagsProvider",
            "XXX.data.tags.IntrinsicHolderTagsProvider",
            "XXX.data.tags.ItemTagsProvider",
            "XXX.data.tags.PoiTypeTagsProvider",
            "XXX.data.tags.TagsProvider",
            "XXX.data.tags.TagsProvider$TagAppender",
            "XXX.data.tags.TradeRebalanceEnchantmentTagsProvider",
            "XXX.gametest.framework.GameTestTicker$State",
            "XXX.gametest.framework.GeneratedTest",
            "XXX.gametest.framework.JUnitLikeTestReporter",
            "XXX.gametest.framework.MultipleTestTracker",
            "XXX.gametest.framework.ReportGameListener",
            "XXX.gametest.framework.StructureGridSpawner",
            "XXX.gametest.framework.StructureUtils$1",
            "XXX.gametest.framework.TestCommand$TestBatchSummaryDisplayer",
            "XXX.gametest.framework.TestData",
            "XXX.gametest.framework.TestEnvironmentDefinition$AllOf",
            "XXX.gametest.framework.TestEnvironmentDefinition$SetGameRules",
            "XXX.gametest.framework.TestEnvironmentDefinition$TimeOfDay",
            "XXX.gametest.framework.TestEnvironmentDefinition$Weather$Type",
            "XXX.gametest.framework.TestFinder$Builder",
            "XXX.gametest.framework.TestInstanceFinder",
            "XXX.gametest.framework.TestReporter",
            "XXX.gametest.framework.package-info",
            "XXX.minecraft.locale.Language",
            "XXX.minecraft.locale.package-info",
            "XXX.minecraft.nbt.ByteArrayTag$1",
            "XXX.minecraft.nbt.ByteTag$1",
            "XXX.minecraft.nbt.CollectionTag",
            "XXX.minecraft.nbt.CompoundTag$1",
            "XXX.minecraft.nbt.DoubleTag",
            "XXX.minecraft.nbt.EndTag",
            "XXX.minecraft.nbt.FloatTag",
            "XXX.minecraft.nbt.IntArrayTag",
            "XXX.minecraft.nbt.IntTag",
            "XXX.minecraft.nbt.IntTag$Cache",
            "XXX.minecraft.nbt.ListTag$1",
            "XXX.minecraft.nbt.LongArrayTag",
            "XXX.minecraft.nbt.LongTag",
            "XXX.minecraft.nbt.LongTag$Cache",
            "XXX.minecraft.nbt.NbtAccounterException",
            "XXX.minecraft.nbt.NbtFormatException",
            "XXX.minecraft.nbt.NbtIo$1",
            "XXX.minecraft.nbt.NbtOps",
            "XXX.minecraft.nbt.NbtOps$ByteListCollector",
            "XXX.minecraft.nbt.NbtOps$HomogenousListCollector",
            "XXX.minecraft.nbt.NbtOps$IntListCollector",
            "XXX.minecraft.nbt.NbtOps$LongListCollector",
            "XXX.minecraft.nbt.NbtUtils",
            "XXX.minecraft.nbt.ReportedNbtException",
            "XXX.minecraft.nbt.ShortTag$1",
            "XXX.minecraft.nbt.SnbtPrinterTagVisitor",
            "XXX.minecraft.nbt.StreamTagVisitor$EntryResult",
            "XXX.minecraft.nbt.StringTag",
            "XXX.minecraft.nbt.StringTagVisitor",
            "XXX.minecraft.nbt.TagParser",
            "XXX.minecraft.nbt.TagType$1",
            "XXX.minecraft.nbt.TagType$StaticSize",
            "XXX.minecraft.nbt.TagTypes",
            "XXX.minecraft.nbt.TextComponentTagVisitor",
            "XXX.nbt.visitors.CollectFields",
            "XXX.nbt.visitors.FieldSelector",
            "XXX.nbt.visitors.SkipAll",
            "XXX.nbt.visitors.SkipFields",
            "XXX.minecraft.network.BandwidthDebugMonitor",
            "XXX.minecraft.network.CipherDecoder",
            "XXX.minecraft.network.ClientboundPacketListener",
            "XXX.minecraft.network.CompressionEncoder",
            "XXX.minecraft.network.Connection$1",
            "XXX.minecraft.network.Connection$3",
            "XXX.minecraft.network.DisconnectionDetails",
            "XXX.minecraft.network.HandlerNames",
            "XXX.minecraft.network.LocalFrameDecoder",
            "XXX.minecraft.network.MonitoredLocalFrameDecoder",
            "XXX.minecraft.network.PacketBundleUnpacker",
            "XXX.minecraft.network.PacketEncoder",
            "XXX.minecraft.network.PacketSendListener",
            "XXX.minecraft.network.PacketSendListener$2",
            "XXX.minecraft.network.ProtocolInfo$Unbound",
            "XXX.minecraft.network.ProtocolSwapHandler",
            "XXX.minecraft.network.RegistryFriendlyByteBuf",
            "XXX.minecraft.network.SkipPacketException",
            "XXX.minecraft.network.UnconfiguredPipelineHandler",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$InboundConfigurationTask",
            "XXX.minecraft.network.UnconfiguredPipelineHandler$OutboundConfigurationTask",
            "XXX.minecraft.network.VarInt",
            "XXX.minecraft.network.Varint21FrameDecoder",
            "XXX.network.chat.ChatDecorator",
            "XXX.network.chat.ChatType$Bound",
            "XXX.network.chat.ChatTypeDecoration$Parameter",
            "XXX.network.chat.ClickEvent",
            "XXX.network.chat.ClickEvent$ChangePage",
            "XXX.network.chat.ClickEvent$OpenFile",
            "XXX.network.chat.ClickEvent$RunCommand",
            "XXX.network.chat.CommonComponents",
            "XXX.network.chat.Component$Serializer",
            "XXX.network.chat.ComponentContents",
            "XXX.network.chat.ComponentSerialization",
            "XXX.network.chat.ComponentSerialization$FuzzyCodec",
            "XXX.network.chat.ComponentUtils",
            "XXX.network.chat.FilterMask$Type",
            "XXX.network.chat.FormattedText$1",
            "XXX.network.chat.FormattedText$3",
            "XXX.network.chat.FormattedText$ContentConsumer",
            "XXX.network.chat.HoverEvent",
            "XXX.network.chat.HoverEvent$EntityTooltipInfo",
            "XXX.network.chat.HoverEvent$ShowItem",
            "XXX.network.chat.LastSeenMessages",
            "XXX.network.chat.LastSeenMessages$Update",
            "XXX.network.chat.LastSeenMessagesTracker$Update",
            "XXX.network.chat.LastSeenTrackedEntry",
            "XXX.network.chat.MessageSignature",
            "XXX.network.chat.MessageSignatureCache",
            "XXX.network.chat.OutgoingChatMessage",
            "XXX.network.chat.OutgoingChatMessage$Player",
            "XXX.network.chat.RemoteChatSession",
            "XXX.network.chat.SignableCommand",
            "XXX.network.chat.SignedMessageBody",
            "XXX.network.chat.SignedMessageChain",
            "XXX.network.chat.SignedMessageChain$DecodeException",
            "XXX.network.chat.SignedMessageChain$Encoder",
            "XXX.network.chat.SignedMessageValidator",
            "XXX.network.chat.Style",
            "XXX.network.chat.Style$1Collector",
            "XXX.network.chat.SubStringSource",
            "XXX.network.chat.ThrowingComponent",
            "XXX.chat.contents.DataSource",
            "XXX.chat.contents.EntityDataSource",
            "XXX.chat.contents.KeybindResolver",
            "XXX.chat.contents.PlainTextContents",
            "XXX.chat.contents.PlainTextContents$LiteralContents",
            "XXX.chat.contents.SelectorContents",
            "XXX.chat.contents.TranslatableContents",
            "XXX.chat.contents.package-info",
            "XXX.chat.numbers.BlankFormat$1",
            "XXX.chat.numbers.FixedFormat$1",
            "XXX.chat.numbers.NumberFormatType",
            "XXX.chat.numbers.StyledFormat",
            "XXX.chat.numbers.package-info",
            "XXX.network.codec.ByteBufCodecs",
            "XXX.network.codec.ByteBufCodecs$10",
            "XXX.network.codec.ByteBufCodecs$12",
            "XXX.network.codec.ByteBufCodecs$14",
            "XXX.network.codec.ByteBufCodecs$16",
            "XXX.network.codec.ByteBufCodecs$18",
            "XXX.network.codec.ByteBufCodecs$2",
            "XXX.network.codec.ByteBufCodecs$21",
            "XXX.network.codec.ByteBufCodecs$23",
            "XXX.network.codec.ByteBufCodecs$25",
            "XXX.network.codec.ByteBufCodecs$27",
            "XXX.network.codec.ByteBufCodecs$29",
            "XXX.network.codec.ByteBufCodecs$30",
            "XXX.minecraft.server.Bootstrap",
            "XXX.minecraft.server.ChainedJsonException",
            "XXX.minecraft.server.ConsoleInput",
            "XXX.minecraft.server.Eula",
            "XXX.minecraft.server.Main",
            "XXX.minecraft.server.MinecraftServer",
            "XXX.minecraft.server.MinecraftServer$ReloadableResources",
            "XXX.minecraft.server.MinecraftServer$TimeProfiler",
            "XXX.minecraft.server.PlayerAdvancements",
            "XXX.minecraft.server.RegistryLayer",
            "XXX.minecraft.server.ReloadableServerRegistries$Holder",
            "XXX.minecraft.server.ReloadableServerResources",
            "XXX.minecraft.server.ServerAdvancementManager",
            "XXX.minecraft.server.ServerFunctionManager",
            "XXX.minecraft.server.ServerInterface",
            "XXX.minecraft.server.ServerLinks$Entry",
            "XXX.minecraft.server.ServerLinks$UntrustedEntry",
            "XXX.minecraft.server.ServerScoreboard$Method",
            "XXX.minecraft.server.Services",
            "XXX.minecraft.server.SuppressedExceptionCollector$LongEntry",
            "XXX.minecraft.server.TickTask",
            "XXX.minecraft.server.WorldLoader$DataLoadContext",
            "XXX.minecraft.server.WorldLoader$InitConfig",
            "XXX.minecraft.server.WorldLoader$ResultFactory",
            "XXX.minecraft.server.WorldStem",
            "XXX.server.advancements.AdvancementVisibilityEvaluator$Output",
            "XXX.server.advancements.package-info",
            "XXX.server.bossevents.CustomBossEvent$Packed",
            "XXX.server.level.ServerPlayer$RespawnConfig",
            "XXX.server.level.ServerPlayerGameMode",
            "XXX.server.level.ThreadedLevelLightEngine",
            "XXX.server.level.ThrottlingChunkTaskDispatcher",
            "XXX.server.level.TicketType",
            "XXX.server.level.WorldGenRegion",
            "XXX.level.progress.ChunkProgressListener",
            "XXX.level.progress.LoggerChunkProgressListener",
            "XXX.level.progress.StoringChunkProgressListener",
            "XXX.server.network.CommonListenerCookie",
            "XXX.server.network.ConfigurationTask$Type",
            "XXX.server.network.FilteredText",
            "XXX.server.network.LegacyQueryHandler",
            "XXX.server.network.LegacyTextFilter$1",
            "XXX.server.network.MemoryServerHandshakePacketListenerImpl",
            "XXX.server.network.PlayerSafetyServiceTextFilter",
            "XXX.server.network.ServerConfigurationPacketListenerImpl",
            "XXX.server.network.ServerConnectionListener$1",
            "XXX.server.network.ServerConnectionListener$LatencySimulator",
            "XXX.server.network.ServerGamePacketListenerImpl",
            "XXX.server.network.ServerGamePacketListenerImpl$2",
            "XXX.server.network.ServerHandshakePacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl",
            "XXX.server.network.ServerLoginPacketListenerImpl$State",
            "XXX.server.network.ServerStatusPacketListenerImpl",
            "XXX.server.network.ServerTextFilter$IgnoreStrategy",
            "XXX.server.network.ServerTextFilter$PlayerContext",
            "XXX.server.network.TextFilter",
            "XXX.network.config.JoinWorldTask",
            "XXX.network.config.SynchronizeRegistriesTask",
            "XXX.server.network.package-info",
            "XXX.server.packs.AbstractPackResources",
            "XXX.server.packs.CompositePackResources",
            "XXX.server.packs.DownloadCacheCleaner$1",
            "XXX.server.packs.DownloadCacheCleaner$PathAndTime",
            "XXX.server.packs.DownloadQueue$BatchConfig",
            "XXX.server.packs.DownloadQueue$DownloadRequest",
            "XXX.server.packs.DownloadQueue$LogEntry",
            "XXX.server.packs.FilePackResources",
            "XXX.server.packs.FilePackResources$SharedZipFileAccess",
            "XXX.server.packs.OverlayMetadataSection$OverlayEntry",
            "XXX.server.packs.PackResources",
            "XXX.server.packs.PackSelectionConfig",
            "XXX.server.packs.PathPackResources",
            "XXX.server.packs.VanillaPackResources",
            "XXX.packs.linkfs.DummyFileAttributes",
            "XXX.packs.linkfs.LinkFSPath",
            "XXX.packs.linkfs.LinkFSPath$2",
            "XXX.packs.linkfs.LinkFSProvider",
            "XXX.packs.linkfs.LinkFSProvider$2",
            "XXX.packs.linkfs.LinkFileSystem$Builder",
            "XXX.packs.linkfs.PathContents",
            "XXX.packs.linkfs.PathContents$2",
            "XXX.packs.linkfs.PathContents$FileContents",
            "XXX.packs.metadata.MetadataSectionType",
            "XXX.metadata.pack.package-info",
            "XXX.server.packs.package-info",
            "XXX.packs.repository.BuiltInPackSource$1",
            "XXX.packs.repository.FolderRepositorySource$FolderPackDetector",
            "XXX.packs.repository.Pack",
            "XXX.packs.repository.Pack$Position",
            "XXX.packs.repository.PackCompatibility",
            "XXX.packs.repository.PackRepository",
            "XXX.packs.repository.PackSource$1",
            "XXX.packs.repository.ServerPacksSource",
            "XXX.packs.resources.CloseableResourceManager",
            "XXX.packs.resources.FallbackResourceManager$1ResourceWithSourceAndIndex",
            "XXX.packs.resources.FallbackResourceManager$LeakedResourceWarningInputStream",
            "XXX.packs.resources.FallbackResourceManager$ResourceWithSource",
            "XXX.packs.resources.MultiPackResourceManager",
            "XXX.packs.resources.PreparableReloadListener$PreparationBarrier",
            "XXX.packs.resources.ProfiledReloadInstance$State",
            "XXX.packs.resources.ReloadableResourceManager",
            "XXX.packs.resources.ResourceFilterSection",
            "XXX.packs.resources.ResourceManager$Empty",
            "XXX.packs.resources.ResourceMetadata",
            "XXX.packs.resources.ResourceMetadata$2",
            "XXX.packs.resources.ResourceMetadata$Builder$1",
            "XXX.packs.resources.SimpleJsonResourceReloadListener",
            "XXX.packs.resources.SimpleReloadInstance",
            "XXX.packs.resources.SimpleReloadInstance$StateFactory",
            "XXX.server.players.BanListEntry",
            "XXX.server.players.GameProfileCache$GameProfileInfo",
            "XXX.server.players.IpBanListEntry",
            "XXX.server.players.OldUsersConverter$1",
            "XXX.server.players.OldUsersConverter$3",
            "XXX.server.players.OldUsersConverter$5",
            "XXX.server.players.PlayerList",
            "XXX.server.players.ServerOpList",
            "XXX.server.players.SleepStatus",
            "XXX.server.players.StoredUserList",
            "XXX.server.players.UserBanListEntry",
            "XXX.server.players.UserWhiteListEntry",
            "XXX.server.rcon.NetworkDataOutputStream",
            "XXX.server.rcon.RconConsoleSource",
            "XXX.rcon.thread.GenericThread",
            "XXX.rcon.thread.QueryThreadGs4$RequestChallenge",
            "XXX.rcon.thread.RconThread",
            "XXX.minecraft.sounds.Music",
            "XXX.minecraft.sounds.SoundEvent",
            "XXX.minecraft.sounds.SoundSource",
            "XXX.minecraft.stats.RecipeBook",
            "XXX.minecraft.stats.RecipeBookSettings$TypeSettings",
            "XXX.minecraft.stats.ServerRecipeBook$DisplayResolver",
            "XXX.minecraft.stats.Stat",
            "XXX.minecraft.stats.StatType",
            "XXX.minecraft.stats.StatsCounter",
            "XXX.minecraft.tags.BannerPatternTags",
            "XXX.minecraft.tags.BlockTags",
            "XXX.minecraft.tags.EnchantmentTags",
            "XXX.minecraft.tags.FlatLevelGeneratorPresetTags",
            "XXX.minecraft.tags.GameEventTags",
            "XXX.minecraft.tags.ItemTags",
            "XXX.minecraft.tags.PoiTypeTags",
            "XXX.minecraft.tags.TagBuilder",
            "XXX.minecraft.tags.TagEntry$Lookup",
            "XXX.minecraft.tags.TagKey",
            "XXX.minecraft.tags.TagLoader$1",
            "XXX.minecraft.tags.TagLoader$EntryWithSource",
            "XXX.minecraft.tags.TagLoader$SortingEntry",
            "XXX.minecraft.tags.TagNetworkSerialization$NetworkPayload",
            "XXX.minecraft.tags.package-info",
            "XXX.minecraft.util.AbortableIterationConsumer",
            "XXX.minecraft.util.ArrayListDeque",
            "XXX.minecraft.util.ArrayListDeque$ReversedView",
            "XXX.minecraft.util.BinaryAnimator$EasingFunction",
            "XXX.minecraft.util.Brightness",
            "XXX.minecraft.util.ByIdMap$OutOfBoundsStrategy",
            "XXX.minecraft.util.ClassTreeIdRegistry",
            "XXX.minecraft.util.CommonColors",
            "XXX.minecraft.util.CrudeIncrementalIntIdentityHashBiMap",
            "XXX.minecraft.util.Crypt$ByteArrayToKeyFunction",
            "XXX.minecraft.util.Crypt$SaltSupplier",
            "XXX.minecraft.util.CsvOutput",
            "XXX.minecraft.util.CubicSampler",
            "XXX.minecraft.util.CubicSpline",
            "XXX.minecraft.util.CubicSpline$Builder",
            "XXX.minecraft.util.CubicSpline$CoordinateVisitor",
            "XXX.minecraft.util.DebugBuffer",
            "XXX.minecraft.util.DependencySorter",
            "XXX.minecraft.util.DirectoryLock",
            "XXX.minecraft.util.EncoderCache",
            "XXX.minecraft.util.EncoderCache$2",
            "XXX.minecraft.util.ExceptionCollector",
            "XXX.minecraft.util.ExtraCodecs$1",
            "XXX.minecraft.util.ExtraCodecs$2",
            "XXX.minecraft.util.ExtraCodecs$4",
            "XXX.minecraft.util.ExtraCodecs$6",
            "XXX.minecraft.util.ExtraCodecs$LateBoundIdMapper",
            "XXX.minecraft.util.ExtraCodecs$TagOrElementLocation",
            "XXX.minecraft.util.FileSystemUtil",
            "XXX.minecraft.util.FormattedCharSequence",
            "XXX.minecraft.util.FutureChain",
            "XXX.minecraft.util.GsonHelper",
            "XXX.minecraft.util.HttpUtil",
            "XXX.minecraft.util.InclusiveRange",
            "XXX.minecraft.util.LazyLoadedValue",
            "XXX.minecraft.util.ListAndDeque",
            "XXX.minecraft.util.LowerCaseEnumTypeAdapterFactory$1",
            "XXX.minecraft.util.ModCheck",
            "XXX.minecraft.util.Mth",
            "XXX.minecraft.util.NativeModuleLister$NativeModuleInfo",
            "XXX.minecraft.util.NullOps",
            "XXX.minecraft.util.OptionEnum",
            "XXX.minecraft.util.PlaceholderLookupProvider",
            "XXX.minecraft.util.PlaceholderLookupProvider$2",
            "XXX.minecraft.util.PngInfo",
            "XXX.minecraft.util.ProblemReporter$Collector",
            "XXX.minecraft.util.RandomSource",
            "XXX.minecraft.util.ResourceLocationPattern",
            "XXX.minecraft.util.SequencedPriorityIterator",
            "XXX.minecraft.util.SignatureUpdater$Output",
            "XXX.minecraft.util.Signer",
            "XXX.minecraft.util.SimpleBitStorage$InitializationException",
            "XXX.minecraft.util.SmoothDouble",
            "XXX.minecraft.util.SortedArraySet$ArrayIterator",
            "XXX.minecraft.util.SpawnUtil$Strategy",
            "XXX.minecraft.util.StaticCache2D$Initializer",
            "XXX.minecraft.util.StringRepresentable",
            "XXX.minecraft.util.StringRepresentable$EnumCodec",
            "XXX.minecraft.util.StringUtil",
            "XXX.minecraft.util.TaskChainer$1",
            "XXX.minecraft.util.TickThrottler",
            "XXX.minecraft.util.TimeSource$NanoTimeSource",
            "XXX.minecraft.util.ToFloatFunction",
            "XXX.minecraft.util.ToFloatFunction$2",
            "XXX.minecraft.util.Tuple",
            "XXX.minecraft.util.VisibleForDebug",
            "XXX.util.context.ContextKey",
            "XXX.util.context.ContextKeySet$Builder",
            "XXX.util.context.ContextMap$Builder",
            "XXX.util.datafix.DataFixTypes",
            "XXX.util.datafix.DataFixers",
            "XXX.util.datafix.DataFixers$2",
            "XXX.util.datafix.LegacyComponentDataFixUtils",
            "XXX.datafix.fixes.AbstractArrowPickupFix",
            "XXX.datafix.fixes.AbstractPoiSectionFix",
            "XXX.datafix.fixes.AddFlagIfNotPresentFix",
            "XXX.datafix.fixes.AdvancementsFix",
            "XXX.datafix.fixes.AreaEffectCloudDurationScaleFix",
            "XXX.datafix.fixes.AttributeIdPrefixFix",
            "XXX.datafix.fixes.AttributesRenameFix",
            "XXX.datafix.fixes.BannerEntityCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.BedItemColorFix",
            "XXX.datafix.fixes.BiomeFix",
            "XXX.datafix.fixes.BlendingDataFix",
            "XXX.datafix.fixes.BlockEntityBannerColorFix",
            "XXX.datafix.fixes.BlockEntityCustomNameToComponentFix",
            "XXX.datafix.fixes.BlockEntityIdFix",
            "XXX.datafix.fixes.BlockEntityKeepPacked",
            "XXX.datafix.fixes.BlockEntityShulkerBoxColorFix",
            "XXX.datafix.fixes.BlockEntityUUIDFix",
            "XXX.datafix.fixes.BlockPosFormatAndRenamesFix",
            "XXX.datafix.fixes.BlockRenameFix",
            "XXX.datafix.fixes.BlockStateData",
            "XXX.datafix.fixes.BoatSplitFix",
            "XXX.datafix.fixes.CatTypeFix",
            "XXX.datafix.fixes.CavesAndCliffsRenames",
            "XXX.datafix.fixes.ChunkBedBlockEntityInjecterFix",
            "XXX.datafix.fixes.ChunkDeleteIgnoredLightDataFix",
            "XXX.datafix.fixes.ChunkHeightAndBiomeFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Direction$AxisDirection",
            "XXX.datafix.fixes.ChunkPalettedStorageFix$Section",
            "XXX.datafix.fixes.ChunkProtoTickListFix",
            "XXX.datafix.fixes.ChunkRenamesFix",
            "XXX.datafix.fixes.ChunkStatusFix2",
            "XXX.datafix.fixes.ChunkTicketUnpackPosFix",
            "XXX.datafix.fixes.InvalidBlockEntityLockFix",
            "XXX.datafix.fixes.ItemBannerColorFix",
            "XXX.datafix.fixes.ItemIdFix",
            "XXX.datafix.fixes.ItemPotionFix",
            "XXX.datafix.fixes.ItemRenameFix",
            "XXX.datafix.fixes.ItemShulkerBoxColorFix",
            "XXX.datafix.fixes.ItemStackComponentizationFix",
            "XXX.datafix.fixes.ItemStackCustomNameToOverrideComponentFix",
            "XXX.datafix.fixes.ItemStackMapIdFix",
            "XXX.datafix.fixes.ItemStackTagFix",
            "XXX.datafix.fixes.ItemStackTheFlatteningFix",
            "XXX.datafix.fixes.ItemWaterPotionFix",
            "XXX.datafix.fixes.JigsawRotationFix",
            "XXX.datafix.fixes.LeavesFix",
            "XXX.datafix.fixes.LeavesFix$Section",
            "XXX.datafix.fixes.LegacyHoverEventFix",
            "XXX.datafix.fixes.LevelFlatGeneratorInfoFix",
            "XXX.datafix.fixes.LevelUUIDFix",
            "XXX.datafix.fixes.LodestoneCompassComponentFix",
            "XXX.datafix.fixes.MapIdFix",
            "XXX.datafix.fixes.MissingDimensionFix",
            "XXX.datafix.fixes.MobSpawnerEntityIdentifiersFix",
            "XXX.datafix.fixes.NamedEntityFix",
            "XXX.datafix.fixes.NamespacedTypeRenameFix",
            "XXX.datafix.fixes.ObjectiveRenderTypeFix",
            "XXX.datafix.fixes.OminousBannerRarityFix",
            "XXX.datafix.fixes.OptionsAccessibilityOnboardFix",
            "XXX.datafix.fixes.OptionsAmbientOcclusionFix",
            "XXX.datafix.fixes.OptionsKeyLwjgl3Fix",
            "XXX.datafix.fixes.OptionsLowerCaseLanguageFix",
            "XXX.datafix.fixes.OptionsProgrammerArtFix",
            "XXX.datafix.fixes.OverreachingTickFix",
            "XXX.datafix.fixes.PlayerEquipmentFix",
            "XXX.datafix.fixes.PlayerUUIDFix",
            "XXX.datafix.fixes.PoiTypeRenameFix",
            "XXX.datafix.fixes.ProjectileStoredWeaponFix",
            "XXX.datafix.fixes.RandomSequenceSettingsFix",
            "XXX.datafix.fixes.RecipesRenameningFix",
            "XXX.datafix.fixes.References",
            "XXX.datafix.fixes.RemapChunkStatusFix",
            "XXX.datafix.fixes.RemoveGolemGossipFix",
            "XXX.datafix.fixes.RenamedCoralFansFix",
            "XXX.datafix.fixes.ReorganizePoi",
            "XXX.datafix.fixes.SavedDataFeaturePoolElementFix",
            "XXX.datafix.fixes.ScoreboardDisplayNameFix",
            "XXX.datafix.fixes.SimpleEntityRenameFix",
            "XXX.datafix.fixes.SpawnerDataFix",
            "XXX.datafix.fixes.StatsCounterFix$StatType",
            "XXX.datafix.fixes.StriderGravityFix",
            "XXX.datafix.fixes.StructureSettingsFlattenFix",
            "XXX.datafix.fixes.StructuresBecomeConfiguredFix$Conversion",
            "XXX.datafix.fixes.TextComponentStrictJsonFix",
            "XXX.datafix.fixes.ThrownPotionSplitFix",
            "XXX.datafix.fixes.TippedArrowPotionToItemFix",
            "XXX.datafix.fixes.TrappedChestBlockEntityFix",
            "XXX.datafix.fixes.TrialSpawnerConfigFix",
            "XXX.datafix.fixes.TrialSpawnerConfigInRegistryFix$VanillaTrialChambers",
            "XXX.datafix.fixes.VariantRenameFix",
            "XXX.datafix.fixes.VillagerFollowRangeFix",
            "XXX.datafix.fixes.VillagerSetCanPickUpLootFix",
            "XXX.datafix.fixes.WallPropertyFix",
            "XXX.datafix.fixes.WorldGenSettingsDisallowOldCustomWorldsFix",
            "XXX.datafix.fixes.WorldGenSettingsFix$StructureFeatureConfiguration",
            "XXX.datafix.fixes.WriteAndReadFix",
            "XXX.datafix.fixes.package-info",
            "XXX.datafix.schemas.NamespacedSchema",
            "XXX.datafix.schemas.V100",
            "XXX.datafix.schemas.V1022",
            "XXX.datafix.schemas.V107",
            "XXX.datafix.schemas.V135",
            "XXX.datafix.schemas.V1451",
            "XXX.datafix.schemas.V1451_2",
            "XXX.datafix.schemas.V1451_4",
            "XXX.datafix.schemas.V1451_6",
            "XXX.datafix.schemas.V1451_6$2",
            "XXX.datafix.schemas.V1460",
            "XXX.datafix.schemas.V1470",
            "XXX.datafix.schemas.V1483",
            "XXX.datafix.schemas.V1488",
            "XXX.datafix.schemas.V1800",
            "XXX.datafix.schemas.V1904",
            "XXX.datafix.schemas.V1909",
            "XXX.datafix.schemas.V1925",
            "XXX.datafix.schemas.V1929",
            "XXX.datafix.schemas.V2100",
            "XXX.datafix.schemas.V2502",
            "XXX.datafix.schemas.V2509",
            "XXX.datafix.schemas.V2519",
            "XXX.datafix.schemas.V2551",
            "XXX.datafix.schemas.V2571",
            "XXX.datafix.schemas.V2686",
            "XXX.datafix.schemas.V2704",
            "XXX.datafix.schemas.V2831",
            "XXX.datafix.schemas.V2842",
            "XXX.datafix.schemas.V3078",
            "XXX.datafix.schemas.V3082",
            "XXX.datafix.schemas.V3202",
            "XXX.datafix.schemas.V3204",
            "XXX.datafix.schemas.V3326",
            "XXX.datafix.schemas.V3328",
            "XXX.datafix.schemas.V3439",
            "XXX.datafix.schemas.V3682",
            "XXX.datafix.schemas.V3685",
            "XXX.datafix.schemas.V3799",
            "XXX.datafix.schemas.V3808",
            "XXX.datafix.schemas.V3808_2",
            "XXX.datafix.schemas.V3816",
            "XXX.datafix.schemas.V3818_3",
            "XXX.datafix.schemas.V3818_5",
            "XXX.datafix.schemas.V3938",
            "XXX.datafix.schemas.V4067",
            "XXX.datafix.schemas.V4071",
            "XXX.datafix.schemas.V4292",
            "XXX.datafix.schemas.V4301",
            "XXX.datafix.schemas.V4306",
            "XXX.datafix.schemas.V4312",
            "XXX.datafix.schemas.V700",
            "XXX.datafix.schemas.V702",
            "XXX.datafix.schemas.V704",
            "XXX.datafix.schemas.V705",
            "XXX.datafix.schemas.V808",
            "XXX.datafix.schemas.V99$1",
            "XXX.util.debugchart.AbstractSampleLogger",
            "XXX.util.debugchart.DebugSampleSubscriptionTracker$SubscriptionRequest",
            "XXX.util.debugchart.LocalSampleLogger",
            "XXX.util.debugchart.RemoteSampleLogger",
            "XXX.util.debugchart.SampleStorage",
            "XXX.util.debugchart.package-info",
            "XXX.util.eventlog.EventLogDirectory$CompressedFile",
            "XXX.util.eventlog.EventLogDirectory$FileId",
            "XXX.util.eventlog.EventLogDirectory$RawFile",
            "XXX.util.eventlog.JsonEventLog$1",
            "XXX.util.eventlog.JsonEventLogReader$1",
            "XXX.monitoring.jmx.MinecraftServerStatistics",
            "XXX.monitoring.jmx.package-info",
            "XXX.util.parsing.package-info",
            "XXX.parsing.packrat.Control",
            "XXX.parsing.packrat.ErrorCollector",
            "XXX.parsing.packrat.ErrorEntry",
            "XXX.parsing.packrat.ParseState$CacheEntry",
            "XXX.parsing.packrat.Rule",
            "XXX.parsing.packrat.Rule$SimpleRuleAction",
            "XXX.parsing.packrat.Scope",
            "XXX.parsing.packrat.Term",
            "XXX.parsing.packrat.Term$2",
            "XXX.parsing.packrat.Term$Marker",
            "XXX.parsing.packrat.Term$Reference",
            "XXX.packrat.commands.Grammar",
            "XXX.packrat.commands.ResourceLookupRule",
            "XXX.packrat.commands.StringReaderParserState",
            "XXX.packrat.commands.StringReaderTerms$TerminalCharacter",
            "XXX.packrat.commands.TagParseRule",
            "XXX.parsing.packrat.package-info",
            "XXX.util.profiling.ActiveProfiler$PathEntry",
            "XXX.util.profiling.EmptyProfileResults",
            "XXX.util.profiling.FilledProfileResults$1",
            "XXX.util.profiling.InactiveProfiler",
            "XXX.util.profiling.ProfileResults",
            "XXX.util.profiling.Profiler$Scope",
            "XXX.util.profiling.ProfilerFiller$CombinedProfileFiller",
            "XXX.util.profiling.ResultField",
            "XXX.util.profiling.TracyZoneFiller",
            "XXX.util.profiling.Zone",
            "XXX.profiling.jfr.JfrProfiler",
            "XXX.profiling.jfr.JvmProfiler",
            "XXX.profiling.jfr.Percentiles",
            "XXX.jfr.callback.ProfiledDuration",
            "XXX.jfr.event.ChunkGenerationEvent",
            "XXX.jfr.event.ChunkRegionIoEvent",
            "XXX.jfr.event.ChunkRegionReadEvent",
            "XXX.jfr.event.NetworkSummaryEvent",
            "XXX.jfr.event.NetworkSummaryEvent$SumAggregation",
            "XXX.jfr.event.PacketEvent$Fields",
            "XXX.jfr.event.PacketSentEvent",
            "XXX.jfr.event.ServerTickTimeEvent$Fields",
            "XXX.jfr.event.StructureGenerationEvent$Fields",
            "XXX.jfr.event.package-info",
            "XXX.jfr.parse.JfrStatsParser",
            "XXX.jfr.parse.JfrStatsParser$MutableCountAndSize",
            "XXX.jfr.parse.package-info",
            "XXX.jfr.serialize.package-info",
            "XXX.jfr.stats.ChunkIdentification",
            "XXX.jfr.stats.FileIOStat",
            "XXX.jfr.stats.GcHeapStat",
            "XXX.jfr.stats.GcHeapStat$Timing",
            "XXX.jfr.stats.IoSummary$CountAndSize",
            "XXX.jfr.stats.StructureGenStat",
            "XXX.jfr.stats.ThreadAllocationStat$Summary",
            "XXX.jfr.stats.TimedStat",
            "XXX.jfr.stats.package-info",
            "XXX.profiling.metrics.MetricSampler",
            "XXX.profiling.metrics.MetricSampler$SamplerResult",
            "XXX.profiling.metrics.MetricSampler$ValueIncreasedByPercentage",
            "XXX.profiling.metrics.MetricsRegistry$AggregatedMetricSampler",
            "XXX.profiling.metrics.ProfilerMeasured",
            "XXX.metrics.profiling.ActiveMetricsRecorder",
            "XXX.metrics.profiling.MetricsRecorder",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider",
            "XXX.metrics.profiling.ServerMetricsSamplersProvider$CpuStats",
            "XXX.metrics.storage.MetricsPersister",
            "XXX.metrics.storage.package-info",
            "XXX.util.random.Weighted",
            "XXX.util.random.WeightedList$Builder",
            "XXX.util.random.WeightedList$Flat",
            "XXX.util.random.WeightedRandom",
            "XXX.util.thread.AbstractConsecutiveExecutor",
            "XXX.util.thread.BlockableEventLoop",
            "XXX.util.thread.NamedThreadFactory",
            "XXX.util.thread.ParallelMapTransform$BatchedTaskSplitter",
            "XXX.util.thread.ParallelMapTransform$SingleTaskSplitter",
            "XXX.world.entity.Entity$MoveFunction",
            "XXX.world.entity.Entity$MovementEmission",
            "XXX.world.entity.EntityType$EntityFactory",
            "XXX.world.entity.EquipmentSlot$Type",
            "XXX.world.entity.EquipmentSlotGroup$1",
            "XXX.world.entity.EquipmentUser",
            "XXX.world.entity.FlyingMob",
            "XXX.world.entity.HasCustomInventoryScreen",
            "XXX.world.entity.InsideBlockEffectApplier",
            "XXX.world.entity.InsideBlockEffectApplier$StepBasedCollector",
            "XXX.world.entity.Interaction",
            "XXX.world.entity.InterpolationHandler",
            "XXX.world.entity.ItemBasedSteering",
            "XXX.world.entity.Leashable",
            "XXX.world.entity.LightningBolt",
            "XXX.world.entity.LivingEntity$1",
            "XXX.world.entity.Marker",
            "XXX.world.entity.Mob$1",
            "XXX.world.entity.MobCategory",
            "XXX.world.entity.NeutralMob",
            "XXX.world.entity.OwnableEntity",
            "XXX.world.entity.PlayerRideable",
            "XXX.world.entity.PortalProcessor",
            "XXX.world.entity.PositionMoveRotation",
            "XXX.world.entity.ReputationEventHandler",
            "XXX.world.entity.SlotAccess",
            "XXX.world.entity.SlotAccess$2",
            "XXX.world.entity.SlotAccess$4",
            "XXX.world.entity.SpawnPlacementType",
            "XXX.world.entity.SpawnPlacementTypes$1",
            "XXX.world.entity.SpawnPlacements$Data",
            "XXX.world.entity.TamableAnimal",
            "XXX.world.entity.Targeting",
            "XXX.world.entity.WalkAnimationState",
            "XXX.entity.ai.Brain$1",
            "XXX.entity.ai.Brain$Provider",
            "XXX.ai.attributes.Attribute$Sentiment",
            "XXX.ai.attributes.AttributeMap",
            "XXX.ai.attributes.AttributeModifier$Operation",
            "XXX.ai.attributes.AttributeSupplier$Builder",
            "XXX.ai.attributes.DefaultAttributes",
            "XXX.ai.attributes.package-info",
            "XXX.ai.behavior.AcquirePoi$JitteredLinearRetry",
            "XXX.ai.behavior.AnimalPanic",
            "XXX.ai.behavior.BabyFollowAdult",
            "XXX.ai.behavior.BecomePassiveIfMemoryPresent",
            "XXX.ai.behavior.Behavior$Status",
            "XXX.ai.behavior.BehaviorUtils",
            "XXX.ai.behavior.CelebrateVillagersSurvivedRaid",
            "XXX.ai.behavior.CountDownCooldownTicks",
            "XXX.ai.behavior.CrossbowAttack",
            "XXX.ai.behavior.DismountOrSkipMounting",
            "XXX.ai.behavior.EntityTracker",
            "XXX.ai.behavior.FollowTemptation",
            "XXX.ai.behavior.GateBehavior$OrderPolicy",
            "XXX.ai.behavior.GateBehavior$RunningPolicy$1",
            "XXX.ai.behavior.GiveGiftToHero",
            "XXX.ai.behavior.GoToClosestVillage",
            "XXX.ai.behavior.GoToTargetLocation",
            "XXX.ai.behavior.HarvestFarmland",
            "XXX.ai.behavior.InteractWith",
            "XXX.ai.behavior.JumpOnBed",
            "XXX.ai.behavior.LongJumpMidJump",
            "XXX.ai.behavior.LongJumpToRandomPos",
            "XXX.ai.behavior.LongJumpUtil",
            "XXX.ai.behavior.LookAtTargetSink",
            "XXX.ai.behavior.Mount",
            "XXX.ai.behavior.MoveToTargetSink",
            "XXX.ai.behavior.PlayTagWithOtherKids",
            "XXX.ai.behavior.PositionTracker",
            "XXX.ai.behavior.PrepareRamNearestTarget$RamCandidate",
            "XXX.ai.behavior.RandomLookAround",
            "XXX.ai.behavior.ReactToBell",
            "XXX.ai.behavior.ResetRaidStatus",
            "XXX.ai.behavior.RunOne",
            "XXX.ai.behavior.SetEntityLookTarget",
            "XXX.ai.behavior.SetEntityLookTargetSometimes$Ticker",
            "XXX.ai.behavior.SetLookAndInteract",
            "XXX.ai.behavior.SetWalkTargetAwayFrom",
            "XXX.ai.behavior.SetWalkTargetFromBlockMemory",
            "XXX.ai.behavior.ShowTradesToPlayer",
            "XXX.ai.behavior.ShufflingList$WeightedEntry",
            "XXX.ai.behavior.SleepInBed",
            "XXX.ai.behavior.StartAttacking",
            "XXX.ai.behavior.StartAttacking$TargetFinder",
            "XXX.ai.behavior.StayCloseToTarget",
            "XXX.ai.behavior.StopAttackingIfTargetInvalid$StopAttackCondition",
            "XXX.ai.behavior.StopBeingAngryIfTargetDead",
            "XXX.ai.behavior.StrollToPoi",
            "XXX.ai.behavior.Swim",
            "XXX.ai.behavior.TriggerGate",
            "XXX.ai.behavior.TryFindLandNearWater",
            "XXX.ai.behavior.TryLaySpawnOnWaterNearLand",
            "XXX.ai.behavior.UseBonemeal",
            "XXX.ai.behavior.VillageBoundRandomStroll",
            "XXX.ai.behavior.VillagerGoalPackages",
            "XXX.ai.behavior.VillagerPanicTrigger",
            "XXX.ai.behavior.WorkAtComposter",
            "XXX.ai.behavior.YieldJobSite",
            "XXX.behavior.declarative.BehaviorBuilder$1",
            "XXX.behavior.declarative.BehaviorBuilder$Constant$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$1",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$3",
            "XXX.behavior.declarative.BehaviorBuilder$Instance$5",
            "XXX.behavior.declarative.BehaviorBuilder$Mu",
            "XXX.behavior.declarative.BehaviorBuilder$PureMemory$1",
            "XXX.behavior.declarative.BehaviorBuilder$TriggerWrapper",
            "XXX.behavior.declarative.MemoryAccessor",
            "XXX.behavior.declarative.MemoryCondition$Absent",
            "XXX.behavior.declarative.MemoryCondition$Registered",
            "XXX.behavior.declarative.package-info",
            "XXX.behavior.warden.Digging",
            "XXX.behavior.warden.ForceUnmount",
            "XXX.behavior.warden.SetRoarTarget",
            "XXX.behavior.warden.Sniffing",
            "XXX.behavior.warden.TryToSniff",
            "XXX.ai.control.BodyRotationControl",
            "XXX.ai.control.FlyingMoveControl",
            "XXX.ai.control.LookControl",
            "XXX.ai.control.MoveControl$Operation",
            "XXX.ai.control.SmoothSwimmingMoveControl",
            "XXX.ai.goal.AvoidEntityGoal",
            "XXX.ai.goal.BoatGoals",
            "XXX.ai.goal.BreathAirGoal",
            "XXX.ai.goal.CatLieOnBedGoal",
            "XXX.ai.goal.ClimbOnTopOfPowderSnowGoal",
            "XXX.ai.goal.DoorInteractGoal",
            "XXX.ai.goal.FleeSunGoal",
            "XXX.ai.goal.FollowBoatGoal",
            "XXX.ai.goal.FollowMobGoal",
            "XXX.ai.goal.FollowParentGoal",
            "XXX.ai.goal.Goal$Flag",
            "XXX.ai.goal.GoalSelector$1",
            "XXX.ai.goal.GolemRandomStrollInVillageGoal",
            "XXX.ai.goal.JumpGoal",
            "XXX.ai.goal.LeapAtTargetGoal",
            "XXX.ai.goal.LookAtPlayerGoal",
            "XXX.ai.goal.MeleeAttackGoal",
            "XXX.ai.goal.MoveThroughVillageGoal",
            "XXX.ai.goal.MoveTowardsRestrictionGoal",
            "XXX.ai.goal.OcelotAttackGoal",
            "XXX.ai.goal.OpenDoorGoal",
            "XXX.ai.goal.PathfindToRaidGoal",
            "XXX.ai.goal.RandomStandGoal",
            "XXX.ai.goal.RandomSwimmingGoal",
            "XXX.ai.goal.RangedBowAttackGoal",
            "XXX.ai.goal.RangedCrossbowAttackGoal$CrossbowState",
            "XXX.ai.goal.RestrictSunGoal",
            "XXX.ai.goal.SitWhenOrderedToGoal",
            "XXX.ai.goal.SwellGoal",
            "XXX.ai.goal.TradeWithPlayerGoal",
            "XXX.ai.goal.UseItemGoal",
            "XXX.ai.goal.WaterAvoidingRandomStrollGoal",
            "XXX.ai.goal.ZombieAttackGoal",
            "XXX.goal.target.DefendVillageTargetGoal",
            "XXX.goal.target.NearestAttackableTargetGoal",
            "XXX.goal.target.NearestHealableRaiderTargetGoal",
            "XXX.goal.target.OwnerHurtByTargetGoal",
            "XXX.goal.target.ResetUniversalAngerTargetGoal",
            "XXX.goal.target.package-info",
            "XXX.ai.gossip.GossipContainer$EntityGossips",
            "XXX.ai.gossip.GossipType",
            "XXX.ai.memory.ExpirableValue",
            "XXX.ai.memory.MemoryStatus",
            "XXX.ai.memory.WalkTarget",
            "XXX.ai.navigation.AmphibiousPathNavigation",
            "XXX.ai.navigation.GroundPathNavigation",
            "XXX.ai.navigation.WallClimberNavigation",
            "XXX.ai.navigation.package-info",
            "XXX.ai.sensing.AdultSensor",
            "XXX.ai.sensing.BreezeAttackEntitySensor",
            "XXX.ai.sensing.FrogAttackablesSensor",
            "XXX.ai.sensing.HoglinSpecificSensor",
            "XXX.ai.sensing.IsInWaterSensor",
            "XXX.ai.sensing.NearestBedSensor",
            "XXX.ai.sensing.NearestLivingEntitySensor",
            "XXX.ai.sensing.PiglinBruteSpecificSensor",
            "XXX.ai.sensing.PlayerSensor",
            "XXX.ai.sensing.Sensing",
            "XXX.ai.sensing.SensorType",
            "XXX.ai.sensing.VillagerBabiesSensor",
            "XXX.ai.sensing.WardenEntitySensor",
            "XXX.ai.targeting.TargetingConditions",
            "XXX.ai.targeting.package-info",
            "XXX.ai.util.AirRandomPos",
            "XXX.ai.util.GoalUtils",
            "XXX.ai.util.LandRandomPos",
            "XXX.ai.util.package-info",
            "XXX.ai.village.ReputationEventType$1",
            "XXX.ai.village.VillageSiege$State",
            "XXX.village.poi.PoiManager",
            "XXX.village.poi.PoiManager$Occupancy",
            "XXX.village.poi.PoiRecord$Packed",
            "XXX.village.poi.PoiSection$Packed",
            "XXX.village.poi.PoiTypes",
            "XXX.entity.ambient.AmbientCreature",
            "XXX.entity.ambient.package-info",
            "XXX.entity.animal.AbstractFish",
            "XXX.entity.animal.AbstractFish$FishSwimGoal",
            "XXX.entity.animal.AbstractSchoolingFish",
            "XXX.entity.animal.AgeableWaterCreature",
            "XXX.entity.animal.Bee",
            "XXX.entity.animal.Bee$BaseBeeGoal",
            "XXX.entity.animal.Bee$BeeBecomeAngryTargetGoal",
            "XXX.entity.animal.Bee$BeeGoToHiveGoal",
            "XXX.entity.animal.Bee$BeeGrowCropGoal",
            "XXX.entity.animal.Bee$BeeLocateHiveGoal",
            "XXX.entity.animal.Bee$BeePollinateGoal",
            "XXX.entity.animal.Bee$ValidateFlowerGoal",
            "XXX.entity.animal.Bucketable",
            "XXX.entity.animal.Cat$CatAvoidEntityGoal",
            "XXX.entity.animal.Cat$CatTemptGoal",
            "XXX.entity.animal.CatVariants",
            "XXX.entity.animal.ChickenVariant",
            "XXX.entity.animal.ChickenVariants",
            "XXX.entity.animal.Cow",
            "XXX.entity.animal.CowVariant$ModelType",
            "XXX.entity.animal.Dolphin",
            "XXX.entity.animal.Dolphin$DolphinSwimWithPlayerGoal",
            "XXX.entity.animal.FlyingAnimal",
            "XXX.entity.animal.Fox$DefendTrustedTargetGoal",
            "XXX.entity.animal.Fox$FoxAlertableEntitiesSelector",
            "XXX.entity.animal.Fox$FoxBreedGoal",
            "XXX.entity.animal.Fox$FoxFloatGoal",
            "XXX.entity.animal.Fox$FoxGroupData",
            "XXX.entity.animal.Fox$FoxLookControl",
            "XXX.entity.animal.Fox$FoxMoveControl",
            "XXX.entity.animal.Fox$FoxPounceGoal",
            "XXX.entity.animal.Fox$FoxStrollThroughVillageGoal",
            "XXX.entity.animal.Fox$SeekShelterGoal",
            "XXX.entity.animal.Fox$StalkPreyGoal",
            "XXX.entity.animal.IronGolem",
            "XXX.entity.animal.MushroomCow$Variant",
            "XXX.entity.animal.Ocelot$OcelotAvoidEntityGoal",
            "XXX.entity.animal.Panda",
            "XXX.entity.animal.Panda$PandaAttackGoal",
            "XXX.entity.animal.Panda$PandaBreedGoal",
            "XXX.entity.animal.Panda$PandaLieOnBackGoal",
            "XXX.entity.animal.Panda$PandaMoveControl",
            "XXX.entity.animal.Panda$PandaRollGoal",
            "XXX.entity.animal.Panda$PandaSneezeGoal",
            "XXX.entity.animal.Parrot$1",
            "XXX.entity.animal.Parrot$Variant",
            "XXX.entity.animal.PigVariant",
            "XXX.entity.animal.PigVariants",
            "XXX.entity.animal.PolarBear$PolarBearAttackPlayersGoal",
            "XXX.entity.animal.PolarBear$PolarBearMeleeAttackGoal",
            "XXX.entity.animal.Pufferfish$PufferfishPuffGoal",
            "XXX.entity.animal.Rabbit$RabbitAvoidEntityGoal",
            "XXX.entity.animal.Rabbit$RabbitJumpControl",
            "XXX.entity.animal.Rabbit$RabbitPanicGoal",
            "XXX.entity.animal.Rabbit$Variant",
            "XXX.entity.animal.Salmon$Variant",
            "XXX.animal.sheep.Sheep",
            "XXX.animal.sheep.SheepColorSpawnRules$SheepColorProvider",
            "XXX.animal.sheep.package-info",
            "XXX.animal.sniffer.Sniffer$State",
            "XXX.animal.sniffer.SnifferAi$1",
            "XXX.animal.sniffer.SnifferAi$3",
            "XXX.animal.sniffer.SnifferAi$FeelingHappy",
            "XXX.animal.sniffer.SnifferAi$Scenting",
            "XXX.animal.sniffer.SnifferAi$Sniffing",
            "XXX.entity.boss.EnderDragonPart",
            "XXX.boss.enderdragon.DragonFlightHistory$Sample",
            "XXX.boss.enderdragon.EnderDragon",
            "XXX.enderdragon.phases.AbstractDragonPhaseInstance",
            "XXX.enderdragon.phases.DragonChargePlayerPhase",
            "XXX.enderdragon.phases.DragonHoldingPatternPhase",
            "XXX.enderdragon.phases.DragonLandingApproachPhase",
            "XXX.enderdragon.phases.DragonPhaseInstance",
            "XXX.enderdragon.phases.DragonSittingFlamingPhase",
            "XXX.enderdragon.phases.DragonStrafePlayerPhase",
            "XXX.enderdragon.phases.EnderDragonPhase",
            "XXX.enderdragon.phases.package-info",
            "XXX.boss.wither.WitherBoss",
            "XXX.boss.wither.package-info",
            "XXX.entity.decoration.BlockAttachedEntity",
            "XXX.entity.decoration.HangingEntity",
            "XXX.entity.decoration.ItemFrame",
            "XXX.entity.decoration.Painting",
            "XXX.entity.decoration.PaintingVariants",
            "XXX.entity.item.FallingBlockEntity",
            "XXX.entity.item.PrimedTnt",
            "XXX.entity.item.package-info",
            "XXX.entity.monster.AbstractIllager$IllagerArmPose",
            "XXX.entity.monster.AbstractSkeleton",
            "XXX.entity.monster.Blaze",
            "XXX.entity.monster.Bogged",
            "XXX.entity.monster.Creeper",
            "XXX.entity.monster.Drowned",
            "XXX.entity.monster.Drowned$DrownedGoToBeachGoal",
            "XXX.entity.monster.Drowned$DrownedMoveControl",
            "XXX.entity.monster.Drowned$DrownedTridentAttackGoal",
            "XXX.entity.monster.EnderMan",
            "XXX.entity.monster.EnderMan$EndermanLeaveBlockGoal",
            "XXX.entity.monster.EnderMan$EndermanTakeBlockGoal",
            "XXX.entity.monster.Enemy",
            "XXX.entity.monster.Evoker$EvokerAttackSpellGoal",
            "XXX.entity.monster.Evoker$EvokerSummonSpellGoal",
            "XXX.entity.monster.Ghast",
            "XXX.entity.monster.Ghast$GhastMoveControl",
            "XXX.entity.monster.Ghast$RandomFloatAroundGoal",
            "XXX.entity.monster.Guardian",
            "XXX.entity.monster.Guardian$GuardianAttackSelector",
            "XXX.entity.monster.Husk",
            "XXX.entity.monster.Illusioner$IllusionerBlindnessSpellGoal",
            "XXX.entity.monster.MagmaCube",
            "XXX.entity.monster.PatrollingMonster",
            "XXX.entity.monster.Phantom",
            "XXX.entity.monster.Phantom$PhantomAttackPlayerTargetGoal",
            "XXX.entity.monster.Phantom$PhantomBodyRotationControl",
            "XXX.entity.monster.Phantom$PhantomLookControl",
            "XXX.entity.monster.Phantom$PhantomMoveTargetGoal",
            "XXX.entity.monster.Pillager",
            "XXX.entity.monster.Ravager",
            "XXX.entity.monster.Shulker$ShulkerAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerDefenseAttackGoal",
            "XXX.entity.monster.Shulker$ShulkerNearestAttackGoal",
            "XXX.entity.monster.Silverfish",
            "XXX.entity.monster.Silverfish$SilverfishWakeUpFriendsGoal",
            "XXX.entity.monster.Slime",
            "XXX.entity.monster.Slime$SlimeFloatGoal",
            "XXX.entity.monster.Slime$SlimeMoveControl",
            "XXX.entity.monster.SpellcasterIllager",
            "XXX.entity.monster.SpellcasterIllager$SpellcasterCastingSpellGoal",
            "XXX.entity.monster.Spider",
            "XXX.entity.monster.Spider$SpiderEffectsGroupData",
            "XXX.entity.monster.Stray",
            "XXX.entity.monster.Strider$StriderGoToLavaGoal",
            "XXX.entity.monster.Vex",
            "XXX.entity.monster.Vex$VexCopyOwnerTargetGoal",
            "XXX.entity.monster.Vex$VexRandomMoveGoal",
            "XXX.entity.monster.Vindicator$VindicatorBreakDoorGoal",
            "XXX.entity.monster.Witch",
            "XXX.entity.monster.Zoglin",
            "XXX.entity.monster.Zombie$ZombieAttackTurtleEggGoal",
            "XXX.entity.monster.ZombieVillager",
            "XXX.monster.breeze.Breeze",
            "XXX.monster.breeze.BreezeAi",
            "XXX.monster.breeze.BreezeUtil",
            "XXX.monster.breeze.Shoot",
            "XXX.monster.breeze.Slide",
            "XXX.monster.creaking.Creaking",
            "XXX.monster.creaking.Creaking$CreakingJumpControl",
            "XXX.monster.creaking.Creaking$CreakingMoveControl",
            "XXX.monster.creaking.Creaking$HomeNodeEvaluator",
            "XXX.monster.creaking.CreakingAi$1",
            "XXX.monster.hoglin.Hoglin",
            "XXX.monster.hoglin.HoglinBase",
            "XXX.entity.monster.package-info",
            "XXX.monster.piglin.Piglin",
            "XXX.monster.piglin.PiglinArmPose",
            "XXX.monster.piglin.PiglinBruteAi",
            "XXX.monster.piglin.StartAdmiringItemIfSeen",
            "XXX.monster.piglin.StopAdmiringIfItemTooFarAway",
            "XXX.monster.piglin.StopHoldingItemIfNoLongerAdmiring",
            "XXX.monster.warden.AngerLevel",
            "XXX.monster.warden.AngerManagement$1",
            "XXX.monster.warden.Warden",
            "XXX.monster.warden.Warden$1$1",
            "XXX.monster.warden.Warden$VibrationUser",
            "XXX.monster.warden.WardenSpawnTracker",
            "XXX.entity.npc.AbstractVillager",
            "XXX.entity.npc.ClientSideMerchant",
            "XXX.entity.npc.Npc",
            "XXX.entity.npc.VillagerData",
            "XXX.entity.npc.VillagerProfession",
            "XXX.entity.npc.VillagerTrades$DyedArmorForEmeralds",
            "XXX.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
            "XXX.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
            "XXX.entity.npc.VillagerTrades$ItemListing",
            "XXX.entity.npc.VillagerTrades$ItemsForEmeralds",
            "XXX.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
            "XXX.entity.npc.VillagerTrades$TypeSpecificTrade",
            "XXX.entity.npc.WanderingTrader",
            "XXX.entity.npc.WanderingTraderSpawner",
            "XXX.world.entity.package-info",
            "XXX.entity.player.ChatVisiblity",
            "XXX.entity.player.Input$1",
            "XXX.entity.player.Player",
            "XXX.entity.player.Player$2",
            "XXX.entity.player.PlayerEquipment",
            "XXX.entity.player.ProfileKeyPair",
            "XXX.entity.player.ProfilePublicKey$Data",
            "XXX.entity.player.StackedContents",
            "XXX.entity.player.StackedContents$Output",
            "XXX.entity.player.StackedItemContents",
            "XXX.entity.projectile.AbstractArrow",
            "XXX.entity.projectile.AbstractHurtingProjectile",
            "XXX.entity.projectile.Arrow",
            "XXX.entity.projectile.EvokerFangs",
            "XXX.entity.projectile.Fireball",
            "XXX.entity.projectile.FishingHook",
            "XXX.entity.projectile.FishingHook$OpenWaterType",
            "XXX.entity.projectile.LargeFireball",
            "XXX.entity.projectile.Projectile",
            "XXX.entity.projectile.ProjectileDeflection",
            "XXX.entity.projectile.ShulkerBullet",
            "XXX.entity.projectile.Snowball",
            "XXX.entity.projectile.ThrowableItemProjectile",
            "XXX.entity.projectile.ThrownEgg",
            "XXX.entity.projectile.ThrownExperienceBottle",
            "XXX.entity.projectile.ThrownSplashPotion",
            "XXX.entity.projectile.WitherSkull",
            "XXX.projectile.windcharge.AbstractWindCharge",
            "XXX.projectile.windcharge.WindCharge",
            "XXX.entity.raid.Raid",
            "XXX.entity.raid.Raid$RaidStatus",
            "XXX.entity.raid.Raider",
            "XXX.entity.raid.Raider$ObtainRaidLeaderBannerGoal",
            "XXX.entity.raid.Raider$RaiderMoveThroughVillageGoal",
            "XXX.entity.raid.Raids$RaidWithId",
            "XXX.entity.schedule.Activity",
            "XXX.entity.schedule.Schedule",
            "XXX.entity.schedule.ScheduleBuilder$ActivityTransition",
            "XXX.entity.schedule.package-info",
            "XXX.entity.variant.ModelAndTexture",
            "XXX.entity.variant.PriorityProvider",
            "XXX.entity.variant.PriorityProvider$SelectorCondition",
            "XXX.entity.variant.SpawnCondition",
            "XXX.entity.variant.SpawnContext",
            "XXX.entity.variant.StructureCheck",
            "XXX.entity.variant.package-info",
            "XXX.entity.vehicle.AbstractBoat$Status",
            "XXX.entity.vehicle.AbstractMinecart",
            "XXX.entity.vehicle.Boat",
            "XXX.entity.vehicle.ChestRaft",
            "XXX.entity.vehicle.ContainerEntity$1",
            "XXX.entity.vehicle.Minecart",
            "XXX.entity.vehicle.MinecartChest",
            "XXX.entity.vehicle.MinecartCommandBlock$MinecartCommandBase",
            "XXX.entity.vehicle.MinecartHopper",
            "XXX.entity.vehicle.MinecartSpawner$1",
            "XXX.entity.vehicle.NewMinecartBehavior",
            "XXX.entity.vehicle.NewMinecartBehavior$MinecartStep",
            "XXX.entity.vehicle.NewMinecartBehavior$TrackIteration",
            "XXX.entity.vehicle.OldMinecartBehavior$1",
            "XXX.entity.vehicle.VehicleEntity",
            "XXX.world.flag.FeatureElement",
            "XXX.world.flag.FeatureFlagRegistry",
            "XXX.world.flag.FeatureFlagSet",
            "XXX.world.flag.FeatureFlags",
            "XXX.world.food.FoodConstants",
            "XXX.world.food.FoodProperties",
            "XXX.world.food.Foods",
            "XXX.world.inventory.AbstractContainerMenu",
            "XXX.world.inventory.AbstractCraftingMenu",
            "XXX.world.inventory.AbstractFurnaceMenu",
            "XXX.world.inventory.AnvilMenu",
            "XXX.world.inventory.BeaconMenu",
            "XXX.world.inventory.BeaconMenu$PaymentSlot",
            "XXX.world.inventory.BrewingStandMenu",
            "XXX.world.inventory.BrewingStandMenu$IngredientsSlot",
            "XXX.world.inventory.CartographyTableMenu",
            "XXX.world.inventory.CartographyTableMenu$2",
            "XXX.world.inventory.CartographyTableMenu$4",
            "XXX.world.inventory.ChestMenu",
            "XXX.world.inventory.ClickType",
            "XXX.world.inventory.ContainerLevelAccess",
            "XXX.world.inventory.ContainerLevelAccess$2",
            "XXX.world.inventory.ContainerSynchronizer",
            "XXX.world.inventory.CrafterSlot",
            "XXX.world.inventory.CraftingMenu",
            "XXX.world.inventory.DataSlot$1",
            "XXX.world.inventory.DataSlot$3",
            "XXX.world.inventory.EnchantmentMenu",
            "XXX.world.inventory.EnchantmentMenu$2",
            "XXX.world.inventory.FurnaceFuelSlot",
            "XXX.world.inventory.FurnaceResultSlot",
            "XXX.world.inventory.GrindstoneMenu$1",
            "XXX.world.inventory.GrindstoneMenu$3",
            "XXX.world.inventory.HopperMenu",
            "XXX.world.inventory.HorseInventoryMenu$1",
            "XXX.world.inventory.InventoryMenu",
            "XXX.world.inventory.ItemCombinerMenu",
            "XXX.world.inventory.ItemCombinerMenu$2",
            "XXX.world.inventory.ItemCombinerMenu$4",
            "XXX.world.inventory.ItemCombinerMenuSlotDefinition$Builder",
            "XXX.world.inventory.LecternMenu",
            "XXX.world.inventory.LoomMenu",
            "XXX.world.inventory.LoomMenu$2",
            "XXX.world.inventory.LoomMenu$4",
            "XXX.world.inventory.LoomMenu$6",
            "XXX.world.inventory.MenuType",
            "XXX.world.inventory.MerchantContainer",
            "XXX.world.inventory.MerchantResultSlot",
            "XXX.world.inventory.PlayerEnderChestContainer",
            "XXX.world.inventory.RecipeBookMenu$PostPlaceAction",
            "XXX.world.inventory.RecipeCraftingHolder",
            "XXX.world.inventory.ResultSlot",
            "XXX.world.inventory.ShulkerBoxSlot",
            "XXX.world.inventory.Slot",
            "XXX.world.inventory.SlotRange$1",
            "XXX.world.inventory.SmithingMenu",
            "XXX.world.inventory.StackedContentsCompatible",
            "XXX.world.inventory.StonecutterMenu$1",
            "XXX.world.inventory.TransientCraftingContainer",
            "XXX.inventory.tooltip.BundleTooltip",
            "XXX.inventory.tooltip.package-info",
            "XXX.world.item.AirItem",
            "XXX.world.item.ArrowItem",
            "XXX.world.item.BannerItem",
            "XXX.world.item.BlockItem",
            "XXX.world.item.BoneMealItem",
            "XXX.world.item.BottleItem",
            "XXX.world.item.BrushItem",
            "XXX.world.item.BrushItem$DustParticlesDelta",
            "XXX.world.item.BundleItem",
            "XXX.world.item.CompassItem",
            "XXX.world.item.CreativeModeTab$Builder",
            "XXX.world.item.CreativeModeTab$ItemDisplayBuilder",
            "XXX.world.item.CreativeModeTab$Output",
            "XXX.world.item.CreativeModeTab$TabVisibility",
            "XXX.world.item.CreativeModeTabs",
            "XXX.world.item.CrossbowItem$ChargeType",
            "XXX.world.item.DebugStickItem",
            "XXX.world.item.DispensibleContainerItem",
            "XXX.world.item.DyeColor",
            "XXX.world.item.EggItem",
            "XXX.world.item.EmptyMapItem",
            "XXX.world.item.EnderEyeItem",
            "XXX.world.item.ExperienceBottleItem",
            "XXX.world.item.FireworkRocketItem",
            "XXX.world.item.FlintAndSteelItem",
            "XXX.world.item.GameMasterBlockItem",
            "XXX.world.item.HangingEntityItem",
            "XXX.world.item.HoeItem",
            "XXX.world.item.InkSacItem",
            "XXX.world.item.InstrumentItem",
            "XXX.world.item.Item",
            "XXX.world.item.Item$TooltipContext",
            "XXX.world.item.Item$TooltipContext$2",
            "XXX.world.item.ItemCooldowns",
            "XXX.world.item.ItemDisplayContext",
            "XXX.world.item.ItemStack",
            "XXX.world.item.ItemStack$2",
            "XXX.world.item.ItemStack$4",
            "XXX.world.item.ItemStackLinkedSet$1",
            "XXX.world.item.ItemUtils",
            "XXX.world.item.JukeboxPlayable",
            "XXX.world.item.JukeboxSongPlayer",
            "XXX.world.item.JukeboxSongs",
            "XXX.world.item.LeadItem",
            "XXX.world.item.MaceItem",
            "XXX.world.item.MapItem$1",
            "XXX.world.item.MobBucketItem",
            "XXX.world.item.PlaceOnWaterBlockItem",
            "XXX.world.item.PotionItem",
            "XXX.world.item.ProjectileItem$DispenseConfig",
            "XXX.world.item.ProjectileItem$PositionFunction",
            "XXX.world.item.Rarity",
            "XXX.world.item.ServerItemCooldowns",
            "XXX.world.item.ShieldItem",
            "XXX.world.item.SignApplicator",
            "XXX.world.item.SmithingTemplateItem",
            "XXX.world.item.SolidBucketItem",
            "XXX.world.item.SpectralArrowItem",
            "XXX.world.item.SpyglassItem",
            "XXX.world.item.ThrowablePotionItem",
            "XXX.world.item.ToolMaterial",
            "XXX.world.item.TooltipFlag$Default",
            "XXX.world.item.WindChargeItem",
            "XXX.world.item.WrittenBookItem",
            "XXX.item.alchemy.PotionBrewing",
            "XXX.item.alchemy.PotionBrewing$Mix",
            "XXX.item.alchemy.Potions",
            "XXX.item.component.Bees",
            "XXX.item.component.BlocksAttacks",
            "XXX.item.component.BlocksAttacks$ItemDamageFunction",
            "XXX.item.component.BundleContents",
            "XXX.item.component.ChargedProjectiles",
            "XXX.item.component.Consumable$Builder",
            "XXX.item.component.ConsumableListener",
            "XXX.item.component.CustomData",
            "XXX.item.component.DamageResistant",
            "XXX.item.component.DebugStickState",
            "XXX.item.component.FireworkExplosion",
            "XXX.item.component.Fireworks",
            "XXX.item.component.ItemAttributeModifiers",
            "XXX.item.component.ItemAttributeModifiers$Builder",
            "XXX.item.component.ItemContainerContents",
            "XXX.item.component.ItemLore",
            "XXX.item.component.MapDecorations",
            "XXX.item.component.MapItemColor",
            "XXX.item.component.OminousBottleAmplifier",
            "XXX.item.component.ResolvableProfile",
            "XXX.item.component.SuspiciousStewEffects",
            "XXX.item.component.Tool",
            "XXX.item.component.TooltipDisplay",
            "XXX.item.component.UseCooldown",
            "XXX.item.component.UseRemainder$OnExtraCreatedRemainder",
            "XXX.item.component.WritableBookContent",
            "XXX.item.component.package-info",
            "XXX.item.consume_effects.ClearAllStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.ConsumeEffect$Type",
            "XXX.item.consume_effects.RemoveStatusEffectsConsumeEffect",
            "XXX.item.consume_effects.package-info",
            "XXX.item.context.DirectionalPlaceContext",
            "XXX.item.context.UseOnContext",
            "XXX.item.crafting.AbstractCookingRecipe",
            "XXX.item.crafting.AbstractCookingRecipe$Serializer",
            "XXX.item.crafting.BannerDuplicateRecipe",
            "XXX.item.crafting.BlastingRecipe$1",
            "XXX.item.crafting.CampfireCookingRecipe",
            "XXX.item.crafting.CraftingBookCategory",
            "XXX.item.crafting.CraftingInput$Positioned",
            "XXX.item.crafting.CraftingRecipe$1",
            "XXX.item.crafting.CustomRecipe$Serializer",
            "XXX.item.crafting.DecoratedPotRecipe",
            "XXX.item.crafting.FireworkRocketRecipe",
            "XXX.item.crafting.FireworkStarRecipe",
            "XXX.item.crafting.MapCloningRecipe",
            "XXX.item.crafting.PlacementInfo",
            "XXX.item.crafting.RecipeAccess",
            "XXX.item.crafting.RecipeBookCategory",
            "XXX.item.crafting.RecipeCache$Entry",
            "XXX.item.crafting.RecipeInput",
            "XXX.item.crafting.RecipeManager$1",
            "XXX.item.crafting.RecipeManager$IngredientCollector",
            "XXX.item.crafting.RecipeManager$ServerDisplayInfo",
            "XXX.item.crafting.RecipePropertySet",
            "XXX.item.crafting.RecipeType",
            "XXX.item.crafting.RepairItemRecipe",
            "XXX.item.crafting.SelectableRecipe$SingleInputEntry",
            "XXX.item.crafting.ShapedRecipe",
            "XXX.item.crafting.ShapedRecipePattern",
            "XXX.item.crafting.ShapelessRecipe",
            "XXX.item.crafting.ShieldDecorationRecipe",
            "XXX.item.crafting.SingleItemRecipe$Factory",
            "XXX.item.crafting.SingleRecipeInput",
            "XXX.item.crafting.SmeltingRecipe$1",
            "XXX.item.crafting.SmithingRecipeInput",
            "XXX.item.crafting.SmithingTransformRecipe$Serializer",
            "XXX.item.crafting.SmithingTrimRecipe$Serializer",
            "XXX.item.crafting.StonecutterRecipe",
            "XXX.item.crafting.TransmuteRecipe",
            "XXX.item.crafting.TransmuteResult",
            "XXX.crafting.display.DisplayContentsFactory$ForRemainders",
            "XXX.crafting.display.FurnaceRecipeDisplay",
            "XXX.crafting.display.RecipeDisplay$Type",
            "XXX.crafting.display.RecipeDisplayId",
            "XXX.crafting.display.ShapedCraftingRecipeDisplay",
            "XXX.crafting.display.SlotDisplay",
            "XXX.crafting.display.SlotDisplay$Composite",
            "XXX.crafting.display.SlotDisplay$ItemSlotDisplay",
            "XXX.crafting.display.SlotDisplay$ItemStackSlotDisplay",
            "XXX.crafting.display.SlotDisplay$TagSlotDisplay",
            "XXX.crafting.display.SlotDisplay$WithRemainder",
            "XXX.crafting.display.SlotDisplays",
            "XXX.crafting.display.StonecutterRecipeDisplay",
            "XXX.item.crafting.package-info",
            "XXX.item.enchantment.Enchantable",
            "XXX.item.enchantment.Enchantment",
            "XXX.item.enchantment.Enchantment$Builder",
            "XXX.item.enchantment.Enchantment$EnchantmentDefinition",
            "XXX.item.enchantment.EnchantmentHelper",
            "XXX.item.enchantment.EnchantmentHelper$EnchantmentVisitor",
            "XXX.item.enchantment.EnchantmentTarget",
            "XXX.item.enchantment.ItemEnchantments",
            "XXX.item.enchantment.LevelBasedValue",
            "XXX.item.enchantment.LevelBasedValue$Constant",
            "XXX.item.enchantment.LevelBasedValue$LevelsSquared",
            "XXX.item.enchantment.LevelBasedValue$Lookup",
            "XXX.item.enchantment.TargetedConditionalEffect",
            "XXX.enchantment.effects.AllOf",
            "XXX.enchantment.effects.AllOf$LocationBasedEffects",
            "XXX.enchantment.effects.ApplyMobEffect",
            "XXX.enchantment.effects.DamageEntity",
            "XXX.enchantment.effects.EnchantmentAttributeEffect",
            "XXX.enchantment.effects.EnchantmentLocationBasedEffect",
            "XXX.enchantment.effects.ExplodeEffect",
            "XXX.enchantment.effects.MultiplyValue",
            "XXX.enchantment.effects.RemoveBinomial",
            "XXX.enchantment.effects.ReplaceDisk",
            "XXX.enchantment.effects.SetBlockProperties",
            "XXX.enchantment.effects.SpawnParticlesEffect",
            "XXX.enchantment.effects.SpawnParticlesEffect$PositionSourceType",
            "XXX.enchantment.effects.SpawnParticlesEffect$VelocitySource",
            "XXX.enchantment.effects.package-info",
            "XXX.enchantment.providers.EnchantmentProvider",
            "XXX.enchantment.providers.EnchantmentsByCost",
            "XXX.enchantment.providers.SingleEnchantment",
            "XXX.enchantment.providers.VanillaEnchantmentProviders",
            "XXX.item.equipment.AllowedEntitiesProvider",
            "XXX.item.equipment.ArmorMaterials",
            "XXX.item.equipment.EquipmentAsset",
            "XXX.item.equipment.Equippable",
            "XXX.item.equipment.package-info",
            "XXX.equipment.trim.MaterialAssetGroup",
            "XXX.equipment.trim.TrimMaterial",
            "XXX.equipment.trim.TrimPattern",
            "XXX.equipment.trim.package-info",
            "XXX.item.trading.ItemCost",
            "XXX.item.trading.MerchantOffer",
            "XXX.item.trading.package-info",
            "XXX.world.level.BaseSpawner",
            "XXX.world.level.BlockCollisions",
            "XXX.world.level.BlockGetter",
            "XXX.pools.alias.RandomPoolAlias",
            "XXX.level.timers.TimerQueue",
            "XXX.level.timers.package-info",
            "XXX.level.validation.DirectoryValidator",
            "XXX.level.validation.ForbiddenSymlinkInfo",
            "XXX.level.validation.PathAllowList$ConfigEntry",
            "XXX.level.validation.package-info",
            "XXX.world.phys.AABB"
          ]
        }
      }
    },
    {
      "type": "ansi",
      "value": {
        "title": "Changes",
        "lines": [
          "XXX.blaze3d.pipeline.TextureTarget \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.blaze3d.platform.GlStateManager \u001b[2;32m+2M\u001b[0m \u001b[2;31m-26M\u001b[0m | \u001b[2;31m-1P\u001b[0m",
          "XXX.blaze3d.platform.GlStateManager$PolygonOffsetState \u001b[2;31m-1P\u001b[0m",
          "XXX.blaze3d.platform.NativeImage \u001b[2;32m+1M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.blaze3d.systems.RenderSystem \u001b[2;32m+4M\u001b[0m \u001b[2;31m-35M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-5P\u001b[0m",
          "XXX.blaze3d.vertex.PoseStack \u001b[2;32m+4M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.blaze3d.vertex.VertexBuffer \u001b[2;32m+3M\u001b[0m",
          "XXX.models.blockstates.MultiPartGenerator \u001b[2;32m+6M\u001b[0m \u001b[2;31m-9M\u001b[0m",
          "XXX.models.blockstates.PropertyDispatch \u001b[2;32m+13M\u001b[0m \u001b[2;31m-8M\u001b[0m",
          "XXX.models.blockstates.PropertyDispatch$C2 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.models.blockstates.PropertyDispatch$C4 \u001b[2;32m+6M\u001b[0m \u001b[2;31m-12M\u001b[0m",
          "XXX.font.glyphs.SpecialGlyphs$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.font.providers.UnihexProvider$Glyph$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.multiplayer.ClientChunkCache \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.client.particle.FireflyParticle \u001b[2;32m+2M\u001b[0m | \u001b[2;32m+4P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.client.renderer.CloudRenderer \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.renderer.LightTexture \u001b[2;32m+2M\u001b[0m",
          "XXX.client.renderer.PostChain \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.client.renderer.PostChainConfig$Pass \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.client.renderer.PostPass \u001b[2;32m+3M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.model.BlockElementFace \u001b[2;32m+5M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.model.multipart.Condition \u001b[2;32m+9M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-3P\u001b[0m",
          "XXX.model.multipart.MultiPart \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.model.multipart.MultiPart$Definition \u001b[2;32m+1M\u001b[0m \u001b[2;31m-2M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.model.multipart.Selector \u001b[2;32m+11M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.renderer.item.SpecialModelWrapper$Unbaked \u001b[2;32m+1M\u001b[0m",
          "XXX.renderer.texture.SpriteContents \u001b[2;32m+2M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.renderer.texture.SpriteContents$Ticker \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.renderer.texture.TextureAtlasSprite$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.resources.model.ModelBakery$ModelBakerImpl \u001b[2;32m+2M\u001b[0m \u001b[2;31m-4M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-2P\u001b[0m",
          "XXX.resources.model.ModelDiscovery \u001b[2;32m+10M\u001b[0m \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+5P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.worldgen.features.VegetationFeatures \u001b[2;31m-2P\u001b[0m",
          "XXX.server.level.ServerPlayer \u001b[2;32m+3M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.minecraft.world.BossEvent$BossBarColor \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.world.entity.Entity \u001b[2;32m+16M\u001b[0m \u001b[2;31m-14M\u001b[0m | \u001b[2;32m+2P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.world.entity.EntityType \u001b[2;32m+6M\u001b[0m \u001b[2;31m-4M\u001b[0m",
          "XXX.entity.animal.Turtle \u001b[2;31m-7M\u001b[0m | \u001b[2;32m+3P\u001b[0m \u001b[2;31m-4P\u001b[0m",
          "XXX.animal.armadillo.Armadillo$ArmadilloState \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.animal.camel.Camel \u001b[2;32m+1M\u001b[0m",
          "XXX.world.level.GameType \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.BasePressurePlateBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CactusBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.CampfireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.EndPortalBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.FireflyBushBlock \u001b[2;32m+1M\u001b[0m",
          "XXX.level.block.HoneyBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.LavaCauldronBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Mirror \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.PitcherCropBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.Rotation \u001b[2;32m+1P\u001b[0m",
          "XXX.level.block.TripWireBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WaterlilyBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.level.block.WitherRoseBlock \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.block.entity.AbstractFurnaceBlockEntity \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.block.entity.LecternBlockEntity \u001b[2;32m+1M\u001b[0m",
          "XXX.block.entity.TheEndGatewayBlockEntity \u001b[2;32m+2M\u001b[0m \u001b[2;31m-3M\u001b[0m",
          "XXX.entity.trialspawner.PlayerDetector \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.entity.trialspawner.TrialSpawner \u001b[2;32m+3M\u001b[0m \u001b[2;31m-2M\u001b[0m",
          "XXX.state.properties.BlockStateProperties \u001b[2;32m+1P\u001b[0m",
          "XXX.state.properties.StructureMode \u001b[2;32m+1P\u001b[0m",
          "XXX.level.chunk.UpgradeData \u001b[2;32m+3M\u001b[0m \u001b[2;31m-12M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.chunk.status.ChunkStatus \u001b[2;32m+1P\u001b[0m",
          "XXX.chunk.storage.SerializableChunkData \u001b[2;32m+10M\u001b[0m \u001b[2;31m-14M\u001b[0m | \u001b[2;32m+2P\u001b[0m",
          "XXX.structure.pools.SinglePoolElement \u001b[2;32m+1M\u001b[0m",
          "XXX.pools.alias.PoolAliasBinding \u001b[2;32m+5M\u001b[0m \u001b[2;31m-5M\u001b[0m",
          "XXX.structure.structures.RuinedPortalPiece$VerticalPlacement \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m \u001b[2;31m-1P\u001b[0m",
          "XXX.structure.structures.StrongholdPieces$StrongholdPiece$SmallDoorType \u001b[2;32m+1P\u001b[0m",
          "XXX.structure.templatesystem.StructureTemplate \u001b[2;32m+1M\u001b[0m",
          "XXX.level.material.Fluid \u001b[2;32m+1M\u001b[0m",
          "XXX.level.material.LavaFluid \u001b[2;32m+1M\u001b[0m",
          "XXX.level.material.WaterFluid \u001b[2;32m+1M\u001b[0m",
          "XXX.storage.loot.LootTable \u001b[2;32m+2M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.timers.FunctionCallback \u001b[2;32m+8M\u001b[0m \u001b[2;31m-1M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.level.timers.TimerCallback \u001b[2;32m+1P\u001b[0m",
          "XXX.world.phys.Vec2 \u001b[2;32m+3M\u001b[0m | \u001b[2;32m+1P\u001b[0m",
          "XXX.phys.shapes.CollisionContext \u001b[2;32m+4M\u001b[0m",
          "XXX.phys.shapes.EntityCollisionContext$1 \u001b[2;32m+1M\u001b[0m \u001b[2;31m-1M\u001b[0m",
          "XXX.world.ticks.SavedTick \u001b[2;32m+5M\u001b[0m \u001b[2;31m-6M\u001b[0m | \u001b[2;31m-6P\u001b[0m"
        ]
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.pipeline.TextureTarget",
        "differences": {
          "added": [
            "void <init>(int,int,boolean)"
          ],
          "removed": [
            "void <init>(String,int,int,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.GlStateManager",
        "differences": {
          "added": [
            "void _blendFunc(int,int)",
            "void _blendEquation(int)",
            "void _glUniform2(int,IntBuffer)",
            "void _glUniform4(int,IntBuffer)",
            "void _glUniformMatrix2(int,boolean,FloatBuffer)",
            "void _glUniformMatrix3(int,boolean,FloatBuffer)",
            "void _glUniformMatrix4(int,boolean,FloatBuffer)",
            "int _glGetAttribLocation(int,CharSequence)",
            "ByteBuffer _glMapBuffer(int,int)",
            "void _glCopyTexSubImage2D(int,int,int,int,int,int,int,int)",
            "void _glBindRenderbuffer(int,int)",
            "void _glDeleteRenderbuffers(int)",
            "int glGenRenderbuffers()",
            "void _glRenderbufferStorage(int,int,int,int)",
            "void _glFramebufferRenderbuffer(int,int,int,int)",
            "int getBoundFramebuffer()",
            "void _texParameter(int,int,float)",
            "void _genTextures(int[])",
            "void _deleteTextures(int[])",
            "void upload(int,int,int,int,int,NativeImage$Format,IntBuffer,Consumer)",
            "void _upload(int,int,int,int,int,NativeImage$Format,IntBuffer,Consumer)",
            "void _stencilFunc(int,int,int)",
            "void _stencilMask(int)",
            "void _stencilOp(int,int,int)",
            "void _clearStencil(int)",
            "void lambda$upload$2(int,int,int,int,int,NativeImage$Format,IntBuffer,Consumer)"
          ],
          "removed": [
            "void _glUniformMatrix4(int,FloatBuffer)",
            "void _texSubImage2D(int,int,int,int,int,int,int,int,IntBuffer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.platform.NativeImage",
        "differences": {
          "added": [
            "void upload(int,int,int,boolean)",
            "void upload(int,int,int,int,int,int,int,boolean)",
            "void _upload(int,int,int,int,int,int,int,boolean)",
            "void lambda$upload$0(int,int,int,int,int,int,int,boolean)"
          ],
          "removed": [
            "long getPointer()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.systems.RenderSystem",
        "differences": {
          "added": [
            "boolean isOnRenderThreadOrInit()",
            "void assertOnRenderThreadOrInit()",
            "void recordRenderCall(RenderCall)",
            "void replayQueue()",
            "void blendFunc(GlStateManager$SourceFactor,GlStateManager$DestFactor)",
            "void blendFunc(int,int)",
            "void blendFuncSeparate(int,int,int,int)",
            "void blendEquation(int)",
            "void texParameter(int,int,int)",
            "void deleteTexture(int)",
            "void bindTextureForSetup(int)",
            "void stencilFunc(int,int,int)",
            "void stencilMask(int)",
            "void stencilOp(int,int,int)",
            "void clearDepth(double)",
            "void clearStencil(int)",
            "void glBindBuffer(int,int)",
            "void glBindVertexArray(int)",
            "void glBufferData(int,ByteBuffer,int)",
            "void glDeleteBuffers(int)",
            "void glUniform2(int,IntBuffer)",
            "void glUniform4(int,IntBuffer)",
            "void glUniformMatrix2(int,boolean,FloatBuffer)",
            "void glUniformMatrix3(int,boolean,FloatBuffer)",
            "void glUniformMatrix4(int,boolean,FloatBuffer)",
            "void setupOverlayColor(int,int)",
            "void beginInitialization()",
            "void finishInitialization()",
            "Tesselator renderThreadTesselator()",
            "CompiledShaderProgram setShader(ShaderProgram)",
            "void setShader(CompiledShaderProgram)",
            "void clearShader()",
            "CompiledShaderProgram getShader()",
            "void setShaderTexture(int,int)",
            "int getShaderTexture(int)"
          ],
          "removed": [
            "void glUniformMatrix4(int,FloatBuffer)",
            "void setupOverlayColor(GpuTexture)",
            "void setShaderTexture(int,GpuTexture)",
            "GpuTexture getShaderTexture(int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.vertex.PoseStack",
        "differences": {
          "added": [
            "void mulPose(Quaternionf)",
            "void rotateAround(Quaternionf,float,float,float)",
            "boolean clear()",
            "void mulPose(Matrix4f)"
          ],
          "removed": [
            "void mulPose(Quaternionfc)",
            "void rotateAround(Quaternionfc,float,float,float)",
            "boolean isEmpty()",
            "void mulPose(Matrix4fc)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "com.mojang.blaze3d.vertex.VertexBuffer",
        "differences": {
          "added": [],
          "removed": [
            "void drawWithRenderPipeline(RenderPipeline,Consumer)",
            "void drawWithShader(Matrix4f,Matrix4f,CompiledShaderProgram,Consumer)",
            "void drawWithRenderType(RenderType,Consumer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.MultiPartGenerator",
        "differences": {
          "added": [
            "Block getBlock()",
            "MultiPartGenerator with(List)",
            "MultiPartGenerator with(Variant)",
            "MultiPartGenerator with(Condition,List)",
            "MultiPartGenerator with(Condition,Variant[])",
            "MultiPartGenerator with(Condition,Variant)",
            "JsonElement get()",
            "Object get()",
            "void lambda$get$0(StateDefinition,MultiPartGenerator$Entry)"
          ],
          "removed": [
            "Block block()",
            "MultiPartGenerator with(MultiVariant)",
            "void validateCondition(Condition)",
            "MultiPartGenerator with(Condition,MultiVariant)",
            "MultiPartGenerator with(ConditionBuilder,MultiVariant)",
            "BlockModelDefinition create()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.PropertyDispatch",
        "differences": {
          "added": [
            "void putValue(Selector,List)",
            "PropertyDispatch$C1 property(Property)",
            "PropertyDispatch$C2 properties(Property,Property)",
            "PropertyDispatch$C3 properties(Property,Property,Property)",
            "PropertyDispatch$C4 properties(Property,Property,Property,Property)",
            "PropertyDispatch$C5 properties(Property,Property,Property,Property,Property)",
            "boolean lambda$verifyComplete$1(Selector)",
            "Stream lambda$verifyComplete$0(Property,Selector)"
          ],
          "removed": [
            "void putValue(PropertyValueList,Object)",
            "PropertyDispatch$C1 initial(Property)",
            "PropertyDispatch$C2 initial(Property,Property)",
            "PropertyDispatch$C3 initial(Property,Property,Property)",
            "PropertyDispatch$C4 initial(Property,Property,Property,Property)",
            "PropertyDispatch$C5 initial(Property,Property,Property,Property,Property)",
            "PropertyDispatch$C1 modify(Property)",
            "PropertyDispatch$C2 modify(Property,Property)",
            "PropertyDispatch$C3 modify(Property,Property,Property)",
            "PropertyDispatch$C4 modify(Property,Property,Property,Property)",
            "PropertyDispatch$C5 modify(Property,Property,Property,Property,Property)",
            "boolean lambda$verifyComplete$1(PropertyValueList)",
            "Stream lambda$verifyComplete$0(Property,PropertyValueList)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.PropertyDispatch$C2",
        "differences": {
          "added": [
            "PropertyDispatch$C2 select(Comparable,Comparable,List)",
            "PropertyDispatch$C2 select(Comparable,Comparable,Variant)",
            "PropertyDispatch generateList(BiFunction)",
            "void lambda$generateList$3(BiFunction,Comparable)",
            "void lambda$generateList$2(Comparable,BiFunction,Comparable)"
          ],
          "removed": [
            "PropertyDispatch$C2 select(Comparable,Comparable,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.data.models.blockstates.PropertyDispatch$C4",
        "differences": {
          "added": [
            "PropertyDispatch$C4 select(Comparable,Comparable,Comparable,Comparable,List)",
            "PropertyDispatch$C4 select(Comparable,Comparable,Comparable,Comparable,Variant)",
            "PropertyDispatch generate(PropertyDispatch$QuadFunction)",
            "PropertyDispatch generateList(PropertyDispatch$QuadFunction)",
            "void lambda$generateList$7(PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generateList$6(Comparable,PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generateList$5(Comparable,Comparable,PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generateList$4(Comparable,Comparable,Comparable,PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generate$3(PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generate$2(Comparable,PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generate$1(Comparable,Comparable,PropertyDispatch$QuadFunction,Comparable)",
            "void lambda$generate$0(Comparable,Comparable,Comparable,PropertyDispatch$QuadFunction,Comparable)"
          ],
          "removed": [
            "PropertyDispatch$C4 select(Comparable,Comparable,Comparable,Comparable,Object)",
            "PropertyDispatch generate(Function4)",
            "void lambda$generate$3(Function4,Comparable)",
            "void lambda$generate$2(Comparable,Function4,Comparable)",
            "void lambda$generate$1(Comparable,Comparable,Function4,Comparable)",
            "void lambda$generate$0(Comparable,Comparable,Comparable,Function4,Comparable)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.font.glyphs.SpecialGlyphs$1",
        "differences": {
          "added": [
            "void upload(int,int)"
          ],
          "removed": [
            "void upload(int,int,GpuTexture)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.gui.font.providers.UnihexProvider$Glyph$1",
        "differences": {
          "added": [
            "void upload(int,int)"
          ],
          "removed": [
            "void upload(int,int,GpuTexture)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.multiplayer.ClientChunkCache",
        "differences": {
          "added": [
            "LevelChunk replaceWithPacketData(int,int,FriendlyByteBuf,CompoundTag,Consumer)"
          ],
          "removed": [
            "LevelChunk replaceWithPacketData(int,int,FriendlyByteBuf,Map,Consumer)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.particle.FireflyParticle",
        "differences": {
          "added": [],
          "removed": [
            "float getLifetimeProgress(float)",
            "float getFadeAmount(float,float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.CloudRenderer",
        "differences": {
          "added": [
            "void render(int,CloudStatus,float,Matrix4f,Matrix4f,Vec3,float)",
            "void drawWithRenderType(RenderType,Matrix4f,Matrix4f,float,float,float)"
          ],
          "removed": [
            "void render(int,CloudStatus,float,Vec3,float)",
            "void drawWithRenderType(RenderType,float,float,float)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.LightTexture",
        "differences": {
          "added": [],
          "removed": [
            "TextureTarget getTarget()",
            "void lambda$updateLightTexture$0(float,float,float,boolean,Vector3f,float,float,float,float,float,CompiledShaderProgram)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.PostChain",
        "differences": {
          "added": [
            "PostChain load(PostChainConfig,TextureManager,ShaderManager,Set)",
            "PostPass createPass(TextureManager,ShaderManager,PostChainConfig$Pass)"
          ],
          "removed": [
            "PostChain load(PostChainConfig,TextureManager,ShaderManager,Set,ResourceLocation)",
            "PostPass createPass(TextureManager,ShaderManager,PostChainConfig$Pass,ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.PostChainConfig$Pass",
        "differences": {
          "added": [
            "void <init>(ResourceLocation,List,ResourceLocation,List)",
            "ShaderProgram program()",
            "ResourceLocation programId()"
          ],
          "removed": [
            "void <init>(ResourceLocation,ResourceLocation,List,ResourceLocation,List)",
            "ResourceLocation vertexShaderId()",
            "ResourceLocation fragmentShaderId()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.PostPass",
        "differences": {
          "added": [
            "void <init>(String,CompiledShaderProgram,ResourceLocation,List)",
            "void restoreDefaultUniforms()",
            "void lambda$addToFrame$1(ResourceHandle,Map,Matrix4f)"
          ],
          "removed": [
            "void <init>(RenderPipeline,CompiledShaderProgram,ResourceLocation,List)",
            "void lambda$addToFrame$2(ResourceHandle,Matrix4f,Map)",
            "void lambda$addToFrame$1(Map,RenderTarget,CompiledShaderProgram)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.BlockElementFace",
        "differences": {
          "added": [
            "void <init>(Direction,int,String,BlockFaceUV)",
            "BlockFaceUV uv()"
          ],
          "removed": [
            "void <init>(Direction,int,String,BlockElementFace$UVs,Quadrant)",
            "float getU(BlockElementFace$UVs,Quadrant,int)",
            "float getV(BlockElementFace$UVs,Quadrant,int)",
            "BlockElementFace$UVs uvs()",
            "Quadrant rotation()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.multipart.Condition",
        "differences": {
          "added": [
            "Predicate lambda$static$3(StateDefinition)",
            "boolean lambda$static$2(BlockState)",
            "Predicate lambda$static$1(StateDefinition)",
            "boolean lambda$static$0(BlockState)"
          ],
          "removed": [
            "Codec lambda$static$8(Codec)",
            "DataResult lambda$static$7(Condition)",
            "String lambda$static$6()",
            "Condition lambda$static$5(Either)",
            "Record lambda$static$4(KeyValueCondition)",
            "Record lambda$static$3(CombinedCondition)",
            "Map lambda$static$2(CombinedCondition)",
            "DataResult lambda$static$1(Map)",
            "String lambda$static$0()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.multipart.MultiPart",
        "differences": {
          "added": [
            "BakedModel bake(ModelBaker)"
          ],
          "removed": [
            "BlockStateModel bake(ModelBaker)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.multipart.MultiPart$Definition",
        "differences": {
          "added": [
            "Set getMultiVariants()",
            "MultiPart$InstantiatedSelector lambda$instantiate$0(StateDefinition,Selector)"
          ],
          "removed": [
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.block.model.multipart.Selector",
        "differences": {
          "added": [
            "void <init>(Condition,MultiVariant)",
            "MultiVariant getVariant()",
            "Predicate getPredicate(StateDefinition)"
          ],
          "removed": [
            "void <init>(Optional,MultiVariant)",
            "Predicate instantiate(StateDefinition)",
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)",
            "Optional condition()",
            "MultiVariant variant()",
            "boolean lambda$instantiate$2(StateHolder)",
            "Predicate lambda$instantiate$1(StateDefinition,Condition)",
            "App lambda$static$0(RecordCodecBuilder$Instance)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.item.SpecialModelWrapper$Unbaked",
        "differences": {
          "added": [],
          "removed": [
            "ModelRenderProperties getProperties(ItemModel$BakingContext)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.texture.SpriteContents",
        "differences": {
          "added": [
            "void upload(int,int,int,int,NativeImage[])",
            "void uploadFirstFrame(int,int)"
          ],
          "removed": [
            "void upload(int,int,int,int,NativeImage[],GpuTexture)",
            "void uploadFirstFrame(int,int,GpuTexture)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.texture.SpriteContents$Ticker",
        "differences": {
          "added": [
            "void tickAndUpload(int,int)"
          ],
          "removed": [
            "void tickAndUpload(int,int,GpuTexture)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.renderer.texture.TextureAtlasSprite$1",
        "differences": {
          "added": [
            "void tickAndUpload()"
          ],
          "removed": [
            "void tickAndUpload(GpuTexture)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.model.ModelBakery$ModelBakerImpl",
        "differences": {
          "added": [
            "void <init>(ModelBakery,ModelBakery$TextureGetter,ModelDebugName)",
            "UnbakedModel getModel(ResourceLocation)",
            "BakedModel bake(ResourceLocation,ModelState)",
            "ModelDebugName rootName()"
          ],
          "removed": [
            "void <init>(ModelBakery,SpriteGetter)",
            "ResolvedModel getModel(ResourceLocation)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.client.resources.model.ModelDiscovery",
        "differences": {
          "added": [
            "void registerSpecialModels()",
            "void discoverDependencies()",
            "Map getReferencedModels()",
            "Set getUnreferencedModels()",
            "UnbakedModel getBlockModel(ResourceLocation)",
            "UnbakedModel loadBlockModel(ResourceLocation)",
            "void lambda$discoverDependencies$0(ResolvableModel)"
          ],
          "removed": [
            "boolean isRoot(UnbakedModel)",
            "ModelDiscovery$ModelWrapper getOrCreateModel(ResourceLocation)",
            "ModelDiscovery$ModelWrapper createAndQueueWrapper(ResourceLocation,UnbakedModel)",
            "void addSpecialModel(ResourceLocation,UnbakedModel)",
            "ResolvedModel missingModel()",
            "Map resolve()",
            "void discoverDependencies(List)",
            "void propagateValidity(List)",
            "void lambda$resolve$1(ImmutableMap$Builder,ResourceLocation,ModelDiscovery$ModelWrapper)",
            "ModelDiscovery$ModelWrapper lambda$new$0(Map,Object)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.server.level.ServerPlayer",
        "differences": {
          "added": [
            "Optional findRespawnAndUseSpawnBlock(ServerLevel,BlockPos,float,boolean,boolean)",
            "BlockPos getRespawnPosition()",
            "float getRespawnAngle()",
            "ResourceKey getRespawnDimension()",
            "boolean isRespawnForced()",
            "void setRespawnPosition(ResourceKey,BlockPos,float,boolean,boolean)"
          ],
          "removed": [
            "Optional findRespawnAndUseSpawnBlock(ServerLevel,ServerPlayer$RespawnConfig,boolean)",
            "ServerPlayer$RespawnConfig getRespawnConfig()",
            "void setRespawnPosition(ServerPlayer$RespawnConfig,boolean)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.BossEvent$BossBarColor",
        "differences": {
          "added": [
            "BossEvent$BossBarColor byName(String)"
          ],
          "removed": [
            "String getSerializedName()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.Entity",
        "differences": {
          "added": [
            "void checkInsideBlocks(List,Entity$StateVisitor)",
            "ListTag newDoubleList(double[])",
            "ListTag newFloatList(float[])",
            "boolean lambda$countPlayerPassengers$12(Entity)",
            "Iterator lambda$getIndirectPassengers$11()",
            "void lambda$teleportPassengers$10(Entity)",
            "Style lambda$getDisplayName$9(Style)",
            "String lambda$fillCrashReportCategory$6()",
            "String lambda$fillCrashReportCategory$5()",
            "boolean lambda$removePassenger$4(Entity,Entity)",
            "void lambda$startRiding$3(Entity)",
            "boolean lambda$startRiding$2(Entity)",
            "boolean lambda$isInWall$1(AABB,BlockPos)",
            "BlockState lambda$checkFallDamage$0(BlockPos)"
          ],
          "removed": [
            "void lavaIgnite()",
            "void checkInsideBlocks(List,InsideBlockEffectApplier$StepBasedCollector)",
            "void clearFreeze()",
            "boolean lambda$countPlayerPassengers$14(Entity)",
            "Iterator lambda$getIndirectPassengers$13()",
            "void lambda$teleportPassengers$12(Entity)",
            "Style lambda$getDisplayName$11(Style)",
            "String lambda$fillCrashReportCategory$10()",
            "String lambda$fillCrashReportCategory$9()",
            "boolean lambda$removePassenger$6(Entity,Entity)",
            "void lambda$startRiding$5(Entity)",
            "boolean lambda$startRiding$4(Entity)",
            "boolean lambda$isInWall$3(AABB,BlockPos)",
            "void lambda$load$2(UUID)",
            "BlockState lambda$checkFallDamage$1(BlockPos)",
            "void lambda$checkInsideBlocks$0(LongSet,Vec3,Vec3,InsideBlockEffectApplier$StepBasedCollector,BlockPos,int)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.EntityType",
        "differences": {
          "added": [
            "ChestRaft lambda$chestRaftFactory$31(Supplier,EntityType,Level)",
            "Raft lambda$raftFactory$30(Supplier,EntityType,Level)",
            "ChestBoat lambda$chestBoatFactory$29(Supplier,EntityType,Level)",
            "Boat lambda$boatFactory$28(Supplier,EntityType,Level)"
          ],
          "removed": [
            "ChestRaft lambda$chestRaftFactory$33(Supplier,EntityType,Level)",
            "Raft lambda$raftFactory$32(Supplier,EntityType,Level)",
            "ChestBoat lambda$chestBoatFactory$31(Supplier,EntityType,Level)",
            "Boat lambda$boatFactory$30(Supplier,EntityType,Level)",
            "void lambda$loadEntitiesRecursive$29(Level,EntitySpawnReason,Tag,Consumer)",
            "Entity lambda$loadEntitiesRecursive$28(Consumer,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.Turtle",
        "differences": {
          "added": [
            "BlockPos getHomePos()",
            "void setTravelPos(BlockPos)",
            "BlockPos getTravelPos()",
            "boolean isGoingHome()",
            "void setGoingHome(boolean)",
            "boolean isTravelling()",
            "void setTravelling(boolean)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.armadillo.Armadillo$ArmadilloState",
        "differences": {
          "added": [
            "Armadillo$ArmadilloState fromName(String)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.entity.animal.camel.Camel",
        "differences": {
          "added": [],
          "removed": [
            "boolean checkCamelSpawnRules(EntityType,LevelAccessor,EntitySpawnReason,BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.BasePressurePlateBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CactusBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.CampfireBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.EndPortalBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.FireflyBushBlock",
        "differences": {
          "added": [],
          "removed": [
            "void lambda$performBonemeal$0(ServerLevel,BlockPos)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.HoneyBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.LavaCauldronBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.PitcherCropBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.TripWireBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WaterlilyBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.WitherRoseBlock",
        "differences": {
          "added": [
            "void entityInside(BlockState,Level,BlockPos,Entity)"
          ],
          "removed": [
            "void entityInside(BlockState,Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "differences": {
          "added": [
            "void lambda$getRecipesToAwardAndPopExperience$2(List,ServerLevel,Vec3,Reference2IntMap$Entry,RecipeHolder)",
            "Integer lambda$getTotalCookTime$1(RecipeHolder)",
            "void lambda$saveAdditional$0(CompoundTag,ResourceKey,Integer)"
          ],
          "removed": [
            "void lambda$getRecipesToAwardAndPopExperience$1(List,ServerLevel,Vec3,Reference2IntMap$Entry,RecipeHolder)",
            "Integer lambda$getTotalCookTime$0(RecipeHolder)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.LecternBlockEntity",
        "differences": {
          "added": [],
          "removed": [
            "ItemStack lambda$loadAdditional$0(ItemStack)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity",
        "differences": {
          "added": [
            "void lambda$findOrCreateValidTeleportPos$2(ServerLevel,BlockPos,Holder$Reference)",
            "Optional lambda$findOrCreateValidTeleportPos$1(Registry)",
            "void lambda$loadAdditional$0(BlockPos)"
          ],
          "removed": [
            "void lambda$findOrCreateValidTeleportPos$1(ServerLevel,BlockPos,Holder$Reference)",
            "Optional lambda$findOrCreateValidTeleportPos$0(Registry)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.trialspawner.PlayerDetector",
        "differences": {
          "added": [
            "boolean lambda$static$6(boolean,ServerLevel,BlockPos,Sheep)"
          ],
          "removed": [
            "boolean lambda$static$6(boolean,ServerLevel,BlockPos,Sheep)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.block.entity.trialspawner.TrialSpawner",
        "differences": {
          "added": [
            "boolean lambda$tickServer$5(ServerLevel,BlockPos,UUID)",
            "Entity lambda$spawnMob$4(double,double,double,RandomSource,Entity)"
          ],
          "removed": [
            "boolean lambda$tickServer$6(ServerLevel,BlockPos,UUID)",
            "Entity lambda$spawnMob$5(Vec3,RandomSource,Entity)",
            "Vec3 lambda$spawnMob$4(BlockPos,RandomSource)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.UpgradeData",
        "differences": {
          "added": [
            "void loadTicks(CompoundTag,String,Function,List)",
            "void lambda$write$10(ListTag,SavedTick)",
            "String lambda$write$9(Fluid)",
            "void lambda$write$8(ListTag,SavedTick)",
            "String lambda$write$7(Block)",
            "void lambda$upgrade$6(Level,UpgradeData$BlockFixer)",
            "void lambda$upgrade$5(Level,SavedTick)",
            "void lambda$upgrade$4(Level,SavedTick)",
            "Optional lambda$new$3(String)",
            "Optional lambda$new$2()",
            "Optional lambda$new$1(String)",
            "Optional lambda$new$0()"
          ],
          "removed": [
            "void lambda$upgrade$2(Level,UpgradeData$BlockFixer)",
            "void lambda$upgrade$1(Level,SavedTick)",
            "void lambda$upgrade$0(Level,SavedTick)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.chunk.storage.SerializableChunkData",
        "differences": {
          "added": [
            "ChunkType getChunkTypeFromTag(CompoundTag)",
            "boolean lambda$unpackStructureReferences$12(ChunkPos,ResourceLocation,long)",
            "void lambda$postLoadChunk$11(List,ServerLevel,List,LevelChunk)",
            "String lambda$saveTicks$10(Fluid)",
            "String lambda$saveTicks$9(Block)",
            "void lambda$write$8(CompoundTag,Heightmap$Types,long[])",
            "ShortList[] lambda$copyOf$7(int)",
            "ShortArrayList lambda$copyOf$6(ShortList)",
            "void lambda$parse$5(ChunkPos,int,String)",
            "void lambda$parse$4(ChunkPos,int,String)",
            "CompoundTag lambda$parse$3(Tag)",
            "CompoundTag lambda$parse$2(Tag)",
            "Optional lambda$parse$1(String)",
            "Optional lambda$parse$0(String)"
          ],
          "removed": [
            "ChunkStatus getChunkStatusFromTag(CompoundTag)",
            "boolean lambda$unpackStructureReferences$8(ChunkPos,ResourceLocation,long)",
            "void lambda$postLoadChunk$7(List,ServerLevel,List,LevelChunk)",
            "void lambda$write$6(CompoundTag,Heightmap$Types,long[])",
            "ShortList[] lambda$copyOf$5(int)",
            "ShortArrayList lambda$copyOf$4(ShortList)",
            "void lambda$parse$3(ChunkPos,int,String)",
            "void lambda$parse$2(ChunkPos,int,String)",
            "CompoundTag lambda$parse$1(Tag)",
            "CompoundTag lambda$parse$0(Tag)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement",
        "differences": {
          "added": [],
          "removed": [
            "ResourceLocation getTemplateLocation()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.pools.alias.PoolAliasBinding",
        "differences": {
          "added": [
            "Direct direct(String,String)",
            "Direct direct(ResourceKey,ResourceKey)",
            "Random random(String,WeightedList)",
            "Random random(ResourceKey,WeightedList)",
            "RandomGroup randomGroup(WeightedList)"
          ],
          "removed": [
            "DirectPoolAlias direct(String,String)",
            "DirectPoolAlias direct(ResourceKey,ResourceKey)",
            "RandomPoolAlias random(String,WeightedList)",
            "RandomPoolAlias random(ResourceKey,WeightedList)",
            "RandomGroupPoolAlias randomGroup(WeightedList)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece$VerticalPlacement",
        "differences": {
          "added": [
            "RuinedPortalPiece$VerticalPlacement byName(String)"
          ],
          "removed": []
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate",
        "differences": {
          "added": [],
          "removed": [
            "JigsawBlockEntity$JointType getDefaultJointType(BlockState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.material.Fluid",
        "differences": {
          "added": [],
          "removed": [
            "void entityInside(Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.material.LavaFluid",
        "differences": {
          "added": [],
          "removed": [
            "void entityInside(Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.material.WaterFluid",
        "differences": {
          "added": [],
          "removed": [
            "void entityInside(Level,BlockPos,Entity,InsideBlockEffectApplier)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.storage.loot.LootTable",
        "differences": {
          "added": [
            "void lambda$createStackSplitter$5(ServerLevel,Consumer,ItemStack)"
          ],
          "removed": [
            "void lambda$createStackSplitter$6(ServerLevel,Consumer,ItemStack)",
            "Codec lambda$static$5()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.level.timers.FunctionCallback",
        "differences": {
          "added": [
            "void lambda$handle$0(ServerFunctionManager,CommandFunction)"
          ],
          "removed": [
            "MapCodec codec()",
            "String toString()",
            "int hashCode()",
            "boolean equals(Object)",
            "ResourceLocation functionId()",
            "void lambda$handle$1(ServerFunctionManager,CommandFunction)",
            "App lambda$static$0(RecordCodecBuilder$Instance)",
            "void <clinit>()"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.Vec2",
        "differences": {
          "added": [],
          "removed": [
            "List lambda$static$2(Vec2)",
            "DataResult lambda$static$1(List)",
            "Vec2 lambda$static$0(List)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.shapes.CollisionContext",
        "differences": {
          "added": [],
          "removed": [
            "CollisionContext placementContext(Entity)",
            "boolean isPlacement()",
            "boolean lambda$placementContext$1(FluidState)",
            "boolean lambda$placementContext$0(LivingEntity,FluidState)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.phys.shapes.EntityCollisionContext$1",
        "differences": {
          "added": [
            "void <init>(boolean,double,ItemStack,Predicate,Entity)"
          ],
          "removed": [
            "void <init>(boolean,boolean,double,ItemStack,Predicate,Entity)"
          ]
        }
      }
    },
    {
      "type": "entries",
      "value": {
        "name": "net.minecraft.world.ticks.SavedTick",
        "differences": {
          "added": [
            "List loadTickList(ListTag,Function,ChunkPos)",
            "Optional loadTick(CompoundTag,Function)",
            "CompoundTag saveTick(String,BlockPos,int,TickPriority)",
            "CompoundTag save(Function)",
            "SavedTick lambda$loadTick$1(CompoundTag,Object)",
            "void lambda$loadTickList$0(long,List,SavedTick)"
          ],
          "removed": [
            "Codec codec(Codec)",
            "List filterTickListForChunk(List,ChunkPos)",
            "boolean lambda$filterTickListForChunk$2(long,SavedTick)",
            "App lambda$codec$1(Codec,MapCodec,RecordCodecBuilder$Instance)",
            "App lambda$codec$0(RecordCodecBuilder$Instance)"
          ]
        }
      }
    }
  ],
  "custom": [
    {
      "type": "title",
      "value": {
        "title": "datapacks.json",
        "id": "custom-datapacks-json",
        "size": 2
      }
    }
  ]
}